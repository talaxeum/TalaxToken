{"id":"00730c86ce99c2cc2bf8b9cc1af4ae55","_format":"hh-sol-build-info-1","solcVersion":"0.8.11","solcLongVersion":"0.8.11+commit.d7f03943","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotes {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\n     */\n    function getPastVotes(address account, uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/extensions/draft-ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./draft-IERC20Permit.sol\";\nimport \"../ERC20.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\nimport \"../../../utils/cryptography/EIP712.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./draft-ERC20Permit.sol\";\nimport \"../../../utils/math/Math.sol\";\nimport \"../../../governance/utils/IVotes.sol\";\nimport \"../../../utils/math/SafeCast.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n *\n * _Available since v4.2._\n */\nabstract contract ERC20Votes is IVotes, ERC20Permit {\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint224 votes;\n    }\n\n    bytes32 private constant _DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => address) private _delegates;\n    mapping(address => Checkpoint[]) private _checkpoints;\n    Checkpoint[] private _totalSupplyCheckpoints;\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {\n        return _checkpoints[account][pos];\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return SafeCast.toUint32(_checkpoints[account].length);\n    }\n\n    /**\n     * @dev Get the address `account` is currently delegating to.\n     */\n    function delegates(address account) public view virtual override returns (address) {\n        return _delegates[account];\n    }\n\n    /**\n     * @dev Gets the current votes balance for `account`\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        uint256 pos = _checkpoints[account].length;\n        return pos == 0 ? 0 : _checkpoints[account][pos - 1].votes;\n    }\n\n    /**\n     * @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastVotes(address account, uint256 blockNumber) public view virtual override returns (uint256) {\n        require(blockNumber < block.number, \"ERC20Votes: block not yet mined\");\n        return _checkpointsLookup(_checkpoints[account], blockNumber);\n    }\n\n    /**\n     * @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n     * It is but NOT the sum of all the delegated votes!\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastTotalSupply(uint256 blockNumber) public view virtual override returns (uint256) {\n        require(blockNumber < block.number, \"ERC20Votes: block not yet mined\");\n        return _checkpointsLookup(_totalSupplyCheckpoints, blockNumber);\n    }\n\n    /**\n     * @dev Lookup a value in a list of (sorted) checkpoints.\n     */\n    function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 blockNumber) private view returns (uint256) {\n        // We run a binary search to look for the earliest checkpoint taken after `blockNumber`.\n        //\n        // Initially we check if the block is recent to narrow the search range.\n        // During the loop, the index of the wanted checkpoint remains in the range [low-1, high).\n        // With each iteration, either `low` or `high` is moved towards the middle of the range to maintain the invariant.\n        // - If the middle checkpoint is after `blockNumber`, we look in [low, mid)\n        // - If the middle checkpoint is before or equal to `blockNumber`, we look in [mid+1, high)\n        // Once we reach a single value (when low == high), we've found the right checkpoint at the index high-1, if not\n        // out of bounds (in which case we're looking too far in the past and the result is 0).\n        // Note that if the latest checkpoint available is exactly for `blockNumber`, we end up with an index that is\n        // past the end of the array, so we technically don't find a checkpoint after `blockNumber`, but it works out\n        // the same.\n        uint256 length = ckpts.length;\n\n        uint256 low = 0;\n        uint256 high = length;\n\n        if (length > 5) {\n            uint256 mid = length - Math.sqrt(length);\n            if (_unsafeAccess(ckpts, mid).fromBlock > blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(ckpts, mid).fromBlock > blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        return high == 0 ? 0 : _unsafeAccess(ckpts, high - 1).votes;\n    }\n\n    /**\n     * @dev Delegate votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual override {\n        _delegate(_msgSender(), delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= expiry, \"ERC20Votes: signature expired\");\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        require(nonce == _useNonce(signer), \"ERC20Votes: invalid nonce\");\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1).\n     */\n    function _maxSupply() internal view virtual returns (uint224) {\n        return type(uint224).max;\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been increased.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        super._mint(account, amount);\n        require(totalSupply() <= _maxSupply(), \"ERC20Votes: total supply risks overflowing votes\");\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _add, amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been decreased.\n     */\n    function _burn(address account, uint256 amount) internal virtual override {\n        super._burn(account, amount);\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _subtract, amount);\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override {\n        super._afterTokenTransfer(from, to, amount);\n\n        _moveVotingPower(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Change delegation for `delegator` to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address delegator, address delegatee) internal virtual {\n        address currentDelegate = delegates(delegator);\n        uint256 delegatorBalance = balanceOf(delegator);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveVotingPower(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveVotingPower(\n        address src,\n        address dst,\n        uint256 amount\n    ) private {\n        if (src != dst && amount > 0) {\n            if (src != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[src], _subtract, amount);\n                emit DelegateVotesChanged(src, oldWeight, newWeight);\n            }\n\n            if (dst != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[dst], _add, amount);\n                emit DelegateVotesChanged(dst, oldWeight, newWeight);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        Checkpoint[] storage ckpts,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) private returns (uint256 oldWeight, uint256 newWeight) {\n        uint256 pos = ckpts.length;\n\n        Checkpoint memory oldCkpt = pos == 0 ? Checkpoint(0, 0) : _unsafeAccess(ckpts, pos - 1);\n\n        oldWeight = oldCkpt.votes;\n        newWeight = op(oldWeight, delta);\n\n        if (pos > 0 && oldCkpt.fromBlock == block.number) {\n            _unsafeAccess(ckpts, pos - 1).votes = SafeCast.toUint224(newWeight);\n        } else {\n            ckpts.push(Checkpoint({fromBlock: SafeCast.toUint32(block.number), votes: SafeCast.toUint224(newWeight)}));\n        }\n    }\n\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n\n    function _unsafeAccess(Checkpoint[] storage ckpts, uint256 pos) private pure returns (Checkpoint storage result) {\n        assembly {\n            mstore(0, ckpts.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * _Available since v3.4._\n */\nabstract contract EIP712 {\n    /* solhint-disable var-name-mixedcase */\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\n    uint256 private immutable _CACHED_CHAIN_ID;\n    address private immutable _CACHED_THIS;\n\n    bytes32 private immutable _HASHED_NAME;\n    bytes32 private immutable _HASHED_VERSION;\n    bytes32 private immutable _TYPE_HASH;\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        bytes32 hashedName = keccak256(bytes(name));\n        bytes32 hashedVersion = keccak256(bytes(version));\n        bytes32 typeHash = keccak256(\n            \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n        );\n        _HASHED_NAME = hashedName;\n        _HASHED_VERSION = hashedVersion;\n        _CACHED_CHAIN_ID = block.chainid;\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion);\n        _CACHED_THIS = address(this);\n        _TYPE_HASH = typeHash;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _CACHED_THIS && block.chainid == _CACHED_CHAIN_ID) {\n            return _CACHED_DOMAIN_SEPARATOR;\n        } else {\n            return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION);\n        }\n    }\n\n    function _buildDomainSeparator(\n        bytes32 typeHash,\n        bytes32 nameHash,\n        bytes32 versionHash\n    ) private view returns (bytes32) {\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/Data.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.11;\n\naddress constant public_sale_address = 0x5470c8FF25EC05980fc7C2967D076B8012298fE7;\naddress payable constant team_and_project_coordinator_address = payable(\n    0x45094071c4DAaf6A9a73B0a0f095a2b138bd8A3A\n);\naddress constant marketing_address = 0xf09f65dD4D229E991901669Ad7c7549f060E30b9;\naddress constant staking_reward_address = 0x2F838cF0Df38b2E91E747a01ddAE5EBad5558b7A;\naddress constant liquidity_reserve_address = 0x1A2118E056D6aF192E233C2c9CFB34e067DED1F8;\naddress constant dao_pool_address = 0x75837E79215250C45331b92c35B7Be506eD015AC;\n\n// address constant team_and_project_coordinator_address_3 = 0x97620dEAdC98bC8173303686037ce7B986CF53C3;\n"},"contracts/TalaxToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.11;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\n\nimport \"./Data.sol\";\n\ncontract TalaxToken is ERC20, ERC20Burnable, Ownable, ERC20Permit, ERC20Votes {\n    uint256 private taxPercent = 1;\n\n    constructor() ERC20(\"Talaxeum\", \"TALAX\") ERC20Permit(\"Talaxeum\") {\n        _mint(_msgSender(), 21 * 1e9 * 10**decimals());\n        _mint(\n            0x5D0ef486F7bAd84a71fa17D9627887eD82C46FF7,\n            10 * 1e9 * decimals()\n        );\n    }\n\n    event ChangeTaxPercentage(uint256 tax);\n\n    fallback() external payable {}\n\n    receive() external payable {}\n\n    function getBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n    function withdrawFunds() external {\n        uint256 thirdOfValue = address(this).balance / 3;\n\n        (bool sent, ) = team_and_project_coordinator_address.call{\n            value: thirdOfValue\n        }(\"\");\n\n        require(sent == true, \"Failed to send Ether\");\n    }\n\n    function withdrawFunds(address token) external {\n        SafeERC20.safeTransfer(\n            IERC20(token),\n            team_and_project_coordinator_address,\n            IERC20(token).balanceOf(address(this))\n        );\n    }\n\n    function changeTax(uint256 tax) external onlyOwner {\n        taxPercent = tax;\n        emit ChangeTaxPercentage(tax);\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    function transfer(address to, uint256 amount)\n        public\n        override\n        returns (bool)\n    {\n        address owner = _msgSender();\n\n        uint256 tax = (amount * taxPercent) / 100;\n        uint256 taxedAmount = amount - tax;\n\n        uint256 teamFee = (tax * 2) / 10;\n        uint256 liquidityFee = (tax * 8) / 10;\n\n        _transfer(owner, team_and_project_coordinator_address, teamFee);\n        _transfer(owner, liquidity_reserve_address, liquidityFee);\n        _transfer(owner, to, taxedAmount);\n        return true;\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override {\n        super._transfer(from, to, amount);\n    }\n\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override(ERC20, ERC20Votes) {\n        super._afterTokenTransfer(from, to, amount);\n    }\n\n    function _mint(address to, uint256 amount)\n        internal\n        override(ERC20, ERC20Votes)\n    {\n        super._mint(to, amount);\n    }\n\n    function _burn(address account, uint256 amount)\n        internal\n        override(ERC20, ERC20Votes)\n    {\n        super._burn(account, amount);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2462],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":2463,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2462,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,2462],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[190]},"id":191,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"135:132:1","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":190,"linearizedBaseContracts":[190],"name":"IVotes","nameLocation":"278:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"291:71:1","text":" @dev Emitted when an account changes their delegate."},"id":124,"name":"DelegateChanged","nameLocation":"373:15:1","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"405:9:1","nodeType":"VariableDeclaration","scope":124,"src":"389:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"432:12:1","nodeType":"VariableDeclaration","scope":124,"src":"416:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"462:10:1","nodeType":"VariableDeclaration","scope":124,"src":"446:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"388:85:1"},"src":"367:107:1"},{"anonymous":false,"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"480:124:1","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"id":133,"name":"DelegateVotesChanged","nameLocation":"615:20:1","nodeType":"EventDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"652:8:1","nodeType":"VariableDeclaration","scope":133,"src":"636:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"670:15:1","nodeType":"VariableDeclaration","scope":133,"src":"662:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":131,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"695:10:1","nodeType":"VariableDeclaration","scope":133,"src":"687:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:71:1"},"src":"609:98:1"},{"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"713:79:1","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":141,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"806:8:1","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"account","nameLocation":"823:7:1","nodeType":"VariableDeclaration","scope":141,"src":"815:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"814:17:1"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"855:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"854:9:1"},"scope":190,"src":"797:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"870:114:1","text":" @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`)."},"functionSelector":"3a46b1a8","id":151,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"998:12:1","nodeType":"FunctionDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"account","nameLocation":"1019:7:1","nodeType":"VariableDeclaration","scope":151,"src":"1011:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"blockNumber","nameLocation":"1036:11:1","nodeType":"VariableDeclaration","scope":151,"src":"1028:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:38:1"},"returnParameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":151,"src":"1072:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":148,"name":"uint256","nodeType":"ElementaryTypeName","src":"1072:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1071:9:1"},"scope":190,"src":"989:92:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"1087:365:1","text":" @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":159,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1466:18:1","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"blockNumber","nameLocation":"1493:11:1","nodeType":"VariableDeclaration","scope":159,"src":"1485:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1485:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1484:21:1"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"1529:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1529:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1528:9:1"},"scope":190,"src":"1457:81:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"1544:71:1","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":167,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1629:9:1","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"account","nameLocation":"1647:7:1","nodeType":"VariableDeclaration","scope":167,"src":"1639:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1639:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1638:17:1"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"1679:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"1679:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1678:9:1"},"scope":190,"src":"1620:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1694:71:1","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":173,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"1779:8:1","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"delegatee","nameLocation":"1796:9:1","nodeType":"VariableDeclaration","scope":173,"src":"1788:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"1788:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1787:19:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"1815:0:1"},"scope":190,"src":"1770:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"1822:67:1","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":189,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"1903:13:1","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"delegatee","nameLocation":"1934:9:1","nodeType":"VariableDeclaration","scope":189,"src":"1926:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"1926:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"nonce","nameLocation":"1961:5:1","nodeType":"VariableDeclaration","scope":189,"src":"1953:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"expiry","nameLocation":"1984:6:1","nodeType":"VariableDeclaration","scope":189,"src":"1976:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1976:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"v","nameLocation":"2006:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2000:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":181,"name":"uint8","nodeType":"ElementaryTypeName","src":"2000:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"r","nameLocation":"2025:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2017:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2017:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"s","nameLocation":"2044:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2036:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2036:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1916:135:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[],"src":"2060:0:1"},"scope":190,"src":"1894:167:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":191,"src":"268:1795:1","usedErrors":[]}],"src":"110:1954:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2462],"ERC20":[777],"IERC20":[855],"IERC20Metadata":[1621]},"id":778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":192,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":193,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":856,"src":"130:22:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":194,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":1622,"src":"153:41:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":195,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":778,"sourceUnit":2463,"src":"195:33:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":197,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2462,"src":"1419:7:2"},"id":198,"nodeType":"InheritanceSpecifier","src":"1419:7:2"},{"baseName":{"id":199,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":855,"src":"1428:6:2"},"id":200,"nodeType":"InheritanceSpecifier","src":"1428:6:2"},{"baseName":{"id":201,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":1621,"src":"1436:14:2"},"id":202,"nodeType":"InheritanceSpecifier","src":"1436:14:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"230:1170:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":777,"linearizedBaseContracts":[777,1621,855,2462],"name":"ERC20","nameLocation":"1410:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":206,"mutability":"mutable","name":"_balances","nameLocation":"1493:9:2","nodeType":"VariableDeclaration","scope":777,"src":"1457:45:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":205,"keyType":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"1465:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1457:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":212,"mutability":"mutable","name":"_allowances","nameLocation":"1565:11:2","nodeType":"VariableDeclaration","scope":777,"src":"1509:67:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":211,"keyType":{"id":207,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1509:47:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":210,"keyType":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1528:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":209,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":214,"mutability":"mutable","name":"_totalSupply","nameLocation":"1599:12:2","nodeType":"VariableDeclaration","scope":777,"src":"1583:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":216,"mutability":"mutable","name":"_name","nameLocation":"1633:5:2","nodeType":"VariableDeclaration","scope":777,"src":"1618:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":215,"name":"string","nodeType":"ElementaryTypeName","src":"1618:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":218,"mutability":"mutable","name":"_symbol","nameLocation":"1659:7:2","nodeType":"VariableDeclaration","scope":777,"src":"1644:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":217,"name":"string","nodeType":"ElementaryTypeName","src":"1644:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":234,"nodeType":"Block","src":"2032:57:2","statements":[{"expression":{"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":226,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"2042:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":227,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2050:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2042:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":229,"nodeType":"ExpressionStatement","src":"2042:13:2"},{"expression":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":230,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"2065:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":231,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"2075:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2065:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":233,"nodeType":"ExpressionStatement","src":"2065:17:2"}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"1673:298:2","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":235,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"name_","nameLocation":"2002:5:2","nodeType":"VariableDeclaration","scope":235,"src":"1988:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":220,"name":"string","nodeType":"ElementaryTypeName","src":"1988:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"symbol_","nameLocation":"2023:7:2","nodeType":"VariableDeclaration","scope":235,"src":"2009:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":222,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1987:44:2"},"returnParameters":{"id":225,"nodeType":"ParameterList","parameters":[],"src":"2032:0:2"},"scope":777,"src":"1976:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1608],"body":{"id":244,"nodeType":"Block","src":"2223:29:2","statements":[{"expression":{"id":242,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"2240:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":241,"id":243,"nodeType":"Return","src":"2233:12:2"}]},"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"2095:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":245,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2163:4:2","nodeType":"FunctionDefinition","overrides":{"id":238,"nodeType":"OverrideSpecifier","overrides":[],"src":"2190:8:2"},"parameters":{"id":237,"nodeType":"ParameterList","parameters":[],"src":"2167:2:2"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"2208:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":239,"name":"string","nodeType":"ElementaryTypeName","src":"2208:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2207:15:2"},"scope":777,"src":"2154:98:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1614],"body":{"id":254,"nodeType":"Block","src":"2436:31:2","statements":[{"expression":{"id":252,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"2453:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":251,"id":253,"nodeType":"Return","src":"2446:14:2"}]},"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"2258:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":255,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2374:6:2","nodeType":"FunctionDefinition","overrides":{"id":248,"nodeType":"OverrideSpecifier","overrides":[],"src":"2403:8:2"},"parameters":{"id":247,"nodeType":"ParameterList","parameters":[],"src":"2380:2:2"},"returnParameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":255,"src":"2421:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":249,"name":"string","nodeType":"ElementaryTypeName","src":"2421:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2420:15:2"},"scope":777,"src":"2365:102:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1620],"body":{"id":264,"nodeType":"Block","src":"3156:26:2","statements":[{"expression":{"hexValue":"3138","id":262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3173:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":261,"id":263,"nodeType":"Return","src":"3166:9:2"}]},"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"2473:613:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":265,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3100:8:2","nodeType":"FunctionDefinition","overrides":{"id":258,"nodeType":"OverrideSpecifier","overrides":[],"src":"3131:8:2"},"parameters":{"id":257,"nodeType":"ParameterList","parameters":[],"src":"3108:2:2"},"returnParameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":265,"src":"3149:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":259,"name":"uint8","nodeType":"ElementaryTypeName","src":"3149:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3148:7:2"},"scope":777,"src":"3091:91:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[804],"body":{"id":274,"nodeType":"Block","src":"3312:36:2","statements":[{"expression":{"id":272,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"3329:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":271,"id":273,"nodeType":"Return","src":"3322:19:2"}]},"documentation":{"id":266,"nodeType":"StructuredDocumentation","src":"3188:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":275,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3251:11:2","nodeType":"FunctionDefinition","overrides":{"id":268,"nodeType":"OverrideSpecifier","overrides":[],"src":"3285:8:2"},"parameters":{"id":267,"nodeType":"ParameterList","parameters":[],"src":"3262:2:2"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":275,"src":"3303:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3302:9:2"},"scope":777,"src":"3242:106:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[812],"body":{"id":288,"nodeType":"Block","src":"3489:42:2","statements":[{"expression":{"baseExpression":{"id":284,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"3506:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":286,"indexExpression":{"id":285,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"3516:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3506:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":283,"id":287,"nodeType":"Return","src":"3499:25:2"}]},"documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"3354:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":289,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3415:9:2","nodeType":"FunctionDefinition","overrides":{"id":280,"nodeType":"OverrideSpecifier","overrides":[],"src":"3462:8:2"},"parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"account","nameLocation":"3433:7:2","nodeType":"VariableDeclaration","scope":289,"src":"3425:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":277,"name":"address","nodeType":"ElementaryTypeName","src":"3425:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3424:17:2"},"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":289,"src":"3480:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"3480:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3479:9:2"},"scope":777,"src":"3406:125:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[822],"body":{"id":313,"nodeType":"Block","src":"3812:104:2","statements":[{"assignments":[301],"declarations":[{"constant":false,"id":301,"mutability":"mutable","name":"owner","nameLocation":"3830:5:2","nodeType":"VariableDeclaration","scope":313,"src":"3822:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"3822:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":304,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":302,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"3838:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3838:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3822:28:2"},{"expression":{"arguments":[{"id":306,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"3870:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":307,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"3877:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":308,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3881:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":305,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"3860:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3860:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"ExpressionStatement","src":"3860:28:2"},{"expression":{"hexValue":"74727565","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3905:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":299,"id":312,"nodeType":"Return","src":"3898:11:2"}]},"documentation":{"id":290,"nodeType":"StructuredDocumentation","src":"3537:185:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":314,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3736:8:2","nodeType":"FunctionDefinition","overrides":{"id":296,"nodeType":"OverrideSpecifier","overrides":[],"src":"3788:8:2"},"parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"to","nameLocation":"3753:2:2","nodeType":"VariableDeclaration","scope":314,"src":"3745:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"amount","nameLocation":"3765:6:2","nodeType":"VariableDeclaration","scope":314,"src":"3757:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3744:28:2"},"returnParameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"3806:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":297,"name":"bool","nodeType":"ElementaryTypeName","src":"3806:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3805:6:2"},"scope":777,"src":"3727:189:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[832],"body":{"id":331,"nodeType":"Block","src":"4072:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":325,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"4089:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":327,"indexExpression":{"id":326,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"4101:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":329,"indexExpression":{"id":328,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"4108:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":324,"id":330,"nodeType":"Return","src":"4082:34:2"}]},"documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"3922:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":332,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3983:9:2","nodeType":"FunctionDefinition","overrides":{"id":321,"nodeType":"OverrideSpecifier","overrides":[],"src":"4045:8:2"},"parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"owner","nameLocation":"4001:5:2","nodeType":"VariableDeclaration","scope":332,"src":"3993:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"3993:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":319,"mutability":"mutable","name":"spender","nameLocation":"4016:7:2","nodeType":"VariableDeclaration","scope":332,"src":"4008:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3992:32:2"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":332,"src":"4063:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"4063:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4062:9:2"},"scope":777,"src":"3974:149:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[842],"body":{"id":356,"nodeType":"Block","src":"4520:108:2","statements":[{"assignments":[344],"declarations":[{"constant":false,"id":344,"mutability":"mutable","name":"owner","nameLocation":"4538:5:2","nodeType":"VariableDeclaration","scope":356,"src":"4530:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":347,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":345,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"4546:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4546:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4530:28:2"},{"expression":{"arguments":[{"id":349,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"4577:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":350,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4584:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":351,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4593:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":348,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"4568:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4568:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":353,"nodeType":"ExpressionStatement","src":"4568:32:2"},{"expression":{"hexValue":"74727565","id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4617:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":342,"id":355,"nodeType":"Return","src":"4610:11:2"}]},"documentation":{"id":333,"nodeType":"StructuredDocumentation","src":"4129:297:2","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":357,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4440:7:2","nodeType":"FunctionDefinition","overrides":{"id":339,"nodeType":"OverrideSpecifier","overrides":[],"src":"4496:8:2"},"parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"spender","nameLocation":"4456:7:2","nodeType":"VariableDeclaration","scope":357,"src":"4448:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"amount","nameLocation":"4473:6:2","nodeType":"VariableDeclaration","scope":357,"src":"4465:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"4465:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4447:33:2"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":357,"src":"4514:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":340,"name":"bool","nodeType":"ElementaryTypeName","src":"4514:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4513:6:2"},"scope":777,"src":"4431:197:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[854],"body":{"id":389,"nodeType":"Block","src":"5323:153:2","statements":[{"assignments":[371],"declarations":[{"constant":false,"id":371,"mutability":"mutable","name":"spender","nameLocation":"5341:7:2","nodeType":"VariableDeclaration","scope":389,"src":"5333:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":374,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":372,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"5351:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5351:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5333:30:2"},{"expression":{"arguments":[{"id":376,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"5389:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"5395:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":378,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"5404:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":375,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"5373:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5373:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":380,"nodeType":"ExpressionStatement","src":"5373:38:2"},{"expression":{"arguments":[{"id":382,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"5431:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":383,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"5437:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":384,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"5441:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":381,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"5421:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5421:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":386,"nodeType":"ExpressionStatement","src":"5421:27:2"},{"expression":{"hexValue":"74727565","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5465:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":369,"id":388,"nodeType":"Return","src":"5458:11:2"}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"4634:551:2","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":390,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5199:12:2","nodeType":"FunctionDefinition","overrides":{"id":366,"nodeType":"OverrideSpecifier","overrides":[],"src":"5299:8:2"},"parameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":360,"mutability":"mutable","name":"from","nameLocation":"5229:4:2","nodeType":"VariableDeclaration","scope":390,"src":"5221:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"5221:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"to","nameLocation":"5251:2:2","nodeType":"VariableDeclaration","scope":390,"src":"5243:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":361,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"amount","nameLocation":"5271:6:2","nodeType":"VariableDeclaration","scope":390,"src":"5263:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5211:72:2"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":390,"src":"5317:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":367,"name":"bool","nodeType":"ElementaryTypeName","src":"5317:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5316:6:2"},"scope":777,"src":"5190:286:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":418,"nodeType":"Block","src":"5965:140:2","statements":[{"assignments":[401],"declarations":[{"constant":false,"id":401,"mutability":"mutable","name":"owner","nameLocation":"5983:5:2","nodeType":"VariableDeclaration","scope":418,"src":"5975:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"5975:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":404,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":402,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"5991:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5991:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5975:28:2"},{"expression":{"arguments":[{"id":406,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"6022:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":407,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"6029:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":409,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"6048:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":410,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"6055:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":408,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6038:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6038:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":412,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6066:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6038:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":405,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"6013:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6013:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":415,"nodeType":"ExpressionStatement","src":"6013:64:2"},{"expression":{"hexValue":"74727565","id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6094:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":399,"id":417,"nodeType":"Return","src":"6087:11:2"}]},"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"5482:384:2","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":419,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5880:17:2","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"spender","nameLocation":"5906:7:2","nodeType":"VariableDeclaration","scope":419,"src":"5898:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"addedValue","nameLocation":"5923:10:2","nodeType":"VariableDeclaration","scope":419,"src":"5915:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"5915:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5897:37:2"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":419,"src":"5959:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":397,"name":"bool","nodeType":"ElementaryTypeName","src":"5959:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5958:6:2"},"scope":777,"src":"5871:234:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":459,"nodeType":"Block","src":"6691:328:2","statements":[{"assignments":[430],"declarations":[{"constant":false,"id":430,"mutability":"mutable","name":"owner","nameLocation":"6709:5:2","nodeType":"VariableDeclaration","scope":459,"src":"6701:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"6701:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":433,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":431,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"6717:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6717:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6701:28:2"},{"assignments":[435],"declarations":[{"constant":false,"id":435,"mutability":"mutable","name":"currentAllowance","nameLocation":"6747:16:2","nodeType":"VariableDeclaration","scope":459,"src":"6739:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"6739:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":440,"initialValue":{"arguments":[{"id":437,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"6776:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":438,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6783:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":436,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6766:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6766:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6739:52:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":442,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"6809:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":443,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"6829:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6809:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6846:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":441,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6801:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6801:85:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":447,"nodeType":"ExpressionStatement","src":"6801:85:2"},{"id":456,"nodeType":"UncheckedBlock","src":"6896:95:2","statements":[{"expression":{"arguments":[{"id":449,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"6929:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":450,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6936:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":451,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"6945:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":452,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"6964:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6945:34:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":448,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"6920:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6920:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"6920:60:2"}]},{"expression":{"hexValue":"74727565","id":457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7008:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":428,"id":458,"nodeType":"Return","src":"7001:11:2"}]},"documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"6111:476:2","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":460,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6601:17:2","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"spender","nameLocation":"6627:7:2","nodeType":"VariableDeclaration","scope":460,"src":"6619:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"6619:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":424,"mutability":"mutable","name":"subtractedValue","nameLocation":"6644:15:2","nodeType":"VariableDeclaration","scope":460,"src":"6636:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":423,"name":"uint256","nodeType":"ElementaryTypeName","src":"6636:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6618:42:2"},"returnParameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":460,"src":"6685:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":426,"name":"bool","nodeType":"ElementaryTypeName","src":"6685:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6684:6:2"},"scope":777,"src":"6592:427:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":536,"nodeType":"Block","src":"7581:710:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":471,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7599:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7607:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"7607:7:2","typeDescriptions":{}}},"id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7607:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7599:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7619:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":470,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7591:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7591:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":479,"nodeType":"ExpressionStatement","src":"7591:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":481,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"7677:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7691:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7683:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"7683:7:2","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7683:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7677:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7695:37:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":480,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7669:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7669:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"7669:64:2"},{"expression":{"arguments":[{"id":491,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7765:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"7771:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":493,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"7775:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":490,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"7744:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7744:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":495,"nodeType":"ExpressionStatement","src":"7744:38:2"},{"assignments":[497],"declarations":[{"constant":false,"id":497,"mutability":"mutable","name":"fromBalance","nameLocation":"7801:11:2","nodeType":"VariableDeclaration","scope":536,"src":"7793:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint256","nodeType":"ElementaryTypeName","src":"7793:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":501,"initialValue":{"baseExpression":{"id":498,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"7815:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":500,"indexExpression":{"id":499,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7825:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7815:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7793:37:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":503,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"7848:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":504,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"7863:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7848:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7871:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":502,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7840:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7840:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":508,"nodeType":"ExpressionStatement","src":"7840:72:2"},{"id":523,"nodeType":"UncheckedBlock","src":"7922:273:2","statements":[{"expression":{"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":509,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"7946:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":511,"indexExpression":{"id":510,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7956:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7946:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":512,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"7964:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":513,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"7978:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7964:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7946:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":516,"nodeType":"ExpressionStatement","src":"7946:38:2"},{"expression":{"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":517,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"8161:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":519,"indexExpression":{"id":518,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"8171:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8161:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":520,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"8178:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8161:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":522,"nodeType":"ExpressionStatement","src":"8161:23:2"}]},{"eventCall":{"arguments":[{"id":525,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"8219:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":526,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"8225:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":527,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"8229:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":524,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"8210:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8210:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":529,"nodeType":"EmitStatement","src":"8205:31:2"},{"expression":{"arguments":[{"id":531,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"8267:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"8273:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"8277:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":530,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"8247:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8247:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":535,"nodeType":"ExpressionStatement","src":"8247:37:2"}]},"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"7025:443:2","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":537,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7482:9:2","nodeType":"FunctionDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"from","nameLocation":"7509:4:2","nodeType":"VariableDeclaration","scope":537,"src":"7501:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"to","nameLocation":"7531:2:2","nodeType":"VariableDeclaration","scope":537,"src":"7523:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"7523:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":467,"mutability":"mutable","name":"amount","nameLocation":"7551:6:2","nodeType":"VariableDeclaration","scope":537,"src":"7543:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":466,"name":"uint256","nodeType":"ElementaryTypeName","src":"7543:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7491:72:2"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[],"src":"7581:0:2"},"scope":777,"src":"7473:818:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":593,"nodeType":"Block","src":"8632:470:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":546,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"8650:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8669:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8661:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"8661:7:2","typeDescriptions":{}}},"id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8661:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8650:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8673:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":545,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8642:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8642:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"ExpressionStatement","src":"8642:65:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8747:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"8739:7:2","typeDescriptions":{}}},"id":559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8739:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":560,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"8751:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"8760:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":555,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8718:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8718:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"ExpressionStatement","src":"8718:49:2"},{"expression":{"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":564,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"8778:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":565,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"8794:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8778:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":567,"nodeType":"ExpressionStatement","src":"8778:22:2"},{"id":574,"nodeType":"UncheckedBlock","src":"8810:175:2","statements":[{"expression":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":568,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"8946:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":570,"indexExpression":{"id":569,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"8956:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8946:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":571,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"8968:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8946:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":573,"nodeType":"ExpressionStatement","src":"8946:28:2"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9016:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9008:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"9008:7:2","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9008:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":580,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"9020:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":581,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"9029:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":575,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"8999:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8999:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":583,"nodeType":"EmitStatement","src":"8994:42:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9075:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9067:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":585,"name":"address","nodeType":"ElementaryTypeName","src":"9067:7:2","typeDescriptions":{}}},"id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9067:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":589,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"9079:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":590,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"9088:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":584,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"9047:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9047:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":592,"nodeType":"ExpressionStatement","src":"9047:48:2"}]},"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"8297:265:2","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":594,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8576:5:2","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"mutability":"mutable","name":"account","nameLocation":"8590:7:2","nodeType":"VariableDeclaration","scope":594,"src":"8582:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"8582:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":542,"mutability":"mutable","name":"amount","nameLocation":"8607:6:2","nodeType":"VariableDeclaration","scope":594,"src":"8599:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint256","nodeType":"ElementaryTypeName","src":"8599:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8581:33:2"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[],"src":"8632:0:2"},"scope":777,"src":"8567:535:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":665,"nodeType":"Block","src":"9487:594:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"9505:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9524:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9516:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"9516:7:2","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9516:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9505:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9528:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":602,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9497:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9497:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":611,"nodeType":"ExpressionStatement","src":"9497:67:2"},{"expression":{"arguments":[{"id":613,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"9596:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9613:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9605:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"9605:7:2","typeDescriptions":{}}},"id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9605:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":618,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"9617:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":612,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"9575:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9575:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":620,"nodeType":"ExpressionStatement","src":"9575:49:2"},{"assignments":[622],"declarations":[{"constant":false,"id":622,"mutability":"mutable","name":"accountBalance","nameLocation":"9643:14:2","nodeType":"VariableDeclaration","scope":665,"src":"9635:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"9635:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":626,"initialValue":{"baseExpression":{"id":623,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"9660:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":625,"indexExpression":{"id":624,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"9670:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9660:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9635:43:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":628,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"9696:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":629,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"9714:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9696:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9722:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":627,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9688:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9688:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":633,"nodeType":"ExpressionStatement","src":"9688:71:2"},{"id":646,"nodeType":"UncheckedBlock","src":"9769:194:2","statements":[{"expression":{"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":634,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"9793:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":636,"indexExpression":{"id":635,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"9803:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9793:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":637,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"9814:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":638,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"9831:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9814:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9793:44:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":641,"nodeType":"ExpressionStatement","src":"9793:44:2"},{"expression":{"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":642,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"9930:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":643,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"9946:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9930:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":645,"nodeType":"ExpressionStatement","src":"9930:22:2"}]},{"eventCall":{"arguments":[{"id":648,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"9987:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10004:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9996:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"9996:7:2","typeDescriptions":{}}},"id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9996:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":653,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"10008:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":647,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"9978:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9978:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":655,"nodeType":"EmitStatement","src":"9973:42:2"},{"expression":{"arguments":[{"id":657,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"10046:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10055:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"10055:7:2","typeDescriptions":{}}},"id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10055:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":662,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"10067:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":656,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"10026:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10026:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":664,"nodeType":"ExpressionStatement","src":"10026:48:2"}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"9108:309:2","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":666,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9431:5:2","nodeType":"FunctionDefinition","parameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"account","nameLocation":"9445:7:2","nodeType":"VariableDeclaration","scope":666,"src":"9437:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"9437:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"amount","nameLocation":"9462:6:2","nodeType":"VariableDeclaration","scope":666,"src":"9454:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"9454:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9436:33:2"},"returnParameters":{"id":601,"nodeType":"ParameterList","parameters":[],"src":"9487:0:2"},"scope":777,"src":"9422:659:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":710,"nodeType":"Block","src":"10617:257:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":677,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"10635:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10652:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:2","typeDescriptions":{}}},"id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10644:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10635:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10656:38:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":676,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10627:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10627:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":685,"nodeType":"ExpressionStatement","src":"10627:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":687,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"10713:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10732:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10724:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"10724:7:2","typeDescriptions":{}}},"id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10724:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10713:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10736:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":686,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10705:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10705:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"ExpressionStatement","src":"10705:68:2"},{"expression":{"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":696,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"10784:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":699,"indexExpression":{"id":697,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"10796:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10784:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":700,"indexExpression":{"id":698,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"10803:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10784:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":701,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"10814:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10784:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":703,"nodeType":"ExpressionStatement","src":"10784:36:2"},{"eventCall":{"arguments":[{"id":705,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"10844:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":706,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"10851:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":707,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"10860:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":704,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"10835:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10835:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":709,"nodeType":"EmitStatement","src":"10830:37:2"}]},"documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"10087:412:2","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":711,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10513:8:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"owner","nameLocation":"10539:5:2","nodeType":"VariableDeclaration","scope":711,"src":"10531:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"10531:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":671,"mutability":"mutable","name":"spender","nameLocation":"10562:7:2","nodeType":"VariableDeclaration","scope":711,"src":"10554:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"10554:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":673,"mutability":"mutable","name":"amount","nameLocation":"10587:6:2","nodeType":"VariableDeclaration","scope":711,"src":"10579:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"10579:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10521:78:2"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[],"src":"10617:0:2"},"scope":777,"src":"10504:370:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":753,"nodeType":"Block","src":"11275:321:2","statements":[{"assignments":[722],"declarations":[{"constant":false,"id":722,"mutability":"mutable","name":"currentAllowance","nameLocation":"11293:16:2","nodeType":"VariableDeclaration","scope":753,"src":"11285:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"11285:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":727,"initialValue":{"arguments":[{"id":724,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"11322:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":725,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"11329:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":723,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"11312:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11312:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11285:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":728,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"11351:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":730,"name":"uint256","nodeType":"ElementaryTypeName","src":"11376:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":729,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11371:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11371:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11371:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11351:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":752,"nodeType":"IfStatement","src":"11347:243:2","trueBody":{"id":751,"nodeType":"Block","src":"11390:200:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":736,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"11412:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":737,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"11432:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11412:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11440:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11404:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11404:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":741,"nodeType":"ExpressionStatement","src":"11404:68:2"},{"id":750,"nodeType":"UncheckedBlock","src":"11486:94:2","statements":[{"expression":{"arguments":[{"id":743,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"11523:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"11530:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":745,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"11539:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":746,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"11558:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11539:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":742,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"11514:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11514:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":749,"nodeType":"ExpressionStatement","src":"11514:51:2"}]}]}}]},"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"10880:270:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":754,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11164:15:2","nodeType":"FunctionDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"owner","nameLocation":"11197:5:2","nodeType":"VariableDeclaration","scope":754,"src":"11189:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"11189:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"spender","nameLocation":"11220:7:2","nodeType":"VariableDeclaration","scope":754,"src":"11212:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"11212:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"amount","nameLocation":"11245:6:2","nodeType":"VariableDeclaration","scope":754,"src":"11237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"11237:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11179:78:2"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"11275:0:2"},"scope":777,"src":"11155:441:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":764,"nodeType":"Block","src":"12299:2:2","statements":[]},"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"11602:573:2","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":765,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12189:20:2","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"from","nameLocation":"12227:4:2","nodeType":"VariableDeclaration","scope":765,"src":"12219:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"12219:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"to","nameLocation":"12249:2:2","nodeType":"VariableDeclaration","scope":765,"src":"12241:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"12241:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"amount","nameLocation":"12269:6:2","nodeType":"VariableDeclaration","scope":765,"src":"12261:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"12261:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:72:2"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[],"src":"12299:0:2"},"scope":777,"src":"12180:121:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":775,"nodeType":"Block","src":"13007:2:2","statements":[]},"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"12307:577:2","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":776,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12898:19:2","nodeType":"FunctionDefinition","parameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"from","nameLocation":"12935:4:2","nodeType":"VariableDeclaration","scope":776,"src":"12927:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"12927:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":770,"mutability":"mutable","name":"to","nameLocation":"12957:2:2","nodeType":"VariableDeclaration","scope":776,"src":"12949:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"12949:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"amount","nameLocation":"12977:6:2","nodeType":"VariableDeclaration","scope":776,"src":"12969:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"12969:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12917:72:2"},"returnParameters":{"id":774,"nodeType":"ParameterList","parameters":[],"src":"13007:0:2"},"scope":777,"src":"12889:120:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":778,"src":"1401:11610:2","usedErrors":[]}],"src":"105:12907:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[855]},"id":856,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":779,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":855,"linearizedBaseContracts":[855],"name":"IERC20","nameLocation":"212:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"225:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":789,"name":"Transfer","nameLocation":"394:8:3","nodeType":"EventDefinition","parameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:3","nodeType":"VariableDeclaration","scope":789,"src":"403:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":785,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:3","nodeType":"VariableDeclaration","scope":789,"src":"425:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:3","nodeType":"VariableDeclaration","scope":789,"src":"445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":786,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:3"},"src":"388:72:3"},{"anonymous":false,"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"466:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":798,"name":"Approval","nameLocation":"625:8:3","nodeType":"EventDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:3","nodeType":"VariableDeclaration","scope":798,"src":"634:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":794,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:3","nodeType":"VariableDeclaration","scope":798,"src":"657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":796,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:3","nodeType":"VariableDeclaration","scope":798,"src":"682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:3"},"src":"619:78:3"},{"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"703:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":804,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":800,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":804,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":855,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"835:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":812,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":812,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":812,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":809,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":855,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"986:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":822,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:3","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"mutability":"mutable","name":"to","nameLocation":"1219:2:3","nodeType":"VariableDeclaration","scope":822,"src":"1211:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":817,"mutability":"mutable","name":"amount","nameLocation":"1231:6:3","nodeType":"VariableDeclaration","scope":822,"src":"1223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:3"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":822,"src":"1257:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":819,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:3"},"scope":855,"src":"1193:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"1269:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":832,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:3","nodeType":"FunctionDefinition","parameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"owner","nameLocation":"1565:5:3","nodeType":"VariableDeclaration","scope":832,"src":"1557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":827,"mutability":"mutable","name":"spender","nameLocation":"1580:7:3","nodeType":"VariableDeclaration","scope":832,"src":"1572:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:3"},"returnParameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":832,"src":"1612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:3"},"scope":855,"src":"1538:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"1627:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":842,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:3","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"spender","nameLocation":"2299:7:3","nodeType":"VariableDeclaration","scope":842,"src":"2291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"amount","nameLocation":"2316:6:3","nodeType":"VariableDeclaration","scope":842,"src":"2308:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:3"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":842,"src":"2342:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":839,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:3"},"scope":855,"src":"2274:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":843,"nodeType":"StructuredDocumentation","src":"2354:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":854,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:3","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"from","nameLocation":"2685:4:3","nodeType":"VariableDeclaration","scope":854,"src":"2677:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"to","nameLocation":"2707:2:3","nodeType":"VariableDeclaration","scope":854,"src":"2699:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"amount","nameLocation":"2727:6:3","nodeType":"VariableDeclaration","scope":854,"src":"2719:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:3"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"2758:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":851,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:3"},"scope":855,"src":"2646:118:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":856,"src":"202:2564:3","usedErrors":[]}],"src":"106:2661:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[2462],"ERC20":[777],"ERC20Burnable":[899],"IERC20":[855],"IERC20Metadata":[1621]},"id":900,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":857,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":858,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":900,"sourceUnit":778,"src":"149:22:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":859,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":900,"sourceUnit":2463,"src":"172:36:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":861,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2462,"src":"454:7:4"},"id":862,"nodeType":"InheritanceSpecifier","src":"454:7:4"},{"baseName":{"id":863,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"463:5:4"},"id":864,"nodeType":"InheritanceSpecifier","src":"463:5:4"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"210:208:4","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":false,"id":899,"linearizedBaseContracts":[899,777,1621,855,2462],"name":"ERC20Burnable","nameLocation":"437:13:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":876,"nodeType":"Block","src":"623:44:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":871,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"639:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"639:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":873,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"653:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":870,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"633:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"633:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":875,"nodeType":"ExpressionStatement","src":"633:27:4"}]},"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"475:98:4","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":877,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"587:4:4","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"amount","nameLocation":"600:6:4","nodeType":"VariableDeclaration","scope":877,"src":"592:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"591:16:4"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[],"src":"623:0:4"},"scope":899,"src":"578:89:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":897,"nodeType":"Block","src":"1039:95:4","statements":[{"expression":{"arguments":[{"id":886,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"1065:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":887,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"1074:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1074:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":889,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"1088:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":885,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"1049:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1049:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":891,"nodeType":"ExpressionStatement","src":"1049:46:4"},{"expression":{"arguments":[{"id":893,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"1111:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":894,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"1120:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":892,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"1105:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1105:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":896,"nodeType":"ExpressionStatement","src":"1105:22:4"}]},"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"673:295:4","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":898,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"982:8:4","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"account","nameLocation":"999:7:4","nodeType":"VariableDeclaration","scope":898,"src":"991:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"991:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"amount","nameLocation":"1016:6:4","nodeType":"VariableDeclaration","scope":898,"src":"1008:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"990:33:4"},"returnParameters":{"id":884,"nodeType":"ParameterList","parameters":[],"src":"1039:0:4"},"scope":899,"src":"973:161:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":900,"src":"419:717:4","usedErrors":[]}],"src":"124:1013:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Context":[2462],"Counters":[2536],"ECDSA":[3072],"EIP712":[3226],"ERC20":[777],"ERC20Permit":[1793],"ERC20Votes":[1596],"IERC20":[855],"IERC20Metadata":[1621],"IERC20Permit":[1829],"IVotes":[190],"Math":[4091],"SafeCast":[5632],"Strings":[2711]},"id":1597,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":901,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","file":"./draft-ERC20Permit.sol","id":902,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1597,"sourceUnit":1794,"src":"146:33:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../../../utils/math/Math.sol","id":903,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1597,"sourceUnit":4092,"src":"180:38:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../../../governance/utils/IVotes.sol","id":904,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1597,"sourceUnit":191,"src":"219:46:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../../utils/math/SafeCast.sol","id":905,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1597,"sourceUnit":5633,"src":"266:42:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1597,"sourceUnit":3073,"src":"309:47:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":908,"name":"IVotes","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1285:6:5"},"id":909,"nodeType":"InheritanceSpecifier","src":"1285:6:5"},{"baseName":{"id":910,"name":"ERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":1793,"src":"1293:11:5"},"id":911,"nodeType":"InheritanceSpecifier","src":"1293:11:5"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"358:894:5","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n _Available since v4.2._"},"fullyImplemented":false,"id":1596,"linearizedBaseContracts":[1596,1793,3226,1829,777,1621,855,2462,190],"name":"ERC20Votes","nameLocation":"1271:10:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Votes.Checkpoint","id":916,"members":[{"constant":false,"id":913,"mutability":"mutable","name":"fromBlock","nameLocation":"1346:9:5","nodeType":"VariableDeclaration","scope":916,"src":"1339:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":912,"name":"uint32","nodeType":"ElementaryTypeName","src":"1339:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":915,"mutability":"mutable","name":"votes","nameLocation":"1373:5:5","nodeType":"VariableDeclaration","scope":916,"src":"1365:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":914,"name":"uint224","nodeType":"ElementaryTypeName","src":"1365:7:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"1318:10:5","nodeType":"StructDefinition","scope":1596,"src":"1311:74:5","visibility":"public"},{"constant":true,"id":921,"mutability":"constant","name":"_DELEGATION_TYPEHASH","nameLocation":"1416:20:5","nodeType":"VariableDeclaration","scope":1596,"src":"1391:127:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1391:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1457:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":918,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1447:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1447:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":925,"mutability":"mutable","name":"_delegates","nameLocation":"1561:10:5","nodeType":"VariableDeclaration","scope":1596,"src":"1525:46:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":924,"keyType":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"1533:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1525:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":931,"mutability":"mutable","name":"_checkpoints","nameLocation":"1618:12:5","nodeType":"VariableDeclaration","scope":1596,"src":"1577:53:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"typeName":{"id":930,"keyType":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"1585:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1577:32:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"valueType":{"baseType":{"id":928,"nodeType":"UserDefinedTypeName","pathNode":{"id":927,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":916,"src":"1596:10:5"},"referencedDeclaration":916,"src":"1596:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":929,"nodeType":"ArrayTypeName","src":"1596:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}}},"visibility":"private"},{"constant":false,"id":935,"mutability":"mutable","name":"_totalSupplyCheckpoints","nameLocation":"1657:23:5","nodeType":"VariableDeclaration","scope":1596,"src":"1636:44:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":933,"nodeType":"UserDefinedTypeName","pathNode":{"id":932,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":916,"src":"1636:10:5"},"referencedDeclaration":916,"src":"1636:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":934,"nodeType":"ArrayTypeName","src":"1636:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"private"},{"body":{"id":952,"nodeType":"Block","src":"1856:50:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":946,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"1873:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":948,"indexExpression":{"id":947,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"1886:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1873:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":950,"indexExpression":{"id":949,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"1895:3:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1873:26:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"functionReturnParameters":945,"id":951,"nodeType":"Return","src":"1866:33:5"}]},"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"1687:66:5","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":953,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"1767:11:5","nodeType":"FunctionDefinition","parameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"account","nameLocation":"1787:7:5","nodeType":"VariableDeclaration","scope":953,"src":"1779:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"1779:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"pos","nameLocation":"1803:3:5","nodeType":"VariableDeclaration","scope":953,"src":"1796:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":939,"name":"uint32","nodeType":"ElementaryTypeName","src":"1796:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1778:29:5"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":953,"src":"1837:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":943,"nodeType":"UserDefinedTypeName","pathNode":{"id":942,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":916,"src":"1837:10:5"},"referencedDeclaration":916,"src":"1837:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"1836:19:5"},"scope":1596,"src":"1758:148:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":969,"nodeType":"Block","src":"2059:71:5","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":963,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"2094:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":965,"indexExpression":{"id":964,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2107:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2094:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2094:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":961,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"2076:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5632_$","typeString":"type(library SafeCast)"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":4794,"src":"2076:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2076:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":960,"id":968,"nodeType":"Return","src":"2069:54:5"}]},"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"1912:64:5","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":970,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"1990:14:5","nodeType":"FunctionDefinition","parameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"account","nameLocation":"2013:7:5","nodeType":"VariableDeclaration","scope":970,"src":"2005:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"2005:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2004:17:5"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":970,"src":"2051:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":958,"name":"uint32","nodeType":"ElementaryTypeName","src":"2051:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2050:8:5"},"scope":1596,"src":"1981:149:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[167],"body":{"id":983,"nodeType":"Block","src":"2301:43:5","statements":[{"expression":{"baseExpression":{"id":979,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"2318:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":981,"indexExpression":{"id":980,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"2329:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2318:19:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":978,"id":982,"nodeType":"Return","src":"2311:26:5"}]},"documentation":{"id":971,"nodeType":"StructuredDocumentation","src":"2136:77:5","text":" @dev Get the address `account` is currently delegating to."},"functionSelector":"587cde1e","id":984,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"2227:9:5","nodeType":"FunctionDefinition","overrides":{"id":975,"nodeType":"OverrideSpecifier","overrides":[],"src":"2274:8:5"},"parameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"account","nameLocation":"2245:7:5","nodeType":"VariableDeclaration","scope":984,"src":"2237:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":972,"name":"address","nodeType":"ElementaryTypeName","src":"2237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2236:17:5"},"returnParameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":984,"src":"2292:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"2292:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2291:9:5"},"scope":1596,"src":"2218:126:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[141],"body":{"id":1014,"nodeType":"Block","src":"2505:127:5","statements":[{"assignments":[994],"declarations":[{"constant":false,"id":994,"mutability":"mutable","name":"pos","nameLocation":"2523:3:5","nodeType":"VariableDeclaration","scope":1014,"src":"2515:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"2515:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":999,"initialValue":{"expression":{"baseExpression":{"id":995,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"2529:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":997,"indexExpression":{"id":996,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"2542:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2529:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2529:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2515:42:5"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1000,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"2574:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2581:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2574:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1004,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"2589:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1006,"indexExpression":{"id":1005,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"2602:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2589:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1010,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1007,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"2611:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2617:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2611:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2589:30:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":915,"src":"2589:36:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2574:51:5","trueExpression":{"hexValue":"30","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2585:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":992,"id":1013,"nodeType":"Return","src":"2567:58:5"}]},"documentation":{"id":985,"nodeType":"StructuredDocumentation","src":"2350:68:5","text":" @dev Gets the current votes balance for `account`"},"functionSelector":"9ab24eb0","id":1015,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"2432:8:5","nodeType":"FunctionDefinition","overrides":{"id":989,"nodeType":"OverrideSpecifier","overrides":[],"src":"2478:8:5"},"parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"account","nameLocation":"2449:7:5","nodeType":"VariableDeclaration","scope":1015,"src":"2441:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"2441:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2440:17:5"},"returnParameters":{"id":992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1015,"src":"2496:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"2496:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2495:9:5"},"scope":1596,"src":"2423:209:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[151],"body":{"id":1041,"nodeType":"Block","src":"2932:158:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1027,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"2950:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1028,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2964:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"2964:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2950:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2978:33:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""},"value":"ERC20Votes: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""}],"id":1026,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2942:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2942:70:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1033,"nodeType":"ExpressionStatement","src":"2942:70:5"},{"expression":{"arguments":[{"baseExpression":{"id":1035,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"3048:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1037,"indexExpression":{"id":1036,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"3061:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3048:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1038,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"3071:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1034,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"3029:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3029:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1025,"id":1040,"nodeType":"Return","src":"3022:61:5"}]},"documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"2638:182:5","text":" @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"3a46b1a8","id":1042,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"2834:12:5","nodeType":"FunctionDefinition","overrides":{"id":1022,"nodeType":"OverrideSpecifier","overrides":[],"src":"2905:8:5"},"parameters":{"id":1021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"account","nameLocation":"2855:7:5","nodeType":"VariableDeclaration","scope":1042,"src":"2847:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"2847:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"blockNumber","nameLocation":"2872:11:5","nodeType":"VariableDeclaration","scope":1042,"src":"2864:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"2864:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2846:38:5"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1042,"src":"2923:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"2923:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2922:9:5"},"scope":1596,"src":"2825:265:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[159],"body":{"id":1064,"nodeType":"Block","src":"3465:160:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1052,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"3483:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1053,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3497:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3497:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3483:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3511:33:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""},"value":"ERC20Votes: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""}],"id":1051,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3475:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3475:70:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1058,"nodeType":"ExpressionStatement","src":"3475:70:5"},{"expression":{"arguments":[{"id":1060,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"3581:23:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1061,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"3606:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1059,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"3562:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3562:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1050,"id":1063,"nodeType":"Return","src":"3555:63:5"}]},"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"3096:268:5","text":" @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n It is but NOT the sum of all the delegated votes!\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"8e539e8c","id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"3378:18:5","nodeType":"FunctionDefinition","overrides":{"id":1047,"nodeType":"OverrideSpecifier","overrides":[],"src":"3438:8:5"},"parameters":{"id":1046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"blockNumber","nameLocation":"3405:11:5","nodeType":"VariableDeclaration","scope":1065,"src":"3397:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1044,"name":"uint256","nodeType":"ElementaryTypeName","src":"3397:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3396:21:5"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1065,"src":"3456:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"3456:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3455:9:5"},"scope":1596,"src":"3369:256:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1170,"nodeType":"Block","src":"3817:1750:5","statements":[{"assignments":[1078],"declarations":[{"constant":false,"id":1078,"mutability":"mutable","name":"length","nameLocation":"4904:6:5","nodeType":"VariableDeclaration","scope":1170,"src":"4896:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"4896:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1081,"initialValue":{"expression":{"id":1079,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"4913:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4913:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4896:29:5"},{"assignments":[1083],"declarations":[{"constant":false,"id":1083,"mutability":"mutable","name":"low","nameLocation":"4944:3:5","nodeType":"VariableDeclaration","scope":1170,"src":"4936:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"4936:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1085,"initialValue":{"hexValue":"30","id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4950:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4936:15:5"},{"assignments":[1087],"declarations":[{"constant":false,"id":1087,"mutability":"mutable","name":"high","nameLocation":"4969:4:5","nodeType":"VariableDeclaration","scope":1170,"src":"4961:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1086,"name":"uint256","nodeType":"ElementaryTypeName","src":"4961:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1089,"initialValue":{"id":1088,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"4976:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4961:21:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1090,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"4997:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5006:1:5","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"4997:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1123,"nodeType":"IfStatement","src":"4993:244:5","trueBody":{"id":1122,"nodeType":"Block","src":"5009:228:5","statements":[{"assignments":[1094],"declarations":[{"constant":false,"id":1094,"mutability":"mutable","name":"mid","nameLocation":"5031:3:5","nodeType":"VariableDeclaration","scope":1122,"src":"5023:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1101,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1095,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"5037:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1098,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"5056:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1096,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"5046:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4091_$","typeString":"type(library Math)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":3595,"src":"5046:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5046:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5037:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5023:40:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1103,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"5095:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"id":1104,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"5102:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1102,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"5081:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$916_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5081:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":913,"src":"5081:35:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1107,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5119:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5081:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1120,"nodeType":"Block","src":"5181:46:5","statements":[{"expression":{"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1114,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"5199:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1115,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"5205:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5211:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5205:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5199:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1119,"nodeType":"ExpressionStatement","src":"5199:13:5"}]},"id":1121,"nodeType":"IfStatement","src":"5077:150:5","trueBody":{"id":1113,"nodeType":"Block","src":"5132:43:5","statements":[{"expression":{"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1109,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"5150:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1110,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"5157:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5150:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1112,"nodeType":"ExpressionStatement","src":"5150:10:5"}]}}]}},{"body":{"id":1155,"nodeType":"Block","src":"5266:225:5","statements":[{"assignments":[1128],"declarations":[{"constant":false,"id":1128,"mutability":"mutable","name":"mid","nameLocation":"5288:3:5","nodeType":"VariableDeclaration","scope":1155,"src":"5280:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"5280:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1134,"initialValue":{"arguments":[{"id":1131,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"5307:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1132,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"5312:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1129,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"5294:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4091_$","typeString":"type(library Math)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"5294:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5294:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5280:37:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1136,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"5349:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"id":1137,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5356:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1135,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"5335:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$916_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5335:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":913,"src":"5335:35:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1140,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5373:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5335:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1153,"nodeType":"Block","src":"5435:46:5","statements":[{"expression":{"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1147,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"5453:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1148,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5459:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5465:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5459:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5453:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1152,"nodeType":"ExpressionStatement","src":"5453:13:5"}]},"id":1154,"nodeType":"IfStatement","src":"5331:150:5","trueBody":{"id":1146,"nodeType":"Block","src":"5386:43:5","statements":[{"expression":{"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1142,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"5404:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1143,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5411:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5404:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1145,"nodeType":"ExpressionStatement","src":"5404:10:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1124,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"5254:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1125,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"5260:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5254:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1156,"nodeType":"WhileStatement","src":"5247:244:5"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1157,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"5508:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5516:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5508:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"id":1162,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"5538:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1163,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"5545:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5552:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5545:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1161,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"5524:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$916_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5524:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":915,"src":"5524:36:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5508:52:5","trueExpression":{"hexValue":"30","id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5520:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1076,"id":1169,"nodeType":"Return","src":"5501:59:5"}]},"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"3631:73:5","text":" @dev Lookup a value in a list of (sorted) checkpoints."},"id":1171,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpointsLookup","nameLocation":"3718:18:5","nodeType":"FunctionDefinition","parameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"ckpts","nameLocation":"3758:5:5","nodeType":"VariableDeclaration","scope":1171,"src":"3737:26:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1068,"nodeType":"UserDefinedTypeName","pathNode":{"id":1067,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":916,"src":"3737:10:5"},"referencedDeclaration":916,"src":"3737:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1069,"nodeType":"ArrayTypeName","src":"3737:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"blockNumber","nameLocation":"3773:11:5","nodeType":"VariableDeclaration","scope":1171,"src":"3765:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1071,"name":"uint256","nodeType":"ElementaryTypeName","src":"3765:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3736:49:5"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1171,"src":"3808:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"3808:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3807:9:5"},"scope":1596,"src":"3709:1858:5","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[173],"body":{"id":1184,"nodeType":"Block","src":"5709:51:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1179,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"5729:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5729:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1181,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"5743:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1178,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"5719:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5719:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1183,"nodeType":"ExpressionStatement","src":"5719:34:5"}]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"5573:70:5","text":" @dev Delegate votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":1185,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"5657:8:5","nodeType":"FunctionDefinition","overrides":{"id":1176,"nodeType":"OverrideSpecifier","overrides":[],"src":"5700:8:5"},"parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"delegatee","nameLocation":"5674:9:5","nodeType":"VariableDeclaration","scope":1185,"src":"5666:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1173,"name":"address","nodeType":"ElementaryTypeName","src":"5666:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5665:19:5"},"returnParameters":{"id":1177,"nodeType":"ParameterList","parameters":[],"src":"5709:0:5"},"scope":1596,"src":"5648:112:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[189],"body":{"id":1244,"nodeType":"Block","src":"6019:392:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1203,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6037:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"6037:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1205,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"6056:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6037:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6064:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""},"value":"ERC20Votes: signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""}],"id":1202,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6029:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6029:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"ExpressionStatement","src":"6029:67:5"},{"assignments":[1211],"declarations":[{"constant":false,"id":1211,"mutability":"mutable","name":"signer","nameLocation":"6114:6:5","nodeType":"VariableDeclaration","scope":1244,"src":"6106:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"6106:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1229,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1218,"name":"_DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"6188:20:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1219,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"6210:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1220,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"6221:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1221,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"6228:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1216,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6177:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"6177:10:5","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6177:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1215,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6167:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6167:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1214,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"6150:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6150:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1225,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"6251:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1226,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"6266:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1227,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"6281:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1212,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"6123:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3072_$","typeString":"type(library ECDSA)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3012,"src":"6123:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6123:169:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6106:186:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1231,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"6310:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1233,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"6329:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1232,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"6319:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6319:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6310:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6338:27:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""},"value":"ERC20Votes: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""}],"id":1230,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6302:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6302:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1238,"nodeType":"ExpressionStatement","src":"6302:64:5"},{"expression":{"arguments":[{"id":1240,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"6386:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1241,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"6394:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1239,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"6376:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6376:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1243,"nodeType":"ExpressionStatement","src":"6376:28:5"}]},"documentation":{"id":1186,"nodeType":"StructuredDocumentation","src":"5766:66:5","text":" @dev Delegates votes from signer to `delegatee`"},"functionSelector":"c3cda520","id":1245,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"5846:13:5","nodeType":"FunctionDefinition","overrides":{"id":1200,"nodeType":"OverrideSpecifier","overrides":[],"src":"6010:8:5"},"parameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"delegatee","nameLocation":"5877:9:5","nodeType":"VariableDeclaration","scope":1245,"src":"5869:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"5869:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"nonce","nameLocation":"5904:5:5","nodeType":"VariableDeclaration","scope":1245,"src":"5896:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"5896:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"expiry","nameLocation":"5927:6:5","nodeType":"VariableDeclaration","scope":1245,"src":"5919:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"5919:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"v","nameLocation":"5949:1:5","nodeType":"VariableDeclaration","scope":1245,"src":"5943:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1193,"name":"uint8","nodeType":"ElementaryTypeName","src":"5943:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1196,"mutability":"mutable","name":"r","nameLocation":"5968:1:5","nodeType":"VariableDeclaration","scope":1245,"src":"5960:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5960:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1198,"mutability":"mutable","name":"s","nameLocation":"5987:1:5","nodeType":"VariableDeclaration","scope":1245,"src":"5979:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5979:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5859:135:5"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[],"src":"6019:0:5"},"scope":1596,"src":"5837:574:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1257,"nodeType":"Block","src":"6575:41:5","statements":[{"expression":{"expression":{"arguments":[{"id":1253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6597:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1252,"name":"uint224","nodeType":"ElementaryTypeName","src":"6597:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":1251,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6592:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6592:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6592:17:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1250,"id":1256,"nodeType":"Return","src":"6585:24:5"}]},"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"6417:91:5","text":" @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1)."},"id":1258,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"6522:10:5","nodeType":"FunctionDefinition","parameters":{"id":1247,"nodeType":"ParameterList","parameters":[],"src":"6532:2:5"},"returnParameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1258,"src":"6566:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1248,"name":"uint224","nodeType":"ElementaryTypeName","src":"6566:7:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"6565:9:5"},"scope":1596,"src":"6513:103:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[594],"body":{"id":1289,"nodeType":"Block","src":"6779:211:5","statements":[{"expression":{"arguments":[{"id":1270,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"6801:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1271,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"6810:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1267,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6789:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1596_$","typeString":"type(contract super ERC20Votes)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":594,"src":"6789:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6789:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1273,"nodeType":"ExpressionStatement","src":"6789:28:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1275,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"6835:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6835:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1277,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"6852:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint224_$","typeString":"function () view returns (uint224)"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6852:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"6835:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f766572666c6f77696e6720766f746573","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6866:50:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""},"value":"ERC20Votes: total supply risks overflowing votes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""}],"id":1274,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6827:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6827:90:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1282,"nodeType":"ExpressionStatement","src":"6827:90:5"},{"expression":{"arguments":[{"id":1284,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"6945:23:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1285,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"6970:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1286,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"6976:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1283,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"6928:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6928:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1288,"nodeType":"ExpressionStatement","src":"6928:55:5"}]},"documentation":{"id":1259,"nodeType":"StructuredDocumentation","src":"6622:78:5","text":" @dev Snapshots the totalSupply after it has been increased."},"id":1290,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"6714:5:5","nodeType":"FunctionDefinition","overrides":{"id":1265,"nodeType":"OverrideSpecifier","overrides":[],"src":"6770:8:5"},"parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"account","nameLocation":"6728:7:5","nodeType":"VariableDeclaration","scope":1290,"src":"6720:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"6720:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"amount","nameLocation":"6745:6:5","nodeType":"VariableDeclaration","scope":1290,"src":"6737:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"6737:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6719:33:5"},"returnParameters":{"id":1266,"nodeType":"ParameterList","parameters":[],"src":"6779:0:5"},"scope":1596,"src":"6705:285:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[666],"body":{"id":1312,"nodeType":"Block","src":"7153:116:5","statements":[{"expression":{"arguments":[{"id":1302,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"7175:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1303,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"7184:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1299,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7163:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1596_$","typeString":"type(contract super ERC20Votes)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":666,"src":"7163:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7163:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1305,"nodeType":"ExpressionStatement","src":"7163:28:5"},{"expression":{"arguments":[{"id":1307,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"7219:23:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1308,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"7244:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1309,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"7255:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1306,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"7202:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7202:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1311,"nodeType":"ExpressionStatement","src":"7202:60:5"}]},"documentation":{"id":1291,"nodeType":"StructuredDocumentation","src":"6996:78:5","text":" @dev Snapshots the totalSupply after it has been decreased."},"id":1313,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7088:5:5","nodeType":"FunctionDefinition","overrides":{"id":1297,"nodeType":"OverrideSpecifier","overrides":[],"src":"7144:8:5"},"parameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"account","nameLocation":"7102:7:5","nodeType":"VariableDeclaration","scope":1313,"src":"7094:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"7094:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"amount","nameLocation":"7119:6:5","nodeType":"VariableDeclaration","scope":1313,"src":"7111:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"7111:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7093:33:5"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[],"src":"7153:0:5"},"scope":1596,"src":"7079:190:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[776],"body":{"id":1342,"nodeType":"Block","src":"7536:127:5","statements":[{"expression":{"arguments":[{"id":1327,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"7572:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1328,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"7578:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1329,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"7582:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1324,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7546:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1596_$","typeString":"type(contract super ERC20Votes)"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":776,"src":"7546:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7546:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1331,"nodeType":"ExpressionStatement","src":"7546:43:5"},{"expression":{"arguments":[{"arguments":[{"id":1334,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"7627:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1333,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7617:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7617:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1337,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"7644:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1336,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7634:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7634:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1339,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"7649:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1332,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"7600:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7600:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1341,"nodeType":"ExpressionStatement","src":"7600:56:5"}]},"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"7275:129:5","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":1343,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"7418:19:5","nodeType":"FunctionDefinition","overrides":{"id":1322,"nodeType":"OverrideSpecifier","overrides":[],"src":"7527:8:5"},"parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"from","nameLocation":"7455:4:5","nodeType":"VariableDeclaration","scope":1343,"src":"7447:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"7447:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"to","nameLocation":"7477:2:5","nodeType":"VariableDeclaration","scope":1343,"src":"7469:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"7469:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"amount","nameLocation":"7497:6:5","nodeType":"VariableDeclaration","scope":1343,"src":"7489:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"7489:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7437:72:5"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"7536:0:5"},"scope":1596,"src":"7409:254:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1381,"nodeType":"Block","src":"7908:306:5","statements":[{"assignments":[1352],"declarations":[{"constant":false,"id":1352,"mutability":"mutable","name":"currentDelegate","nameLocation":"7926:15:5","nodeType":"VariableDeclaration","scope":1381,"src":"7918:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"7918:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1356,"initialValue":{"arguments":[{"id":1354,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"7954:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1353,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7944:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7944:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7918:46:5"},{"assignments":[1358],"declarations":[{"constant":false,"id":1358,"mutability":"mutable","name":"delegatorBalance","nameLocation":"7982:16:5","nodeType":"VariableDeclaration","scope":1381,"src":"7974:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1357,"name":"uint256","nodeType":"ElementaryTypeName","src":"7974:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1362,"initialValue":{"arguments":[{"id":1360,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"8011:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1359,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"8001:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8001:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7974:47:5"},{"expression":{"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1363,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"8031:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1365,"indexExpression":{"id":1364,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"8042:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8031:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1366,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"8055:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8031:33:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1368,"nodeType":"ExpressionStatement","src":"8031:33:5"},{"eventCall":{"arguments":[{"id":1370,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"8096:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1371,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"8107:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1372,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"8124:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1369,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"8080:15:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8080:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1374,"nodeType":"EmitStatement","src":"8075:59:5"},{"expression":{"arguments":[{"id":1376,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"8162:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1377,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"8179:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1378,"name":"delegatorBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"8190:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1375,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"8145:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8145:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1380,"nodeType":"ExpressionStatement","src":"8145:62:5"}]},"documentation":{"id":1344,"nodeType":"StructuredDocumentation","src":"7669:160:5","text":" @dev Change delegation for `delegator` to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":1382,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"7843:9:5","nodeType":"FunctionDefinition","parameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"delegator","nameLocation":"7861:9:5","nodeType":"VariableDeclaration","scope":1382,"src":"7853:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"7853:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"delegatee","nameLocation":"7880:9:5","nodeType":"VariableDeclaration","scope":1382,"src":"7872:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"7872:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7852:38:5"},"returnParameters":{"id":1350,"nodeType":"ParameterList","parameters":[],"src":"7908:0:5"},"scope":1596,"src":"7834:380:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1452,"nodeType":"Block","src":"8326:521:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1391,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"8340:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1392,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"8347:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8340:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1394,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"8354:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8363:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8354:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8340:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1451,"nodeType":"IfStatement","src":"8336:505:5","trueBody":{"id":1450,"nodeType":"Block","src":"8366:475:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1398,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"8384:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8399:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8391:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1399,"name":"address","nodeType":"ElementaryTypeName","src":"8391:7:5","typeDescriptions":{}}},"id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8391:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8384:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1423,"nodeType":"IfStatement","src":"8380:221:5","trueBody":{"id":1422,"nodeType":"Block","src":"8403:198:5","statements":[{"assignments":[1405,1407],"declarations":[{"constant":false,"id":1405,"mutability":"mutable","name":"oldWeight","nameLocation":"8430:9:5","nodeType":"VariableDeclaration","scope":1422,"src":"8422:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"8422:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"newWeight","nameLocation":"8449:9:5","nodeType":"VariableDeclaration","scope":1422,"src":"8441:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"8441:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1415,"initialValue":{"arguments":[{"baseExpression":{"id":1409,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"8479:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1411,"indexExpression":{"id":1410,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"8492:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8479:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1412,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"8498:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1413,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"8509:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1408,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"8462:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8462:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8421:95:5"},{"eventCall":{"arguments":[{"id":1417,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"8560:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1418,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"8565:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1419,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"8576:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1416,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"8539:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8539:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1421,"nodeType":"EmitStatement","src":"8534:52:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1424,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"8619:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8634:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8626:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1425,"name":"address","nodeType":"ElementaryTypeName","src":"8626:7:5","typeDescriptions":{}}},"id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8626:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8619:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1449,"nodeType":"IfStatement","src":"8615:216:5","trueBody":{"id":1448,"nodeType":"Block","src":"8638:193:5","statements":[{"assignments":[1431,1433],"declarations":[{"constant":false,"id":1431,"mutability":"mutable","name":"oldWeight","nameLocation":"8665:9:5","nodeType":"VariableDeclaration","scope":1448,"src":"8657:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"8657:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"newWeight","nameLocation":"8684:9:5","nodeType":"VariableDeclaration","scope":1448,"src":"8676:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"8676:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1441,"initialValue":{"arguments":[{"baseExpression":{"id":1435,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"8714:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1437,"indexExpression":{"id":1436,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"8727:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8714:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1438,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"8733:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1439,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"8739:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1434,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"8697:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8697:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8656:90:5"},{"eventCall":{"arguments":[{"id":1443,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"8790:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1444,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"8795:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1445,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"8806:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1442,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"8769:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8769:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1447,"nodeType":"EmitStatement","src":"8764:52:5"}]}}]}}]},"id":1453,"implemented":true,"kind":"function","modifiers":[],"name":"_moveVotingPower","nameLocation":"8229:16:5","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"src","nameLocation":"8263:3:5","nodeType":"VariableDeclaration","scope":1453,"src":"8255:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"8255:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"dst","nameLocation":"8284:3:5","nodeType":"VariableDeclaration","scope":1453,"src":"8276:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"8276:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"amount","nameLocation":"8305:6:5","nodeType":"VariableDeclaration","scope":1453,"src":"8297:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"8297:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8245:72:5"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"8326:0:5"},"scope":1596,"src":"8220:627:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1552,"nodeType":"Block","src":"9061:508:5","statements":[{"assignments":[1477],"declarations":[{"constant":false,"id":1477,"mutability":"mutable","name":"pos","nameLocation":"9079:3:5","nodeType":"VariableDeclaration","scope":1552,"src":"9071:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1476,"name":"uint256","nodeType":"ElementaryTypeName","src":"9071:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1480,"initialValue":{"expression":{"id":1478,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"9085:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9085:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9071:26:5"},{"assignments":[1483],"declarations":[{"constant":false,"id":1483,"mutability":"mutable","name":"oldCkpt","nameLocation":"9126:7:5","nodeType":"VariableDeclaration","scope":1552,"src":"9108:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1482,"nodeType":"UserDefinedTypeName","pathNode":{"id":1481,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":916,"src":"9108:10:5"},"referencedDeclaration":916,"src":"9108:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"id":1498,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1484,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"9136:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9143:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9136:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1492,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"9180:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1493,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"9187:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9193:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9187:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1491,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"9166:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$916_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9166:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9136:59:5","trueExpression":{"arguments":[{"hexValue":"30","id":1488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9158:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9161:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1487,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"9147:10:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$916_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9147:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"nodeType":"VariableDeclarationStatement","src":"9108:87:5"},{"expression":{"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1499,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"9206:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1500,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"9218:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"id":1501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":915,"src":"9218:13:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9206:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1503,"nodeType":"ExpressionStatement","src":"9206:25:5"},{"expression":{"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1504,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"9241:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1506,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"9256:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1507,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"9267:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1505,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"9253:2:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9253:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9241:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1510,"nodeType":"ExpressionStatement","src":"9241:32:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1511,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"9288:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9294:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9288:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1514,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"9299:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"id":1515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":913,"src":"9299:17:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1516,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9320:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"9320:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9299:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9288:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1550,"nodeType":"Block","src":"9432:131:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1540,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9498:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"9498:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1538,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"9480:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5632_$","typeString":"type(library SafeCast)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":4794,"src":"9480:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9480:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":1545,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"9539:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1543,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"9520:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5632_$","typeString":"type(library SafeCast)"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":4194,"src":"9520:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9520:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":1537,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"9457:10:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$916_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["fromBlock","votes"],"nodeType":"FunctionCall","src":"9457:94:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$916_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}],"expression":{"id":1534,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"9446:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"9446:10:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$916_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,struct ERC20Votes.Checkpoint storage ref)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9446:106:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1549,"nodeType":"ExpressionStatement","src":"9446:106:5"}]},"id":1551,"nodeType":"IfStatement","src":"9284:279:5","trueBody":{"id":1533,"nodeType":"Block","src":"9334:92:5","statements":[{"expression":{"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1521,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"9362:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1522,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"9369:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9375:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9369:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1520,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"9348:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$916_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9348:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":915,"src":"9348:35:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1529,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"9405:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1527,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"9386:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5632_$","typeString":"type(library SafeCast)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":4194,"src":"9386:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9386:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9348:67:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1532,"nodeType":"ExpressionStatement","src":"9348:67:5"}]}}]},"id":1553,"implemented":true,"kind":"function","modifiers":[],"name":"_writeCheckpoint","nameLocation":"8862:16:5","nodeType":"FunctionDefinition","parameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"ckpts","nameLocation":"8909:5:5","nodeType":"VariableDeclaration","scope":1553,"src":"8888:26:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1455,"nodeType":"UserDefinedTypeName","pathNode":{"id":1454,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":916,"src":"8888:10:5"},"referencedDeclaration":916,"src":"8888:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1456,"nodeType":"ArrayTypeName","src":"8888:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1467,"mutability":"mutable","name":"op","nameLocation":"8974:2:5","nodeType":"VariableDeclaration","scope":1553,"src":"8924:52:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":1466,"nodeType":"FunctionTypeName","parameterTypes":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1466,"src":"8933:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"8933:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1466,"src":"8942:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"8942:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8932:18:5"},"returnParameterTypes":{"id":1465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1466,"src":"8965:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"8965:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8964:9:5"},"src":"8924:52:5","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":1469,"mutability":"mutable","name":"delta","nameLocation":"8994:5:5","nodeType":"VariableDeclaration","scope":1553,"src":"8986:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"8986:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8878:127:5"},"returnParameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"oldWeight","nameLocation":"9031:9:5","nodeType":"VariableDeclaration","scope":1553,"src":"9023:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"9023:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"newWeight","nameLocation":"9050:9:5","nodeType":"VariableDeclaration","scope":1553,"src":"9042:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"9042:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9022:38:5"},"scope":1596,"src":"8853:716:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1566,"nodeType":"Block","src":"9642:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1562,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"9659:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1563,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"9663:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9659:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1561,"id":1565,"nodeType":"Return","src":"9652:12:5"}]},"id":1567,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"9584:4:5","nodeType":"FunctionDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"a","nameLocation":"9597:1:5","nodeType":"VariableDeclaration","scope":1567,"src":"9589:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1554,"name":"uint256","nodeType":"ElementaryTypeName","src":"9589:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1557,"mutability":"mutable","name":"b","nameLocation":"9608:1:5","nodeType":"VariableDeclaration","scope":1567,"src":"9600:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"9600:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9588:22:5"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1567,"src":"9633:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1559,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9632:9:5"},"scope":1596,"src":"9575:96:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1580,"nodeType":"Block","src":"9749:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1576,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"9766:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1577,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"9770:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9766:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1575,"id":1579,"nodeType":"Return","src":"9759:12:5"}]},"id":1581,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"9686:9:5","nodeType":"FunctionDefinition","parameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"a","nameLocation":"9704:1:5","nodeType":"VariableDeclaration","scope":1581,"src":"9696:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"9696:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1571,"mutability":"mutable","name":"b","nameLocation":"9715:1:5","nodeType":"VariableDeclaration","scope":1581,"src":"9707:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"9707:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9695:22:5"},"returnParameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1581,"src":"9740:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"9740:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9739:9:5"},"scope":1596,"src":"9677:101:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1594,"nodeType":"Block","src":"9897:126:5","statements":[{"AST":{"nodeType":"YulBlock","src":"9916:101:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9937:1:5","type":"","value":"0"},{"name":"ckpts.slot","nodeType":"YulIdentifier","src":"9940:10:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9930:6:5"},"nodeType":"YulFunctionCall","src":"9930:21:5"},"nodeType":"YulExpressionStatement","src":"9930:21:5"},{"nodeType":"YulAssignment","src":"9964:43:5","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9993:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9996:4:5","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9983:9:5"},"nodeType":"YulFunctionCall","src":"9983:18:5"},{"name":"pos","nodeType":"YulIdentifier","src":"10003:3:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9979:3:5"},"nodeType":"YulFunctionCall","src":"9979:28:5"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"9964:11:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1585,"isOffset":false,"isSlot":true,"src":"9940:10:5","suffix":"slot","valueSize":1},{"declaration":1587,"isOffset":false,"isSlot":false,"src":"10003:3:5","valueSize":1},{"declaration":1591,"isOffset":false,"isSlot":true,"src":"9964:11:5","suffix":"slot","valueSize":1}],"id":1593,"nodeType":"InlineAssembly","src":"9907:110:5"}]},"id":1595,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"9793:13:5","nodeType":"FunctionDefinition","parameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"ckpts","nameLocation":"9828:5:5","nodeType":"VariableDeclaration","scope":1595,"src":"9807:26:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1583,"nodeType":"UserDefinedTypeName","pathNode":{"id":1582,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":916,"src":"9807:10:5"},"referencedDeclaration":916,"src":"9807:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1584,"nodeType":"ArrayTypeName","src":"9807:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$916_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1587,"mutability":"mutable","name":"pos","nameLocation":"9843:3:5","nodeType":"VariableDeclaration","scope":1595,"src":"9835:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"9835:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9806:41:5"},"returnParameters":{"id":1592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"result","nameLocation":"9889:6:5","nodeType":"VariableDeclaration","scope":1595,"src":"9870:25:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1590,"nodeType":"UserDefinedTypeName","pathNode":{"id":1589,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":916,"src":"9870:10:5"},"referencedDeclaration":916,"src":"9870:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$916_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"9869:27:5"},"scope":1596,"src":"9784:239:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1597,"src":"1253:8772:5","usedErrors":[]}],"src":"121:9905:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[855],"IERC20Metadata":[1621]},"id":1622,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1598,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1599,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1622,"sourceUnit":856,"src":"135:23:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1601,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":855,"src":"305:6:6"},"id":1602,"nodeType":"InheritanceSpecifier","src":"305:6:6"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"160:116:6","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1621,"linearizedBaseContracts":[1621,855],"name":"IERC20Metadata","nameLocation":"287:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"318:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1608,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:6","nodeType":"FunctionDefinition","parameters":{"id":1604,"nodeType":"ParameterList","parameters":[],"src":"390:2:6"},"returnParameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1608,"src":"416:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1605,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:6"},"scope":1621,"src":"377:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1609,"nodeType":"StructuredDocumentation","src":"437:56:6","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1614,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:6","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[],"src":"513:2:6"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1614,"src":"539:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1611,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:6"},"scope":1621,"src":"498:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"560:65:6","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1620,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:6","nodeType":"FunctionDefinition","parameters":{"id":1616,"nodeType":"ParameterList","parameters":[],"src":"647:2:6"},"returnParameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1620,"src":"673:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1617,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:6"},"scope":1621,"src":"630:50:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1622,"src":"277:405:6","usedErrors":[]}],"src":"110:573:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","exportedSymbols":{"Context":[2462],"Counters":[2536],"ECDSA":[3072],"EIP712":[3226],"ERC20":[777],"ERC20Permit":[1793],"IERC20":[855],"IERC20Metadata":[1621],"IERC20Permit":[1829],"Math":[4091],"Strings":[2711]},"id":1794,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1623,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"./draft-IERC20Permit.sol","id":1624,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1794,"sourceUnit":1830,"src":"153:34:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1625,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1794,"sourceUnit":778,"src":"188:22:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1626,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1794,"sourceUnit":3073,"src":"211:47:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1627,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1794,"sourceUnit":3227,"src":"259:48:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":1628,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1794,"sourceUnit":2537,"src":"308:37:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1630,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"898:5:7"},"id":1631,"nodeType":"InheritanceSpecifier","src":"898:5:7"},{"baseName":{"id":1632,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":1829,"src":"905:12:7"},"id":1633,"nodeType":"InheritanceSpecifier","src":"905:12:7"},{"baseName":{"id":1634,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":3226,"src":"919:6:7"},"id":1635,"nodeType":"InheritanceSpecifier","src":"919:6:7"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1629,"nodeType":"StructuredDocumentation","src":"347:517:7","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"},"fullyImplemented":false,"id":1793,"linearizedBaseContracts":[1793,3226,1829,777,1621,855,2462],"name":"ERC20Permit","nameLocation":"883:11:7","nodeType":"ContractDefinition","nodes":[{"id":1639,"libraryName":{"id":1636,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":2536,"src":"938:8:7"},"nodeType":"UsingForDirective","src":"932:36:7","typeName":{"id":1638,"nodeType":"UserDefinedTypeName","pathNode":{"id":1637,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":2468,"src":"951:16:7"},"referencedDeclaration":2468,"src":"951:16:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":1644,"mutability":"mutable","name":"_nonces","nameLocation":"1019:7:7","nodeType":"VariableDeclaration","scope":1793,"src":"974:52:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2468_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":1643,"keyType":{"id":1640,"name":"address","nodeType":"ElementaryTypeName","src":"982:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"974:36:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2468_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueType":{"id":1642,"nodeType":"UserDefinedTypeName","pathNode":{"id":1641,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":2468,"src":"993:16:7"},"referencedDeclaration":2468,"src":"993:16:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"constant":true,"id":1649,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1110:16:7","nodeType":"VariableDeclaration","scope":1793,"src":"1085:147:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1085:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1147:84:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1646,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1137:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1137:95:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"1238:254:7","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":1652,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1565:32:7","nodeType":"VariableDeclaration","scope":1793,"src":"1549:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1549:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":1662,"nodeType":"Block","src":"1879:2:7","statements":[]},"documentation":{"id":1653,"nodeType":"StructuredDocumentation","src":"1604:220:7","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1663,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1658,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"1868:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1874:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1660,"kind":"baseConstructorSpecifier","modifierName":{"id":1657,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":3226,"src":"1861:6:7"},"nodeType":"ModifierInvocation","src":"1861:17:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"mutability":"mutable","name":"name","nameLocation":"1855:4:7","nodeType":"VariableDeclaration","scope":1663,"src":"1841:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1654,"name":"string","nodeType":"ElementaryTypeName","src":"1841:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1840:20:7"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[],"src":"1879:0:7"},"scope":1793,"src":"1829:52:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1814],"body":{"id":1735,"nodeType":"Block","src":"2140:428:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1683,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2158:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2158:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1685,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2177:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2158:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2187:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":1682,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2150:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2150:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1689,"nodeType":"ExpressionStatement","src":"2150:69:7"},{"assignments":[1691],"declarations":[{"constant":false,"id":1691,"mutability":"mutable","name":"structHash","nameLocation":"2238:10:7","nodeType":"VariableDeclaration","scope":1735,"src":"2230:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1690,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2230:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1705,"initialValue":{"arguments":[{"arguments":[{"id":1695,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"2272:16:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1696,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2290:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1697,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2297:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"2306:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1700,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2323:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1699,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"2313:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2313:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1702,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2331:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1693,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2261:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2261:10:7","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:79:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1692,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2251:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2251:90:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2230:111:7"},{"assignments":[1707],"declarations":[{"constant":false,"id":1707,"mutability":"mutable","name":"hash","nameLocation":"2360:4:7","nodeType":"VariableDeclaration","scope":1735,"src":"2352:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2352:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1711,"initialValue":{"arguments":[{"id":1709,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"2384:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1708,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"2367:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2367:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2352:43:7"},{"assignments":[1713],"declarations":[{"constant":false,"id":1713,"mutability":"mutable","name":"signer","nameLocation":"2414:6:7","nodeType":"VariableDeclaration","scope":1735,"src":"2406:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"2406:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1721,"initialValue":{"arguments":[{"id":1716,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"2437:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1717,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"2443:1:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1718,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"2446:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1719,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"2449:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1714,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"2423:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3072_$","typeString":"type(library ECDSA)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3012,"src":"2423:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2423:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2406:45:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1723,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"2469:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1724,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2479:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2469:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2486:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":1722,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2461:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2461:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1728,"nodeType":"ExpressionStatement","src":"2461:58:7"},{"expression":{"arguments":[{"id":1730,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2539:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1731,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2546:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"2555:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1729,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"2530:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2530:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1734,"nodeType":"ExpressionStatement","src":"2530:31:7"}]},"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"1887:50:7","text":" @dev See {IERC20Permit-permit}."},"functionSelector":"d505accf","id":1736,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1951:6:7","nodeType":"FunctionDefinition","overrides":{"id":1680,"nodeType":"OverrideSpecifier","overrides":[],"src":"2131:8:7"},"parameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"owner","nameLocation":"1975:5:7","nodeType":"VariableDeclaration","scope":1736,"src":"1967:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"1967:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"spender","nameLocation":"1998:7:7","nodeType":"VariableDeclaration","scope":1736,"src":"1990:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"1990:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1670,"mutability":"mutable","name":"value","nameLocation":"2023:5:7","nodeType":"VariableDeclaration","scope":1736,"src":"2015:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"2015:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1672,"mutability":"mutable","name":"deadline","nameLocation":"2046:8:7","nodeType":"VariableDeclaration","scope":1736,"src":"2038:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"2038:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1674,"mutability":"mutable","name":"v","nameLocation":"2070:1:7","nodeType":"VariableDeclaration","scope":1736,"src":"2064:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1673,"name":"uint8","nodeType":"ElementaryTypeName","src":"2064:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1676,"mutability":"mutable","name":"r","nameLocation":"2089:1:7","nodeType":"VariableDeclaration","scope":1736,"src":"2081:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2081:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"s","nameLocation":"2108:1:7","nodeType":"VariableDeclaration","scope":1736,"src":"2100:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2100:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1957:158:7"},"returnParameters":{"id":1681,"nodeType":"ParameterList","parameters":[],"src":"2140:0:7"},"scope":1793,"src":"1942:626:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1822],"body":{"id":1751,"nodeType":"Block","src":"2707:48:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1745,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"2724:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2468_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1747,"indexExpression":{"id":1746,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"2732:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2724:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage","typeString":"struct Counters.Counter storage ref"}},"id":1748,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2480,"src":"2724:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2468_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2468_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2724:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1744,"id":1750,"nodeType":"Return","src":"2717:31:7"}]},"documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"2574:50:7","text":" @dev See {IERC20Permit-nonces}."},"functionSelector":"7ecebe00","id":1752,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2638:6:7","nodeType":"FunctionDefinition","overrides":{"id":1741,"nodeType":"OverrideSpecifier","overrides":[],"src":"2680:8:7"},"parameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"owner","nameLocation":"2653:5:7","nodeType":"VariableDeclaration","scope":1752,"src":"2645:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1738,"name":"address","nodeType":"ElementaryTypeName","src":"2645:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2644:15:7"},"returnParameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1752,"src":"2698:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1742,"name":"uint256","nodeType":"ElementaryTypeName","src":"2698:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2697:9:7"},"scope":1793,"src":"2629:126:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1828],"body":{"id":1762,"nodeType":"Block","src":"2948:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1759,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"2965:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2965:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1758,"id":1761,"nodeType":"Return","src":"2958:27:7"}]},"documentation":{"id":1753,"nodeType":"StructuredDocumentation","src":"2761:60:7","text":" @dev See {IERC20Permit-DOMAIN_SEPARATOR}."},"functionSelector":"3644e515","id":1763,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2888:16:7","nodeType":"FunctionDefinition","overrides":{"id":1755,"nodeType":"OverrideSpecifier","overrides":[],"src":"2921:8:7"},"parameters":{"id":1754,"nodeType":"ParameterList","parameters":[],"src":"2904:2:7"},"returnParameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1763,"src":"2939:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2939:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2938:9:7"},"scope":1793,"src":"2879:113:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1791,"nodeType":"Block","src":"3200:126:7","statements":[{"assignments":[1775],"declarations":[{"constant":false,"id":1775,"mutability":"mutable","name":"nonce","nameLocation":"3235:5:7","nodeType":"VariableDeclaration","scope":1791,"src":"3210:30:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1774,"nodeType":"UserDefinedTypeName","pathNode":{"id":1773,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":2468,"src":"3210:16:7"},"referencedDeclaration":2468,"src":"3210:16:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":1779,"initialValue":{"baseExpression":{"id":1776,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"3243:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2468_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1778,"indexExpression":{"id":1777,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"3251:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3243:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3210:47:7"},{"expression":{"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1780,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"3267:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1781,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"3277:5:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2480,"src":"3277:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2468_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2468_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3277:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3267:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1785,"nodeType":"ExpressionStatement","src":"3267:25:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1786,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"3302:5:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2494,"src":"3302:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2468_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2468_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3302:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1790,"nodeType":"ExpressionStatement","src":"3302:17:7"}]},"documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"2998:120:7","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":1792,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3132:9:7","nodeType":"FunctionDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"owner","nameLocation":"3150:5:7","nodeType":"VariableDeclaration","scope":1792,"src":"3142:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"3142:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3141:15:7"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"current","nameLocation":"3191:7:7","nodeType":"VariableDeclaration","scope":1792,"src":"3183:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1768,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3182:17:7"},"scope":1793,"src":"3123:203:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1794,"src":"865:2463:7","usedErrors":[]}],"src":"128:3201:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1829]},"id":1830,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1795,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1796,"nodeType":"StructuredDocumentation","src":"139:480:8","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":1829,"linearizedBaseContracts":[1829],"name":"IERC20Permit","nameLocation":"630:12:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"649:792:8","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":1814,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:8","nodeType":"FunctionDefinition","parameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"owner","nameLocation":"1479:5:8","nodeType":"VariableDeclaration","scope":1814,"src":"1471:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1798,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"spender","nameLocation":"1502:7:8","nodeType":"VariableDeclaration","scope":1814,"src":"1494:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1800,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1803,"mutability":"mutable","name":"value","nameLocation":"1527:5:8","nodeType":"VariableDeclaration","scope":1814,"src":"1519:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1802,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1805,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:8","nodeType":"VariableDeclaration","scope":1814,"src":"1542:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1807,"mutability":"mutable","name":"v","nameLocation":"1574:1:8","nodeType":"VariableDeclaration","scope":1814,"src":"1568:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1806,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1809,"mutability":"mutable","name":"r","nameLocation":"1593:1:8","nodeType":"VariableDeclaration","scope":1814,"src":"1585:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1811,"mutability":"mutable","name":"s","nameLocation":"1612:1:8","nodeType":"VariableDeclaration","scope":1814,"src":"1604:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:8"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[],"src":"1628:0:8"},"scope":1829,"src":"1446:183:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1815,"nodeType":"StructuredDocumentation","src":"1635:294:8","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1822,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:8","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1817,"mutability":"mutable","name":"owner","nameLocation":"1958:5:8","nodeType":"VariableDeclaration","scope":1822,"src":"1950:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1816,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:8"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1822,"src":"1988:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:8"},"scope":1829,"src":"1934:63:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"2003:128:8","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1828,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:8","nodeType":"FunctionDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[],"src":"2214:2:8"},"returnParameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1828,"src":"2240:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:8"},"scope":1829,"src":"2189:60:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1830,"src":"620:1631:8","usedErrors":[]}],"src":"114:2138:8"},"id":8},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[2440],"IERC20":[855],"IERC20Permit":[1829],"SafeERC20":[2110]},"id":2111,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1831,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1832,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2111,"sourceUnit":856,"src":"140:23:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":1833,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2111,"sourceUnit":1830,"src":"164:46:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1834,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2111,"sourceUnit":2441,"src":"211:36:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1835,"nodeType":"StructuredDocumentation","src":"249:457:9","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2110,"linearizedBaseContracts":[2110],"name":"SafeERC20","nameLocation":"715:9:9","nodeType":"ContractDefinition","nodes":[{"id":1838,"libraryName":{"id":1836,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":2440,"src":"737:7:9"},"nodeType":"UsingForDirective","src":"731:26:9","typeName":{"id":1837,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":1860,"nodeType":"Block","src":"865:103:9","statements":[{"expression":{"arguments":[{"id":1849,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"895:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1852,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"925:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":822,"src":"925:14:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"925:23:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1855,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"950:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"954:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1850,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"902:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"902:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1848,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"875:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$855_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"875:86:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1859,"nodeType":"ExpressionStatement","src":"875:86:9"}]},"id":1861,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:9","nodeType":"FunctionDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"token","nameLocation":"801:5:9","nodeType":"VariableDeclaration","scope":1861,"src":"794:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"},"typeName":{"id":1840,"nodeType":"UserDefinedTypeName","pathNode":{"id":1839,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":855,"src":"794:6:9"},"referencedDeclaration":855,"src":"794:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1843,"mutability":"mutable","name":"to","nameLocation":"824:2:9","nodeType":"VariableDeclaration","scope":1861,"src":"816:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1842,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"value","nameLocation":"844:5:9","nodeType":"VariableDeclaration","scope":1861,"src":"836:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:9"},"returnParameters":{"id":1847,"nodeType":"ParameterList","parameters":[],"src":"865:0:9"},"scope":2110,"src":"763:205:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1886,"nodeType":"Block","src":"1102:113:9","statements":[{"expression":{"arguments":[{"id":1874,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"1132:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1877,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"1162:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":854,"src":"1162:18:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1162:27:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1880,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"1191:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1881,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"1197:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"1201:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1875,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1139:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1139:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1873,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"1112:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$855_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1112:96:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1885,"nodeType":"ExpressionStatement","src":"1112:96:9"}]},"id":1887,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:9","nodeType":"FunctionDefinition","parameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1864,"mutability":"mutable","name":"token","nameLocation":"1016:5:9","nodeType":"VariableDeclaration","scope":1887,"src":"1009:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"},"typeName":{"id":1863,"nodeType":"UserDefinedTypeName","pathNode":{"id":1862,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":855,"src":"1009:6:9"},"referencedDeclaration":855,"src":"1009:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1866,"mutability":"mutable","name":"from","nameLocation":"1039:4:9","nodeType":"VariableDeclaration","scope":1887,"src":"1031:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1865,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1868,"mutability":"mutable","name":"to","nameLocation":"1061:2:9","nodeType":"VariableDeclaration","scope":1887,"src":"1053:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1867,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1870,"mutability":"mutable","name":"value","nameLocation":"1081:5:9","nodeType":"VariableDeclaration","scope":1887,"src":"1073:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:9"},"returnParameters":{"id":1872,"nodeType":"ParameterList","parameters":[],"src":"1102:0:9"},"scope":2110,"src":"974:241:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1930,"nodeType":"Block","src":"1581:497:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"1830:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1902,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1907,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1870:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2110","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2110","typeString":"library SafeERC20"}],"id":1906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1905,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:9","typeDescriptions":{}}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1862:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1909,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"1877:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1903,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"1846:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":832,"src":"1846:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1846:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":1898,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1808:163:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1917,"nodeType":"ExpressionStatement","src":"1808:163:9"},{"expression":{"arguments":[{"id":1919,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"2001:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1922,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"2031:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":842,"src":"2031:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2031:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1925,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"2055:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"2064:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1920,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2008:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2008:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1918,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"1981:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$855_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1981:90:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1929,"nodeType":"ExpressionStatement","src":"1981:90:9"}]},"documentation":{"id":1888,"nodeType":"StructuredDocumentation","src":"1221:249:9","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":1931,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:9","nodeType":"FunctionDefinition","parameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"token","nameLocation":"1512:5:9","nodeType":"VariableDeclaration","scope":1931,"src":"1505:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"},"typeName":{"id":1890,"nodeType":"UserDefinedTypeName","pathNode":{"id":1889,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":855,"src":"1505:6:9"},"referencedDeclaration":855,"src":"1505:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"spender","nameLocation":"1535:7:9","nodeType":"VariableDeclaration","scope":1931,"src":"1527:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1892,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"value","nameLocation":"1560:5:9","nodeType":"VariableDeclaration","scope":1931,"src":"1552:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:9"},"returnParameters":{"id":1897,"nodeType":"ParameterList","parameters":[],"src":"1581:0:9"},"scope":2110,"src":"1475:603:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1966,"nodeType":"Block","src":"2200:194:9","statements":[{"assignments":[1942],"declarations":[{"constant":false,"id":1942,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:9","nodeType":"VariableDeclaration","scope":1966,"src":"2210:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1953,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1947,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2257:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2110","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2110","typeString":"library SafeERC20"}],"id":1946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1945,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:9","typeDescriptions":{}}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2249:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1949,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"2264:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1943,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"2233:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":832,"src":"2233:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2233:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"2275:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:9"},{"expression":{"arguments":[{"id":1955,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"2310:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1958,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"2340:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":842,"src":"2340:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2340:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1961,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"2364:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1962,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"2373:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1956,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2317:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1954,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"2290:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$855_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2290:97:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1965,"nodeType":"ExpressionStatement","src":"2290:97:9"}]},"id":1967,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:9","nodeType":"FunctionDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"token","nameLocation":"2131:5:9","nodeType":"VariableDeclaration","scope":1967,"src":"2124:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"},"typeName":{"id":1933,"nodeType":"UserDefinedTypeName","pathNode":{"id":1932,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":855,"src":"2124:6:9"},"referencedDeclaration":855,"src":"2124:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1936,"mutability":"mutable","name":"spender","nameLocation":"2154:7:9","nodeType":"VariableDeclaration","scope":1967,"src":"2146:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1935,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"value","nameLocation":"2179:5:9","nodeType":"VariableDeclaration","scope":1967,"src":"2171:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:9"},"returnParameters":{"id":1940,"nodeType":"ParameterList","parameters":[],"src":"2200:0:9"},"scope":2110,"src":"2084:310:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2014,"nodeType":"Block","src":"2516:370:9","statements":[{"id":2013,"nodeType":"UncheckedBlock","src":"2526:354:9","statements":[{"assignments":[1978],"declarations":[{"constant":false,"id":1978,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:9","nodeType":"VariableDeclaration","scope":2013,"src":"2550:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1977,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1987,"initialValue":{"arguments":[{"arguments":[{"id":1983,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2597:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2110","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2110","typeString":"library SafeERC20"}],"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:9","typeDescriptions":{}}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2589:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1985,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"2604:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1979,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"2573:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":832,"src":"2573:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1989,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"2634:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"2650:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1988,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2626:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1994,"nodeType":"ExpressionStatement","src":"2626:75:9"},{"assignments":[1996],"declarations":[{"constant":false,"id":1996,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:9","nodeType":"VariableDeclaration","scope":2013,"src":"2715:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2000,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1997,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"2738:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"2753:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:9"},{"expression":{"arguments":[{"id":2002,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"2792:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":2005,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"2822:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":842,"src":"2822:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2822:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2008,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"2846:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2009,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"2855:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2003,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2799:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2799:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2001,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"2772:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$855_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2772:97:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2012,"nodeType":"ExpressionStatement","src":"2772:97:9"}]}]},"id":2015,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:9","nodeType":"FunctionDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"token","nameLocation":"2447:5:9","nodeType":"VariableDeclaration","scope":2015,"src":"2440:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"},"typeName":{"id":1969,"nodeType":"UserDefinedTypeName","pathNode":{"id":1968,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":855,"src":"2440:6:9"},"referencedDeclaration":855,"src":"2440:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"spender","nameLocation":"2470:7:9","nodeType":"VariableDeclaration","scope":2015,"src":"2462:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1971,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1974,"mutability":"mutable","name":"value","nameLocation":"2495:5:9","nodeType":"VariableDeclaration","scope":2015,"src":"2487:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:9"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[],"src":"2516:0:9"},"scope":2110,"src":"2400:486:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2070,"nodeType":"Block","src":"3107:257:9","statements":[{"assignments":[2036],"declarations":[{"constant":false,"id":2036,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:9","nodeType":"VariableDeclaration","scope":2070,"src":"3117:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2041,"initialValue":{"arguments":[{"id":2039,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"3152:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2037,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"3139:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1829","typeString":"contract IERC20Permit"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1822,"src":"3139:12:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3139:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:9"},{"expression":{"arguments":[{"id":2045,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"3181:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2046,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"3188:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"3197:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2048,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"3204:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2049,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"3214:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2050,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"3217:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2051,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"3220:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2042,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"3168:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1829","typeString":"contract IERC20Permit"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":1814,"src":"3168:12:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3168:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2053,"nodeType":"ExpressionStatement","src":"3168:54:9"},{"assignments":[2055],"declarations":[{"constant":false,"id":2055,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:9","nodeType":"VariableDeclaration","scope":2070,"src":"3232:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2054,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2060,"initialValue":{"arguments":[{"id":2058,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"3266:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2056,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"3253:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1829","typeString":"contract IERC20Permit"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1822,"src":"3253:12:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3253:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2062,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"3290:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2063,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"3304:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":2061,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3282:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3282:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2069,"nodeType":"ExpressionStatement","src":"3282:75:9"}]},"id":2071,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:9","nodeType":"FunctionDefinition","parameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"token","nameLocation":"2934:5:9","nodeType":"VariableDeclaration","scope":2071,"src":"2921:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1829","typeString":"contract IERC20Permit"},"typeName":{"id":2017,"nodeType":"UserDefinedTypeName","pathNode":{"id":2016,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":1829,"src":"2921:12:9"},"referencedDeclaration":1829,"src":"2921:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1829","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":2020,"mutability":"mutable","name":"owner","nameLocation":"2957:5:9","nodeType":"VariableDeclaration","scope":2071,"src":"2949:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2019,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2022,"mutability":"mutable","name":"spender","nameLocation":"2980:7:9","nodeType":"VariableDeclaration","scope":2071,"src":"2972:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2021,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2024,"mutability":"mutable","name":"value","nameLocation":"3005:5:9","nodeType":"VariableDeclaration","scope":2071,"src":"2997:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2023,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2026,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:9","nodeType":"VariableDeclaration","scope":2071,"src":"3020:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2025,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2028,"mutability":"mutable","name":"v","nameLocation":"3052:1:9","nodeType":"VariableDeclaration","scope":2071,"src":"3046:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2027,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2030,"mutability":"mutable","name":"r","nameLocation":"3071:1:9","nodeType":"VariableDeclaration","scope":2071,"src":"3063:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2032,"mutability":"mutable","name":"s","nameLocation":"3090:1:9","nodeType":"VariableDeclaration","scope":2071,"src":"3082:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:9"},"returnParameters":{"id":2034,"nodeType":"ParameterList","parameters":[],"src":"3107:0:9"},"scope":2110,"src":"2892:472:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2108,"nodeType":"Block","src":"3817:636:9","statements":[{"assignments":[2081],"declarations":[{"constant":false,"id":2081,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:9","nodeType":"VariableDeclaration","scope":2108,"src":"4166:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2080,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2090,"initialValue":{"arguments":[{"id":2087,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"4220:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":2084,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"4200:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}],"id":2083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2082,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:9","typeDescriptions":{}}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":2200,"src":"4192:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2091,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"4275:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4275:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2107,"nodeType":"IfStatement","src":"4271:176:9","trueBody":{"id":2106,"nodeType":"Block","src":"4298:149:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2098,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"4370:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2099,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:9","typeDescriptions":{}}}],"id":2101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2096,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4359:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"4359:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4359:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":2095,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4351:85:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2105,"nodeType":"ExpressionStatement","src":"4351:85:9"}]}}]},"documentation":{"id":2072,"nodeType":"StructuredDocumentation","src":"3370:372:9","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":2109,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:9","nodeType":"FunctionDefinition","parameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"token","nameLocation":"3783:5:9","nodeType":"VariableDeclaration","scope":2109,"src":"3776:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"},"typeName":{"id":2074,"nodeType":"UserDefinedTypeName","pathNode":{"id":2073,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":855,"src":"3776:6:9"},"referencedDeclaration":855,"src":"3776:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2077,"mutability":"mutable","name":"data","nameLocation":"3803:4:9","nodeType":"VariableDeclaration","scope":2109,"src":"3790:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2076,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:9"},"returnParameters":{"id":2079,"nodeType":"ParameterList","parameters":[],"src":"3817:0:9"},"scope":2110,"src":"3747:706:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2111,"src":"707:3748:9","usedErrors":[]}],"src":"115:4341:9"},"id":9},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2440]},"id":2441,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2112,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2113,"nodeType":"StructuredDocumentation","src":"126:67:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2440,"linearizedBaseContracts":[2440],"name":"Address","nameLocation":"202:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2127,"nodeType":"Block","src":"1241:254:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2121,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"1465:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2120,"id":2126,"nodeType":"Return","src":"1458:30:10"}]},"documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"216:954:10","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2128,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:10","nodeType":"FunctionDefinition","parameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"account","nameLocation":"1203:7:10","nodeType":"VariableDeclaration","scope":2128,"src":"1195:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2115,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:10"},"returnParameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2128,"src":"1235:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2118,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:10"},"scope":2440,"src":"1175:320:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2161,"nodeType":"Block","src":"2483:241:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2139,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2440","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2440","typeString":"library Address"}],"id":2138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2137,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:10","typeDescriptions":{}}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2142,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"2526:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2136,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2146,"nodeType":"ExpressionStatement","src":"2493:73:10"},{"assignments":[2148,null],"declarations":[{"constant":false,"id":2148,"mutability":"mutable","name":"success","nameLocation":"2583:7:10","nodeType":"VariableDeclaration","scope":2161,"src":"2578:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2147,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2155,"initialValue":{"arguments":[{"hexValue":"","id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2149,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"2596:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2151,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"2618:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:10"},{"expression":{"arguments":[{"id":2157,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"2647:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2156,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2160,"nodeType":"ExpressionStatement","src":"2639:78:10"}]},"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"1501:906:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2162,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:10","nodeType":"FunctionDefinition","parameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:10","nodeType":"VariableDeclaration","scope":2162,"src":"2431:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2130,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2133,"mutability":"mutable","name":"amount","nameLocation":"2466:6:10","nodeType":"VariableDeclaration","scope":2162,"src":"2458:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2132,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:10"},"returnParameters":{"id":2135,"nodeType":"ParameterList","parameters":[],"src":"2483:0:10"},"scope":2440,"src":"2412:312:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2179,"nodeType":"Block","src":"3555:96:10","statements":[{"expression":{"arguments":[{"id":2173,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"3594:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2174,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"3602:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2172,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2220,2264],"referencedDeclaration":2264,"src":"3572:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2171,"id":2178,"nodeType":"Return","src":"3565:79:10"}]},"documentation":{"id":2163,"nodeType":"StructuredDocumentation","src":"2730:731:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2180,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:10","nodeType":"FunctionDefinition","parameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"target","nameLocation":"3496:6:10","nodeType":"VariableDeclaration","scope":2180,"src":"3488:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2164,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2167,"mutability":"mutable","name":"data","nameLocation":"3517:4:10","nodeType":"VariableDeclaration","scope":2180,"src":"3504:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2166,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:10"},"returnParameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2180,"src":"3541:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2169,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:10"},"scope":2440,"src":"3466:185:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2199,"nodeType":"Block","src":"4020:76:10","statements":[{"expression":{"arguments":[{"id":2193,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"4059:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2194,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"4067:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2196,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"4076:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2192,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2220,2264],"referencedDeclaration":2264,"src":"4037:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2191,"id":2198,"nodeType":"Return","src":"4030:59:10"}]},"documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"3657:211:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2200,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:10","nodeType":"FunctionDefinition","parameters":{"id":2188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"target","nameLocation":"3912:6:10","nodeType":"VariableDeclaration","scope":2200,"src":"3904:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2182,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2185,"mutability":"mutable","name":"data","nameLocation":"3941:4:10","nodeType":"VariableDeclaration","scope":2200,"src":"3928:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2184,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2187,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:10","nodeType":"VariableDeclaration","scope":2200,"src":"3955:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2186,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:10"},"returnParameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2200,"src":"4006:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2189,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:10"},"scope":2440,"src":"3873:223:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2219,"nodeType":"Block","src":"4601:111:10","statements":[{"expression":{"arguments":[{"id":2213,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"4640:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2214,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"4648:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"4654:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2212,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2220,2264],"referencedDeclaration":2264,"src":"4618:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4618:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2211,"id":2218,"nodeType":"Return","src":"4611:94:10"}]},"documentation":{"id":2201,"nodeType":"StructuredDocumentation","src":"4102:351:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2220,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:10","nodeType":"FunctionDefinition","parameters":{"id":2208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"target","nameLocation":"4506:6:10","nodeType":"VariableDeclaration","scope":2220,"src":"4498:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2202,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2205,"mutability":"mutable","name":"data","nameLocation":"4535:4:10","nodeType":"VariableDeclaration","scope":2220,"src":"4522:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2204,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2207,"mutability":"mutable","name":"value","nameLocation":"4557:5:10","nodeType":"VariableDeclaration","scope":2220,"src":"4549:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2206,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:10"},"returnParameters":{"id":2211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2220,"src":"4587:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2209,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:10"},"scope":2440,"src":"4458:254:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2263,"nodeType":"Block","src":"5139:267:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2237,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2440","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2440","typeString":"library Address"}],"id":2236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2235,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:10","typeDescriptions":{}}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5157:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5157:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"5182:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2234,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2244,"nodeType":"ExpressionStatement","src":"5149:81:10"},{"assignments":[2246,2248],"declarations":[{"constant":false,"id":2246,"mutability":"mutable","name":"success","nameLocation":"5246:7:10","nodeType":"VariableDeclaration","scope":2263,"src":"5241:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2245,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2248,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:10","nodeType":"VariableDeclaration","scope":2263,"src":"5255:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2247,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2255,"initialValue":{"arguments":[{"id":2253,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"5308:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2249,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"5282:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5282:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"5301:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:10"},{"expression":{"arguments":[{"id":2257,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"5357:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2258,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"5365:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2259,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"5374:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2260,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"5386:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2256,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"5330:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2233,"id":2262,"nodeType":"Return","src":"5323:76:10"}]},"documentation":{"id":2221,"nodeType":"StructuredDocumentation","src":"4718:237:10","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2264,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:10","nodeType":"FunctionDefinition","parameters":{"id":2230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2223,"mutability":"mutable","name":"target","nameLocation":"5008:6:10","nodeType":"VariableDeclaration","scope":2264,"src":"5000:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2222,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2225,"mutability":"mutable","name":"data","nameLocation":"5037:4:10","nodeType":"VariableDeclaration","scope":2264,"src":"5024:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2224,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2227,"mutability":"mutable","name":"value","nameLocation":"5059:5:10","nodeType":"VariableDeclaration","scope":2264,"src":"5051:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2226,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2229,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:10","nodeType":"VariableDeclaration","scope":2264,"src":"5074:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2228,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:10"},"returnParameters":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2264,"src":"5125:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2231,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:10"},"scope":2440,"src":"4960:446:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2280,"nodeType":"Block","src":"5683:97:10","statements":[{"expression":{"arguments":[{"id":2275,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"5719:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2276,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"5727:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2274,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2281,2310],"referencedDeclaration":2310,"src":"5700:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5700:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2273,"id":2279,"nodeType":"Return","src":"5693:80:10"}]},"documentation":{"id":2265,"nodeType":"StructuredDocumentation","src":"5412:166:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2281,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:10","nodeType":"FunctionDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"target","nameLocation":"5619:6:10","nodeType":"VariableDeclaration","scope":2281,"src":"5611:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2266,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"data","nameLocation":"5640:4:10","nodeType":"VariableDeclaration","scope":2281,"src":"5627:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2268,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:10"},"returnParameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2281,"src":"5669:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2271,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:10"},"scope":2440,"src":"5583:197:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2309,"nodeType":"Block","src":"6122:168:10","statements":[{"assignments":[2294,2296],"declarations":[{"constant":false,"id":2294,"mutability":"mutable","name":"success","nameLocation":"6138:7:10","nodeType":"VariableDeclaration","scope":2309,"src":"6133:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2293,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2296,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:10","nodeType":"VariableDeclaration","scope":2309,"src":"6147:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2295,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2301,"initialValue":{"arguments":[{"id":2299,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"6192:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2297,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"6174:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:10"},{"expression":{"arguments":[{"id":2303,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"6241:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2304,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"6249:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2305,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"6258:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2306,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"6270:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2302,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"6214:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2292,"id":2308,"nodeType":"Return","src":"6207:76:10"}]},"documentation":{"id":2282,"nodeType":"StructuredDocumentation","src":"5786:173:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2310,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:10","nodeType":"FunctionDefinition","parameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"target","nameLocation":"6009:6:10","nodeType":"VariableDeclaration","scope":2310,"src":"6001:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2283,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2286,"mutability":"mutable","name":"data","nameLocation":"6038:4:10","nodeType":"VariableDeclaration","scope":2310,"src":"6025:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2285,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2288,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:10","nodeType":"VariableDeclaration","scope":2310,"src":"6052:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2287,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:10"},"returnParameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2310,"src":"6108:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2290,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:10"},"scope":2440,"src":"5964:326:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2326,"nodeType":"Block","src":"6566:101:10","statements":[{"expression":{"arguments":[{"id":2321,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"6604:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2322,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"6612:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2320,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2327,2356],"referencedDeclaration":2356,"src":"6583:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2319,"id":2325,"nodeType":"Return","src":"6576:84:10"}]},"documentation":{"id":2311,"nodeType":"StructuredDocumentation","src":"6296:168:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2327,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:10","nodeType":"FunctionDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"target","nameLocation":"6507:6:10","nodeType":"VariableDeclaration","scope":2327,"src":"6499:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2312,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2315,"mutability":"mutable","name":"data","nameLocation":"6528:4:10","nodeType":"VariableDeclaration","scope":2327,"src":"6515:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2314,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:10"},"returnParameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2327,"src":"6552:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2317,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:10"},"scope":2440,"src":"6469:198:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2355,"nodeType":"Block","src":"7008:170:10","statements":[{"assignments":[2340,2342],"declarations":[{"constant":false,"id":2340,"mutability":"mutable","name":"success","nameLocation":"7024:7:10","nodeType":"VariableDeclaration","scope":2355,"src":"7019:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2339,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2342,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:10","nodeType":"VariableDeclaration","scope":2355,"src":"7033:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2341,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2347,"initialValue":{"arguments":[{"id":2345,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"7080:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2343,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"7060:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:10"},{"expression":{"arguments":[{"id":2349,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"7129:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2350,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"7137:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2351,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"7146:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2352,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"7158:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2348,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"7102:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2338,"id":2354,"nodeType":"Return","src":"7095:76:10"}]},"documentation":{"id":2328,"nodeType":"StructuredDocumentation","src":"6673:175:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2356,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:10","nodeType":"FunctionDefinition","parameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"target","nameLocation":"6900:6:10","nodeType":"VariableDeclaration","scope":2356,"src":"6892:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2329,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2332,"mutability":"mutable","name":"data","nameLocation":"6929:4:10","nodeType":"VariableDeclaration","scope":2356,"src":"6916:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2331,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2334,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:10","nodeType":"VariableDeclaration","scope":2356,"src":"6943:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2333,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:10"},"returnParameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2356,"src":"6994:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2336,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:10"},"scope":2440,"src":"6853:325:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2394,"nodeType":"Block","src":"7660:434:10","statements":[{"condition":{"id":2370,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7674:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2392,"nodeType":"Block","src":"8030:58:10","statements":[{"expression":{"arguments":[{"id":2388,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"8052:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2389,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"8064:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2387,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"8044:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2391,"nodeType":"ExpressionStatement","src":"8044:33:10"}]},"id":2393,"nodeType":"IfStatement","src":"7670:418:10","trueBody":{"id":2386,"nodeType":"Block","src":"7683:341:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2371,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"7701:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7701:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2383,"nodeType":"IfStatement","src":"7697:286:10","trueBody":{"id":2382,"nodeType":"Block","src":"7725:258:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2377,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"7927:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2376,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"7916:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2375,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2381,"nodeType":"ExpressionStatement","src":"7908:60:10"}]}},{"expression":{"id":2384,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"8003:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2369,"id":2385,"nodeType":"Return","src":"7996:17:10"}]}}]},"documentation":{"id":2357,"nodeType":"StructuredDocumentation","src":"7184:277:10","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2395,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:10","nodeType":"FunctionDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2359,"mutability":"mutable","name":"target","nameLocation":"7519:6:10","nodeType":"VariableDeclaration","scope":2395,"src":"7511:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2358,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2361,"mutability":"mutable","name":"success","nameLocation":"7540:7:10","nodeType":"VariableDeclaration","scope":2395,"src":"7535:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2360,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2363,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:10","nodeType":"VariableDeclaration","scope":2395,"src":"7557:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2362,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2365,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:10","nodeType":"VariableDeclaration","scope":2395,"src":"7590:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2364,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:10"},"returnParameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2395,"src":"7646:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2367,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:10"},"scope":2440,"src":"7466:628:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2418,"nodeType":"Block","src":"8475:135:10","statements":[{"condition":{"id":2407,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"8489:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2416,"nodeType":"Block","src":"8546:58:10","statements":[{"expression":{"arguments":[{"id":2412,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"8568:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2413,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"8580:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2411,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"8560:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2415,"nodeType":"ExpressionStatement","src":"8560:33:10"}]},"id":2417,"nodeType":"IfStatement","src":"8485:119:10","trueBody":{"id":2410,"nodeType":"Block","src":"8498:42:10","statements":[{"expression":{"id":2408,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"8519:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2406,"id":2409,"nodeType":"Return","src":"8512:17:10"}]}}]},"documentation":{"id":2396,"nodeType":"StructuredDocumentation","src":"8100:210:10","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2419,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:10","nodeType":"FunctionDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"success","nameLocation":"8355:7:10","nodeType":"VariableDeclaration","scope":2419,"src":"8350:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2397,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2400,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:10","nodeType":"VariableDeclaration","scope":2419,"src":"8372:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2399,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2402,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:10","nodeType":"VariableDeclaration","scope":2419,"src":"8405:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2401,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:10"},"returnParameters":{"id":2406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2419,"src":"8461:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2404,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:10"},"scope":2440,"src":"8315:295:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2438,"nodeType":"Block","src":"8699:457:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2426,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"8775:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8775:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2436,"nodeType":"Block","src":"9105:45:10","statements":[{"expression":{"arguments":[{"id":2433,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"9126:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2432,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9119:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2435,"nodeType":"ExpressionStatement","src":"9119:20:10"}]},"id":2437,"nodeType":"IfStatement","src":"8771:379:10","trueBody":{"id":2431,"nodeType":"Block","src":"8798:301:10","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:10","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:10","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:10"},"nodeType":"YulFunctionCall","src":"8997:17:10"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:10","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:10"},"nodeType":"YulFunctionCall","src":"9038:19:10"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:10"},"nodeType":"YulFunctionCall","src":"9031:44:10"},"nodeType":"YulExpressionStatement","src":"9031:44:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2421,"isOffset":false,"isSlot":false,"src":"9003:10:10","valueSize":1},{"declaration":2421,"isOffset":false,"isSlot":false,"src":"9046:10:10","valueSize":1}],"id":2430,"nodeType":"InlineAssembly","src":"8947:142:10"}]}}]},"id":2439,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:10","nodeType":"FunctionDefinition","parameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:10","nodeType":"VariableDeclaration","scope":2439,"src":"8633:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2420,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:10","nodeType":"VariableDeclaration","scope":2439,"src":"8658:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2422,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:10"},"returnParameters":{"id":2425,"nodeType":"ParameterList","parameters":[],"src":"8699:0:10"},"scope":2440,"src":"8616:540:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2441,"src":"194:8964:10","usedErrors":[]}],"src":"101:9058:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2462]},"id":2463,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2442,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"111:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2462,"linearizedBaseContracts":[2462],"name":"Context","nameLocation":"626:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2451,"nodeType":"Block","src":"702:34:11","statements":[{"expression":{"expression":{"id":2448,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2447,"id":2450,"nodeType":"Return","src":"712:17:11"}]},"id":2452,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:11","nodeType":"FunctionDefinition","parameters":{"id":2444,"nodeType":"ParameterList","parameters":[],"src":"659:2:11"},"returnParameters":{"id":2447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2452,"src":"693:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2445,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:11"},"scope":2462,"src":"640:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2460,"nodeType":"Block","src":"809:32:11","statements":[{"expression":{"expression":{"id":2457,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2456,"id":2459,"nodeType":"Return","src":"819:15:11"}]},"id":2461,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:11","nodeType":"FunctionDefinition","parameters":{"id":2453,"nodeType":"ParameterList","parameters":[],"src":"759:2:11"},"returnParameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2461,"src":"793:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2454,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:11"},"scope":2462,"src":"742:99:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2463,"src":"608:235:11","usedErrors":[]}],"src":"86:758:11"},"id":11},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[2536]},"id":2537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2464,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"112:311:12","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":2536,"linearizedBaseContracts":[2536],"name":"Counters","nameLocation":"432:8:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":2468,"members":[{"constant":false,"id":2467,"mutability":"mutable","name":"_value","nameLocation":"794:6:12","nodeType":"VariableDeclaration","scope":2468,"src":"786:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:12","nodeType":"StructDefinition","scope":2536,"src":"447:374:12","visibility":"public"},{"body":{"id":2479,"nodeType":"Block","src":"901:38:12","statements":[{"expression":{"expression":{"id":2476,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"918:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2477,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2467,"src":"918:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2475,"id":2478,"nodeType":"Return","src":"911:21:12"}]},"id":2480,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:12","nodeType":"FunctionDefinition","parameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"counter","nameLocation":"860:7:12","nodeType":"VariableDeclaration","scope":2480,"src":"844:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2470,"nodeType":"UserDefinedTypeName","pathNode":{"id":2469,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2468,"src":"844:7:12"},"referencedDeclaration":2468,"src":"844:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:12"},"returnParameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2480,"src":"892:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2473,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:12"},"scope":2536,"src":"827:112:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2493,"nodeType":"Block","src":"998:70:12","statements":[{"id":2492,"nodeType":"UncheckedBlock","src":"1008:54:12","statements":[{"expression":{"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2486,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1032:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2467,"src":"1032:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2491,"nodeType":"ExpressionStatement","src":"1032:19:12"}]}]},"id":2494,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:12","nodeType":"FunctionDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"counter","nameLocation":"980:7:12","nodeType":"VariableDeclaration","scope":2494,"src":"964:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2482,"nodeType":"UserDefinedTypeName","pathNode":{"id":2481,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2468,"src":"964:7:12"},"referencedDeclaration":2468,"src":"964:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:12"},"returnParameters":{"id":2485,"nodeType":"ParameterList","parameters":[],"src":"998:0:12"},"scope":2536,"src":"945:123:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2521,"nodeType":"Block","src":"1127:176:12","statements":[{"assignments":[2501],"declarations":[{"constant":false,"id":2501,"mutability":"mutable","name":"value","nameLocation":"1145:5:12","nodeType":"VariableDeclaration","scope":2521,"src":"1137:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2504,"initialValue":{"expression":{"id":2502,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"1153:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2467,"src":"1153:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"1185:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":2505,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2511,"nodeType":"ExpressionStatement","src":"1177:49:12"},{"id":2520,"nodeType":"UncheckedBlock","src":"1236:61:12","statements":[{"expression":{"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2512,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"1260:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2467,"src":"1260:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"1277:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2519,"nodeType":"ExpressionStatement","src":"1260:26:12"}]}]},"id":2522,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:12","nodeType":"FunctionDefinition","parameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"counter","nameLocation":"1109:7:12","nodeType":"VariableDeclaration","scope":2522,"src":"1093:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2496,"nodeType":"UserDefinedTypeName","pathNode":{"id":2495,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2468,"src":"1093:7:12"},"referencedDeclaration":2468,"src":"1093:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:12"},"returnParameters":{"id":2499,"nodeType":"ParameterList","parameters":[],"src":"1127:0:12"},"scope":2536,"src":"1074:229:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2534,"nodeType":"Block","src":"1358:35:12","statements":[{"expression":{"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2528,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"1368:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2467,"src":"1368:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2533,"nodeType":"ExpressionStatement","src":"1368:18:12"}]},"id":2535,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:12","nodeType":"FunctionDefinition","parameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2525,"mutability":"mutable","name":"counter","nameLocation":"1340:7:12","nodeType":"VariableDeclaration","scope":2535,"src":"1324:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2524,"nodeType":"UserDefinedTypeName","pathNode":{"id":2523,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2468,"src":"1324:7:12"},"referencedDeclaration":2468,"src":"1324:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2468_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:12"},"returnParameters":{"id":2527,"nodeType":"ParameterList","parameters":[],"src":"1358:0:12"},"scope":2536,"src":"1309:84:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2537,"src":"424:971:12","usedErrors":[]}],"src":"87:1309:12"},"id":12},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4091],"Strings":[2711]},"id":2712,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2538,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:13"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2539,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2712,"sourceUnit":4092,"src":"126:25:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2540,"nodeType":"StructuredDocumentation","src":"153:34:13","text":" @dev String operations."},"fullyImplemented":true,"id":2711,"linearizedBaseContracts":[2711],"name":"Strings","nameLocation":"196:7:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2543,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:13","nodeType":"VariableDeclaration","scope":2711,"src":"210:54:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2541,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2546,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:13","nodeType":"VariableDeclaration","scope":2711,"src":"270:43:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2544,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2593,"nodeType":"Block","src":"486:625:13","statements":[{"id":2592,"nodeType":"UncheckedBlock","src":"496:609:13","statements":[{"assignments":[2555],"declarations":[{"constant":false,"id":2555,"mutability":"mutable","name":"length","nameLocation":"528:6:13","nodeType":"VariableDeclaration","scope":2592,"src":"520:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2562,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"548:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2556,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"537:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4091_$","typeString":"type(library Math)"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3928,"src":"537:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:13"},{"assignments":[2564],"declarations":[{"constant":false,"id":2564,"mutability":"mutable","name":"buffer","nameLocation":"586:6:13","nodeType":"VariableDeclaration","scope":2592,"src":"572:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2563,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2569,"initialValue":{"arguments":[{"id":2567,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"606:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2565,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"595:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:13"},{"assignments":[2571],"declarations":[{"constant":false,"id":2571,"mutability":"mutable","name":"ptr","nameLocation":"635:3:13","nodeType":"VariableDeclaration","scope":2592,"src":"627:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2572,"nodeType":"VariableDeclarationStatement","src":"627:11:13"},{"AST":{"nodeType":"YulBlock","src":"708:67:13","statements":[{"nodeType":"YulAssignment","src":"726:35:13","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:13","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:13"},"nodeType":"YulFunctionCall","src":"745:15:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:13"},"nodeType":"YulFunctionCall","src":"733:28:13"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2564,"isOffset":false,"isSlot":false,"src":"737:6:13","valueSize":1},{"declaration":2555,"isOffset":false,"isSlot":false,"src":"753:6:13","valueSize":1},{"declaration":2571,"isOffset":false,"isSlot":false,"src":"726:3:13","valueSize":1}],"id":2573,"nodeType":"InlineAssembly","src":"699:76:13"},{"body":{"id":2588,"nodeType":"Block","src":"801:267:13","statements":[{"expression":{"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:13","subExpression":{"id":2575,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"819:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2577,"nodeType":"ExpressionStatement","src":"819:5:13"},{"AST":{"nodeType":"YulBlock","src":"902:84:13","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:13"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:13","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:13"},"nodeType":"YulFunctionCall","src":"942:14:13"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:13"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:13"},"nodeType":"YulFunctionCall","src":"937:30:13"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:13"},"nodeType":"YulFunctionCall","src":"924:44:13"},"nodeType":"YulExpressionStatement","src":"924:44:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2543,"isOffset":false,"isSlot":false,"src":"958:8:13","valueSize":1},{"declaration":2571,"isOffset":false,"isSlot":false,"src":"932:3:13","valueSize":1},{"declaration":2549,"isOffset":false,"isSlot":false,"src":"946:5:13","valueSize":1}],"id":2578,"nodeType":"InlineAssembly","src":"893:93:13"},{"expression":{"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"1003:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2582,"nodeType":"ExpressionStatement","src":"1003:11:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"1036:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2587,"nodeType":"IfStatement","src":"1032:21:13","trueBody":{"id":2586,"nodeType":"Break","src":"1048:5:13"}}]},"condition":{"hexValue":"74727565","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2589,"nodeType":"WhileStatement","src":"788:280:13"},{"expression":{"id":2590,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"1088:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2553,"id":2591,"nodeType":"Return","src":"1081:13:13"}]}]},"documentation":{"id":2547,"nodeType":"StructuredDocumentation","src":"320:90:13","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2594,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:13","nodeType":"FunctionDefinition","parameters":{"id":2550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2549,"mutability":"mutable","name":"value","nameLocation":"441:5:13","nodeType":"VariableDeclaration","scope":2594,"src":"433:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:13"},"returnParameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2594,"src":"471:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2551,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:13"},"scope":2711,"src":"415:696:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2613,"nodeType":"Block","src":"1290:100:13","statements":[{"id":2612,"nodeType":"UncheckedBlock","src":"1300:84:13","statements":[{"expression":{"arguments":[{"id":2603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"1343:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"1362:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2604,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"1350:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4091_$","typeString":"type(library Math)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4051,"src":"1350:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2602,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2614,2690,2710],"referencedDeclaration":2690,"src":"1331:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2601,"id":2611,"nodeType":"Return","src":"1324:49:13"}]}]},"documentation":{"id":2595,"nodeType":"StructuredDocumentation","src":"1117:94:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2614,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:13","nodeType":"FunctionDefinition","parameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"value","nameLocation":"1245:5:13","nodeType":"VariableDeclaration","scope":2614,"src":"1237:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2596,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:13"},"returnParameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2614,"src":"1275:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2599,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:13"},"scope":2711,"src":"1216:174:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2689,"nodeType":"Block","src":"1603:347:13","statements":[{"assignments":[2625],"declarations":[{"constant":false,"id":2625,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:13","nodeType":"VariableDeclaration","scope":2689,"src":"1613:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2624,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2634,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2629,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"1649:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2626,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:13"},{"expression":{"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2635,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"1670:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2637,"indexExpression":{"hexValue":"30","id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2640,"nodeType":"ExpressionStatement","src":"1670:15:13"},{"expression":{"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2641,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"1695:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2643,"indexExpression":{"hexValue":"31","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2646,"nodeType":"ExpressionStatement","src":"1695:15:13"},{"body":{"id":2675,"nodeType":"Block","src":"1765:83:13","statements":[{"expression":{"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2661,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"1779:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2663,"indexExpression":{"id":2662,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"1786:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2664,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"1791:8:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2668,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"1800:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2670,"nodeType":"ExpressionStatement","src":"1779:33:13"},{"expression":{"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"1826:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2674,"nodeType":"ExpressionStatement","src":"1826:11:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2655,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"1753:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2676,"initializationExpression":{"assignments":[2648],"declarations":[{"constant":false,"id":2648,"mutability":"mutable","name":"i","nameLocation":"1733:1:13","nodeType":"VariableDeclaration","scope":2676,"src":"1725:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2654,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2650,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"1741:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:13"},"loopExpression":{"expression":{"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:13","subExpression":{"id":2658,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"1762:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2660,"nodeType":"ExpressionStatement","src":"1760:3:13"},"nodeType":"ForStatement","src":"1720:128:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"1865:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2677,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2683,"nodeType":"ExpressionStatement","src":"1857:55:13"},{"expression":{"arguments":[{"id":2686,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"1936:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2684,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:13","typeDescriptions":{}}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2623,"id":2688,"nodeType":"Return","src":"1922:21:13"}]},"documentation":{"id":2615,"nodeType":"StructuredDocumentation","src":"1396:112:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2690,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:13","nodeType":"FunctionDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"value","nameLocation":"1542:5:13","nodeType":"VariableDeclaration","scope":2690,"src":"1534:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2616,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"length","nameLocation":"1557:6:13","nodeType":"VariableDeclaration","scope":2690,"src":"1549:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2618,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:13"},"returnParameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2690,"src":"1588:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2621,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:13"},"scope":2711,"src":"1513:437:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2709,"nodeType":"Block","src":"2175:76:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2703,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"2220:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2701,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:13","typeDescriptions":{}}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2212:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:13","typeDescriptions":{}}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2706,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"2228:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2698,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2614,2690,2710],"referencedDeclaration":2690,"src":"2192:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2697,"id":2708,"nodeType":"Return","src":"2185:59:13"}]},"documentation":{"id":2691,"nodeType":"StructuredDocumentation","src":"1956:141:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2710,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:13","nodeType":"FunctionDefinition","parameters":{"id":2694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2693,"mutability":"mutable","name":"addr","nameLocation":"2131:4:13","nodeType":"VariableDeclaration","scope":2710,"src":"2123:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2692,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:13"},"returnParameters":{"id":2697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2710,"src":"2160:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2695,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:13"},"scope":2711,"src":"2102:149:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2712,"src":"188:2065:13","usedErrors":[]}],"src":"101:2153:13"},"id":13},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3072],"Math":[4091],"Strings":[2711]},"id":3073,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2713,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:14"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2714,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3073,"sourceUnit":2712,"src":"137:24:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2715,"nodeType":"StructuredDocumentation","src":"163:205:14","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3072,"linearizedBaseContracts":[3072],"name":"ECDSA","nameLocation":"377:5:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2721,"members":[{"id":2716,"name":"NoError","nameLocation":"417:7:14","nodeType":"EnumValue","src":"417:7:14"},{"id":2717,"name":"InvalidSignature","nameLocation":"434:16:14","nodeType":"EnumValue","src":"434:16:14"},{"id":2718,"name":"InvalidSignatureLength","nameLocation":"460:22:14","nodeType":"EnumValue","src":"460:22:14"},{"id":2719,"name":"InvalidSignatureS","nameLocation":"492:17:14","nodeType":"EnumValue","src":"492:17:14"},{"id":2720,"name":"InvalidSignatureV","nameLocation":"519:17:14","nodeType":"EnumValue","src":"519:17:14"}],"name":"RecoverError","nameLocation":"394:12:14","nodeType":"EnumDefinition","src":"389:175:14"},{"body":{"id":2764,"nodeType":"Block","src":"624:457:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2727,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"638:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2728,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"647:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2721_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2716,"src":"647:20:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2733,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"734:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2734,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"743:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2721_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"743:29:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2742,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"843:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2743,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"852:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2721_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2718,"src":"852:35:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2751,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"965:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2752,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"974:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2721_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2719,"src":"974:30:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2760,"nodeType":"IfStatement","src":"961:114:14","trueBody":{"id":2759,"nodeType":"Block","src":"1006:69:14","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":2755,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1020:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2758,"nodeType":"ExpressionStatement","src":"1020:44:14"}]}},"id":2761,"nodeType":"IfStatement","src":"839:236:14","trueBody":{"id":2750,"nodeType":"Block","src":"889:66:14","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":2747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":2746,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2749,"nodeType":"ExpressionStatement","src":"903:41:14"}]}},"id":2762,"nodeType":"IfStatement","src":"730:345:14","trueBody":{"id":2741,"nodeType":"Block","src":"774:59:14","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":2737,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"788:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2740,"nodeType":"ExpressionStatement","src":"788:34:14"}]}},"id":2763,"nodeType":"IfStatement","src":"634:441:14","trueBody":{"id":2732,"nodeType":"Block","src":"669:55:14","statements":[{"functionReturnParameters":2726,"id":2731,"nodeType":"Return","src":"683:7:14"}]}}]},"id":2765,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:14","nodeType":"FunctionDefinition","parameters":{"id":2725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"error","nameLocation":"604:5:14","nodeType":"VariableDeclaration","scope":2765,"src":"591:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2723,"nodeType":"UserDefinedTypeName","pathNode":{"id":2722,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2721,"src":"591:12:14"},"referencedDeclaration":2721,"src":"591:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:14"},"returnParameters":{"id":2726,"nodeType":"ParameterList","parameters":[],"src":"624:0:14"},"scope":3072,"src":"570:511:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2810,"nodeType":"Block","src":"2249:626:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2778,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"2263:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2263:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2808,"nodeType":"Block","src":"2788:81:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2800,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:14","typeDescriptions":{}}},"id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2810:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2804,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"2822:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2721_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2718,"src":"2822:35:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}}],"id":2806,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2721_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2777,"id":2807,"nodeType":"Return","src":"2802:56:14"}]},"id":2809,"nodeType":"IfStatement","src":"2259:610:14","trueBody":{"id":2799,"nodeType":"Block","src":"2287:495:14","statements":[{"assignments":[2783],"declarations":[{"constant":false,"id":2783,"mutability":"mutable","name":"r","nameLocation":"2309:1:14","nodeType":"VariableDeclaration","scope":2799,"src":"2301:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2784,"nodeType":"VariableDeclarationStatement","src":"2301:9:14"},{"assignments":[2786],"declarations":[{"constant":false,"id":2786,"mutability":"mutable","name":"s","nameLocation":"2332:1:14","nodeType":"VariableDeclaration","scope":2799,"src":"2324:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2787,"nodeType":"VariableDeclarationStatement","src":"2324:9:14"},{"assignments":[2789],"declarations":[{"constant":false,"id":2789,"mutability":"mutable","name":"v","nameLocation":"2353:1:14","nodeType":"VariableDeclaration","scope":2799,"src":"2347:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2788,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2790,"nodeType":"VariableDeclarationStatement","src":"2347:7:14"},{"AST":{"nodeType":"YulBlock","src":"2555:171:14","statements":[{"nodeType":"YulAssignment","src":"2573:32:14","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:14"},"nodeType":"YulFunctionCall","src":"2584:20:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:14"},"nodeType":"YulFunctionCall","src":"2578:27:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:14"}]},{"nodeType":"YulAssignment","src":"2622:32:14","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:14"},"nodeType":"YulFunctionCall","src":"2633:20:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:14"},"nodeType":"YulFunctionCall","src":"2627:27:14"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:14"}]},{"nodeType":"YulAssignment","src":"2671:41:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:14","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:14","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:14"},"nodeType":"YulFunctionCall","src":"2690:20:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:14"},"nodeType":"YulFunctionCall","src":"2684:27:14"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:14"},"nodeType":"YulFunctionCall","src":"2676:36:14"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2783,"isOffset":false,"isSlot":false,"src":"2573:1:14","valueSize":1},{"declaration":2786,"isOffset":false,"isSlot":false,"src":"2622:1:14","valueSize":1},{"declaration":2770,"isOffset":false,"isSlot":false,"src":"2588:9:14","valueSize":1},{"declaration":2770,"isOffset":false,"isSlot":false,"src":"2637:9:14","valueSize":1},{"declaration":2770,"isOffset":false,"isSlot":false,"src":"2694:9:14","valueSize":1},{"declaration":2789,"isOffset":false,"isSlot":false,"src":"2671:1:14","valueSize":1}],"id":2791,"nodeType":"InlineAssembly","src":"2546:180:14"},{"expression":{"arguments":[{"id":2793,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"2757:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2794,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"2763:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2795,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"2766:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2796,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"2769:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2792,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2811,2885,2979],"referencedDeclaration":2979,"src":"2746:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2721_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2746:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2721_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2777,"id":2798,"nodeType":"Return","src":"2739:32:14"}]}}]},"documentation":{"id":2766,"nodeType":"StructuredDocumentation","src":"1087:1053:14","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":2811,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:14","nodeType":"FunctionDefinition","parameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"hash","nameLocation":"2173:4:14","nodeType":"VariableDeclaration","scope":2811,"src":"2165:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2770,"mutability":"mutable","name":"signature","nameLocation":"2192:9:14","nodeType":"VariableDeclaration","scope":2811,"src":"2179:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2769,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:14"},"returnParameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2811,"src":"2226:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2772,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2811,"src":"2235:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2775,"nodeType":"UserDefinedTypeName","pathNode":{"id":2774,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2721,"src":"2235:12:14"},"referencedDeclaration":2721,"src":"2235:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:14"},"scope":3072,"src":"2145:730:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2837,"nodeType":"Block","src":"3748:140:14","statements":[{"assignments":[2822,2825],"declarations":[{"constant":false,"id":2822,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:14","nodeType":"VariableDeclaration","scope":2837,"src":"3759:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2821,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2825,"mutability":"mutable","name":"error","nameLocation":"3791:5:14","nodeType":"VariableDeclaration","scope":2837,"src":"3778:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2824,"nodeType":"UserDefinedTypeName","pathNode":{"id":2823,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2721,"src":"3778:12:14"},"referencedDeclaration":2721,"src":"3778:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2830,"initialValue":{"arguments":[{"id":2827,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"3811:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2828,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"3817:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2826,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2811,2885,2979],"referencedDeclaration":2811,"src":"3800:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2721_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2721_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:14"},{"expression":{"arguments":[{"id":2832,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"3849:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}],"id":2831,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"3837:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2721_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3837:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2834,"nodeType":"ExpressionStatement","src":"3837:18:14"},{"expression":{"id":2835,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"3872:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2820,"id":2836,"nodeType":"Return","src":"3865:16:14"}]},"documentation":{"id":2812,"nodeType":"StructuredDocumentation","src":"2881:775:14","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":2838,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:14","nodeType":"FunctionDefinition","parameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2814,"mutability":"mutable","name":"hash","nameLocation":"3686:4:14","nodeType":"VariableDeclaration","scope":2838,"src":"3678:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2813,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2816,"mutability":"mutable","name":"signature","nameLocation":"3705:9:14","nodeType":"VariableDeclaration","scope":2838,"src":"3692:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2815,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:14"},"returnParameters":{"id":2820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2838,"src":"3739:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2818,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:14"},"scope":3072,"src":"3661:227:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2884,"nodeType":"Block","src":"4275:203:14","statements":[{"assignments":[2854],"declarations":[{"constant":false,"id":2854,"mutability":"mutable","name":"s","nameLocation":"4293:1:14","nodeType":"VariableDeclaration","scope":2884,"src":"4285:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4285:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2861,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2855,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"4297:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4310:66:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4302:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:14","typeDescriptions":{}}},"id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4302:75:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4297:80:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4285:92:14"},{"assignments":[2863],"declarations":[{"constant":false,"id":2863,"mutability":"mutable","name":"v","nameLocation":"4393:1:14","nodeType":"VariableDeclaration","scope":2884,"src":"4387:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2862,"name":"uint8","nodeType":"ElementaryTypeName","src":"4387:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2876,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2868,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"4412:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4404:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2866,"name":"uint256","nodeType":"ElementaryTypeName","src":"4404:7:14","typeDescriptions":{}}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4404:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4419:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4404:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4403:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4426:2:14","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4403:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4397:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2864,"name":"uint8","nodeType":"ElementaryTypeName","src":"4397:5:14","typeDescriptions":{}}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4397:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4387:42:14"},{"expression":{"arguments":[{"id":2878,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"4457:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2879,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"4463:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2880,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"4466:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2881,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"4469:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2877,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2811,2885,2979],"referencedDeclaration":2979,"src":"4446:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2721_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4446:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2721_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2852,"id":2883,"nodeType":"Return","src":"4439:32:14"}]},"documentation":{"id":2839,"nodeType":"StructuredDocumentation","src":"3894:243:14","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":2885,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:14","nodeType":"FunctionDefinition","parameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"hash","nameLocation":"4179:4:14","nodeType":"VariableDeclaration","scope":2885,"src":"4171:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4171:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2843,"mutability":"mutable","name":"r","nameLocation":"4201:1:14","nodeType":"VariableDeclaration","scope":2885,"src":"4193:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2845,"mutability":"mutable","name":"vs","nameLocation":"4220:2:14","nodeType":"VariableDeclaration","scope":2885,"src":"4212:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4212:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:67:14"},"returnParameters":{"id":2852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2885,"src":"4252:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2847,"name":"address","nodeType":"ElementaryTypeName","src":"4252:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2885,"src":"4261:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2850,"nodeType":"UserDefinedTypeName","pathNode":{"id":2849,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2721,"src":"4261:12:14"},"referencedDeclaration":2721,"src":"4261:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4251:23:14"},"scope":3072,"src":"4142:336:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2914,"nodeType":"Block","src":"4759:136:14","statements":[{"assignments":[2898,2901],"declarations":[{"constant":false,"id":2898,"mutability":"mutable","name":"recovered","nameLocation":"4778:9:14","nodeType":"VariableDeclaration","scope":2914,"src":"4770:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2897,"name":"address","nodeType":"ElementaryTypeName","src":"4770:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2901,"mutability":"mutable","name":"error","nameLocation":"4802:5:14","nodeType":"VariableDeclaration","scope":2914,"src":"4789:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2900,"nodeType":"UserDefinedTypeName","pathNode":{"id":2899,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2721,"src":"4789:12:14"},"referencedDeclaration":2721,"src":"4789:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2907,"initialValue":{"arguments":[{"id":2903,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"4822:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2904,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"4828:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2905,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"4831:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2902,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2811,2885,2979],"referencedDeclaration":2885,"src":"4811:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2721_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4811:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2721_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4769:65:14"},{"expression":{"arguments":[{"id":2909,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"4856:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}],"id":2908,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"4844:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2721_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4844:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2911,"nodeType":"ExpressionStatement","src":"4844:18:14"},{"expression":{"id":2912,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"4879:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2896,"id":2913,"nodeType":"Return","src":"4872:16:14"}]},"documentation":{"id":2886,"nodeType":"StructuredDocumentation","src":"4484:154:14","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":2915,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4652:7:14","nodeType":"FunctionDefinition","parameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2888,"mutability":"mutable","name":"hash","nameLocation":"4677:4:14","nodeType":"VariableDeclaration","scope":2915,"src":"4669:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4669:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2890,"mutability":"mutable","name":"r","nameLocation":"4699:1:14","nodeType":"VariableDeclaration","scope":2915,"src":"4691:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4691:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2892,"mutability":"mutable","name":"vs","nameLocation":"4718:2:14","nodeType":"VariableDeclaration","scope":2915,"src":"4710:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4710:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4659:67:14"},"returnParameters":{"id":2896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2915,"src":"4750:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2894,"name":"address","nodeType":"ElementaryTypeName","src":"4750:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4749:9:14"},"scope":3072,"src":"4643:252:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2978,"nodeType":"Block","src":"5218:1345:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2934,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"6114:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6106:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"6106:7:14","typeDescriptions":{}}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6106:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:66:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6106:79:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2947,"nodeType":"IfStatement","src":"6102:161:14","trueBody":{"id":2946,"nodeType":"Block","src":"6187:76:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6217:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6209:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2938,"name":"address","nodeType":"ElementaryTypeName","src":"6209:7:14","typeDescriptions":{}}},"id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6209:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2942,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"6221:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2721_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2719,"src":"6221:30:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}}],"id":2944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6208:44:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2721_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2931,"id":2945,"nodeType":"Return","src":"6201:51:14"}]}},{"assignments":[2949],"declarations":[{"constant":false,"id":2949,"mutability":"mutable","name":"signer","nameLocation":"6365:6:14","nodeType":"VariableDeclaration","scope":2978,"src":"6357:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2948,"name":"address","nodeType":"ElementaryTypeName","src":"6357:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2956,"initialValue":{"arguments":[{"id":2951,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"6384:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2952,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"6390:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2953,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"6393:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2954,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"6396:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2950,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6374:9:14","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6374:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6357:41:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2957,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"6412:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6430:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6422:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2958,"name":"address","nodeType":"ElementaryTypeName","src":"6422:7:14","typeDescriptions":{}}},"id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6422:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6412:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2972,"nodeType":"IfStatement","src":"6408:101:14","trueBody":{"id":2971,"nodeType":"Block","src":"6434:75:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6464:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6456:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2963,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:14","typeDescriptions":{}}},"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6456:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2967,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"6468:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2721_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"6468:29:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}}],"id":2969,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6455:43:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2721_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2931,"id":2970,"nodeType":"Return","src":"6448:50:14"}]}},{"expression":{"components":[{"id":2973,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"6527:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2974,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"6535:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2721_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2716,"src":"6535:20:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}}],"id":2976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6526:30:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2721_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2931,"id":2977,"nodeType":"Return","src":"6519:37:14"}]},"documentation":{"id":2916,"nodeType":"StructuredDocumentation","src":"4901:163:14","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":2979,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5078:10:14","nodeType":"FunctionDefinition","parameters":{"id":2925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2918,"mutability":"mutable","name":"hash","nameLocation":"5106:4:14","nodeType":"VariableDeclaration","scope":2979,"src":"5098:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5098:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2920,"mutability":"mutable","name":"v","nameLocation":"5126:1:14","nodeType":"VariableDeclaration","scope":2979,"src":"5120:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2919,"name":"uint8","nodeType":"ElementaryTypeName","src":"5120:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2922,"mutability":"mutable","name":"r","nameLocation":"5145:1:14","nodeType":"VariableDeclaration","scope":2979,"src":"5137:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2921,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5137:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2924,"mutability":"mutable","name":"s","nameLocation":"5164:1:14","nodeType":"VariableDeclaration","scope":2979,"src":"5156:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2923,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5156:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5088:83:14"},"returnParameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2979,"src":"5195:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2926,"name":"address","nodeType":"ElementaryTypeName","src":"5195:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2979,"src":"5204:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2929,"nodeType":"UserDefinedTypeName","pathNode":{"id":2928,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2721,"src":"5204:12:14"},"referencedDeclaration":2721,"src":"5204:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5194:23:14"},"scope":3072,"src":"5069:1494:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3011,"nodeType":"Block","src":"6828:138:14","statements":[{"assignments":[2994,2997],"declarations":[{"constant":false,"id":2994,"mutability":"mutable","name":"recovered","nameLocation":"6847:9:14","nodeType":"VariableDeclaration","scope":3011,"src":"6839:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2993,"name":"address","nodeType":"ElementaryTypeName","src":"6839:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2997,"mutability":"mutable","name":"error","nameLocation":"6871:5:14","nodeType":"VariableDeclaration","scope":3011,"src":"6858:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2996,"nodeType":"UserDefinedTypeName","pathNode":{"id":2995,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2721,"src":"6858:12:14"},"referencedDeclaration":2721,"src":"6858:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":3004,"initialValue":{"arguments":[{"id":2999,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"6891:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3000,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"6897:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3001,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"6900:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3002,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"6903:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2998,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2811,2885,2979],"referencedDeclaration":2979,"src":"6880:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2721_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6880:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2721_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6838:67:14"},{"expression":{"arguments":[{"id":3006,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"6927:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2721","typeString":"enum ECDSA.RecoverError"}],"id":3005,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"6915:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2721_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6915:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3008,"nodeType":"ExpressionStatement","src":"6915:18:14"},{"expression":{"id":3009,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"6950:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2992,"id":3010,"nodeType":"Return","src":"6943:16:14"}]},"documentation":{"id":2980,"nodeType":"StructuredDocumentation","src":"6569:122:14","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3012,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6705:7:14","nodeType":"FunctionDefinition","parameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"mutability":"mutable","name":"hash","nameLocation":"6730:4:14","nodeType":"VariableDeclaration","scope":3012,"src":"6722:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6722:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2984,"mutability":"mutable","name":"v","nameLocation":"6750:1:14","nodeType":"VariableDeclaration","scope":3012,"src":"6744:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2983,"name":"uint8","nodeType":"ElementaryTypeName","src":"6744:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2986,"mutability":"mutable","name":"r","nameLocation":"6769:1:14","nodeType":"VariableDeclaration","scope":3012,"src":"6761:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6761:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2988,"mutability":"mutable","name":"s","nameLocation":"6788:1:14","nodeType":"VariableDeclaration","scope":3012,"src":"6780:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6780:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6712:83:14"},"returnParameters":{"id":2992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3012,"src":"6819:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2990,"name":"address","nodeType":"ElementaryTypeName","src":"6819:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6818:9:14"},"scope":3072,"src":"6696:270:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3028,"nodeType":"Block","src":"7334:187:14","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7472:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":3024,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"7508:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3021,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7455:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7455:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7455:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3020,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7445:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7445:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3019,"id":3027,"nodeType":"Return","src":"7438:76:14"}]},"documentation":{"id":3013,"nodeType":"StructuredDocumentation","src":"6972:279:14","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3029,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7265:22:14","nodeType":"FunctionDefinition","parameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3015,"mutability":"mutable","name":"hash","nameLocation":"7296:4:14","nodeType":"VariableDeclaration","scope":3029,"src":"7288:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7288:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7287:14:14"},"returnParameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3029,"src":"7325:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7325:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7324:9:14"},"scope":3072,"src":"7256:265:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3050,"nodeType":"Block","src":"7886:116:14","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7930:32:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":3043,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"7981:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7981:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3041,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"7964:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2711_$","typeString":"type(library Strings)"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2594,"src":"7964:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7964:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3046,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"7992:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3038,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7913:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7913:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7913:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3037,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7903:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7903:92:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3036,"id":3049,"nodeType":"Return","src":"7896:99:14"}]},"documentation":{"id":3030,"nodeType":"StructuredDocumentation","src":"7527:274:14","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3051,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7815:22:14","nodeType":"FunctionDefinition","parameters":{"id":3033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3032,"mutability":"mutable","name":"s","nameLocation":"7851:1:14","nodeType":"VariableDeclaration","scope":3051,"src":"7838:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3031,"name":"bytes","nodeType":"ElementaryTypeName","src":"7838:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7837:16:14"},"returnParameters":{"id":3036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3051,"src":"7877:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7877:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7876:9:14"},"scope":3072,"src":"7806:196:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3070,"nodeType":"Block","src":"8443:92:14","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8487:10:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":3065,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"8499:15:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3066,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"8516:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3062,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8470:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8470:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8470:57:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3061,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8460:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8460:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3060,"id":3069,"nodeType":"Return","src":"8453:75:14"}]},"documentation":{"id":3052,"nodeType":"StructuredDocumentation","src":"8008:328:14","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":3071,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8350:15:14","nodeType":"FunctionDefinition","parameters":{"id":3057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"mutability":"mutable","name":"domainSeparator","nameLocation":"8374:15:14","nodeType":"VariableDeclaration","scope":3071,"src":"8366:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8366:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3056,"mutability":"mutable","name":"structHash","nameLocation":"8399:10:14","nodeType":"VariableDeclaration","scope":3071,"src":"8391:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8391:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8365:45:14"},"returnParameters":{"id":3060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3071,"src":"8434:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8434:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8433:9:14"},"scope":3072,"src":"8341:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3073,"src":"369:8168:14","usedErrors":[]}],"src":"112:8426:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[3072],"EIP712":[3226],"Math":[4091],"Strings":[2711]},"id":3227,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3074,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:15"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":3075,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3227,"sourceUnit":3073,"src":"138:21:15","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3076,"nodeType":"StructuredDocumentation","src":"161:1142:15","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._"},"fullyImplemented":true,"id":3226,"linearizedBaseContracts":[3226],"name":"EIP712","nameLocation":"1322:6:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3078,"mutability":"immutable","name":"_CACHED_DOMAIN_SEPARATOR","nameLocation":"1598:24:15","nodeType":"VariableDeclaration","scope":3226,"src":"1572:50:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1572:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3080,"mutability":"immutable","name":"_CACHED_CHAIN_ID","nameLocation":"1654:16:15","nodeType":"VariableDeclaration","scope":3226,"src":"1628:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3079,"name":"uint256","nodeType":"ElementaryTypeName","src":"1628:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3082,"mutability":"immutable","name":"_CACHED_THIS","nameLocation":"1702:12:15","nodeType":"VariableDeclaration","scope":3226,"src":"1676:38:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3081,"name":"address","nodeType":"ElementaryTypeName","src":"1676:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3084,"mutability":"immutable","name":"_HASHED_NAME","nameLocation":"1747:12:15","nodeType":"VariableDeclaration","scope":3226,"src":"1721:38:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1721:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3086,"mutability":"immutable","name":"_HASHED_VERSION","nameLocation":"1791:15:15","nodeType":"VariableDeclaration","scope":3226,"src":"1765:41:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1765:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3088,"mutability":"immutable","name":"_TYPE_HASH","nameLocation":"1838:10:15","nodeType":"VariableDeclaration","scope":3226,"src":"1812:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1812:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":3152,"nodeType":"Block","src":"2519:547:15","statements":[{"assignments":[3097],"declarations":[{"constant":false,"id":3097,"mutability":"mutable","name":"hashedName","nameLocation":"2537:10:15","nodeType":"VariableDeclaration","scope":3152,"src":"2529:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2529:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3104,"initialValue":{"arguments":[{"arguments":[{"id":3101,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"2566:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2560:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3099,"name":"bytes","nodeType":"ElementaryTypeName","src":"2560:5:15","typeDescriptions":{}}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2560:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3098,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2550:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2550:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2529:43:15"},{"assignments":[3106],"declarations":[{"constant":false,"id":3106,"mutability":"mutable","name":"hashedVersion","nameLocation":"2590:13:15","nodeType":"VariableDeclaration","scope":3152,"src":"2582:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2582:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3113,"initialValue":{"arguments":[{"arguments":[{"id":3110,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"2622:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2616:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3108,"name":"bytes","nodeType":"ElementaryTypeName","src":"2616:5:15","typeDescriptions":{}}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2616:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3107,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2606:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2606:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2582:49:15"},{"assignments":[3115],"declarations":[{"constant":false,"id":3115,"mutability":"mutable","name":"typeHash","nameLocation":"2649:8:15","nodeType":"VariableDeclaration","scope":3152,"src":"2641:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2641:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3119,"initialValue":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2683:84:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3116,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2660:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2660:117:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2641:136:15"},{"expression":{"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3120,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"2787:12:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3121,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"2802:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2787:25:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3123,"nodeType":"ExpressionStatement","src":"2787:25:15"},{"expression":{"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3124,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"2822:15:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3125,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"2840:13:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2822:31:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3127,"nodeType":"ExpressionStatement","src":"2822:31:15"},{"expression":{"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3128,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"2863:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3129,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2882:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"2882:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2863:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3132,"nodeType":"ExpressionStatement","src":"2863:32:15"},{"expression":{"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3133,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"2905:24:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3135,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"2954:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3136,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"2964:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3137,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"2976:13:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3134,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"2932:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2932:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2905:85:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3140,"nodeType":"ExpressionStatement","src":"2905:85:15"},{"expression":{"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3141,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"3000:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3144,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3023:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3226","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3226","typeString":"contract EIP712"}],"id":3143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3015:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3142,"name":"address","nodeType":"ElementaryTypeName","src":"3015:7:15","typeDescriptions":{}}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3015:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3000:28:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3147,"nodeType":"ExpressionStatement","src":"3000:28:15"},{"expression":{"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3148,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"3038:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3149,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"3051:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3038:21:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3151,"nodeType":"ExpressionStatement","src":"3038:21:15"}]},"documentation":{"id":3089,"nodeType":"StructuredDocumentation","src":"1900:559:15","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3153,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"name","nameLocation":"2490:4:15","nodeType":"VariableDeclaration","scope":3153,"src":"2476:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3090,"name":"string","nodeType":"ElementaryTypeName","src":"2476:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"version","nameLocation":"2510:7:15","nodeType":"VariableDeclaration","scope":3153,"src":"2496:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3092,"name":"string","nodeType":"ElementaryTypeName","src":"2496:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2475:43:15"},"returnParameters":{"id":3095,"nodeType":"ParameterList","parameters":[],"src":"2519:0:15"},"scope":3226,"src":"2464:602:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3181,"nodeType":"Block","src":"3214:246:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3161,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3236:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3226","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3226","typeString":"contract EIP712"}],"id":3160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3228:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3159,"name":"address","nodeType":"ElementaryTypeName","src":"3228:7:15","typeDescriptions":{}}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3228:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3163,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"3245:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3228:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3165,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3261:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3261:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3167,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"3278:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3261:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3228:66:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3179,"nodeType":"Block","src":"3358:96:15","statements":[{"expression":{"arguments":[{"id":3174,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"3401:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3175,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"3413:12:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3176,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"3427:15:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3173,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"3379:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3379:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3158,"id":3178,"nodeType":"Return","src":"3372:71:15"}]},"id":3180,"nodeType":"IfStatement","src":"3224:230:15","trueBody":{"id":3172,"nodeType":"Block","src":"3296:56:15","statements":[{"expression":{"id":3170,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"3317:24:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3158,"id":3171,"nodeType":"Return","src":"3310:31:15"}]}}]},"documentation":{"id":3154,"nodeType":"StructuredDocumentation","src":"3072:75:15","text":" @dev Returns the domain separator for the current chain."},"id":3182,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3161:18:15","nodeType":"FunctionDefinition","parameters":{"id":3155,"nodeType":"ParameterList","parameters":[],"src":"3179:2:15"},"returnParameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3182,"src":"3205:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3156,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3205:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3204:9:15"},"scope":3226,"src":"3152:308:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3208,"nodeType":"Block","src":"3615:108:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3196,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"3653:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3197,"name":"nameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"3663:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3198,"name":"versionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"3673:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3199,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3686:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3686:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3203,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3709:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3226","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3226","typeString":"contract EIP712"}],"id":3202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3201,"name":"address","nodeType":"ElementaryTypeName","src":"3701:7:15","typeDescriptions":{}}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3701:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3194,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3642:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3642:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3642:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3193,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3632:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3632:84:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3192,"id":3207,"nodeType":"Return","src":"3625:91:15"}]},"id":3209,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3475:21:15","nodeType":"FunctionDefinition","parameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3184,"mutability":"mutable","name":"typeHash","nameLocation":"3514:8:15","nodeType":"VariableDeclaration","scope":3209,"src":"3506:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3506:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3186,"mutability":"mutable","name":"nameHash","nameLocation":"3540:8:15","nodeType":"VariableDeclaration","scope":3209,"src":"3532:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3532:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3188,"mutability":"mutable","name":"versionHash","nameLocation":"3566:11:15","nodeType":"VariableDeclaration","scope":3209,"src":"3558:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3558:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3496:87:15"},"returnParameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3209,"src":"3606:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3606:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3605:9:15"},"scope":3226,"src":"3466:257:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3224,"nodeType":"Block","src":"4434:79:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3219,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"4473:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4473:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3221,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"4495:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3217,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"4451:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3072_$","typeString":"type(library ECDSA)"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3071,"src":"4451:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4451:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3216,"id":3223,"nodeType":"Return","src":"4444:62:15"}]},"documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"3729:614:15","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3225,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4357:16:15","nodeType":"FunctionDefinition","parameters":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"structHash","nameLocation":"4382:10:15","nodeType":"VariableDeclaration","scope":3225,"src":"4374:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4374:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4373:20:15"},"returnParameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3225,"src":"4425:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4425:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4424:9:15"},"scope":3226,"src":"4348:165:15","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3227,"src":"1304:3211:15","usedErrors":[]}],"src":"113:4403:15"},"id":15},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4091]},"id":4092,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3228,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3229,"nodeType":"StructuredDocumentation","src":"128:73:16","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4091,"linearizedBaseContracts":[4091],"name":"Math","nameLocation":"210:4:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3233,"members":[{"id":3230,"name":"Down","nameLocation":"245:4:16","nodeType":"EnumValue","src":"245:4:16"},{"id":3231,"name":"Up","nameLocation":"287:2:16","nodeType":"EnumValue","src":"287:2:16"},{"id":3232,"name":"Zero","nameLocation":"318:4:16","nodeType":"EnumValue","src":"318:4:16"}],"name":"Rounding","nameLocation":"226:8:16","nodeType":"EnumDefinition","src":"221:122:16"},{"body":{"id":3250,"nodeType":"Block","src":"480:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3243,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"497:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3244,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"501:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3247,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"509:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:16","trueExpression":{"id":3246,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"505:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3242,"id":3249,"nodeType":"Return","src":"490:20:16"}]},"documentation":{"id":3234,"nodeType":"StructuredDocumentation","src":"349:59:16","text":" @dev Returns the largest of two numbers."},"id":3251,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:16","nodeType":"FunctionDefinition","parameters":{"id":3239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3236,"mutability":"mutable","name":"a","nameLocation":"434:1:16","nodeType":"VariableDeclaration","scope":3251,"src":"426:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3235,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3238,"mutability":"mutable","name":"b","nameLocation":"445:1:16","nodeType":"VariableDeclaration","scope":3251,"src":"437:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:16"},"returnParameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3251,"src":"471:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3240,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:16"},"scope":4091,"src":"413:104:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3268,"nodeType":"Block","src":"655:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3261,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"672:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3262,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"676:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3265,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"684:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:16","trueExpression":{"id":3264,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"680:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3260,"id":3267,"nodeType":"Return","src":"665:20:16"}]},"documentation":{"id":3252,"nodeType":"StructuredDocumentation","src":"523:60:16","text":" @dev Returns the smallest of two numbers."},"id":3269,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:16","nodeType":"FunctionDefinition","parameters":{"id":3257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"mutability":"mutable","name":"a","nameLocation":"609:1:16","nodeType":"VariableDeclaration","scope":3269,"src":"601:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3256,"mutability":"mutable","name":"b","nameLocation":"620:1:16","nodeType":"VariableDeclaration","scope":3269,"src":"612:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3255,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:16"},"returnParameters":{"id":3260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3269,"src":"646:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3258,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:16"},"scope":4091,"src":"588:104:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3291,"nodeType":"Block","src":"876:82:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3279,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"931:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3280,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"935:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3283,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"941:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3284,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"945:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3286,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3278,"id":3290,"nodeType":"Return","src":"923:28:16"}]},"documentation":{"id":3270,"nodeType":"StructuredDocumentation","src":"698:102:16","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3292,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:16","nodeType":"FunctionDefinition","parameters":{"id":3275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"a","nameLocation":"830:1:16","nodeType":"VariableDeclaration","scope":3292,"src":"822:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3274,"mutability":"mutable","name":"b","nameLocation":"841:1:16","nodeType":"VariableDeclaration","scope":3292,"src":"833:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3273,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:16"},"returnParameters":{"id":3278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3292,"src":"867:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:16"},"scope":4091,"src":"805:153:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3316,"nodeType":"Block","src":"1228:123:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3302,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"1316:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3306,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"1330:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3309,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3310,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"1339:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:16","trueExpression":{"hexValue":"30","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3301,"id":3315,"nodeType":"Return","src":"1309:35:16"}]},"documentation":{"id":3293,"nodeType":"StructuredDocumentation","src":"964:188:16","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3317,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:16","nodeType":"FunctionDefinition","parameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"a","nameLocation":"1182:1:16","nodeType":"VariableDeclaration","scope":3317,"src":"1174:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3297,"mutability":"mutable","name":"b","nameLocation":"1193:1:16","nodeType":"VariableDeclaration","scope":3317,"src":"1185:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:16"},"returnParameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3317,"src":"1219:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:16"},"scope":4091,"src":"1157:194:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3438,"nodeType":"Block","src":"1795:3797:16","statements":[{"id":3437,"nodeType":"UncheckedBlock","src":"1805:3781:16","statements":[{"assignments":[3330],"declarations":[{"constant":false,"id":3330,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:16","nodeType":"VariableDeclaration","scope":3437,"src":"2126:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3329,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3331,"nodeType":"VariableDeclarationStatement","src":"2126:13:16"},{"assignments":[3333],"declarations":[{"constant":false,"id":3333,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:16","nodeType":"VariableDeclaration","scope":3437,"src":"2198:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3334,"nodeType":"VariableDeclarationStatement","src":"2198:13:16"},{"AST":{"nodeType":"YulBlock","src":"2278:157:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:16"},"nodeType":"YulFunctionCall","src":"2319:6:16"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:16"},"nodeType":"YulFunctionCall","src":"2306:20:16"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:16","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:16"},"nodeType":"YulFunctionCall","src":"2352:9:16"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:16"}]},{"nodeType":"YulAssignment","src":"2378:43:16","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:16"},"nodeType":"YulFunctionCall","src":"2391:14:16"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:16"},"nodeType":"YulFunctionCall","src":"2407:13:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:16"},"nodeType":"YulFunctionCall","src":"2387:34:16"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3330,"isOffset":false,"isSlot":false,"src":"2343:5:16","valueSize":1},{"declaration":3330,"isOffset":false,"isSlot":false,"src":"2399:5:16","valueSize":1},{"declaration":3330,"isOffset":false,"isSlot":false,"src":"2414:5:16","valueSize":1},{"declaration":3333,"isOffset":false,"isSlot":false,"src":"2378:5:16","valueSize":1},{"declaration":3320,"isOffset":false,"isSlot":false,"src":"2313:1:16","valueSize":1},{"declaration":3320,"isOffset":false,"isSlot":false,"src":"2356:1:16","valueSize":1},{"declaration":3322,"isOffset":false,"isSlot":false,"src":"2316:1:16","valueSize":1},{"declaration":3322,"isOffset":false,"isSlot":false,"src":"2359:1:16","valueSize":1}],"id":3335,"nodeType":"InlineAssembly","src":"2269:166:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3336,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"2516:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3344,"nodeType":"IfStatement","src":"2512:75:16","trueBody":{"id":3343,"nodeType":"Block","src":"2528:59:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3339,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"2553:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3340,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"2561:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3328,"id":3342,"nodeType":"Return","src":"2546:26:16"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3346,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"2697:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3347,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"2711:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3345,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3350,"nodeType":"ExpressionStatement","src":"2689:28:16"},{"assignments":[3352],"declarations":[{"constant":false,"id":3352,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:16","nodeType":"VariableDeclaration","scope":3437,"src":"2973:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3353,"nodeType":"VariableDeclarationStatement","src":"2973:17:16"},{"AST":{"nodeType":"YulBlock","src":"3013:291:16","statements":[{"nodeType":"YulAssignment","src":"3082:38:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:16"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:16"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:16"},"nodeType":"YulFunctionCall","src":"3095:25:16"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:16"}]},{"nodeType":"YulAssignment","src":"3202:41:16","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:16"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:16"},"nodeType":"YulFunctionCall","src":"3222:20:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:16"},"nodeType":"YulFunctionCall","src":"3211:32:16"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:16"}]},{"nodeType":"YulAssignment","src":"3260:30:16","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:16"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:16"},"nodeType":"YulFunctionCall","src":"3269:21:16"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3324,"isOffset":false,"isSlot":false,"src":"3108:11:16","valueSize":1},{"declaration":3330,"isOffset":false,"isSlot":false,"src":"3236:5:16","valueSize":1},{"declaration":3330,"isOffset":false,"isSlot":false,"src":"3260:5:16","valueSize":1},{"declaration":3330,"isOffset":false,"isSlot":false,"src":"3273:5:16","valueSize":1},{"declaration":3333,"isOffset":false,"isSlot":false,"src":"3202:5:16","valueSize":1},{"declaration":3333,"isOffset":false,"isSlot":false,"src":"3215:5:16","valueSize":1},{"declaration":3352,"isOffset":false,"isSlot":false,"src":"3082:9:16","valueSize":1},{"declaration":3352,"isOffset":false,"isSlot":false,"src":"3225:9:16","valueSize":1},{"declaration":3352,"isOffset":false,"isSlot":false,"src":"3280:9:16","valueSize":1},{"declaration":3320,"isOffset":false,"isSlot":false,"src":"3102:1:16","valueSize":1},{"declaration":3322,"isOffset":false,"isSlot":false,"src":"3105:1:16","valueSize":1}],"id":3354,"nodeType":"InlineAssembly","src":"3004:300:16"},{"assignments":[3356],"declarations":[{"constant":false,"id":3356,"mutability":"mutable","name":"twos","nameLocation":"3619:4:16","nodeType":"VariableDeclaration","scope":3437,"src":"3611:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3355,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3364,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3357,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"3626:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:16","subExpression":{"id":3358,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"3642:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3362,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:16"},{"AST":{"nodeType":"YulBlock","src":"3681:362:16","statements":[{"nodeType":"YulAssignment","src":"3746:37:16","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:16"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:16"},"nodeType":"YulFunctionCall","src":"3761:22:16"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:16"}]},{"nodeType":"YulAssignment","src":"3850:25:16","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:16"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:16"},"nodeType":"YulFunctionCall","src":"3859:16:16"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:16"}]},{"nodeType":"YulAssignment","src":"3990:39:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:16","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:16"},"nodeType":"YulFunctionCall","src":"4006:12:16"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:16"},"nodeType":"YulFunctionCall","src":"4002:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:16"},"nodeType":"YulFunctionCall","src":"3998:31:16"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3324,"isOffset":false,"isSlot":false,"src":"3746:11:16","valueSize":1},{"declaration":3324,"isOffset":false,"isSlot":false,"src":"3765:11:16","valueSize":1},{"declaration":3330,"isOffset":false,"isSlot":false,"src":"3850:5:16","valueSize":1},{"declaration":3330,"isOffset":false,"isSlot":false,"src":"3863:5:16","valueSize":1},{"declaration":3356,"isOffset":false,"isSlot":false,"src":"3778:4:16","valueSize":1},{"declaration":3356,"isOffset":false,"isSlot":false,"src":"3870:4:16","valueSize":1},{"declaration":3356,"isOffset":false,"isSlot":false,"src":"3990:4:16","valueSize":1},{"declaration":3356,"isOffset":false,"isSlot":false,"src":"4013:4:16","valueSize":1},{"declaration":3356,"isOffset":false,"isSlot":false,"src":"4020:4:16","valueSize":1}],"id":3365,"nodeType":"InlineAssembly","src":"3672:371:16"},{"expression":{"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3366,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"4109:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3367,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"4118:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3368,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"4126:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3371,"nodeType":"ExpressionStatement","src":"4109:21:16"},{"assignments":[3373],"declarations":[{"constant":false,"id":3373,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:16","nodeType":"VariableDeclaration","scope":3437,"src":"4448:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3372,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3380,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3375,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"4471:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:16"},{"expression":{"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3381,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"4704:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3383,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"4719:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3384,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"4733:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3388,"nodeType":"ExpressionStatement","src":"4704:36:16"},{"expression":{"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3389,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"4773:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3391,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"4788:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3392,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"4802:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3396,"nodeType":"ExpressionStatement","src":"4773:36:16"},{"expression":{"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3397,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"4843:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3399,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"4858:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3400,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"4872:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3404,"nodeType":"ExpressionStatement","src":"4843:36:16"},{"expression":{"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3405,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"4913:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3407,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"4928:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3408,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"4942:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3412,"nodeType":"ExpressionStatement","src":"4913:36:16"},{"expression":{"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3413,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"4983:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3415,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"4998:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3416,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"5012:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3420,"nodeType":"ExpressionStatement","src":"4983:36:16"},{"expression":{"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3421,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"5054:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3423,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"5069:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3424,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"5083:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3428,"nodeType":"ExpressionStatement","src":"5054:36:16"},{"expression":{"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3429,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"5524:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3430,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"5533:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3431,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"5541:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3434,"nodeType":"ExpressionStatement","src":"5524:24:16"},{"expression":{"id":3435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"5569:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3328,"id":3436,"nodeType":"Return","src":"5562:13:16"}]}]},"documentation":{"id":3318,"nodeType":"StructuredDocumentation","src":"1357:305:16","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3439,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:16","nodeType":"FunctionDefinition","parameters":{"id":3325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3320,"mutability":"mutable","name":"x","nameLocation":"1700:1:16","nodeType":"VariableDeclaration","scope":3439,"src":"1692:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3319,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3322,"mutability":"mutable","name":"y","nameLocation":"1719:1:16","nodeType":"VariableDeclaration","scope":3439,"src":"1711:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3324,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:16","nodeType":"VariableDeclaration","scope":3439,"src":"1730:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:16"},"returnParameters":{"id":3328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3327,"mutability":"mutable","name":"result","nameLocation":"1787:6:16","nodeType":"VariableDeclaration","scope":3439,"src":"1779:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:16"},"scope":4091,"src":"1667:3925:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3482,"nodeType":"Block","src":"5872:189:16","statements":[{"assignments":[3455],"declarations":[{"constant":false,"id":3455,"mutability":"mutable","name":"result","nameLocation":"5890:6:16","nodeType":"VariableDeclaration","scope":3482,"src":"5882:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3461,"initialValue":{"arguments":[{"id":3457,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"5906:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3458,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"5909:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3459,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"5912:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3456,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3439,3483],"referencedDeclaration":3439,"src":"5899:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5899:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3462,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"5938:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3463,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"5950:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3233_$","typeString":"type(enum Math.Rounding)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"5950:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"}},"src":"5938:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3467,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"5972:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3468,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"5975:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3469,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"5978:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3466,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3479,"nodeType":"IfStatement","src":"5934:98:16","trueBody":{"id":3478,"nodeType":"Block","src":"5996:36:16","statements":[{"expression":{"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3474,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"6010:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3477,"nodeType":"ExpressionStatement","src":"6010:11:16"}]}},{"expression":{"id":3480,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"6048:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3453,"id":3481,"nodeType":"Return","src":"6041:13:16"}]},"documentation":{"id":3440,"nodeType":"StructuredDocumentation","src":"5598:121:16","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3483,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:16","nodeType":"FunctionDefinition","parameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"mutability":"mutable","name":"x","nameLocation":"5757:1:16","nodeType":"VariableDeclaration","scope":3483,"src":"5749:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3441,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3444,"mutability":"mutable","name":"y","nameLocation":"5776:1:16","nodeType":"VariableDeclaration","scope":3483,"src":"5768:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3443,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3446,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:16","nodeType":"VariableDeclaration","scope":3483,"src":"5787:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3449,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:16","nodeType":"VariableDeclaration","scope":3483,"src":"5816:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"},"typeName":{"id":3448,"nodeType":"UserDefinedTypeName","pathNode":{"id":3447,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3233,"src":"5816:8:16"},"referencedDeclaration":3233,"src":"5816:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:16"},"returnParameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3483,"src":"5863:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:16"},"scope":4091,"src":"5724:337:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3594,"nodeType":"Block","src":"6337:1585:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3491,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"6351:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3497,"nodeType":"IfStatement","src":"6347:45:16","trueBody":{"id":3496,"nodeType":"Block","src":"6359:33:16","statements":[{"expression":{"hexValue":"30","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3490,"id":3495,"nodeType":"Return","src":"6373:8:16"}]}},{"assignments":[3499],"declarations":[{"constant":false,"id":3499,"mutability":"mutable","name":"result","nameLocation":"7079:6:16","nodeType":"VariableDeclaration","scope":3594,"src":"7071:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3498,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3508,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3502,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"7099:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3501,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3763,3799],"referencedDeclaration":3763,"src":"7094:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7094:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:16"},{"id":3593,"nodeType":"UncheckedBlock","src":"7508:408:16","statements":[{"expression":{"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3509,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7532:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3510,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7542:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3511,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"7551:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7555:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3515,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3519,"nodeType":"ExpressionStatement","src":"7532:35:16"},{"expression":{"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3520,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7581:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7591:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3522,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"7600:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7604:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3526,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3530,"nodeType":"ExpressionStatement","src":"7581:35:16"},{"expression":{"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3531,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7630:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3532,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7640:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3533,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"7649:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7653:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3541,"nodeType":"ExpressionStatement","src":"7630:35:16"},{"expression":{"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3542,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7679:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3543,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7689:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3544,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"7698:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7702:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3552,"nodeType":"ExpressionStatement","src":"7679:35:16"},{"expression":{"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3553,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7728:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3554,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7738:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3555,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"7747:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3556,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7751:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3563,"nodeType":"ExpressionStatement","src":"7728:35:16"},{"expression":{"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7777:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7787:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3566,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"7796:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7800:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3574,"nodeType":"ExpressionStatement","src":"7777:35:16"},{"expression":{"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3575,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7826:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3576,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7836:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3577,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"7845:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7849:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3581,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3585,"nodeType":"ExpressionStatement","src":"7826:35:16"},{"expression":{"arguments":[{"id":3587,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7886:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3588,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"7894:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3589,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"7898:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3586,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"7882:3:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7882:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3490,"id":3592,"nodeType":"Return","src":"7875:30:16"}]}]},"documentation":{"id":3484,"nodeType":"StructuredDocumentation","src":"6067:208:16","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3595,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:16","nodeType":"FunctionDefinition","parameters":{"id":3487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3486,"mutability":"mutable","name":"a","nameLocation":"6302:1:16","nodeType":"VariableDeclaration","scope":3595,"src":"6294:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3485,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:16"},"returnParameters":{"id":3490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3595,"src":"6328:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:16"},"scope":4091,"src":"6280:1642:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3630,"nodeType":"Block","src":"8098:161:16","statements":[{"id":3629,"nodeType":"UncheckedBlock","src":"8108:145:16","statements":[{"assignments":[3607],"declarations":[{"constant":false,"id":3607,"mutability":"mutable","name":"result","nameLocation":"8140:6:16","nodeType":"VariableDeclaration","scope":3629,"src":"8132:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3606,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3611,"initialValue":{"arguments":[{"id":3609,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"8154:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3608,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3595,3631],"referencedDeclaration":3595,"src":"8149:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"8177:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3613,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"8187:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3614,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"8199:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3233_$","typeString":"type(enum Math.Rounding)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"8199:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"}},"src":"8187:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3617,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"8214:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"8223:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3620,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"8232:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:16","trueExpression":{"hexValue":"31","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3626,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3605,"id":3628,"nodeType":"Return","src":"8170:72:16"}]}]},"documentation":{"id":3596,"nodeType":"StructuredDocumentation","src":"7928:89:16","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3631,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:16","nodeType":"FunctionDefinition","parameters":{"id":3602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3598,"mutability":"mutable","name":"a","nameLocation":"8044:1:16","nodeType":"VariableDeclaration","scope":3631,"src":"8036:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3597,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:16","nodeType":"VariableDeclaration","scope":3631,"src":"8047:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"},"typeName":{"id":3600,"nodeType":"UserDefinedTypeName","pathNode":{"id":3599,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3233,"src":"8047:8:16"},"referencedDeclaration":3233,"src":"8047:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:16"},"returnParameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3631,"src":"8089:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:16"},"scope":4091,"src":"8022:237:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3762,"nodeType":"Block","src":"8444:922:16","statements":[{"assignments":[3640],"declarations":[{"constant":false,"id":3640,"mutability":"mutable","name":"result","nameLocation":"8462:6:16","nodeType":"VariableDeclaration","scope":3762,"src":"8454:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3639,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3642,"initialValue":{"hexValue":"30","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:16"},{"id":3759,"nodeType":"UncheckedBlock","src":"8482:855:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"8510:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3657,"nodeType":"IfStatement","src":"8506:99:16","trueBody":{"id":3656,"nodeType":"Block","src":"8528:77:16","statements":[{"expression":{"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"8546:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3651,"nodeType":"ExpressionStatement","src":"8546:13:16"},{"expression":{"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"8577:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3655,"nodeType":"ExpressionStatement","src":"8577:13:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"8622:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3672,"nodeType":"IfStatement","src":"8618:96:16","trueBody":{"id":3671,"nodeType":"Block","src":"8639:75:16","statements":[{"expression":{"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"8657:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3666,"nodeType":"ExpressionStatement","src":"8657:12:16"},{"expression":{"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3667,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"8687:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3670,"nodeType":"ExpressionStatement","src":"8687:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"8731:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3687,"nodeType":"IfStatement","src":"8727:96:16","trueBody":{"id":3686,"nodeType":"Block","src":"8748:75:16","statements":[{"expression":{"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"8766:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3681,"nodeType":"ExpressionStatement","src":"8766:12:16"},{"expression":{"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3682,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"8796:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3685,"nodeType":"ExpressionStatement","src":"8796:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"8840:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3702,"nodeType":"IfStatement","src":"8836:96:16","trueBody":{"id":3701,"nodeType":"Block","src":"8857:75:16","statements":[{"expression":{"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"8875:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3696,"nodeType":"ExpressionStatement","src":"8875:12:16"},{"expression":{"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3697,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"8905:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3700,"nodeType":"ExpressionStatement","src":"8905:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"8949:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3717,"nodeType":"IfStatement","src":"8945:93:16","trueBody":{"id":3716,"nodeType":"Block","src":"8965:73:16","statements":[{"expression":{"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"8983:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3711,"nodeType":"ExpressionStatement","src":"8983:11:16"},{"expression":{"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"9012:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3715,"nodeType":"ExpressionStatement","src":"9012:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"9055:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3732,"nodeType":"IfStatement","src":"9051:93:16","trueBody":{"id":3731,"nodeType":"Block","src":"9071:73:16","statements":[{"expression":{"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"9089:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3726,"nodeType":"ExpressionStatement","src":"9089:11:16"},{"expression":{"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3727,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"9118:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3730,"nodeType":"ExpressionStatement","src":"9118:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"9161:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3747,"nodeType":"IfStatement","src":"9157:93:16","trueBody":{"id":3746,"nodeType":"Block","src":"9177:73:16","statements":[{"expression":{"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"9195:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3741,"nodeType":"ExpressionStatement","src":"9195:11:16"},{"expression":{"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3742,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"9224:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3745,"nodeType":"ExpressionStatement","src":"9224:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"9267:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3758,"nodeType":"IfStatement","src":"9263:64:16","trueBody":{"id":3757,"nodeType":"Block","src":"9283:44:16","statements":[{"expression":{"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3753,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"9301:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3756,"nodeType":"ExpressionStatement","src":"9301:11:16"}]}}]},{"expression":{"id":3760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"9353:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3638,"id":3761,"nodeType":"Return","src":"9346:13:16"}]},"documentation":{"id":3632,"nodeType":"StructuredDocumentation","src":"8265:113:16","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3763,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:16","nodeType":"FunctionDefinition","parameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"value","nameLocation":"8405:5:16","nodeType":"VariableDeclaration","scope":3763,"src":"8397:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3633,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:16"},"returnParameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3763,"src":"8435:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:16"},"scope":4091,"src":"8383:983:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3798,"nodeType":"Block","src":"9599:165:16","statements":[{"id":3797,"nodeType":"UncheckedBlock","src":"9609:149:16","statements":[{"assignments":[3775],"declarations":[{"constant":false,"id":3775,"mutability":"mutable","name":"result","nameLocation":"9641:6:16","nodeType":"VariableDeclaration","scope":3797,"src":"9633:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3774,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3779,"initialValue":{"arguments":[{"id":3777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"9655:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3776,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3763,3799],"referencedDeclaration":3763,"src":"9650:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9650:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"9682:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3781,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"9692:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3782,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"9704:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3233_$","typeString":"type(enum Math.Rounding)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"9704:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"}},"src":"9692:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3786,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"9724:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"9733:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:16","trueExpression":{"hexValue":"31","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3773,"id":3796,"nodeType":"Return","src":"9675:72:16"}]}]},"documentation":{"id":3764,"nodeType":"StructuredDocumentation","src":"9372:142:16","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3799,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:16","nodeType":"FunctionDefinition","parameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3766,"mutability":"mutable","name":"value","nameLocation":"9541:5:16","nodeType":"VariableDeclaration","scope":3799,"src":"9533:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3765,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3769,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:16","nodeType":"VariableDeclaration","scope":3799,"src":"9548:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"},"typeName":{"id":3768,"nodeType":"UserDefinedTypeName","pathNode":{"id":3767,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3233,"src":"9548:8:16"},"referencedDeclaration":3233,"src":"9548:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:16"},"returnParameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3799,"src":"9590:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3771,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:16"},"scope":4091,"src":"9519:245:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3927,"nodeType":"Block","src":"9951:828:16","statements":[{"assignments":[3808],"declarations":[{"constant":false,"id":3808,"mutability":"mutable","name":"result","nameLocation":"9969:6:16","nodeType":"VariableDeclaration","scope":3927,"src":"9961:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3807,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3810,"initialValue":{"hexValue":"30","id":3809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:16"},{"id":3924,"nodeType":"UncheckedBlock","src":"9989:761:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"10017:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3827,"nodeType":"IfStatement","src":"10013:99:16","trueBody":{"id":3826,"nodeType":"Block","src":"10034:78:16","statements":[{"expression":{"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"10052:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3821,"nodeType":"ExpressionStatement","src":"10052:15:16"},{"expression":{"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3822,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"10085:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3825,"nodeType":"ExpressionStatement","src":"10085:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"10129:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3844,"nodeType":"IfStatement","src":"10125:99:16","trueBody":{"id":3843,"nodeType":"Block","src":"10146:78:16","statements":[{"expression":{"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"10164:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3838,"nodeType":"ExpressionStatement","src":"10164:15:16"},{"expression":{"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"10197:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3842,"nodeType":"ExpressionStatement","src":"10197:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"10241:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3861,"nodeType":"IfStatement","src":"10237:99:16","trueBody":{"id":3860,"nodeType":"Block","src":"10258:78:16","statements":[{"expression":{"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"10276:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3855,"nodeType":"ExpressionStatement","src":"10276:15:16"},{"expression":{"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3856,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"10309:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3859,"nodeType":"ExpressionStatement","src":"10309:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"10353:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3878,"nodeType":"IfStatement","src":"10349:96:16","trueBody":{"id":3877,"nodeType":"Block","src":"10369:76:16","statements":[{"expression":{"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"10387:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3872,"nodeType":"ExpressionStatement","src":"10387:14:16"},{"expression":{"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3873,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"10419:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3876,"nodeType":"ExpressionStatement","src":"10419:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"10462:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3895,"nodeType":"IfStatement","src":"10458:96:16","trueBody":{"id":3894,"nodeType":"Block","src":"10478:76:16","statements":[{"expression":{"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"10496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3889,"nodeType":"ExpressionStatement","src":"10496:14:16"},{"expression":{"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3890,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"10528:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3893,"nodeType":"ExpressionStatement","src":"10528:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"10571:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3912,"nodeType":"IfStatement","src":"10567:96:16","trueBody":{"id":3911,"nodeType":"Block","src":"10587:76:16","statements":[{"expression":{"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"10605:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3906,"nodeType":"ExpressionStatement","src":"10605:14:16"},{"expression":{"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"10637:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3910,"nodeType":"ExpressionStatement","src":"10637:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"10680:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3923,"nodeType":"IfStatement","src":"10676:64:16","trueBody":{"id":3922,"nodeType":"Block","src":"10696:44:16","statements":[{"expression":{"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"10714:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3921,"nodeType":"ExpressionStatement","src":"10714:11:16"}]}}]},{"expression":{"id":3925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"10766:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3806,"id":3926,"nodeType":"Return","src":"10759:13:16"}]},"documentation":{"id":3800,"nodeType":"StructuredDocumentation","src":"9770:114:16","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3928,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:16","nodeType":"FunctionDefinition","parameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3802,"mutability":"mutable","name":"value","nameLocation":"9912:5:16","nodeType":"VariableDeclaration","scope":3928,"src":"9904:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:16"},"returnParameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3928,"src":"9942:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:16"},"scope":4091,"src":"9889:890:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3963,"nodeType":"Block","src":"11014:165:16","statements":[{"id":3962,"nodeType":"UncheckedBlock","src":"11024:149:16","statements":[{"assignments":[3940],"declarations":[{"constant":false,"id":3940,"mutability":"mutable","name":"result","nameLocation":"11056:6:16","nodeType":"VariableDeclaration","scope":3962,"src":"11048:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3944,"initialValue":{"arguments":[{"id":3942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"11071:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3941,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3928,3964],"referencedDeclaration":3928,"src":"11065:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3945,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"11098:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3946,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"11108:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3947,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"11120:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3233_$","typeString":"type(enum Math.Rounding)"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"11120:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"}},"src":"11108:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"11139:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"11148:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:16","trueExpression":{"hexValue":"31","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3959,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3938,"id":3961,"nodeType":"Return","src":"11091:71:16"}]}]},"documentation":{"id":3929,"nodeType":"StructuredDocumentation","src":"10785:143:16","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3964,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:16","nodeType":"FunctionDefinition","parameters":{"id":3935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3931,"mutability":"mutable","name":"value","nameLocation":"10956:5:16","nodeType":"VariableDeclaration","scope":3964,"src":"10948:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3930,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3934,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:16","nodeType":"VariableDeclaration","scope":3964,"src":"10963:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"},"typeName":{"id":3933,"nodeType":"UserDefinedTypeName","pathNode":{"id":3932,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3233,"src":"10963:8:16"},"referencedDeclaration":3233,"src":"10963:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:16"},"returnParameters":{"id":3938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3964,"src":"11005:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3936,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:16"},"scope":4091,"src":"10933:246:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4050,"nodeType":"Block","src":"11493:600:16","statements":[{"assignments":[3973],"declarations":[{"constant":false,"id":3973,"mutability":"mutable","name":"result","nameLocation":"11511:6:16","nodeType":"VariableDeclaration","scope":4050,"src":"11503:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3972,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3975,"initialValue":{"hexValue":"30","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:16"},{"id":4047,"nodeType":"UncheckedBlock","src":"11531:533:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"11559:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3990,"nodeType":"IfStatement","src":"11555:98:16","trueBody":{"id":3989,"nodeType":"Block","src":"11577:76:16","statements":[{"expression":{"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"11595:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3984,"nodeType":"ExpressionStatement","src":"11595:13:16"},{"expression":{"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3985,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"11626:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3988,"nodeType":"ExpressionStatement","src":"11626:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"11670:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4005,"nodeType":"IfStatement","src":"11666:95:16","trueBody":{"id":4004,"nodeType":"Block","src":"11687:74:16","statements":[{"expression":{"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"11705:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3999,"nodeType":"ExpressionStatement","src":"11705:12:16"},{"expression":{"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4000,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"11735:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4003,"nodeType":"ExpressionStatement","src":"11735:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"11778:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4020,"nodeType":"IfStatement","src":"11774:95:16","trueBody":{"id":4019,"nodeType":"Block","src":"11795:74:16","statements":[{"expression":{"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"11813:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4014,"nodeType":"ExpressionStatement","src":"11813:12:16"},{"expression":{"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4015,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"11843:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4018,"nodeType":"ExpressionStatement","src":"11843:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"11886:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4035,"nodeType":"IfStatement","src":"11882:95:16","trueBody":{"id":4034,"nodeType":"Block","src":"11903:74:16","statements":[{"expression":{"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"11921:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4029,"nodeType":"ExpressionStatement","src":"11921:12:16"},{"expression":{"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4030,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"11951:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4033,"nodeType":"ExpressionStatement","src":"11951:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"11994:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4046,"nodeType":"IfStatement","src":"11990:64:16","trueBody":{"id":4045,"nodeType":"Block","src":"12010:44:16","statements":[{"expression":{"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4041,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"12028:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4044,"nodeType":"ExpressionStatement","src":"12028:11:16"}]}}]},{"expression":{"id":4048,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"12080:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3971,"id":4049,"nodeType":"Return","src":"12073:13:16"}]},"documentation":{"id":3965,"nodeType":"StructuredDocumentation","src":"11185:240:16","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4051,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:16","nodeType":"FunctionDefinition","parameters":{"id":3968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3967,"mutability":"mutable","name":"value","nameLocation":"11454:5:16","nodeType":"VariableDeclaration","scope":4051,"src":"11446:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3966,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:16"},"returnParameters":{"id":3971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4051,"src":"11484:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3969,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:16"},"scope":4091,"src":"11430:663:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4089,"nodeType":"Block","src":"12329:173:16","statements":[{"id":4088,"nodeType":"UncheckedBlock","src":"12339:157:16","statements":[{"assignments":[4063],"declarations":[{"constant":false,"id":4063,"mutability":"mutable","name":"result","nameLocation":"12371:6:16","nodeType":"VariableDeclaration","scope":4088,"src":"12363:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4062,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4067,"initialValue":{"arguments":[{"id":4065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"12387:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4064,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4051,4090],"referencedDeclaration":4051,"src":"12380:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12380:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4068,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"12414:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4069,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"12424:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4070,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"12436:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3233_$","typeString":"type(enum Math.Rounding)"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"12436:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"}},"src":"12424:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4074,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"12457:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4077,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"12471:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:16","trueExpression":{"hexValue":"31","id":4082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4061,"id":4087,"nodeType":"Return","src":"12407:78:16"}]}]},"documentation":{"id":4052,"nodeType":"StructuredDocumentation","src":"12099:143:16","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4090,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:16","nodeType":"FunctionDefinition","parameters":{"id":4058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"value","nameLocation":"12271:5:16","nodeType":"VariableDeclaration","scope":4090,"src":"12263:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4057,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:16","nodeType":"VariableDeclaration","scope":4090,"src":"12278:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"},"typeName":{"id":4056,"nodeType":"UserDefinedTypeName","pathNode":{"id":4055,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3233,"src":"12278:8:16"},"referencedDeclaration":3233,"src":"12278:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3233","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:16"},"returnParameters":{"id":4061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4090,"src":"12320:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4059,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:16"},"scope":4091,"src":"12247:255:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4092,"src":"202:12302:16","usedErrors":[]}],"src":"103:12402:16"},"id":16},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5632]},"id":5633,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4093,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4094,"nodeType":"StructuredDocumentation","src":"217:709:17","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":5632,"linearizedBaseContracts":[5632],"name":"SafeCast","nameLocation":"935:8:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":4118,"nodeType":"Block","src":"1339:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"1357:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1371:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4105,"name":"uint248","nodeType":"ElementaryTypeName","src":"1371:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4104,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1366:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1366:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1366:17:17","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1357:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":4102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1349:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4112,"nodeType":"ExpressionStatement","src":"1349:78:17"},{"expression":{"arguments":[{"id":4115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"1452:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1444:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4113,"name":"uint248","nodeType":"ElementaryTypeName","src":"1444:7:17","typeDescriptions":{}}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1444:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4101,"id":4117,"nodeType":"Return","src":"1437:21:17"}]},"documentation":{"id":4095,"nodeType":"StructuredDocumentation","src":"950:318:17","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":4119,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1282:9:17","nodeType":"FunctionDefinition","parameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"mutability":"mutable","name":"value","nameLocation":"1300:5:17","nodeType":"VariableDeclaration","scope":4119,"src":"1292:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4096,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1291:15:17"},"returnParameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4119,"src":"1330:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4099,"name":"uint248","nodeType":"ElementaryTypeName","src":"1330:7:17","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1329:9:17"},"scope":5632,"src":"1273:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4143,"nodeType":"Block","src":"1860:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"1878:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1892:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4130,"name":"uint240","nodeType":"ElementaryTypeName","src":"1892:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4129,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1887:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1887:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1887:17:17","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1878:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":4127,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1870:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1870:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4137,"nodeType":"ExpressionStatement","src":"1870:78:17"},{"expression":{"arguments":[{"id":4140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"1973:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1965:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4138,"name":"uint240","nodeType":"ElementaryTypeName","src":"1965:7:17","typeDescriptions":{}}},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1965:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4126,"id":4142,"nodeType":"Return","src":"1958:21:17"}]},"documentation":{"id":4120,"nodeType":"StructuredDocumentation","src":"1471:318:17","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":4144,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1803:9:17","nodeType":"FunctionDefinition","parameters":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"mutability":"mutable","name":"value","nameLocation":"1821:5:17","nodeType":"VariableDeclaration","scope":4144,"src":"1813:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:15:17"},"returnParameters":{"id":4126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4144,"src":"1851:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4124,"name":"uint240","nodeType":"ElementaryTypeName","src":"1851:7:17","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1850:9:17"},"scope":5632,"src":"1794:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4168,"nodeType":"Block","src":"2381:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"2399:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2413:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4155,"name":"uint232","nodeType":"ElementaryTypeName","src":"2413:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4154,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2408:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2408:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2408:17:17","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2399:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2427:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":4152,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2391:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2391:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4162,"nodeType":"ExpressionStatement","src":"2391:78:17"},{"expression":{"arguments":[{"id":4165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"2494:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2486:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4163,"name":"uint232","nodeType":"ElementaryTypeName","src":"2486:7:17","typeDescriptions":{}}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2486:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4151,"id":4167,"nodeType":"Return","src":"2479:21:17"}]},"documentation":{"id":4145,"nodeType":"StructuredDocumentation","src":"1992:318:17","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":4169,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2324:9:17","nodeType":"FunctionDefinition","parameters":{"id":4148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4147,"mutability":"mutable","name":"value","nameLocation":"2342:5:17","nodeType":"VariableDeclaration","scope":4169,"src":"2334:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4146,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:17"},"returnParameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4169,"src":"2372:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4149,"name":"uint232","nodeType":"ElementaryTypeName","src":"2372:7:17","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2371:9:17"},"scope":5632,"src":"2315:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4193,"nodeType":"Block","src":"2902:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"2920:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2934:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4180,"name":"uint224","nodeType":"ElementaryTypeName","src":"2934:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4179,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2929:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2929:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2929:17:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2920:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":4177,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2912:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2912:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4187,"nodeType":"ExpressionStatement","src":"2912:78:17"},{"expression":{"arguments":[{"id":4190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"3015:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3007:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4188,"name":"uint224","nodeType":"ElementaryTypeName","src":"3007:7:17","typeDescriptions":{}}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3007:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4176,"id":4192,"nodeType":"Return","src":"3000:21:17"}]},"documentation":{"id":4170,"nodeType":"StructuredDocumentation","src":"2513:318:17","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":4194,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2845:9:17","nodeType":"FunctionDefinition","parameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4172,"mutability":"mutable","name":"value","nameLocation":"2863:5:17","nodeType":"VariableDeclaration","scope":4194,"src":"2855:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:15:17"},"returnParameters":{"id":4176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4194,"src":"2893:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4174,"name":"uint224","nodeType":"ElementaryTypeName","src":"2893:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2892:9:17"},"scope":5632,"src":"2836:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4218,"nodeType":"Block","src":"3423:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"3441:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3455:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4205,"name":"uint216","nodeType":"ElementaryTypeName","src":"3455:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4204,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3450:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3450:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3450:17:17","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3441:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3469:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":4202,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3433:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4212,"nodeType":"ExpressionStatement","src":"3433:78:17"},{"expression":{"arguments":[{"id":4215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"3536:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4213,"name":"uint216","nodeType":"ElementaryTypeName","src":"3528:7:17","typeDescriptions":{}}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3528:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4201,"id":4217,"nodeType":"Return","src":"3521:21:17"}]},"documentation":{"id":4195,"nodeType":"StructuredDocumentation","src":"3034:318:17","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":4219,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3366:9:17","nodeType":"FunctionDefinition","parameters":{"id":4198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4197,"mutability":"mutable","name":"value","nameLocation":"3384:5:17","nodeType":"VariableDeclaration","scope":4219,"src":"3376:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4196,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:15:17"},"returnParameters":{"id":4201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4219,"src":"3414:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4199,"name":"uint216","nodeType":"ElementaryTypeName","src":"3414:7:17","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3413:9:17"},"scope":5632,"src":"3357:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4243,"nodeType":"Block","src":"3944:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"3962:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3976:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4230,"name":"uint208","nodeType":"ElementaryTypeName","src":"3976:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4229,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3971:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3971:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3971:17:17","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3962:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3990:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":4227,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3954:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4237,"nodeType":"ExpressionStatement","src":"3954:78:17"},{"expression":{"arguments":[{"id":4240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"4057:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4049:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4238,"name":"uint208","nodeType":"ElementaryTypeName","src":"4049:7:17","typeDescriptions":{}}},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4049:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4226,"id":4242,"nodeType":"Return","src":"4042:21:17"}]},"documentation":{"id":4220,"nodeType":"StructuredDocumentation","src":"3555:318:17","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":4244,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3887:9:17","nodeType":"FunctionDefinition","parameters":{"id":4223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4222,"mutability":"mutable","name":"value","nameLocation":"3905:5:17","nodeType":"VariableDeclaration","scope":4244,"src":"3897:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4221,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:15:17"},"returnParameters":{"id":4226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4244,"src":"3935:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4224,"name":"uint208","nodeType":"ElementaryTypeName","src":"3935:7:17","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3934:9:17"},"scope":5632,"src":"3878:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4268,"nodeType":"Block","src":"4465:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"4483:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4497:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4255,"name":"uint200","nodeType":"ElementaryTypeName","src":"4497:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4254,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4492:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4492:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4492:17:17","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4483:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":4260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4511:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":4252,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4475:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4475:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4262,"nodeType":"ExpressionStatement","src":"4475:78:17"},{"expression":{"arguments":[{"id":4265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"4578:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4263,"name":"uint200","nodeType":"ElementaryTypeName","src":"4570:7:17","typeDescriptions":{}}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4570:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4251,"id":4267,"nodeType":"Return","src":"4563:21:17"}]},"documentation":{"id":4245,"nodeType":"StructuredDocumentation","src":"4076:318:17","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":4269,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4408:9:17","nodeType":"FunctionDefinition","parameters":{"id":4248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4247,"mutability":"mutable","name":"value","nameLocation":"4426:5:17","nodeType":"VariableDeclaration","scope":4269,"src":"4418:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:15:17"},"returnParameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4269,"src":"4456:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4249,"name":"uint200","nodeType":"ElementaryTypeName","src":"4456:7:17","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4455:9:17"},"scope":5632,"src":"4399:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4293,"nodeType":"Block","src":"4986:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"5004:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4280,"name":"uint192","nodeType":"ElementaryTypeName","src":"5018:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4279,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5013:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5013:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5013:17:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5004:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5032:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":4277,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4996:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4996:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4287,"nodeType":"ExpressionStatement","src":"4996:78:17"},{"expression":{"arguments":[{"id":4290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"5099:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5091:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4288,"name":"uint192","nodeType":"ElementaryTypeName","src":"5091:7:17","typeDescriptions":{}}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5091:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4276,"id":4292,"nodeType":"Return","src":"5084:21:17"}]},"documentation":{"id":4270,"nodeType":"StructuredDocumentation","src":"4597:318:17","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":4294,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4929:9:17","nodeType":"FunctionDefinition","parameters":{"id":4273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4272,"mutability":"mutable","name":"value","nameLocation":"4947:5:17","nodeType":"VariableDeclaration","scope":4294,"src":"4939:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4271,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4938:15:17"},"returnParameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4294,"src":"4977:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4274,"name":"uint192","nodeType":"ElementaryTypeName","src":"4977:7:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4976:9:17"},"scope":5632,"src":"4920:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4318,"nodeType":"Block","src":"5507:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"5525:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5539:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4305,"name":"uint184","nodeType":"ElementaryTypeName","src":"5539:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4304,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5534:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5534:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5534:17:17","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5525:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5553:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":4302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5517:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5517:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4312,"nodeType":"ExpressionStatement","src":"5517:78:17"},{"expression":{"arguments":[{"id":4315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"5620:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4313,"name":"uint184","nodeType":"ElementaryTypeName","src":"5612:7:17","typeDescriptions":{}}},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5612:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4301,"id":4317,"nodeType":"Return","src":"5605:21:17"}]},"documentation":{"id":4295,"nodeType":"StructuredDocumentation","src":"5118:318:17","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":4319,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5450:9:17","nodeType":"FunctionDefinition","parameters":{"id":4298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4297,"mutability":"mutable","name":"value","nameLocation":"5468:5:17","nodeType":"VariableDeclaration","scope":4319,"src":"5460:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4296,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5459:15:17"},"returnParameters":{"id":4301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4319,"src":"5498:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4299,"name":"uint184","nodeType":"ElementaryTypeName","src":"5498:7:17","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5497:9:17"},"scope":5632,"src":"5441:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4343,"nodeType":"Block","src":"6028:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"6046:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6060:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4330,"name":"uint176","nodeType":"ElementaryTypeName","src":"6060:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4329,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6055:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6055:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6055:17:17","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6046:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":4335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6074:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":4327,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6038:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6038:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4337,"nodeType":"ExpressionStatement","src":"6038:78:17"},{"expression":{"arguments":[{"id":4340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"6141:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4338,"name":"uint176","nodeType":"ElementaryTypeName","src":"6133:7:17","typeDescriptions":{}}},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6133:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4326,"id":4342,"nodeType":"Return","src":"6126:21:17"}]},"documentation":{"id":4320,"nodeType":"StructuredDocumentation","src":"5639:318:17","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":4344,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5971:9:17","nodeType":"FunctionDefinition","parameters":{"id":4323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4322,"mutability":"mutable","name":"value","nameLocation":"5989:5:17","nodeType":"VariableDeclaration","scope":4344,"src":"5981:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"5981:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5980:15:17"},"returnParameters":{"id":4326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4344,"src":"6019:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4324,"name":"uint176","nodeType":"ElementaryTypeName","src":"6019:7:17","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6018:9:17"},"scope":5632,"src":"5962:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4368,"nodeType":"Block","src":"6549:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"6567:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6581:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4355,"name":"uint168","nodeType":"ElementaryTypeName","src":"6581:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4354,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6576:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6576:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6576:17:17","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6567:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6595:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":4352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6559:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6559:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4362,"nodeType":"ExpressionStatement","src":"6559:78:17"},{"expression":{"arguments":[{"id":4365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"6662:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6654:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4363,"name":"uint168","nodeType":"ElementaryTypeName","src":"6654:7:17","typeDescriptions":{}}},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6654:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4351,"id":4367,"nodeType":"Return","src":"6647:21:17"}]},"documentation":{"id":4345,"nodeType":"StructuredDocumentation","src":"6160:318:17","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":4369,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6492:9:17","nodeType":"FunctionDefinition","parameters":{"id":4348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4347,"mutability":"mutable","name":"value","nameLocation":"6510:5:17","nodeType":"VariableDeclaration","scope":4369,"src":"6502:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4346,"name":"uint256","nodeType":"ElementaryTypeName","src":"6502:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6501:15:17"},"returnParameters":{"id":4351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4369,"src":"6540:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4349,"name":"uint168","nodeType":"ElementaryTypeName","src":"6540:7:17","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6539:9:17"},"scope":5632,"src":"6483:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4393,"nodeType":"Block","src":"7070:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"7088:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7102:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4380,"name":"uint160","nodeType":"ElementaryTypeName","src":"7102:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4379,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7097:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7097:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7097:17:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7088:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":4385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7116:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":4377,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7080:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7080:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4387,"nodeType":"ExpressionStatement","src":"7080:78:17"},{"expression":{"arguments":[{"id":4390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"7183:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7175:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4388,"name":"uint160","nodeType":"ElementaryTypeName","src":"7175:7:17","typeDescriptions":{}}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7175:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4376,"id":4392,"nodeType":"Return","src":"7168:21:17"}]},"documentation":{"id":4370,"nodeType":"StructuredDocumentation","src":"6681:318:17","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":4394,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7013:9:17","nodeType":"FunctionDefinition","parameters":{"id":4373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4372,"mutability":"mutable","name":"value","nameLocation":"7031:5:17","nodeType":"VariableDeclaration","scope":4394,"src":"7023:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4371,"name":"uint256","nodeType":"ElementaryTypeName","src":"7023:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7022:15:17"},"returnParameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4394,"src":"7061:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4374,"name":"uint160","nodeType":"ElementaryTypeName","src":"7061:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7060:9:17"},"scope":5632,"src":"7004:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4418,"nodeType":"Block","src":"7591:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"7609:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7623:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4405,"name":"uint152","nodeType":"ElementaryTypeName","src":"7623:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7618:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7618:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7618:17:17","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7609:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7637:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":4402,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7601:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7601:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4412,"nodeType":"ExpressionStatement","src":"7601:78:17"},{"expression":{"arguments":[{"id":4415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"7704:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7696:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4413,"name":"uint152","nodeType":"ElementaryTypeName","src":"7696:7:17","typeDescriptions":{}}},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7696:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4401,"id":4417,"nodeType":"Return","src":"7689:21:17"}]},"documentation":{"id":4395,"nodeType":"StructuredDocumentation","src":"7202:318:17","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":4419,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7534:9:17","nodeType":"FunctionDefinition","parameters":{"id":4398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4397,"mutability":"mutable","name":"value","nameLocation":"7552:5:17","nodeType":"VariableDeclaration","scope":4419,"src":"7544:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4396,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7543:15:17"},"returnParameters":{"id":4401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4419,"src":"7582:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4399,"name":"uint152","nodeType":"ElementaryTypeName","src":"7582:7:17","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7581:9:17"},"scope":5632,"src":"7525:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4443,"nodeType":"Block","src":"8112:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"8130:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8144:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4430,"name":"uint144","nodeType":"ElementaryTypeName","src":"8144:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4429,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8139:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8139:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8139:17:17","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8130:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":4435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8158:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":4427,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8122:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8122:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4437,"nodeType":"ExpressionStatement","src":"8122:78:17"},{"expression":{"arguments":[{"id":4440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"8225:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8217:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4438,"name":"uint144","nodeType":"ElementaryTypeName","src":"8217:7:17","typeDescriptions":{}}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8217:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4426,"id":4442,"nodeType":"Return","src":"8210:21:17"}]},"documentation":{"id":4420,"nodeType":"StructuredDocumentation","src":"7723:318:17","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":4444,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8055:9:17","nodeType":"FunctionDefinition","parameters":{"id":4423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4422,"mutability":"mutable","name":"value","nameLocation":"8073:5:17","nodeType":"VariableDeclaration","scope":4444,"src":"8065:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4421,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:15:17"},"returnParameters":{"id":4426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4444,"src":"8103:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4424,"name":"uint144","nodeType":"ElementaryTypeName","src":"8103:7:17","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8102:9:17"},"scope":5632,"src":"8046:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4468,"nodeType":"Block","src":"8633:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"8651:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8665:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4455,"name":"uint136","nodeType":"ElementaryTypeName","src":"8665:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4454,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8660:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8660:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8660:17:17","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8651:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":4460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8679:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":4452,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8643:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8643:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4462,"nodeType":"ExpressionStatement","src":"8643:78:17"},{"expression":{"arguments":[{"id":4465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"8746:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8738:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4463,"name":"uint136","nodeType":"ElementaryTypeName","src":"8738:7:17","typeDescriptions":{}}},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8738:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4451,"id":4467,"nodeType":"Return","src":"8731:21:17"}]},"documentation":{"id":4445,"nodeType":"StructuredDocumentation","src":"8244:318:17","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":4469,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8576:9:17","nodeType":"FunctionDefinition","parameters":{"id":4448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4447,"mutability":"mutable","name":"value","nameLocation":"8594:5:17","nodeType":"VariableDeclaration","scope":4469,"src":"8586:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4446,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8585:15:17"},"returnParameters":{"id":4451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4469,"src":"8624:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4449,"name":"uint136","nodeType":"ElementaryTypeName","src":"8624:7:17","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8623:9:17"},"scope":5632,"src":"8567:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4493,"nodeType":"Block","src":"9154:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"9172:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9186:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4480,"name":"uint128","nodeType":"ElementaryTypeName","src":"9186:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4479,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9181:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9181:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9181:17:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9172:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":4485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9200:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":4477,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9164:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9164:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4487,"nodeType":"ExpressionStatement","src":"9164:78:17"},{"expression":{"arguments":[{"id":4490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"9267:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9259:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4488,"name":"uint128","nodeType":"ElementaryTypeName","src":"9259:7:17","typeDescriptions":{}}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9259:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4476,"id":4492,"nodeType":"Return","src":"9252:21:17"}]},"documentation":{"id":4470,"nodeType":"StructuredDocumentation","src":"8765:318:17","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":4494,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9097:9:17","nodeType":"FunctionDefinition","parameters":{"id":4473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4472,"mutability":"mutable","name":"value","nameLocation":"9115:5:17","nodeType":"VariableDeclaration","scope":4494,"src":"9107:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4471,"name":"uint256","nodeType":"ElementaryTypeName","src":"9107:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9106:15:17"},"returnParameters":{"id":4476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4494,"src":"9145:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4474,"name":"uint128","nodeType":"ElementaryTypeName","src":"9145:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9144:9:17"},"scope":5632,"src":"9088:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4518,"nodeType":"Block","src":"9675:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"9693:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4505,"name":"uint120","nodeType":"ElementaryTypeName","src":"9707:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4504,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9702:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9702:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9702:17:17","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9693:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9721:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":4502,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9685:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9685:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4512,"nodeType":"ExpressionStatement","src":"9685:78:17"},{"expression":{"arguments":[{"id":4515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"9788:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4513,"name":"uint120","nodeType":"ElementaryTypeName","src":"9780:7:17","typeDescriptions":{}}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9780:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4501,"id":4517,"nodeType":"Return","src":"9773:21:17"}]},"documentation":{"id":4495,"nodeType":"StructuredDocumentation","src":"9286:318:17","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":4519,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9618:9:17","nodeType":"FunctionDefinition","parameters":{"id":4498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4497,"mutability":"mutable","name":"value","nameLocation":"9636:5:17","nodeType":"VariableDeclaration","scope":4519,"src":"9628:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:15:17"},"returnParameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4519,"src":"9666:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4499,"name":"uint120","nodeType":"ElementaryTypeName","src":"9666:7:17","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9665:9:17"},"scope":5632,"src":"9609:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4543,"nodeType":"Block","src":"10196:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"10214:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10228:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4530,"name":"uint112","nodeType":"ElementaryTypeName","src":"10228:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4529,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10223:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10223:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10223:17:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10214:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":4535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10242:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":4527,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10206:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10206:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4537,"nodeType":"ExpressionStatement","src":"10206:78:17"},{"expression":{"arguments":[{"id":4540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"10309:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10301:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4538,"name":"uint112","nodeType":"ElementaryTypeName","src":"10301:7:17","typeDescriptions":{}}},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10301:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4526,"id":4542,"nodeType":"Return","src":"10294:21:17"}]},"documentation":{"id":4520,"nodeType":"StructuredDocumentation","src":"9807:318:17","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":4544,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10139:9:17","nodeType":"FunctionDefinition","parameters":{"id":4523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4522,"mutability":"mutable","name":"value","nameLocation":"10157:5:17","nodeType":"VariableDeclaration","scope":4544,"src":"10149:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4521,"name":"uint256","nodeType":"ElementaryTypeName","src":"10149:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10148:15:17"},"returnParameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4544,"src":"10187:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4524,"name":"uint112","nodeType":"ElementaryTypeName","src":"10187:7:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10186:9:17"},"scope":5632,"src":"10130:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4568,"nodeType":"Block","src":"10717:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"10735:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10749:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4555,"name":"uint104","nodeType":"ElementaryTypeName","src":"10749:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4554,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10744:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10744:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10744:17:17","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10735:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":4560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10763:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":4552,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10727:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10727:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4562,"nodeType":"ExpressionStatement","src":"10727:78:17"},{"expression":{"arguments":[{"id":4565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"10830:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10822:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4563,"name":"uint104","nodeType":"ElementaryTypeName","src":"10822:7:17","typeDescriptions":{}}},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10822:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4551,"id":4567,"nodeType":"Return","src":"10815:21:17"}]},"documentation":{"id":4545,"nodeType":"StructuredDocumentation","src":"10328:318:17","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":4569,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10660:9:17","nodeType":"FunctionDefinition","parameters":{"id":4548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4547,"mutability":"mutable","name":"value","nameLocation":"10678:5:17","nodeType":"VariableDeclaration","scope":4569,"src":"10670:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4546,"name":"uint256","nodeType":"ElementaryTypeName","src":"10670:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10669:15:17"},"returnParameters":{"id":4551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4569,"src":"10708:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4549,"name":"uint104","nodeType":"ElementaryTypeName","src":"10708:7:17","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10707:9:17"},"scope":5632,"src":"10651:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4593,"nodeType":"Block","src":"11232:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"11250:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11264:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4580,"name":"uint96","nodeType":"ElementaryTypeName","src":"11264:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4579,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11259:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11259:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11259:16:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11250:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11277:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":4577,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11242:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11242:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4587,"nodeType":"ExpressionStatement","src":"11242:76:17"},{"expression":{"arguments":[{"id":4590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"11342:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11335:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4588,"name":"uint96","nodeType":"ElementaryTypeName","src":"11335:6:17","typeDescriptions":{}}},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11335:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4576,"id":4592,"nodeType":"Return","src":"11328:20:17"}]},"documentation":{"id":4570,"nodeType":"StructuredDocumentation","src":"10849:314:17","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":4594,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11177:8:17","nodeType":"FunctionDefinition","parameters":{"id":4573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4572,"mutability":"mutable","name":"value","nameLocation":"11194:5:17","nodeType":"VariableDeclaration","scope":4594,"src":"11186:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"11186:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11185:15:17"},"returnParameters":{"id":4576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4594,"src":"11224:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4574,"name":"uint96","nodeType":"ElementaryTypeName","src":"11224:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11223:8:17"},"scope":5632,"src":"11168:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4618,"nodeType":"Block","src":"11744:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"11762:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11776:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4605,"name":"uint88","nodeType":"ElementaryTypeName","src":"11776:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4604,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11771:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11771:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11771:16:17","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11762:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":4610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11789:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":4602,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11754:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11754:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4612,"nodeType":"ExpressionStatement","src":"11754:76:17"},{"expression":{"arguments":[{"id":4615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"11854:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4613,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:17","typeDescriptions":{}}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11847:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4601,"id":4617,"nodeType":"Return","src":"11840:20:17"}]},"documentation":{"id":4595,"nodeType":"StructuredDocumentation","src":"11361:314:17","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":4619,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11689:8:17","nodeType":"FunctionDefinition","parameters":{"id":4598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4597,"mutability":"mutable","name":"value","nameLocation":"11706:5:17","nodeType":"VariableDeclaration","scope":4619,"src":"11698:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4596,"name":"uint256","nodeType":"ElementaryTypeName","src":"11698:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11697:15:17"},"returnParameters":{"id":4601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4619,"src":"11736:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4599,"name":"uint88","nodeType":"ElementaryTypeName","src":"11736:6:17","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11735:8:17"},"scope":5632,"src":"11680:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4643,"nodeType":"Block","src":"12256:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"12274:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12288:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4630,"name":"uint80","nodeType":"ElementaryTypeName","src":"12288:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4629,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12283:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12283:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12283:16:17","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12274:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12301:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":4627,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12266:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12266:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4637,"nodeType":"ExpressionStatement","src":"12266:76:17"},{"expression":{"arguments":[{"id":4640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"12366:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12359:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4638,"name":"uint80","nodeType":"ElementaryTypeName","src":"12359:6:17","typeDescriptions":{}}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12359:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4626,"id":4642,"nodeType":"Return","src":"12352:20:17"}]},"documentation":{"id":4620,"nodeType":"StructuredDocumentation","src":"11873:314:17","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":4644,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12201:8:17","nodeType":"FunctionDefinition","parameters":{"id":4623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4622,"mutability":"mutable","name":"value","nameLocation":"12218:5:17","nodeType":"VariableDeclaration","scope":4644,"src":"12210:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4621,"name":"uint256","nodeType":"ElementaryTypeName","src":"12210:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:15:17"},"returnParameters":{"id":4626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4644,"src":"12248:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4624,"name":"uint80","nodeType":"ElementaryTypeName","src":"12248:6:17","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12247:8:17"},"scope":5632,"src":"12192:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4668,"nodeType":"Block","src":"12768:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"12786:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12800:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4655,"name":"uint72","nodeType":"ElementaryTypeName","src":"12800:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4654,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12795:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12795:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12795:16:17","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12786:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12813:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":4652,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12778:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12778:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4662,"nodeType":"ExpressionStatement","src":"12778:76:17"},{"expression":{"arguments":[{"id":4665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"12878:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12871:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4663,"name":"uint72","nodeType":"ElementaryTypeName","src":"12871:6:17","typeDescriptions":{}}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12871:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4651,"id":4667,"nodeType":"Return","src":"12864:20:17"}]},"documentation":{"id":4645,"nodeType":"StructuredDocumentation","src":"12385:314:17","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":4669,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12713:8:17","nodeType":"FunctionDefinition","parameters":{"id":4648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4647,"mutability":"mutable","name":"value","nameLocation":"12730:5:17","nodeType":"VariableDeclaration","scope":4669,"src":"12722:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12721:15:17"},"returnParameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4669,"src":"12760:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4649,"name":"uint72","nodeType":"ElementaryTypeName","src":"12760:6:17","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12759:8:17"},"scope":5632,"src":"12704:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4693,"nodeType":"Block","src":"13280:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"13298:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13312:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4680,"name":"uint64","nodeType":"ElementaryTypeName","src":"13312:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4679,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13307:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13307:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13307:16:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13298:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13325:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":4677,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13290:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13290:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4687,"nodeType":"ExpressionStatement","src":"13290:76:17"},{"expression":{"arguments":[{"id":4690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"13390:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13383:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4688,"name":"uint64","nodeType":"ElementaryTypeName","src":"13383:6:17","typeDescriptions":{}}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13383:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4676,"id":4692,"nodeType":"Return","src":"13376:20:17"}]},"documentation":{"id":4670,"nodeType":"StructuredDocumentation","src":"12897:314:17","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":4694,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13225:8:17","nodeType":"FunctionDefinition","parameters":{"id":4673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4672,"mutability":"mutable","name":"value","nameLocation":"13242:5:17","nodeType":"VariableDeclaration","scope":4694,"src":"13234:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"13234:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13233:15:17"},"returnParameters":{"id":4676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4694,"src":"13272:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4674,"name":"uint64","nodeType":"ElementaryTypeName","src":"13272:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13271:8:17"},"scope":5632,"src":"13216:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4718,"nodeType":"Block","src":"13792:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"13810:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13824:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4705,"name":"uint56","nodeType":"ElementaryTypeName","src":"13824:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4704,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13819:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13819:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13819:16:17","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13810:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":4710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13837:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":4702,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13802:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13802:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4712,"nodeType":"ExpressionStatement","src":"13802:76:17"},{"expression":{"arguments":[{"id":4715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"13902:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13895:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4713,"name":"uint56","nodeType":"ElementaryTypeName","src":"13895:6:17","typeDescriptions":{}}},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13895:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4701,"id":4717,"nodeType":"Return","src":"13888:20:17"}]},"documentation":{"id":4695,"nodeType":"StructuredDocumentation","src":"13409:314:17","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":4719,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13737:8:17","nodeType":"FunctionDefinition","parameters":{"id":4698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4697,"mutability":"mutable","name":"value","nameLocation":"13754:5:17","nodeType":"VariableDeclaration","scope":4719,"src":"13746:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4696,"name":"uint256","nodeType":"ElementaryTypeName","src":"13746:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13745:15:17"},"returnParameters":{"id":4701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4719,"src":"13784:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4699,"name":"uint56","nodeType":"ElementaryTypeName","src":"13784:6:17","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13783:8:17"},"scope":5632,"src":"13728:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4743,"nodeType":"Block","src":"14304:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"14322:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14336:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4730,"name":"uint48","nodeType":"ElementaryTypeName","src":"14336:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4729,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14331:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14331:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14331:16:17","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14322:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14349:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":4727,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14314:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14314:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4737,"nodeType":"ExpressionStatement","src":"14314:76:17"},{"expression":{"arguments":[{"id":4740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"14414:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14407:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4738,"name":"uint48","nodeType":"ElementaryTypeName","src":"14407:6:17","typeDescriptions":{}}},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14407:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4726,"id":4742,"nodeType":"Return","src":"14400:20:17"}]},"documentation":{"id":4720,"nodeType":"StructuredDocumentation","src":"13921:314:17","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":4744,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14249:8:17","nodeType":"FunctionDefinition","parameters":{"id":4723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4722,"mutability":"mutable","name":"value","nameLocation":"14266:5:17","nodeType":"VariableDeclaration","scope":4744,"src":"14258:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4721,"name":"uint256","nodeType":"ElementaryTypeName","src":"14258:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14257:15:17"},"returnParameters":{"id":4726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4744,"src":"14296:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4724,"name":"uint48","nodeType":"ElementaryTypeName","src":"14296:6:17","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14295:8:17"},"scope":5632,"src":"14240:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4768,"nodeType":"Block","src":"14816:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"14834:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14848:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4755,"name":"uint40","nodeType":"ElementaryTypeName","src":"14848:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4754,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14843:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14843:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14843:16:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14834:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14861:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":4752,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14826:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14826:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4762,"nodeType":"ExpressionStatement","src":"14826:76:17"},{"expression":{"arguments":[{"id":4765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"14926:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14919:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4763,"name":"uint40","nodeType":"ElementaryTypeName","src":"14919:6:17","typeDescriptions":{}}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14919:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4751,"id":4767,"nodeType":"Return","src":"14912:20:17"}]},"documentation":{"id":4745,"nodeType":"StructuredDocumentation","src":"14433:314:17","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":4769,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14761:8:17","nodeType":"FunctionDefinition","parameters":{"id":4748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4747,"mutability":"mutable","name":"value","nameLocation":"14778:5:17","nodeType":"VariableDeclaration","scope":4769,"src":"14770:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4746,"name":"uint256","nodeType":"ElementaryTypeName","src":"14770:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14769:15:17"},"returnParameters":{"id":4751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4769,"src":"14808:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4749,"name":"uint40","nodeType":"ElementaryTypeName","src":"14808:6:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14807:8:17"},"scope":5632,"src":"14752:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4793,"nodeType":"Block","src":"15328:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"15346:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15360:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4780,"name":"uint32","nodeType":"ElementaryTypeName","src":"15360:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4779,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15355:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15355:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15355:16:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15346:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15373:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":4777,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15338:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15338:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4787,"nodeType":"ExpressionStatement","src":"15338:76:17"},{"expression":{"arguments":[{"id":4790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"15438:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15431:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4788,"name":"uint32","nodeType":"ElementaryTypeName","src":"15431:6:17","typeDescriptions":{}}},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15431:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4776,"id":4792,"nodeType":"Return","src":"15424:20:17"}]},"documentation":{"id":4770,"nodeType":"StructuredDocumentation","src":"14945:314:17","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":4794,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15273:8:17","nodeType":"FunctionDefinition","parameters":{"id":4773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4772,"mutability":"mutable","name":"value","nameLocation":"15290:5:17","nodeType":"VariableDeclaration","scope":4794,"src":"15282:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4771,"name":"uint256","nodeType":"ElementaryTypeName","src":"15282:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15281:15:17"},"returnParameters":{"id":4776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4794,"src":"15320:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4774,"name":"uint32","nodeType":"ElementaryTypeName","src":"15320:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15319:8:17"},"scope":5632,"src":"15264:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4818,"nodeType":"Block","src":"15840:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"15858:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15872:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4805,"name":"uint24","nodeType":"ElementaryTypeName","src":"15872:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4804,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15867:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15867:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15867:16:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15858:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15885:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":4802,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15850:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15850:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4812,"nodeType":"ExpressionStatement","src":"15850:76:17"},{"expression":{"arguments":[{"id":4815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"15950:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15943:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4813,"name":"uint24","nodeType":"ElementaryTypeName","src":"15943:6:17","typeDescriptions":{}}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15943:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4801,"id":4817,"nodeType":"Return","src":"15936:20:17"}]},"documentation":{"id":4795,"nodeType":"StructuredDocumentation","src":"15457:314:17","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":4819,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15785:8:17","nodeType":"FunctionDefinition","parameters":{"id":4798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4797,"mutability":"mutable","name":"value","nameLocation":"15802:5:17","nodeType":"VariableDeclaration","scope":4819,"src":"15794:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4796,"name":"uint256","nodeType":"ElementaryTypeName","src":"15794:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15793:15:17"},"returnParameters":{"id":4801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4819,"src":"15832:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4799,"name":"uint24","nodeType":"ElementaryTypeName","src":"15832:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15831:8:17"},"scope":5632,"src":"15776:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4843,"nodeType":"Block","src":"16352:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"16370:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16384:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4830,"name":"uint16","nodeType":"ElementaryTypeName","src":"16384:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4829,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16379:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16379:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16379:16:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16370:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":4835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16397:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":4827,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16362:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16362:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4837,"nodeType":"ExpressionStatement","src":"16362:76:17"},{"expression":{"arguments":[{"id":4840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"16462:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16455:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4838,"name":"uint16","nodeType":"ElementaryTypeName","src":"16455:6:17","typeDescriptions":{}}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16455:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4826,"id":4842,"nodeType":"Return","src":"16448:20:17"}]},"documentation":{"id":4820,"nodeType":"StructuredDocumentation","src":"15969:314:17","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":4844,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16297:8:17","nodeType":"FunctionDefinition","parameters":{"id":4823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4822,"mutability":"mutable","name":"value","nameLocation":"16314:5:17","nodeType":"VariableDeclaration","scope":4844,"src":"16306:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4821,"name":"uint256","nodeType":"ElementaryTypeName","src":"16306:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16305:15:17"},"returnParameters":{"id":4826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4844,"src":"16344:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4824,"name":"uint16","nodeType":"ElementaryTypeName","src":"16344:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16343:8:17"},"scope":5632,"src":"16288:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4868,"nodeType":"Block","src":"16858:120:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"16876:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16890:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4855,"name":"uint8","nodeType":"ElementaryTypeName","src":"16890:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4854,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16885:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16885:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16885:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16876:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16902:39:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":4852,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16868:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16868:74:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4862,"nodeType":"ExpressionStatement","src":"16868:74:17"},{"expression":{"arguments":[{"id":4865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"16965:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16959:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4863,"name":"uint8","nodeType":"ElementaryTypeName","src":"16959:5:17","typeDescriptions":{}}},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16959:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4851,"id":4867,"nodeType":"Return","src":"16952:19:17"}]},"documentation":{"id":4845,"nodeType":"StructuredDocumentation","src":"16481:310:17","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":4869,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16805:7:17","nodeType":"FunctionDefinition","parameters":{"id":4848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4847,"mutability":"mutable","name":"value","nameLocation":"16821:5:17","nodeType":"VariableDeclaration","scope":4869,"src":"16813:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4846,"name":"uint256","nodeType":"ElementaryTypeName","src":"16813:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16812:15:17"},"returnParameters":{"id":4851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4869,"src":"16851:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4849,"name":"uint8","nodeType":"ElementaryTypeName","src":"16851:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16850:7:17"},"scope":5632,"src":"16796:182:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4889,"nodeType":"Block","src":"17252:103:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"17270:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17279:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17270:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17282:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":4877,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17262:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17262:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4883,"nodeType":"ExpressionStatement","src":"17262:55:17"},{"expression":{"arguments":[{"id":4886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"17342:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17334:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4884,"name":"uint256","nodeType":"ElementaryTypeName","src":"17334:7:17","typeDescriptions":{}}},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17334:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4876,"id":4888,"nodeType":"Return","src":"17327:21:17"}]},"documentation":{"id":4870,"nodeType":"StructuredDocumentation","src":"16984:198:17","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":4890,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17196:9:17","nodeType":"FunctionDefinition","parameters":{"id":4873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4872,"mutability":"mutable","name":"value","nameLocation":"17213:5:17","nodeType":"VariableDeclaration","scope":4890,"src":"17206:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4871,"name":"int256","nodeType":"ElementaryTypeName","src":"17206:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17205:14:17"},"returnParameters":{"id":4876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4890,"src":"17243:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4874,"name":"uint256","nodeType":"ElementaryTypeName","src":"17243:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17242:9:17"},"scope":5632,"src":"17187:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4912,"nodeType":"Block","src":"17790:124:17","statements":[{"expression":{"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4898,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"17800:10:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"17820:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17813:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4899,"name":"int248","nodeType":"ElementaryTypeName","src":"17813:6:17","typeDescriptions":{}}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17813:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17800:26:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":4904,"nodeType":"ExpressionStatement","src":"17800:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4906,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"17844:10:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"17858:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17844:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17865:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":4905,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17836:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17836:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4911,"nodeType":"ExpressionStatement","src":"17836:71:17"}]},"documentation":{"id":4891,"nodeType":"StructuredDocumentation","src":"17361:350:17","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":4913,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17725:8:17","nodeType":"FunctionDefinition","parameters":{"id":4894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"value","nameLocation":"17741:5:17","nodeType":"VariableDeclaration","scope":4913,"src":"17734:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4892,"name":"int256","nodeType":"ElementaryTypeName","src":"17734:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17733:14:17"},"returnParameters":{"id":4897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4896,"mutability":"mutable","name":"downcasted","nameLocation":"17778:10:17","nodeType":"VariableDeclaration","scope":4913,"src":"17771:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4895,"name":"int248","nodeType":"ElementaryTypeName","src":"17771:6:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17770:19:17"},"scope":5632,"src":"17716:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4935,"nodeType":"Block","src":"18349:124:17","statements":[{"expression":{"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4921,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"18359:10:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"18379:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18372:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4922,"name":"int240","nodeType":"ElementaryTypeName","src":"18372:6:17","typeDescriptions":{}}},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18372:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18359:26:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":4927,"nodeType":"ExpressionStatement","src":"18359:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4929,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"18403:10:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"18417:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18403:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":4932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18424:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":4928,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18395:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18395:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4934,"nodeType":"ExpressionStatement","src":"18395:71:17"}]},"documentation":{"id":4914,"nodeType":"StructuredDocumentation","src":"17920:350:17","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":4936,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18284:8:17","nodeType":"FunctionDefinition","parameters":{"id":4917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4916,"mutability":"mutable","name":"value","nameLocation":"18300:5:17","nodeType":"VariableDeclaration","scope":4936,"src":"18293:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4915,"name":"int256","nodeType":"ElementaryTypeName","src":"18293:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18292:14:17"},"returnParameters":{"id":4920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4919,"mutability":"mutable","name":"downcasted","nameLocation":"18337:10:17","nodeType":"VariableDeclaration","scope":4936,"src":"18330:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4918,"name":"int240","nodeType":"ElementaryTypeName","src":"18330:6:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18329:19:17"},"scope":5632,"src":"18275:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4958,"nodeType":"Block","src":"18908:124:17","statements":[{"expression":{"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4944,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"18918:10:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"18938:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18931:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4945,"name":"int232","nodeType":"ElementaryTypeName","src":"18931:6:17","typeDescriptions":{}}},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18931:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18918:26:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":4950,"nodeType":"ExpressionStatement","src":"18918:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4952,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"18962:10:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"18976:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18962:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":4955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18983:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":4951,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18954:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18954:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4957,"nodeType":"ExpressionStatement","src":"18954:71:17"}]},"documentation":{"id":4937,"nodeType":"StructuredDocumentation","src":"18479:350:17","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":4959,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18843:8:17","nodeType":"FunctionDefinition","parameters":{"id":4940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4939,"mutability":"mutable","name":"value","nameLocation":"18859:5:17","nodeType":"VariableDeclaration","scope":4959,"src":"18852:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4938,"name":"int256","nodeType":"ElementaryTypeName","src":"18852:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18851:14:17"},"returnParameters":{"id":4943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4942,"mutability":"mutable","name":"downcasted","nameLocation":"18896:10:17","nodeType":"VariableDeclaration","scope":4959,"src":"18889:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4941,"name":"int232","nodeType":"ElementaryTypeName","src":"18889:6:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18888:19:17"},"scope":5632,"src":"18834:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4981,"nodeType":"Block","src":"19467:124:17","statements":[{"expression":{"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4967,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4965,"src":"19477:10:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"19497:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19490:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4968,"name":"int224","nodeType":"ElementaryTypeName","src":"19490:6:17","typeDescriptions":{}}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19490:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19477:26:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":4973,"nodeType":"ExpressionStatement","src":"19477:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4975,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4965,"src":"19521:10:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"19535:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19521:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":4978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19542:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":4974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19513:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19513:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4980,"nodeType":"ExpressionStatement","src":"19513:71:17"}]},"documentation":{"id":4960,"nodeType":"StructuredDocumentation","src":"19038:350:17","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":4982,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19402:8:17","nodeType":"FunctionDefinition","parameters":{"id":4963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4962,"mutability":"mutable","name":"value","nameLocation":"19418:5:17","nodeType":"VariableDeclaration","scope":4982,"src":"19411:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4961,"name":"int256","nodeType":"ElementaryTypeName","src":"19411:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19410:14:17"},"returnParameters":{"id":4966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"mutability":"mutable","name":"downcasted","nameLocation":"19455:10:17","nodeType":"VariableDeclaration","scope":4982,"src":"19448:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":4964,"name":"int224","nodeType":"ElementaryTypeName","src":"19448:6:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19447:19:17"},"scope":5632,"src":"19393:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5004,"nodeType":"Block","src":"20026:124:17","statements":[{"expression":{"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4990,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"20036:10:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"20056:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20049:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4991,"name":"int216","nodeType":"ElementaryTypeName","src":"20049:6:17","typeDescriptions":{}}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20049:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20036:26:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":4996,"nodeType":"ExpressionStatement","src":"20036:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4998,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"20080:10:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"20094:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20080:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20101:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":4997,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20072:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20072:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5003,"nodeType":"ExpressionStatement","src":"20072:71:17"}]},"documentation":{"id":4983,"nodeType":"StructuredDocumentation","src":"19597:350:17","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":5005,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19961:8:17","nodeType":"FunctionDefinition","parameters":{"id":4986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4985,"mutability":"mutable","name":"value","nameLocation":"19977:5:17","nodeType":"VariableDeclaration","scope":5005,"src":"19970:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4984,"name":"int256","nodeType":"ElementaryTypeName","src":"19970:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19969:14:17"},"returnParameters":{"id":4989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4988,"mutability":"mutable","name":"downcasted","nameLocation":"20014:10:17","nodeType":"VariableDeclaration","scope":5005,"src":"20007:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":4987,"name":"int216","nodeType":"ElementaryTypeName","src":"20007:6:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20006:19:17"},"scope":5632,"src":"19952:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5027,"nodeType":"Block","src":"20585:124:17","statements":[{"expression":{"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5013,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"20595:10:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"20615:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20608:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5014,"name":"int208","nodeType":"ElementaryTypeName","src":"20608:6:17","typeDescriptions":{}}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20608:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20595:26:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5019,"nodeType":"ExpressionStatement","src":"20595:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5021,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"20639:10:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"20653:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20639:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20660:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":5020,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20631:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20631:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5026,"nodeType":"ExpressionStatement","src":"20631:71:17"}]},"documentation":{"id":5006,"nodeType":"StructuredDocumentation","src":"20156:350:17","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":5028,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20520:8:17","nodeType":"FunctionDefinition","parameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5008,"mutability":"mutable","name":"value","nameLocation":"20536:5:17","nodeType":"VariableDeclaration","scope":5028,"src":"20529:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5007,"name":"int256","nodeType":"ElementaryTypeName","src":"20529:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20528:14:17"},"returnParameters":{"id":5012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5011,"mutability":"mutable","name":"downcasted","nameLocation":"20573:10:17","nodeType":"VariableDeclaration","scope":5028,"src":"20566:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5010,"name":"int208","nodeType":"ElementaryTypeName","src":"20566:6:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20565:19:17"},"scope":5632,"src":"20511:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5050,"nodeType":"Block","src":"21144:124:17","statements":[{"expression":{"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5036,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"21154:10:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"21174:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21167:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5037,"name":"int200","nodeType":"ElementaryTypeName","src":"21167:6:17","typeDescriptions":{}}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21167:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21154:26:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5042,"nodeType":"ExpressionStatement","src":"21154:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5044,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"21198:10:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"21212:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21198:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":5047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21219:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":5043,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21190:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21190:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5049,"nodeType":"ExpressionStatement","src":"21190:71:17"}]},"documentation":{"id":5029,"nodeType":"StructuredDocumentation","src":"20715:350:17","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":5051,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21079:8:17","nodeType":"FunctionDefinition","parameters":{"id":5032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5031,"mutability":"mutable","name":"value","nameLocation":"21095:5:17","nodeType":"VariableDeclaration","scope":5051,"src":"21088:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5030,"name":"int256","nodeType":"ElementaryTypeName","src":"21088:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21087:14:17"},"returnParameters":{"id":5035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5034,"mutability":"mutable","name":"downcasted","nameLocation":"21132:10:17","nodeType":"VariableDeclaration","scope":5051,"src":"21125:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5033,"name":"int200","nodeType":"ElementaryTypeName","src":"21125:6:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21124:19:17"},"scope":5632,"src":"21070:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5073,"nodeType":"Block","src":"21703:124:17","statements":[{"expression":{"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5059,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"21713:10:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"21733:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21726:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5060,"name":"int192","nodeType":"ElementaryTypeName","src":"21726:6:17","typeDescriptions":{}}},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21726:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21713:26:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5065,"nodeType":"ExpressionStatement","src":"21713:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5067,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"21757:10:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"21771:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21757:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":5070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21778:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":5066,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21749:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21749:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5072,"nodeType":"ExpressionStatement","src":"21749:71:17"}]},"documentation":{"id":5052,"nodeType":"StructuredDocumentation","src":"21274:350:17","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":5074,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21638:8:17","nodeType":"FunctionDefinition","parameters":{"id":5055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5054,"mutability":"mutable","name":"value","nameLocation":"21654:5:17","nodeType":"VariableDeclaration","scope":5074,"src":"21647:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5053,"name":"int256","nodeType":"ElementaryTypeName","src":"21647:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21646:14:17"},"returnParameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"downcasted","nameLocation":"21691:10:17","nodeType":"VariableDeclaration","scope":5074,"src":"21684:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5056,"name":"int192","nodeType":"ElementaryTypeName","src":"21684:6:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21683:19:17"},"scope":5632,"src":"21629:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5096,"nodeType":"Block","src":"22262:124:17","statements":[{"expression":{"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5082,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"22272:10:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"22292:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5083,"name":"int184","nodeType":"ElementaryTypeName","src":"22285:6:17","typeDescriptions":{}}},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22285:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22272:26:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5088,"nodeType":"ExpressionStatement","src":"22272:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5090,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"22316:10:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"22330:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22316:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":5093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22337:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":5089,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22308:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22308:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5095,"nodeType":"ExpressionStatement","src":"22308:71:17"}]},"documentation":{"id":5075,"nodeType":"StructuredDocumentation","src":"21833:350:17","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":5097,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22197:8:17","nodeType":"FunctionDefinition","parameters":{"id":5078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5077,"mutability":"mutable","name":"value","nameLocation":"22213:5:17","nodeType":"VariableDeclaration","scope":5097,"src":"22206:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5076,"name":"int256","nodeType":"ElementaryTypeName","src":"22206:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22205:14:17"},"returnParameters":{"id":5081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5080,"mutability":"mutable","name":"downcasted","nameLocation":"22250:10:17","nodeType":"VariableDeclaration","scope":5097,"src":"22243:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5079,"name":"int184","nodeType":"ElementaryTypeName","src":"22243:6:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22242:19:17"},"scope":5632,"src":"22188:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5119,"nodeType":"Block","src":"22821:124:17","statements":[{"expression":{"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5105,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"22831:10:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"22851:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22844:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5106,"name":"int176","nodeType":"ElementaryTypeName","src":"22844:6:17","typeDescriptions":{}}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22844:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22831:26:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5111,"nodeType":"ExpressionStatement","src":"22831:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5113,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"22875:10:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"22889:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22875:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":5116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22896:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":5112,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22867:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22867:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5118,"nodeType":"ExpressionStatement","src":"22867:71:17"}]},"documentation":{"id":5098,"nodeType":"StructuredDocumentation","src":"22392:350:17","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":5120,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22756:8:17","nodeType":"FunctionDefinition","parameters":{"id":5101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5100,"mutability":"mutable","name":"value","nameLocation":"22772:5:17","nodeType":"VariableDeclaration","scope":5120,"src":"22765:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5099,"name":"int256","nodeType":"ElementaryTypeName","src":"22765:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22764:14:17"},"returnParameters":{"id":5104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5103,"mutability":"mutable","name":"downcasted","nameLocation":"22809:10:17","nodeType":"VariableDeclaration","scope":5120,"src":"22802:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5102,"name":"int176","nodeType":"ElementaryTypeName","src":"22802:6:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22801:19:17"},"scope":5632,"src":"22747:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5142,"nodeType":"Block","src":"23380:124:17","statements":[{"expression":{"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5128,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"23390:10:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"23410:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23403:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5129,"name":"int168","nodeType":"ElementaryTypeName","src":"23403:6:17","typeDescriptions":{}}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23403:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23390:26:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5134,"nodeType":"ExpressionStatement","src":"23390:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5136,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"23434:10:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"23448:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23434:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":5139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23455:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":5135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23426:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23426:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5141,"nodeType":"ExpressionStatement","src":"23426:71:17"}]},"documentation":{"id":5121,"nodeType":"StructuredDocumentation","src":"22951:350:17","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":5143,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23315:8:17","nodeType":"FunctionDefinition","parameters":{"id":5124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5123,"mutability":"mutable","name":"value","nameLocation":"23331:5:17","nodeType":"VariableDeclaration","scope":5143,"src":"23324:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5122,"name":"int256","nodeType":"ElementaryTypeName","src":"23324:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23323:14:17"},"returnParameters":{"id":5127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5126,"mutability":"mutable","name":"downcasted","nameLocation":"23368:10:17","nodeType":"VariableDeclaration","scope":5143,"src":"23361:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5125,"name":"int168","nodeType":"ElementaryTypeName","src":"23361:6:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23360:19:17"},"scope":5632,"src":"23306:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5165,"nodeType":"Block","src":"23939:124:17","statements":[{"expression":{"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5151,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"23949:10:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"23969:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23962:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5152,"name":"int160","nodeType":"ElementaryTypeName","src":"23962:6:17","typeDescriptions":{}}},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23962:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23949:26:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5157,"nodeType":"ExpressionStatement","src":"23949:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5159,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"23993:10:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"24007:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23993:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":5162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24014:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":5158,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23985:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23985:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5164,"nodeType":"ExpressionStatement","src":"23985:71:17"}]},"documentation":{"id":5144,"nodeType":"StructuredDocumentation","src":"23510:350:17","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":5166,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23874:8:17","nodeType":"FunctionDefinition","parameters":{"id":5147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5146,"mutability":"mutable","name":"value","nameLocation":"23890:5:17","nodeType":"VariableDeclaration","scope":5166,"src":"23883:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5145,"name":"int256","nodeType":"ElementaryTypeName","src":"23883:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23882:14:17"},"returnParameters":{"id":5150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5149,"mutability":"mutable","name":"downcasted","nameLocation":"23927:10:17","nodeType":"VariableDeclaration","scope":5166,"src":"23920:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5148,"name":"int160","nodeType":"ElementaryTypeName","src":"23920:6:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23919:19:17"},"scope":5632,"src":"23865:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5188,"nodeType":"Block","src":"24498:124:17","statements":[{"expression":{"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5174,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"24508:10:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"24528:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24521:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5175,"name":"int152","nodeType":"ElementaryTypeName","src":"24521:6:17","typeDescriptions":{}}},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24521:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24508:26:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5180,"nodeType":"ExpressionStatement","src":"24508:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5182,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"24552:10:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"24566:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24552:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":5185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24573:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":5181,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24544:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24544:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5187,"nodeType":"ExpressionStatement","src":"24544:71:17"}]},"documentation":{"id":5167,"nodeType":"StructuredDocumentation","src":"24069:350:17","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":5189,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24433:8:17","nodeType":"FunctionDefinition","parameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"value","nameLocation":"24449:5:17","nodeType":"VariableDeclaration","scope":5189,"src":"24442:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5168,"name":"int256","nodeType":"ElementaryTypeName","src":"24442:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24441:14:17"},"returnParameters":{"id":5173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5172,"mutability":"mutable","name":"downcasted","nameLocation":"24486:10:17","nodeType":"VariableDeclaration","scope":5189,"src":"24479:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5171,"name":"int152","nodeType":"ElementaryTypeName","src":"24479:6:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24478:19:17"},"scope":5632,"src":"24424:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5211,"nodeType":"Block","src":"25057:124:17","statements":[{"expression":{"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5197,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"25067:10:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"25087:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25080:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5198,"name":"int144","nodeType":"ElementaryTypeName","src":"25080:6:17","typeDescriptions":{}}},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25080:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25067:26:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5203,"nodeType":"ExpressionStatement","src":"25067:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5205,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"25111:10:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"25125:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25111:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25132:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":5204,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25103:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25103:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5210,"nodeType":"ExpressionStatement","src":"25103:71:17"}]},"documentation":{"id":5190,"nodeType":"StructuredDocumentation","src":"24628:350:17","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":5212,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24992:8:17","nodeType":"FunctionDefinition","parameters":{"id":5193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5192,"mutability":"mutable","name":"value","nameLocation":"25008:5:17","nodeType":"VariableDeclaration","scope":5212,"src":"25001:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5191,"name":"int256","nodeType":"ElementaryTypeName","src":"25001:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25000:14:17"},"returnParameters":{"id":5196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5195,"mutability":"mutable","name":"downcasted","nameLocation":"25045:10:17","nodeType":"VariableDeclaration","scope":5212,"src":"25038:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5194,"name":"int144","nodeType":"ElementaryTypeName","src":"25038:6:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25037:19:17"},"scope":5632,"src":"24983:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5234,"nodeType":"Block","src":"25616:124:17","statements":[{"expression":{"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5220,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"25626:10:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"25646:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25639:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5221,"name":"int136","nodeType":"ElementaryTypeName","src":"25639:6:17","typeDescriptions":{}}},"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25639:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25626:26:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5226,"nodeType":"ExpressionStatement","src":"25626:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5228,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"25670:10:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"25684:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25670:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25691:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":5227,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25662:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25662:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5233,"nodeType":"ExpressionStatement","src":"25662:71:17"}]},"documentation":{"id":5213,"nodeType":"StructuredDocumentation","src":"25187:350:17","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":5235,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25551:8:17","nodeType":"FunctionDefinition","parameters":{"id":5216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5215,"mutability":"mutable","name":"value","nameLocation":"25567:5:17","nodeType":"VariableDeclaration","scope":5235,"src":"25560:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5214,"name":"int256","nodeType":"ElementaryTypeName","src":"25560:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25559:14:17"},"returnParameters":{"id":5219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5218,"mutability":"mutable","name":"downcasted","nameLocation":"25604:10:17","nodeType":"VariableDeclaration","scope":5235,"src":"25597:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5217,"name":"int136","nodeType":"ElementaryTypeName","src":"25597:6:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25596:19:17"},"scope":5632,"src":"25542:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5257,"nodeType":"Block","src":"26175:124:17","statements":[{"expression":{"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5243,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"26185:10:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"26205:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26198:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5244,"name":"int128","nodeType":"ElementaryTypeName","src":"26198:6:17","typeDescriptions":{}}},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26198:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26185:26:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5249,"nodeType":"ExpressionStatement","src":"26185:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5251,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"26229:10:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"26243:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26229:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":5254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26250:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":5250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26221:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26221:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5256,"nodeType":"ExpressionStatement","src":"26221:71:17"}]},"documentation":{"id":5236,"nodeType":"StructuredDocumentation","src":"25746:350:17","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":5258,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26110:8:17","nodeType":"FunctionDefinition","parameters":{"id":5239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5238,"mutability":"mutable","name":"value","nameLocation":"26126:5:17","nodeType":"VariableDeclaration","scope":5258,"src":"26119:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5237,"name":"int256","nodeType":"ElementaryTypeName","src":"26119:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26118:14:17"},"returnParameters":{"id":5242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5241,"mutability":"mutable","name":"downcasted","nameLocation":"26163:10:17","nodeType":"VariableDeclaration","scope":5258,"src":"26156:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5240,"name":"int128","nodeType":"ElementaryTypeName","src":"26156:6:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26155:19:17"},"scope":5632,"src":"26101:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5280,"nodeType":"Block","src":"26734:124:17","statements":[{"expression":{"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5266,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"26744:10:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"26764:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26757:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5267,"name":"int120","nodeType":"ElementaryTypeName","src":"26757:6:17","typeDescriptions":{}}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26757:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26744:26:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5272,"nodeType":"ExpressionStatement","src":"26744:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5274,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"26788:10:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"26802:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26788:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26809:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":5273,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26780:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26780:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5279,"nodeType":"ExpressionStatement","src":"26780:71:17"}]},"documentation":{"id":5259,"nodeType":"StructuredDocumentation","src":"26305:350:17","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":5281,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26669:8:17","nodeType":"FunctionDefinition","parameters":{"id":5262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5261,"mutability":"mutable","name":"value","nameLocation":"26685:5:17","nodeType":"VariableDeclaration","scope":5281,"src":"26678:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5260,"name":"int256","nodeType":"ElementaryTypeName","src":"26678:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26677:14:17"},"returnParameters":{"id":5265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5264,"mutability":"mutable","name":"downcasted","nameLocation":"26722:10:17","nodeType":"VariableDeclaration","scope":5281,"src":"26715:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5263,"name":"int120","nodeType":"ElementaryTypeName","src":"26715:6:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26714:19:17"},"scope":5632,"src":"26660:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5303,"nodeType":"Block","src":"27293:124:17","statements":[{"expression":{"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5289,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"27303:10:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"27323:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27316:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5290,"name":"int112","nodeType":"ElementaryTypeName","src":"27316:6:17","typeDescriptions":{}}},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27316:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27303:26:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5295,"nodeType":"ExpressionStatement","src":"27303:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5297,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"27347:10:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"27361:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27347:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":5300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27368:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":5296,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27339:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27339:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5302,"nodeType":"ExpressionStatement","src":"27339:71:17"}]},"documentation":{"id":5282,"nodeType":"StructuredDocumentation","src":"26864:350:17","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":5304,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27228:8:17","nodeType":"FunctionDefinition","parameters":{"id":5285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5284,"mutability":"mutable","name":"value","nameLocation":"27244:5:17","nodeType":"VariableDeclaration","scope":5304,"src":"27237:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5283,"name":"int256","nodeType":"ElementaryTypeName","src":"27237:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27236:14:17"},"returnParameters":{"id":5288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5287,"mutability":"mutable","name":"downcasted","nameLocation":"27281:10:17","nodeType":"VariableDeclaration","scope":5304,"src":"27274:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5286,"name":"int112","nodeType":"ElementaryTypeName","src":"27274:6:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27273:19:17"},"scope":5632,"src":"27219:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5326,"nodeType":"Block","src":"27852:124:17","statements":[{"expression":{"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5312,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"27862:10:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5307,"src":"27882:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27875:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5313,"name":"int104","nodeType":"ElementaryTypeName","src":"27875:6:17","typeDescriptions":{}}},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27875:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27862:26:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5318,"nodeType":"ExpressionStatement","src":"27862:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"27906:10:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5307,"src":"27920:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27906:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":5323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27927:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":5319,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27898:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27898:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5325,"nodeType":"ExpressionStatement","src":"27898:71:17"}]},"documentation":{"id":5305,"nodeType":"StructuredDocumentation","src":"27423:350:17","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":5327,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27787:8:17","nodeType":"FunctionDefinition","parameters":{"id":5308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5307,"mutability":"mutable","name":"value","nameLocation":"27803:5:17","nodeType":"VariableDeclaration","scope":5327,"src":"27796:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5306,"name":"int256","nodeType":"ElementaryTypeName","src":"27796:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27795:14:17"},"returnParameters":{"id":5311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5310,"mutability":"mutable","name":"downcasted","nameLocation":"27840:10:17","nodeType":"VariableDeclaration","scope":5327,"src":"27833:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5309,"name":"int104","nodeType":"ElementaryTypeName","src":"27833:6:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27832:19:17"},"scope":5632,"src":"27778:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5349,"nodeType":"Block","src":"28404:122:17","statements":[{"expression":{"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5335,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"28414:10:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"28433:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28427:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5336,"name":"int96","nodeType":"ElementaryTypeName","src":"28427:5:17","typeDescriptions":{}}},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28427:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28414:25:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5341,"nodeType":"ExpressionStatement","src":"28414:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5343,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"28457:10:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"28471:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28457:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28478:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":5342,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28449:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28449:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5348,"nodeType":"ExpressionStatement","src":"28449:70:17"}]},"documentation":{"id":5328,"nodeType":"StructuredDocumentation","src":"27982:345:17","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":5350,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28341:7:17","nodeType":"FunctionDefinition","parameters":{"id":5331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5330,"mutability":"mutable","name":"value","nameLocation":"28356:5:17","nodeType":"VariableDeclaration","scope":5350,"src":"28349:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5329,"name":"int256","nodeType":"ElementaryTypeName","src":"28349:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28348:14:17"},"returnParameters":{"id":5334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5333,"mutability":"mutable","name":"downcasted","nameLocation":"28392:10:17","nodeType":"VariableDeclaration","scope":5350,"src":"28386:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5332,"name":"int96","nodeType":"ElementaryTypeName","src":"28386:5:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28385:18:17"},"scope":5632,"src":"28332:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5372,"nodeType":"Block","src":"28954:122:17","statements":[{"expression":{"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5358,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"28964:10:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"28983:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28977:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5359,"name":"int88","nodeType":"ElementaryTypeName","src":"28977:5:17","typeDescriptions":{}}},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28977:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28964:25:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5364,"nodeType":"ExpressionStatement","src":"28964:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5366,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"29007:10:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"29021:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29007:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":5369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29028:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":5365,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28999:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28999:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5371,"nodeType":"ExpressionStatement","src":"28999:70:17"}]},"documentation":{"id":5351,"nodeType":"StructuredDocumentation","src":"28532:345:17","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":5373,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28891:7:17","nodeType":"FunctionDefinition","parameters":{"id":5354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5353,"mutability":"mutable","name":"value","nameLocation":"28906:5:17","nodeType":"VariableDeclaration","scope":5373,"src":"28899:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5352,"name":"int256","nodeType":"ElementaryTypeName","src":"28899:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28898:14:17"},"returnParameters":{"id":5357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5356,"mutability":"mutable","name":"downcasted","nameLocation":"28942:10:17","nodeType":"VariableDeclaration","scope":5373,"src":"28936:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5355,"name":"int88","nodeType":"ElementaryTypeName","src":"28936:5:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28935:18:17"},"scope":5632,"src":"28882:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5395,"nodeType":"Block","src":"29504:122:17","statements":[{"expression":{"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5381,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"29514:10:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"29533:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29527:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5382,"name":"int80","nodeType":"ElementaryTypeName","src":"29527:5:17","typeDescriptions":{}}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29527:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29514:25:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5387,"nodeType":"ExpressionStatement","src":"29514:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5389,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"29557:10:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"29571:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29557:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":5392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29578:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":5388,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29549:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29549:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5394,"nodeType":"ExpressionStatement","src":"29549:70:17"}]},"documentation":{"id":5374,"nodeType":"StructuredDocumentation","src":"29082:345:17","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":5396,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29441:7:17","nodeType":"FunctionDefinition","parameters":{"id":5377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5376,"mutability":"mutable","name":"value","nameLocation":"29456:5:17","nodeType":"VariableDeclaration","scope":5396,"src":"29449:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5375,"name":"int256","nodeType":"ElementaryTypeName","src":"29449:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29448:14:17"},"returnParameters":{"id":5380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5379,"mutability":"mutable","name":"downcasted","nameLocation":"29492:10:17","nodeType":"VariableDeclaration","scope":5396,"src":"29486:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5378,"name":"int80","nodeType":"ElementaryTypeName","src":"29486:5:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29485:18:17"},"scope":5632,"src":"29432:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5418,"nodeType":"Block","src":"30054:122:17","statements":[{"expression":{"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5404,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"30064:10:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"30083:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30077:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5405,"name":"int72","nodeType":"ElementaryTypeName","src":"30077:5:17","typeDescriptions":{}}},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30077:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30064:25:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5410,"nodeType":"ExpressionStatement","src":"30064:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5412,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"30107:10:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"30121:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30107:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":5415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30128:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":5411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30099:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30099:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5417,"nodeType":"ExpressionStatement","src":"30099:70:17"}]},"documentation":{"id":5397,"nodeType":"StructuredDocumentation","src":"29632:345:17","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":5419,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29991:7:17","nodeType":"FunctionDefinition","parameters":{"id":5400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5399,"mutability":"mutable","name":"value","nameLocation":"30006:5:17","nodeType":"VariableDeclaration","scope":5419,"src":"29999:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5398,"name":"int256","nodeType":"ElementaryTypeName","src":"29999:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29998:14:17"},"returnParameters":{"id":5403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5402,"mutability":"mutable","name":"downcasted","nameLocation":"30042:10:17","nodeType":"VariableDeclaration","scope":5419,"src":"30036:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5401,"name":"int72","nodeType":"ElementaryTypeName","src":"30036:5:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30035:18:17"},"scope":5632,"src":"29982:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5441,"nodeType":"Block","src":"30604:122:17","statements":[{"expression":{"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5427,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"30614:10:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"30633:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30627:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5428,"name":"int64","nodeType":"ElementaryTypeName","src":"30627:5:17","typeDescriptions":{}}},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30627:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30614:25:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5433,"nodeType":"ExpressionStatement","src":"30614:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5435,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"30657:10:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"30671:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30657:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":5438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30678:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":5434,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30649:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30649:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5440,"nodeType":"ExpressionStatement","src":"30649:70:17"}]},"documentation":{"id":5420,"nodeType":"StructuredDocumentation","src":"30182:345:17","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":5442,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30541:7:17","nodeType":"FunctionDefinition","parameters":{"id":5423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5422,"mutability":"mutable","name":"value","nameLocation":"30556:5:17","nodeType":"VariableDeclaration","scope":5442,"src":"30549:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5421,"name":"int256","nodeType":"ElementaryTypeName","src":"30549:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30548:14:17"},"returnParameters":{"id":5426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5425,"mutability":"mutable","name":"downcasted","nameLocation":"30592:10:17","nodeType":"VariableDeclaration","scope":5442,"src":"30586:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5424,"name":"int64","nodeType":"ElementaryTypeName","src":"30586:5:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30585:18:17"},"scope":5632,"src":"30532:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5464,"nodeType":"Block","src":"31154:122:17","statements":[{"expression":{"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"31164:10:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"31183:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31177:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5451,"name":"int56","nodeType":"ElementaryTypeName","src":"31177:5:17","typeDescriptions":{}}},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31177:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31164:25:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5456,"nodeType":"ExpressionStatement","src":"31164:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5458,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"31207:10:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"31221:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31207:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":5461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31228:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":5457,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31199:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31199:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5463,"nodeType":"ExpressionStatement","src":"31199:70:17"}]},"documentation":{"id":5443,"nodeType":"StructuredDocumentation","src":"30732:345:17","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":5465,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31091:7:17","nodeType":"FunctionDefinition","parameters":{"id":5446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5445,"mutability":"mutable","name":"value","nameLocation":"31106:5:17","nodeType":"VariableDeclaration","scope":5465,"src":"31099:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5444,"name":"int256","nodeType":"ElementaryTypeName","src":"31099:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31098:14:17"},"returnParameters":{"id":5449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5448,"mutability":"mutable","name":"downcasted","nameLocation":"31142:10:17","nodeType":"VariableDeclaration","scope":5465,"src":"31136:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5447,"name":"int56","nodeType":"ElementaryTypeName","src":"31136:5:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31135:18:17"},"scope":5632,"src":"31082:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5487,"nodeType":"Block","src":"31704:122:17","statements":[{"expression":{"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5473,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"31714:10:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"31733:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31727:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5474,"name":"int48","nodeType":"ElementaryTypeName","src":"31727:5:17","typeDescriptions":{}}},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31727:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31714:25:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5479,"nodeType":"ExpressionStatement","src":"31714:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5481,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"31757:10:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"31771:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31757:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":5484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31778:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":5480,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31749:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31749:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5486,"nodeType":"ExpressionStatement","src":"31749:70:17"}]},"documentation":{"id":5466,"nodeType":"StructuredDocumentation","src":"31282:345:17","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":5488,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31641:7:17","nodeType":"FunctionDefinition","parameters":{"id":5469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5468,"mutability":"mutable","name":"value","nameLocation":"31656:5:17","nodeType":"VariableDeclaration","scope":5488,"src":"31649:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5467,"name":"int256","nodeType":"ElementaryTypeName","src":"31649:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31648:14:17"},"returnParameters":{"id":5472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5471,"mutability":"mutable","name":"downcasted","nameLocation":"31692:10:17","nodeType":"VariableDeclaration","scope":5488,"src":"31686:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5470,"name":"int48","nodeType":"ElementaryTypeName","src":"31686:5:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31685:18:17"},"scope":5632,"src":"31632:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5510,"nodeType":"Block","src":"32254:122:17","statements":[{"expression":{"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5496,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"32264:10:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"32283:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32277:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5497,"name":"int40","nodeType":"ElementaryTypeName","src":"32277:5:17","typeDescriptions":{}}},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32277:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32264:25:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5502,"nodeType":"ExpressionStatement","src":"32264:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5504,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"32307:10:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"32321:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32307:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":5507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32328:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":5503,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32299:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32299:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5509,"nodeType":"ExpressionStatement","src":"32299:70:17"}]},"documentation":{"id":5489,"nodeType":"StructuredDocumentation","src":"31832:345:17","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":5511,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32191:7:17","nodeType":"FunctionDefinition","parameters":{"id":5492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5491,"mutability":"mutable","name":"value","nameLocation":"32206:5:17","nodeType":"VariableDeclaration","scope":5511,"src":"32199:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5490,"name":"int256","nodeType":"ElementaryTypeName","src":"32199:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32198:14:17"},"returnParameters":{"id":5495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5494,"mutability":"mutable","name":"downcasted","nameLocation":"32242:10:17","nodeType":"VariableDeclaration","scope":5511,"src":"32236:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5493,"name":"int40","nodeType":"ElementaryTypeName","src":"32236:5:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32235:18:17"},"scope":5632,"src":"32182:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5533,"nodeType":"Block","src":"32804:122:17","statements":[{"expression":{"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5519,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"32814:10:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"32833:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32827:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5520,"name":"int32","nodeType":"ElementaryTypeName","src":"32827:5:17","typeDescriptions":{}}},"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32827:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32814:25:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5525,"nodeType":"ExpressionStatement","src":"32814:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5527,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"32857:10:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"32871:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32857:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32878:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":5526,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32849:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32849:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5532,"nodeType":"ExpressionStatement","src":"32849:70:17"}]},"documentation":{"id":5512,"nodeType":"StructuredDocumentation","src":"32382:345:17","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":5534,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32741:7:17","nodeType":"FunctionDefinition","parameters":{"id":5515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5514,"mutability":"mutable","name":"value","nameLocation":"32756:5:17","nodeType":"VariableDeclaration","scope":5534,"src":"32749:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5513,"name":"int256","nodeType":"ElementaryTypeName","src":"32749:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32748:14:17"},"returnParameters":{"id":5518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5517,"mutability":"mutable","name":"downcasted","nameLocation":"32792:10:17","nodeType":"VariableDeclaration","scope":5534,"src":"32786:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5516,"name":"int32","nodeType":"ElementaryTypeName","src":"32786:5:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32785:18:17"},"scope":5632,"src":"32732:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5556,"nodeType":"Block","src":"33354:122:17","statements":[{"expression":{"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5542,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"33364:10:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"33383:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33377:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5543,"name":"int24","nodeType":"ElementaryTypeName","src":"33377:5:17","typeDescriptions":{}}},"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33377:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33364:25:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5548,"nodeType":"ExpressionStatement","src":"33364:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5550,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"33407:10:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"33421:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33407:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":5553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33428:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":5549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33399:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33399:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5555,"nodeType":"ExpressionStatement","src":"33399:70:17"}]},"documentation":{"id":5535,"nodeType":"StructuredDocumentation","src":"32932:345:17","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":5557,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33291:7:17","nodeType":"FunctionDefinition","parameters":{"id":5538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5537,"mutability":"mutable","name":"value","nameLocation":"33306:5:17","nodeType":"VariableDeclaration","scope":5557,"src":"33299:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5536,"name":"int256","nodeType":"ElementaryTypeName","src":"33299:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33298:14:17"},"returnParameters":{"id":5541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5540,"mutability":"mutable","name":"downcasted","nameLocation":"33342:10:17","nodeType":"VariableDeclaration","scope":5557,"src":"33336:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5539,"name":"int24","nodeType":"ElementaryTypeName","src":"33336:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33335:18:17"},"scope":5632,"src":"33282:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5579,"nodeType":"Block","src":"33904:122:17","statements":[{"expression":{"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5565,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"33914:10:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"33933:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33927:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5566,"name":"int16","nodeType":"ElementaryTypeName","src":"33927:5:17","typeDescriptions":{}}},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33927:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33914:25:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5571,"nodeType":"ExpressionStatement","src":"33914:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5573,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"33957:10:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"33971:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33957:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":5576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33978:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":5572,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33949:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33949:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5578,"nodeType":"ExpressionStatement","src":"33949:70:17"}]},"documentation":{"id":5558,"nodeType":"StructuredDocumentation","src":"33482:345:17","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":5580,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33841:7:17","nodeType":"FunctionDefinition","parameters":{"id":5561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5560,"mutability":"mutable","name":"value","nameLocation":"33856:5:17","nodeType":"VariableDeclaration","scope":5580,"src":"33849:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5559,"name":"int256","nodeType":"ElementaryTypeName","src":"33849:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33848:14:17"},"returnParameters":{"id":5564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5563,"mutability":"mutable","name":"downcasted","nameLocation":"33892:10:17","nodeType":"VariableDeclaration","scope":5580,"src":"33886:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5562,"name":"int16","nodeType":"ElementaryTypeName","src":"33886:5:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33885:18:17"},"scope":5632,"src":"33832:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5602,"nodeType":"Block","src":"34447:120:17","statements":[{"expression":{"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5588,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"34457:10:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5583,"src":"34475:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34470:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5589,"name":"int8","nodeType":"ElementaryTypeName","src":"34470:4:17","typeDescriptions":{}}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34470:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34457:24:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5594,"nodeType":"ExpressionStatement","src":"34457:24:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5596,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"34499:10:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5583,"src":"34513:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34499:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":5599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34520:39:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":5595,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34491:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34491:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5601,"nodeType":"ExpressionStatement","src":"34491:69:17"}]},"documentation":{"id":5581,"nodeType":"StructuredDocumentation","src":"34032:340:17","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":5603,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34386:6:17","nodeType":"FunctionDefinition","parameters":{"id":5584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5583,"mutability":"mutable","name":"value","nameLocation":"34400:5:17","nodeType":"VariableDeclaration","scope":5603,"src":"34393:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5582,"name":"int256","nodeType":"ElementaryTypeName","src":"34393:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34392:14:17"},"returnParameters":{"id":5587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5586,"mutability":"mutable","name":"downcasted","nameLocation":"34435:10:17","nodeType":"VariableDeclaration","scope":5603,"src":"34430:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5585,"name":"int8","nodeType":"ElementaryTypeName","src":"34430:4:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34429:17:17"},"scope":5632,"src":"34377:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5630,"nodeType":"Block","src":"34845:233:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"34962:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34984:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5616,"name":"int256","nodeType":"ElementaryTypeName","src":"34984:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5615,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34979:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34979:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34979:16:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34971:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5613,"name":"uint256","nodeType":"ElementaryTypeName","src":"34971:7:17","typeDescriptions":{}}},"id":5620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34971:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34962:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":5622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34998:42:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":5611,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34954:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34954:87:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5624,"nodeType":"ExpressionStatement","src":"34954:87:17"},{"expression":{"arguments":[{"id":5627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"35065:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35058:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5625,"name":"int256","nodeType":"ElementaryTypeName","src":"35058:6:17","typeDescriptions":{}}},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35058:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5610,"id":5629,"nodeType":"Return","src":"35051:20:17"}]},"documentation":{"id":5604,"nodeType":"StructuredDocumentation","src":"34573:203:17","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":5631,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34790:8:17","nodeType":"FunctionDefinition","parameters":{"id":5607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5606,"mutability":"mutable","name":"value","nameLocation":"34807:5:17","nodeType":"VariableDeclaration","scope":5631,"src":"34799:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5605,"name":"uint256","nodeType":"ElementaryTypeName","src":"34799:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34798:15:17"},"returnParameters":{"id":5610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5631,"src":"34837:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5608,"name":"int256","nodeType":"ElementaryTypeName","src":"34837:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34836:8:17"},"scope":5632,"src":"34781:297:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5633,"src":"927:34153:17","usedErrors":[]}],"src":"192:34889:17"},"id":17},"contracts/Data.sol":{"ast":{"absolutePath":"contracts/Data.sol","exportedSymbols":{"dao_pool_address":[5655],"liquidity_reserve_address":[5652],"marketing_address":[5646],"public_sale_address":[5637],"staking_reward_address":[5649],"team_and_project_coordinator_address":[5643]},"id":5656,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":5634,"literals":["solidity","0.8",".11"],"nodeType":"PragmaDirective","src":"39:23:18"},{"constant":true,"id":5637,"mutability":"constant","name":"public_sale_address","nameLocation":"81:19:18","nodeType":"VariableDeclaration","scope":5656,"src":"64:81:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5635,"name":"address","nodeType":"ElementaryTypeName","src":"64:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307835343730633846463235454330353938306663374332393637443037364238303132323938664537","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"103:42:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x5470c8FF25EC05980fc7C2967D076B8012298fE7"},"visibility":"internal"},{"constant":true,"id":5643,"mutability":"constant","name":"team_and_project_coordinator_address","nameLocation":"172:36:18","nodeType":"VariableDeclaration","scope":5656,"src":"147:121:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":5638,"name":"address","nodeType":"ElementaryTypeName","src":"147:15:18","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":{"arguments":[{"hexValue":"307834353039343037316334444161663641396137334230613066303935613262313338626438413341","id":5641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"224:42:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x45094071c4DAaf6A9a73B0a0f095a2b138bd8A3A"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"211:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":5639,"name":"address","nodeType":"ElementaryTypeName","src":"211:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":5642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"211:57:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":true,"id":5646,"mutability":"constant","name":"marketing_address","nameLocation":"287:17:18","nodeType":"VariableDeclaration","scope":5656,"src":"270:79:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5644,"name":"address","nodeType":"ElementaryTypeName","src":"270:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307866303966363564443444323239453939313930313636394164376337353439663036304533306239","id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"307:42:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xf09f65dD4D229E991901669Ad7c7549f060E30b9"},"visibility":"internal"},{"constant":true,"id":5649,"mutability":"constant","name":"staking_reward_address","nameLocation":"368:22:18","nodeType":"VariableDeclaration","scope":5656,"src":"351:84:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5647,"name":"address","nodeType":"ElementaryTypeName","src":"351:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307832463833386346304466333862324539314537343761303164644145354542616435353538623741","id":5648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"393:42:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x2F838cF0Df38b2E91E747a01ddAE5EBad5558b7A"},"visibility":"internal"},{"constant":true,"id":5652,"mutability":"constant","name":"liquidity_reserve_address","nameLocation":"454:25:18","nodeType":"VariableDeclaration","scope":5656,"src":"437:87:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5650,"name":"address","nodeType":"ElementaryTypeName","src":"437:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307831413231313845303536443661463139324532333343326339434642333465303637444544314638","id":5651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"482:42:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x1A2118E056D6aF192E233C2c9CFB34e067DED1F8"},"visibility":"internal"},{"constant":true,"id":5655,"mutability":"constant","name":"dao_pool_address","nameLocation":"543:16:18","nodeType":"VariableDeclaration","scope":5656,"src":"526:78:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5653,"name":"address","nodeType":"ElementaryTypeName","src":"526:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307837353833374537393231353235304334353333316239326333354237426535303665443031354143","id":5654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"562:42:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x75837E79215250C45331b92c35B7Be506eD015AC"},"visibility":"internal"}],"src":"39:673:18"},"id":18},"contracts/TalaxToken.sol":{"ast":{"absolutePath":"contracts/TalaxToken.sol","exportedSymbols":{"Address":[2440],"Context":[2462],"Counters":[2536],"ECDSA":[3072],"EIP712":[3226],"ERC20":[777],"ERC20Burnable":[899],"ERC20Permit":[1793],"ERC20Votes":[1596],"IERC20":[855],"IERC20Metadata":[1621],"IERC20Permit":[1829],"IVotes":[190],"Math":[4091],"Ownable":[112],"SafeCast":[5632],"SafeERC20":[2110],"Strings":[2711],"TalaxToken":[5967],"dao_pool_address":[5655],"liquidity_reserve_address":[5652],"marketing_address":[5646],"public_sale_address":[5637],"staking_reward_address":[5649],"team_and_project_coordinator_address":[5643]},"id":5968,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5657,"literals":["solidity","0.8",".11"],"nodeType":"PragmaDirective","src":"32:23:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":5658,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5968,"sourceUnit":2111,"src":"57:65:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5659,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5968,"sourceUnit":856,"src":"123:56:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5660,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5968,"sourceUnit":778,"src":"180:55:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":5661,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5968,"sourceUnit":900,"src":"236:74:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5662,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5968,"sourceUnit":113,"src":"311:52:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","id":5663,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5968,"sourceUnit":1794,"src":"364:78:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":5664,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5968,"sourceUnit":1597,"src":"443:71:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Data.sol","file":"./Data.sol","id":5665,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5968,"sourceUnit":5656,"src":"516:20:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5666,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"561:5:19"},"id":5667,"nodeType":"InheritanceSpecifier","src":"561:5:19"},{"baseName":{"id":5668,"name":"ERC20Burnable","nodeType":"IdentifierPath","referencedDeclaration":899,"src":"568:13:19"},"id":5669,"nodeType":"InheritanceSpecifier","src":"568:13:19"},{"baseName":{"id":5670,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"583:7:19"},"id":5671,"nodeType":"InheritanceSpecifier","src":"583:7:19"},{"baseName":{"id":5672,"name":"ERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":1793,"src":"592:11:19"},"id":5673,"nodeType":"InheritanceSpecifier","src":"592:11:19"},{"baseName":{"id":5674,"name":"ERC20Votes","nodeType":"IdentifierPath","referencedDeclaration":1596,"src":"605:10:19"},"id":5675,"nodeType":"InheritanceSpecifier","src":"605:10:19"}],"canonicalName":"TalaxToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5967,"linearizedBaseContracts":[5967,1596,1793,3226,1829,112,899,777,1621,855,2462,190],"name":"TalaxToken","nameLocation":"547:10:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":5678,"mutability":"mutable","name":"taxPercent","nameLocation":"638:10:19","nodeType":"VariableDeclaration","scope":5967,"src":"622:30:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5676,"name":"uint256","nodeType":"ElementaryTypeName","src":"622:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":5677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"651:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"body":{"id":5711,"nodeType":"Block","src":"724:179:19","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5689,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"740:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"740:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_21000000000_by_1","typeString":"int_const 21000000000"},"id":5693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3231","id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:2:19","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316539","id":5692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"759:3:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1e9"},"src":"754:8:19","typeDescriptions":{"typeIdentifier":"t_rational_21000000000_by_1","typeString":"int_const 21000000000"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5695,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"769:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"769:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"765:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"754:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5688,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[5948],"referencedDeclaration":5948,"src":"734:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"734:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5700,"nodeType":"ExpressionStatement","src":"734:46:19"},{"expression":{"arguments":[{"hexValue":"307835443065663438364637624164383461373166613137443936323738383765443832433436464637","id":5702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"809:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x5D0ef486F7bAd84a71fa17D9627887eD82C46FF7"},{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":5705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"865:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316539","id":5704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"870:3:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1e9"},"src":"865:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5706,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"876:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"876:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"865:21:19","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":5701,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[5948],"referencedDeclaration":5948,"src":"790:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"790:106:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5710,"nodeType":"ExpressionStatement","src":"790:106:19"}]},"id":5712,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"54616c617865756d","id":5681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"679:10:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb2b557c5768ad3195df7d5666174191d26817ed0efda3f627138b01821b5cff","typeString":"literal_string \"Talaxeum\""},"value":"Talaxeum"},{"hexValue":"54414c4158","id":5682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"691:7:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_14a9aa4b4d3da68a2d86237b78db6e006efc5eaccae7a332335a9649a60539bc","typeString":"literal_string \"TALAX\""},"value":"TALAX"}],"id":5683,"kind":"baseConstructorSpecifier","modifierName":{"id":5680,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"673:5:19"},"nodeType":"ModifierInvocation","src":"673:26:19"},{"arguments":[{"hexValue":"54616c617865756d","id":5685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"712:10:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb2b557c5768ad3195df7d5666174191d26817ed0efda3f627138b01821b5cff","typeString":"literal_string \"Talaxeum\""},"value":"Talaxeum"}],"id":5686,"kind":"baseConstructorSpecifier","modifierName":{"id":5684,"name":"ERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":1793,"src":"700:11:19"},"nodeType":"ModifierInvocation","src":"700:23:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5679,"nodeType":"ParameterList","parameters":[],"src":"670:2:19"},"returnParameters":{"id":5687,"nodeType":"ParameterList","parameters":[],"src":"724:0:19"},"scope":5967,"src":"659:244:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"anonymous":false,"id":5716,"name":"ChangeTaxPercentage","nameLocation":"915:19:19","nodeType":"EventDefinition","parameters":{"id":5715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5714,"indexed":false,"mutability":"mutable","name":"tax","nameLocation":"943:3:19","nodeType":"VariableDeclaration","scope":5716,"src":"935:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5713,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"934:13:19"},"src":"909:39:19"},{"body":{"id":5719,"nodeType":"Block","src":"982:2:19","statements":[]},"id":5720,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5717,"nodeType":"ParameterList","parameters":[],"src":"962:2:19"},"returnParameters":{"id":5718,"nodeType":"ParameterList","parameters":[],"src":"982:0:19"},"scope":5967,"src":"954:30:19","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":5723,"nodeType":"Block","src":"1017:2:19","statements":[]},"id":5724,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5721,"nodeType":"ParameterList","parameters":[],"src":"997:2:19"},"returnParameters":{"id":5722,"nodeType":"ParameterList","parameters":[],"src":"1017:0:19"},"scope":5967,"src":"990:29:19","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":5735,"nodeType":"Block","src":"1077:45:19","statements":[{"expression":{"expression":{"arguments":[{"id":5731,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1102:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_TalaxToken_$5967","typeString":"contract TalaxToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TalaxToken_$5967","typeString":"contract TalaxToken"}],"id":5730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1094:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5729,"name":"address","nodeType":"ElementaryTypeName","src":"1094:7:19","typeDescriptions":{}}},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"1094:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5728,"id":5734,"nodeType":"Return","src":"1087:28:19"}]},"functionSelector":"12065fe0","id":5736,"implemented":true,"kind":"function","modifiers":[],"name":"getBalance","nameLocation":"1034:10:19","nodeType":"FunctionDefinition","parameters":{"id":5725,"nodeType":"ParameterList","parameters":[],"src":"1044:2:19"},"returnParameters":{"id":5728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5736,"src":"1068:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5726,"name":"uint256","nodeType":"ElementaryTypeName","src":"1068:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1067:9:19"},"scope":5967,"src":"1025:97:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5765,"nodeType":"Block","src":"1162:236:19","statements":[{"assignments":[5740],"declarations":[{"constant":false,"id":5740,"mutability":"mutable","name":"thirdOfValue","nameLocation":"1180:12:19","nodeType":"VariableDeclaration","scope":5765,"src":"1172:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5739,"name":"uint256","nodeType":"ElementaryTypeName","src":"1172:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5748,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5743,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1203:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_TalaxToken_$5967","typeString":"contract TalaxToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TalaxToken_$5967","typeString":"contract TalaxToken"}],"id":5742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1195:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5741,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:19","typeDescriptions":{}}},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1195:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"1195:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":5746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1219:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1195:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1172:48:19"},{"assignments":[5750,null],"declarations":[{"constant":false,"id":5750,"mutability":"mutable","name":"sent","nameLocation":"1237:4:19","nodeType":"VariableDeclaration","scope":5765,"src":"1232:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5749,"name":"bool","nodeType":"ElementaryTypeName","src":"1232:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":5757,"initialValue":{"arguments":[{"hexValue":"","id":5755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1332:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":5751,"name":"team_and_project_coordinator_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5643,"src":"1247:36:19","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1247:41:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":5753,"name":"thirdOfValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"1309:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1247:84:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1247:88:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1231:104:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5759,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"1354:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":5760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1362:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1354:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e64204574686572","id":5762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1368:22:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","typeString":"literal_string \"Failed to send Ether\""},"value":"Failed to send Ether"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","typeString":"literal_string \"Failed to send Ether\""}],"id":5758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1346:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1346:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5764,"nodeType":"ExpressionStatement","src":"1346:45:19"}]},"functionSelector":"24600fc3","id":5766,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawFunds","nameLocation":"1137:13:19","nodeType":"FunctionDefinition","parameters":{"id":5737,"nodeType":"ParameterList","parameters":[],"src":"1150:2:19"},"returnParameters":{"id":5738,"nodeType":"ParameterList","parameters":[],"src":"1162:0:19"},"scope":5967,"src":"1128:270:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5789,"nodeType":"Block","src":"1451:178:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":5775,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"1504:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5774,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"1497:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$855_$","typeString":"type(contract IERC20)"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1497:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},{"id":5777,"name":"team_and_project_coordinator_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5643,"src":"1524:36:19","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"arguments":[{"id":5784,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1606:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_TalaxToken_$5967","typeString":"contract TalaxToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TalaxToken_$5967","typeString":"contract TalaxToken"}],"id":5783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1598:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5782,"name":"address","nodeType":"ElementaryTypeName","src":"1598:7:19","typeDescriptions":{}}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1598:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5779,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"1581:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5778,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"1574:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$855_$","typeString":"type(contract IERC20)"}},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1574:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"}},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":812,"src":"1574:23:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1574:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$855","typeString":"contract IERC20"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5771,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"1461:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$2110_$","typeString":"type(library SafeERC20)"}},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1861,"src":"1461:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$855_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1461:161:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5788,"nodeType":"ExpressionStatement","src":"1461:161:19"}]},"functionSelector":"68742da6","id":5790,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawFunds","nameLocation":"1413:13:19","nodeType":"FunctionDefinition","parameters":{"id":5769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5768,"mutability":"mutable","name":"token","nameLocation":"1435:5:19","nodeType":"VariableDeclaration","scope":5790,"src":"1427:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5767,"name":"address","nodeType":"ElementaryTypeName","src":"1427:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1426:15:19"},"returnParameters":{"id":5770,"nodeType":"ParameterList","parameters":[],"src":"1451:0:19"},"scope":5967,"src":"1404:225:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5805,"nodeType":"Block","src":"1686:72:19","statements":[{"expression":{"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5797,"name":"taxPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"1696:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5798,"name":"tax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"1709:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5800,"nodeType":"ExpressionStatement","src":"1696:16:19"},{"eventCall":{"arguments":[{"id":5802,"name":"tax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"1747:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5801,"name":"ChangeTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"1727:19:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1727:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5804,"nodeType":"EmitStatement","src":"1722:29:19"}]},"functionSelector":"3e45c8af","id":5806,"implemented":true,"kind":"function","modifiers":[{"id":5795,"kind":"modifierInvocation","modifierName":{"id":5794,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1676:9:19"},"nodeType":"ModifierInvocation","src":"1676:9:19"}],"name":"changeTax","nameLocation":"1644:9:19","nodeType":"FunctionDefinition","parameters":{"id":5793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5792,"mutability":"mutable","name":"tax","nameLocation":"1662:3:19","nodeType":"VariableDeclaration","scope":5806,"src":"1654:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5791,"name":"uint256","nodeType":"ElementaryTypeName","src":"1654:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1653:13:19"},"returnParameters":{"id":5796,"nodeType":"ParameterList","parameters":[],"src":"1686:0:19"},"scope":5967,"src":"1635:123:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5820,"nodeType":"Block","src":"1823:34:19","statements":[{"expression":{"arguments":[{"id":5816,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"1839:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5817,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"1843:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5815,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[5948],"referencedDeclaration":5948,"src":"1833:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1833:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5819,"nodeType":"ExpressionStatement","src":"1833:17:19"}]},"functionSelector":"40c10f19","id":5821,"implemented":true,"kind":"function","modifiers":[{"id":5813,"kind":"modifierInvocation","modifierName":{"id":5812,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1813:9:19"},"nodeType":"ModifierInvocation","src":"1813:9:19"}],"name":"mint","nameLocation":"1773:4:19","nodeType":"FunctionDefinition","parameters":{"id":5811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5808,"mutability":"mutable","name":"to","nameLocation":"1786:2:19","nodeType":"VariableDeclaration","scope":5821,"src":"1778:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5807,"name":"address","nodeType":"ElementaryTypeName","src":"1778:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5810,"mutability":"mutable","name":"amount","nameLocation":"1798:6:19","nodeType":"VariableDeclaration","scope":5821,"src":"1790:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1790:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1777:28:19"},"returnParameters":{"id":5814,"nodeType":"ParameterList","parameters":[],"src":"1823:0:19"},"scope":5967,"src":"1764:93:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[314],"body":{"id":5889,"nodeType":"Block","src":"1968:436:19","statements":[{"assignments":[5832],"declarations":[{"constant":false,"id":5832,"mutability":"mutable","name":"owner","nameLocation":"1986:5:19","nodeType":"VariableDeclaration","scope":5889,"src":"1978:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5831,"name":"address","nodeType":"ElementaryTypeName","src":"1978:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5835,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5833,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"1994:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1994:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1978:28:19"},{"assignments":[5837],"declarations":[{"constant":false,"id":5837,"mutability":"mutable","name":"tax","nameLocation":"2025:3:19","nodeType":"VariableDeclaration","scope":5889,"src":"2017:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5836,"name":"uint256","nodeType":"ElementaryTypeName","src":"2017:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5844,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5838,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"2032:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5839,"name":"taxPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"2041:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2032:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2031:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":5842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:3:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2031:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2017:41:19"},{"assignments":[5846],"declarations":[{"constant":false,"id":5846,"mutability":"mutable","name":"taxedAmount","nameLocation":"2076:11:19","nodeType":"VariableDeclaration","scope":5889,"src":"2068:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5845,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5850,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5847,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"2090:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5848,"name":"tax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"2099:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2090:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2068:34:19"},{"assignments":[5852],"declarations":[{"constant":false,"id":5852,"mutability":"mutable","name":"teamFee","nameLocation":"2121:7:19","nodeType":"VariableDeclaration","scope":5889,"src":"2113:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5851,"name":"uint256","nodeType":"ElementaryTypeName","src":"2113:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5859,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5853,"name":"tax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"2132:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2138:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2132:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5856,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2131:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130","id":5857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2143:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2131:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2113:32:19"},{"assignments":[5861],"declarations":[{"constant":false,"id":5861,"mutability":"mutable","name":"liquidityFee","nameLocation":"2163:12:19","nodeType":"VariableDeclaration","scope":5889,"src":"2155:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5860,"name":"uint256","nodeType":"ElementaryTypeName","src":"2155:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5868,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5862,"name":"tax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"2179:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2185:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"2179:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2178:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130","id":5866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2190:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2178:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2155:37:19"},{"expression":{"arguments":[{"id":5870,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"2213:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5871,"name":"team_and_project_coordinator_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5643,"src":"2220:36:19","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":5872,"name":"teamFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"2258:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5869,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[5909],"referencedDeclaration":5909,"src":"2203:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2203:63:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5874,"nodeType":"ExpressionStatement","src":"2203:63:19"},{"expression":{"arguments":[{"id":5876,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"2286:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5877,"name":"liquidity_reserve_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"2293:25:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5878,"name":"liquidityFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"2320:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5875,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[5909],"referencedDeclaration":5909,"src":"2276:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2276:57:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5880,"nodeType":"ExpressionStatement","src":"2276:57:19"},{"expression":{"arguments":[{"id":5882,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"2353:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5883,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"2360:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5884,"name":"taxedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"2364:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5881,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[5909],"referencedDeclaration":5909,"src":"2343:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2343:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5886,"nodeType":"ExpressionStatement","src":"2343:33:19"},{"expression":{"hexValue":"74727565","id":5887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2393:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5830,"id":5888,"nodeType":"Return","src":"2386:11:19"}]},"functionSelector":"a9059cbb","id":5890,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1872:8:19","nodeType":"FunctionDefinition","overrides":{"id":5827,"nodeType":"OverrideSpecifier","overrides":[],"src":"1932:8:19"},"parameters":{"id":5826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5823,"mutability":"mutable","name":"to","nameLocation":"1889:2:19","nodeType":"VariableDeclaration","scope":5890,"src":"1881:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5822,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5825,"mutability":"mutable","name":"amount","nameLocation":"1901:6:19","nodeType":"VariableDeclaration","scope":5890,"src":"1893:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5824,"name":"uint256","nodeType":"ElementaryTypeName","src":"1893:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1880:28:19"},"returnParameters":{"id":5830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5890,"src":"1958:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5828,"name":"bool","nodeType":"ElementaryTypeName","src":"1958:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1957:6:19"},"scope":5967,"src":"1863:541:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[537],"body":{"id":5908,"nodeType":"Block","src":"2587:50:19","statements":[{"expression":{"arguments":[{"id":5903,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"2613:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5904,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"2619:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5905,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"2623:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5900,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2597:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_TalaxToken_$5967_$","typeString":"type(contract super TalaxToken)"}},"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_transfer","nodeType":"MemberAccess","referencedDeclaration":537,"src":"2597:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2597:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5907,"nodeType":"ExpressionStatement","src":"2597:33:19"}]},"id":5909,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"2487:9:19","nodeType":"FunctionDefinition","overrides":{"id":5898,"nodeType":"OverrideSpecifier","overrides":[],"src":"2578:8:19"},"parameters":{"id":5897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5892,"mutability":"mutable","name":"from","nameLocation":"2514:4:19","nodeType":"VariableDeclaration","scope":5909,"src":"2506:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5891,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5894,"mutability":"mutable","name":"to","nameLocation":"2536:2:19","nodeType":"VariableDeclaration","scope":5909,"src":"2528:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5893,"name":"address","nodeType":"ElementaryTypeName","src":"2528:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5896,"mutability":"mutable","name":"amount","nameLocation":"2556:6:19","nodeType":"VariableDeclaration","scope":5909,"src":"2548:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2548:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2496:72:19"},"returnParameters":{"id":5899,"nodeType":"ParameterList","parameters":[],"src":"2587:0:19"},"scope":5967,"src":"2478:159:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[776,1343],"body":{"id":5929,"nodeType":"Block","src":"2781:60:19","statements":[{"expression":{"arguments":[{"id":5924,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"2817:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5925,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"2823:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5926,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"2827:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5921,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2791:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_TalaxToken_$5967_$","typeString":"type(contract super TalaxToken)"}},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1343,"src":"2791:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2791:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5928,"nodeType":"ExpressionStatement","src":"2791:43:19"}]},"id":5930,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"2652:19:19","nodeType":"FunctionDefinition","overrides":{"id":5919,"nodeType":"OverrideSpecifier","overrides":[{"id":5917,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"2762:5:19"},{"id":5918,"name":"ERC20Votes","nodeType":"IdentifierPath","referencedDeclaration":1596,"src":"2769:10:19"}],"src":"2753:27:19"},"parameters":{"id":5916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5911,"mutability":"mutable","name":"from","nameLocation":"2689:4:19","nodeType":"VariableDeclaration","scope":5930,"src":"2681:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5910,"name":"address","nodeType":"ElementaryTypeName","src":"2681:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5913,"mutability":"mutable","name":"to","nameLocation":"2711:2:19","nodeType":"VariableDeclaration","scope":5930,"src":"2703:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5912,"name":"address","nodeType":"ElementaryTypeName","src":"2703:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5915,"mutability":"mutable","name":"amount","nameLocation":"2731:6:19","nodeType":"VariableDeclaration","scope":5930,"src":"2723:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2723:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2671:72:19"},"returnParameters":{"id":5920,"nodeType":"ParameterList","parameters":[],"src":"2781:0:19"},"scope":5967,"src":"2643:198:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[594,1290],"body":{"id":5947,"nodeType":"Block","src":"2947:40:19","statements":[{"expression":{"arguments":[{"id":5943,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"2969:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5944,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"2973:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5940,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2957:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_TalaxToken_$5967_$","typeString":"type(contract super TalaxToken)"}},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":1290,"src":"2957:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5946,"nodeType":"ExpressionStatement","src":"2957:23:19"}]},"id":5948,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"2856:5:19","nodeType":"FunctionDefinition","overrides":{"id":5938,"nodeType":"OverrideSpecifier","overrides":[{"id":5936,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"2924:5:19"},{"id":5937,"name":"ERC20Votes","nodeType":"IdentifierPath","referencedDeclaration":1596,"src":"2931:10:19"}],"src":"2915:27:19"},"parameters":{"id":5935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5932,"mutability":"mutable","name":"to","nameLocation":"2870:2:19","nodeType":"VariableDeclaration","scope":5948,"src":"2862:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5931,"name":"address","nodeType":"ElementaryTypeName","src":"2862:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5934,"mutability":"mutable","name":"amount","nameLocation":"2882:6:19","nodeType":"VariableDeclaration","scope":5948,"src":"2874:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5933,"name":"uint256","nodeType":"ElementaryTypeName","src":"2874:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2861:28:19"},"returnParameters":{"id":5939,"nodeType":"ParameterList","parameters":[],"src":"2947:0:19"},"scope":5967,"src":"2847:140:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[666,1313],"body":{"id":5965,"nodeType":"Block","src":"3098:45:19","statements":[{"expression":{"arguments":[{"id":5961,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"3120:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5962,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"3129:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5958,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3108:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_TalaxToken_$5967_$","typeString":"type(contract super TalaxToken)"}},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1313,"src":"3108:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3108:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5964,"nodeType":"ExpressionStatement","src":"3108:28:19"}]},"id":5966,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"3002:5:19","nodeType":"FunctionDefinition","overrides":{"id":5956,"nodeType":"OverrideSpecifier","overrides":[{"id":5954,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"3075:5:19"},{"id":5955,"name":"ERC20Votes","nodeType":"IdentifierPath","referencedDeclaration":1596,"src":"3082:10:19"}],"src":"3066:27:19"},"parameters":{"id":5953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5950,"mutability":"mutable","name":"account","nameLocation":"3016:7:19","nodeType":"VariableDeclaration","scope":5966,"src":"3008:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5949,"name":"address","nodeType":"ElementaryTypeName","src":"3008:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5952,"mutability":"mutable","name":"amount","nameLocation":"3033:6:19","nodeType":"VariableDeclaration","scope":5966,"src":"3025:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5951,"name":"uint256","nodeType":"ElementaryTypeName","src":"3025:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3007:33:19"},"returnParameters":{"id":5957,"nodeType":"ParameterList","parameters":[],"src":"3098:0:19"},"scope":5967,"src":"2993:150:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5968,"src":"538:2607:19","usedErrors":[]}],"src":"32:3114:19"},"id":19}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at the end of a past block (`blockNumber`). NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_235":{"entryPoint":null,"id":235,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":576,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":437,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":468,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":522,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":835,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":336,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":309,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":304,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":299,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":319,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:20","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:20","statements":[{"nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:20"},"nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:20"},"nodeType":"YulFunctionCall","src":"187:12:20"},"nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:20"},"nodeType":"YulFunctionCall","src":"310:12:20"},"nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nodeType":"YulBlock","src":"423:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:20"},"nodeType":"YulFunctionCall","src":"433:12:20"},"nodeType":"YulExpressionStatement","src":"433:12:20"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:20"},{"body":{"nodeType":"YulBlock","src":"546:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:20"},"nodeType":"YulFunctionCall","src":"556:12:20"},"nodeType":"YulExpressionStatement","src":"556:12:20"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:20"},{"body":{"nodeType":"YulBlock","src":"628:54:20","statements":[{"nodeType":"YulAssignment","src":"638:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:20"},"nodeType":"YulFunctionCall","src":"652:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:20"},"nodeType":"YulFunctionCall","src":"668:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:20"},"nodeType":"YulFunctionCall","src":"648:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:20","type":""}],"src":"580:102:20"},{"body":{"nodeType":"YulBlock","src":"716:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:20"},"nodeType":"YulFunctionCall","src":"726:88:20"},"nodeType":"YulExpressionStatement","src":"726:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:20"},"nodeType":"YulFunctionCall","src":"823:15:20"},"nodeType":"YulExpressionStatement","src":"823:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:20"},"nodeType":"YulFunctionCall","src":"847:15:20"},"nodeType":"YulExpressionStatement","src":"847:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:20"},{"body":{"nodeType":"YulBlock","src":"917:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:20"},"nodeType":"YulFunctionCall","src":"957:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:20"},"nodeType":"YulFunctionCall","src":"945:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:20"},"nodeType":"YulFunctionCall","src":"1098:18:20"},"nodeType":"YulExpressionStatement","src":"1098:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:20"},"nodeType":"YulFunctionCall","src":"1036:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:20"},"nodeType":"YulFunctionCall","src":"1072:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:20"},"nodeType":"YulFunctionCall","src":"1033:62:20"},"nodeType":"YulIf","src":"1030:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:20"},"nodeType":"YulFunctionCall","src":"1127:22:20"},"nodeType":"YulExpressionStatement","src":"1127:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:20","type":""}],"src":"874:281:20"},{"body":{"nodeType":"YulBlock","src":"1202:88:20","statements":[{"nodeType":"YulAssignment","src":"1212:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:20"},"nodeType":"YulFunctionCall","src":"1222:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:20"},"nodeType":"YulFunctionCall","src":"1251:33:20"},"nodeType":"YulExpressionStatement","src":"1251:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:20","type":""}],"src":"1161:129:20"},{"body":{"nodeType":"YulBlock","src":"1363:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:20"},"nodeType":"YulFunctionCall","src":"1470:18:20"},"nodeType":"YulExpressionStatement","src":"1470:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:20"},"nodeType":"YulFunctionCall","src":"1437:30:20"},"nodeType":"YulIf","src":"1434:56:20"},{"nodeType":"YulAssignment","src":"1500:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:20"},"nodeType":"YulFunctionCall","src":"1508:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:20"}]},{"nodeType":"YulAssignment","src":"1574:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:20"},"nodeType":"YulFunctionCall","src":"1582:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:20"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:20","type":""}],"src":"1296:308:20"},{"body":{"nodeType":"YulBlock","src":"1659:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:20"},"nodeType":"YulFunctionCall","src":"1759:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:20"},"nodeType":"YulFunctionCall","src":"1778:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:20"},"nodeType":"YulFunctionCall","src":"1772:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:20"},"nodeType":"YulFunctionCall","src":"1752:39:20"},"nodeType":"YulExpressionStatement","src":"1752:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:20"},"nodeType":"YulFunctionCall","src":"1696:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:20","statements":[{"nodeType":"YulAssignment","src":"1712:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:20"},"nodeType":"YulFunctionCall","src":"1717:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:20","statements":[]},"src":"1688:113:20"},{"body":{"nodeType":"YulBlock","src":"1835:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:20"},"nodeType":"YulFunctionCall","src":"1881:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:20"},"nodeType":"YulFunctionCall","src":"1874:27:20"},"nodeType":"YulExpressionStatement","src":"1874:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:20"},"nodeType":"YulFunctionCall","src":"1813:13:20"},"nodeType":"YulIf","src":"1810:101:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:20","type":""}],"src":"1610:307:20"},{"body":{"nodeType":"YulBlock","src":"2018:326:20","statements":[{"nodeType":"YulAssignment","src":"2028:75:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:20"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:20"},"nodeType":"YulFunctionCall","src":"2053:49:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:20"},"nodeType":"YulFunctionCall","src":"2037:66:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:20"},"nodeType":"YulFunctionCall","src":"2112:21:20"},"nodeType":"YulExpressionStatement","src":"2112:21:20"},{"nodeType":"YulVariableDeclaration","src":"2142:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:20"},"nodeType":"YulFunctionCall","src":"2153:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:20"},"nodeType":"YulFunctionCall","src":"2209:79:20"},"nodeType":"YulExpressionStatement","src":"2209:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:20"},"nodeType":"YulFunctionCall","src":"2184:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:20"},"nodeType":"YulFunctionCall","src":"2181:25:20"},"nodeType":"YulIf","src":"2178:112:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:20"},"nodeType":"YulFunctionCall","src":"2299:39:20"},"nodeType":"YulExpressionStatement","src":"2299:39:20"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:20","type":""}],"src":"1923:421:20"},{"body":{"nodeType":"YulBlock","src":"2437:282:20","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:20"},"nodeType":"YulFunctionCall","src":"2488:79:20"},"nodeType":"YulExpressionStatement","src":"2488:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:20"},"nodeType":"YulFunctionCall","src":"2461:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:20"},"nodeType":"YulFunctionCall","src":"2457:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:20"},"nodeType":"YulFunctionCall","src":"2450:35:20"},"nodeType":"YulIf","src":"2447:122:20"},{"nodeType":"YulVariableDeclaration","src":"2578:27:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:20"},"nodeType":"YulFunctionCall","src":"2592:13:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:20"},"nodeType":"YulFunctionCall","src":"2682:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:20"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:20"},"nodeType":"YulFunctionCall","src":"2623:90:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:20"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:20","type":""}],"src":"2364:355:20"},{"body":{"nodeType":"YulBlock","src":"2839:739:20","statements":[{"body":{"nodeType":"YulBlock","src":"2885:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2887:77:20"},"nodeType":"YulFunctionCall","src":"2887:79:20"},"nodeType":"YulExpressionStatement","src":"2887:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2869:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2856:3:20"},"nodeType":"YulFunctionCall","src":"2856:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2881:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2852:3:20"},"nodeType":"YulFunctionCall","src":"2852:32:20"},"nodeType":"YulIf","src":"2849:119:20"},{"nodeType":"YulBlock","src":"2978:291:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2993:38:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:20"},"nodeType":"YulFunctionCall","src":"3013:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3007:5:20"},"nodeType":"YulFunctionCall","src":"3007:24:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2997:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3078:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3080:77:20"},"nodeType":"YulFunctionCall","src":"3080:79:20"},"nodeType":"YulExpressionStatement","src":"3080:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3050:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3058:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3047:2:20"},"nodeType":"YulFunctionCall","src":"3047:30:20"},"nodeType":"YulIf","src":"3044:117:20"},{"nodeType":"YulAssignment","src":"3175:84:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3242:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3227:3:20"},"nodeType":"YulFunctionCall","src":"3227:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3251:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3185:41:20"},"nodeType":"YulFunctionCall","src":"3185:74:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3175:6:20"}]}]},{"nodeType":"YulBlock","src":"3279:292:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3294:39:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3318:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3329:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:20"},"nodeType":"YulFunctionCall","src":"3314:18:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3308:5:20"},"nodeType":"YulFunctionCall","src":"3308:25:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3298:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3380:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3382:77:20"},"nodeType":"YulFunctionCall","src":"3382:79:20"},"nodeType":"YulExpressionStatement","src":"3382:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3352:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3360:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3349:2:20"},"nodeType":"YulFunctionCall","src":"3349:30:20"},"nodeType":"YulIf","src":"3346:117:20"},{"nodeType":"YulAssignment","src":"3477:84:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3544:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:20"},"nodeType":"YulFunctionCall","src":"3529:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3553:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3487:41:20"},"nodeType":"YulFunctionCall","src":"3487:74:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3477:6:20"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2801:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2812:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2824:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2832:6:20","type":""}],"src":"2725:853:20"},{"body":{"nodeType":"YulBlock","src":"3612:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3629:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3632:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3622:6:20"},"nodeType":"YulFunctionCall","src":"3622:88:20"},"nodeType":"YulExpressionStatement","src":"3622:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3726:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3729:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3719:6:20"},"nodeType":"YulFunctionCall","src":"3719:15:20"},"nodeType":"YulExpressionStatement","src":"3719:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3750:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3753:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3743:6:20"},"nodeType":"YulFunctionCall","src":"3743:15:20"},"nodeType":"YulExpressionStatement","src":"3743:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3584:180:20"},{"body":{"nodeType":"YulBlock","src":"3821:269:20","statements":[{"nodeType":"YulAssignment","src":"3831:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3845:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3841:3:20"},"nodeType":"YulFunctionCall","src":"3841:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3831:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"3862:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3892:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"3898:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3888:3:20"},"nodeType":"YulFunctionCall","src":"3888:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3866:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3939:51:20","statements":[{"nodeType":"YulAssignment","src":"3953:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3967:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3975:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3963:3:20"},"nodeType":"YulFunctionCall","src":"3963:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3953:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3919:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3912:6:20"},"nodeType":"YulFunctionCall","src":"3912:26:20"},"nodeType":"YulIf","src":"3909:81:20"},{"body":{"nodeType":"YulBlock","src":"4042:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4056:16:20"},"nodeType":"YulFunctionCall","src":"4056:18:20"},"nodeType":"YulExpressionStatement","src":"4056:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4006:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4029:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4037:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4026:2:20"},"nodeType":"YulFunctionCall","src":"4026:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4003:2:20"},"nodeType":"YulFunctionCall","src":"4003:38:20"},"nodeType":"YulIf","src":"4000:84:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3805:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3814:6:20","type":""}],"src":"3770:320:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001617380380620016178339818101604052810190620000379190620002be565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b505050620003a8565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b60208210811415620003a257620003a162000343565b5b50919050565b61125f80620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b19565b60405180910390f35b6100e660048036038101906100e19190610bd4565b610308565b6040516100f39190610c2f565b60405180910390f35b61010461032b565b6040516101119190610c59565b60405180910390f35b610134600480360381019061012f9190610c74565b610335565b6040516101419190610c2f565b60405180910390f35b610152610364565b60405161015f9190610ce3565b60405180910390f35b610182600480360381019061017d9190610bd4565b61036d565b60405161018f9190610c2f565b60405180910390f35b6101b260048036038101906101ad9190610cfe565b6103a4565b6040516101bf9190610c59565b60405180910390f35b6101d06103ec565b6040516101dd9190610b19565b60405180910390f35b61020060048036038101906101fb9190610bd4565b61047e565b60405161020d9190610c2f565b60405180910390f35b610230600480360381019061022b9190610bd4565b6104f5565b60405161023d9190610c2f565b60405180910390f35b610260600480360381019061025b9190610d2b565b610518565b60405161026d9190610c59565b60405180910390f35b60606003805461028590610d9a565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d9a565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610dfb565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d9a565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d9a565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610ec3565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f55565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610fe7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610c59565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190611053565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610865906110e5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590611177565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690611209565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610c59565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aba578082015181840152602081019050610a9f565b83811115610ac9576000848401525b50505050565b6000601f19601f8301169050919050565b6000610aeb82610a80565b610af58185610a8b565b9350610b05818560208601610a9c565b610b0e81610acf565b840191505092915050565b60006020820190508181036000830152610b338184610ae0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6b82610b40565b9050919050565b610b7b81610b60565b8114610b8657600080fd5b50565b600081359050610b9881610b72565b92915050565b6000819050919050565b610bb181610b9e565b8114610bbc57600080fd5b50565b600081359050610bce81610ba8565b92915050565b60008060408385031215610beb57610bea610b3b565b5b6000610bf985828601610b89565b9250506020610c0a85828601610bbf565b9150509250929050565b60008115159050919050565b610c2981610c14565b82525050565b6000602082019050610c446000830184610c20565b92915050565b610c5381610b9e565b82525050565b6000602082019050610c6e6000830184610c4a565b92915050565b600080600060608486031215610c8d57610c8c610b3b565b5b6000610c9b86828701610b89565b9350506020610cac86828701610b89565b9250506040610cbd86828701610bbf565b9150509250925092565b600060ff82169050919050565b610cdd81610cc7565b82525050565b6000602082019050610cf86000830184610cd4565b92915050565b600060208284031215610d1457610d13610b3b565b5b6000610d2284828501610b89565b91505092915050565b60008060408385031215610d4257610d41610b3b565b5b6000610d5085828601610b89565b9250506020610d6185828601610b89565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610db257607f821691505b60208210811415610dc657610dc5610d6b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0682610b9e565b9150610e1183610b9e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4657610e45610dcc565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610ead602583610a8b565b9150610eb882610e51565b604082019050919050565b60006020820190508181036000830152610edc81610ea0565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f3f602483610a8b565b9150610f4a82610ee3565b604082019050919050565b60006020820190508181036000830152610f6e81610f32565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fd1602283610a8b565b9150610fdc82610f75565b604082019050919050565b6000602082019050818103600083015261100081610fc4565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061103d601d83610a8b565b915061104882611007565b602082019050919050565b6000602082019050818103600083015261106c81611030565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110cf602583610a8b565b91506110da82611073565b604082019050919050565b600060208201905081810360008301526110fe816110c2565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611161602383610a8b565b915061116c82611105565b604082019050919050565b6000602082019050818103600083015261119081611154565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111f3602683610a8b565b91506111fe82611197565b604082019050919050565b60006020820190508181036000830152611222816111e6565b905091905056fea2646970667358221220fb9b12738cb79c07b54ba57cb3004e6c3f8d4c276efda3a38b04cbea6eb9acf064736f6c634300080b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1617 CODESIZE SUB DUP1 PUSH3 0x1617 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x18A DUP3 PUSH3 0x13F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AB PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH3 0x121 JUMP JUMPDEST SWAP1 POP PUSH3 0x1CF DUP3 DUP3 PUSH3 0x17F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F1 PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH3 0x1FD DUP3 PUSH3 0x13F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x22A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 PUSH3 0x251 DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP5 DUP3 DUP6 PUSH3 0x20A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x135 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x12B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x307 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x339 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A2 JUMPI PUSH3 0x3A1 PUSH3 0x343 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x125F DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB DUP3 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xAF5 DUP2 DUP6 PUSH2 0xA8B JUMP JUMPDEST SWAP4 POP PUSH2 0xB05 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xB0E DUP2 PUSH2 0xACF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB33 DUP2 DUP5 PUSH2 0xAE0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP3 PUSH2 0xB40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7B DUP2 PUSH2 0xB60 JUMP JUMPDEST DUP2 EQ PUSH2 0xB86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB98 DUP2 PUSH2 0xB72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB1 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP2 EQ PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCE DUP2 PUSH2 0xBA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBEA PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF9 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0A DUP6 DUP3 DUP7 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC29 DUP2 PUSH2 0xC14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC53 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC8D JUMPI PUSH2 0xC8C PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC9B DUP7 DUP3 DUP8 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCAC DUP7 DUP3 DUP8 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCBD DUP7 DUP3 DUP8 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDD DUP2 PUSH2 0xCC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD13 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD22 DUP5 DUP3 DUP6 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH2 0xD41 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD50 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD61 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC5 PUSH2 0xD6B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE06 DUP3 PUSH2 0xB9E JUMP JUMPDEST SWAP2 POP PUSH2 0xE11 DUP4 PUSH2 0xB9E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE46 JUMPI PUSH2 0xE45 PUSH2 0xDCC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAD PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xEB8 DUP3 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEDC DUP2 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3F PUSH1 0x24 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xF4A DUP3 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF6E DUP2 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD1 PUSH1 0x22 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xFDC DUP3 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1000 DUP2 PUSH2 0xFC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103D PUSH1 0x1D DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x1048 DUP3 PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x106C DUP2 PUSH2 0x1030 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CF PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x10DA DUP3 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10FE DUP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 PUSH1 0x23 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x116C DUP3 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1190 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F3 PUSH1 0x26 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x11FE DUP3 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1222 DUP2 PUSH2 0x11E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB SWAP12 SLT PUSH20 0x8CB79C07B54BA57CB3004E6C3F8D4C276EFDA3A3 DUP12 DIV 0xCB 0xEA PUSH15 0xB9ACF064736F6C634300080B003300 ","sourceMap":"1401:11610:2:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2050:5;2042;:13;;;;;;;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;;;;;;;:::i;:::-;;1976:113;;1401:11610;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:20:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;1401:11610:2:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_776":{"entryPoint":2683,"id":776,"parameterSlots":3,"returnSlots":0},"@_approve_711":{"entryPoint":1447,"id":711,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_765":{"entryPoint":2678,"id":765,"parameterSlots":3,"returnSlots":0},"@_msgSender_2452":{"entryPoint":1439,"id":2452,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_754":{"entryPoint":1906,"id":754,"parameterSlots":3,"returnSlots":0},"@_transfer_537":{"entryPoint":2046,"id":537,"parameterSlots":3,"returnSlots":0},"@allowance_332":{"entryPoint":1304,"id":332,"parameterSlots":2,"returnSlots":1},"@approve_357":{"entryPoint":776,"id":357,"parameterSlots":2,"returnSlots":1},"@balanceOf_289":{"entryPoint":932,"id":289,"parameterSlots":1,"returnSlots":1},"@decimals_265":{"entryPoint":868,"id":265,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_460":{"entryPoint":1150,"id":460,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_419":{"entryPoint":877,"id":419,"parameterSlots":2,"returnSlots":1},"@name_245":{"entryPoint":630,"id":245,"parameterSlots":0,"returnSlots":1},"@symbol_255":{"entryPoint":1004,"id":255,"parameterSlots":0,"returnSlots":1},"@totalSupply_275":{"entryPoint":811,"id":275,"parameterSlots":0,"returnSlots":1},"@transferFrom_390":{"entryPoint":821,"id":390,"parameterSlots":3,"returnSlots":1},"@transfer_314":{"entryPoint":1269,"id":314,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2953,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3007,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3326,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3371,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3188,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3028,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3104,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2784,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":4036,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4144,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4582,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4290,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3890,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3744,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3146,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3284,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3119,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4471,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4071,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4179,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4617,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4325,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3925,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3779,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3161,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3299,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2688,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2699,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3579,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2912,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3092,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2880,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2974,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3271,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":2716,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3482,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3532,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3435,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2875,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2767,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4357,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3957,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4103,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4503,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4211,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3811,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3665,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2930,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2984,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13861:20","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:20","statements":[{"nodeType":"YulAssignment","src":"77:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:20"},"nodeType":"YulFunctionCall","src":"87:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:20","type":""}],"src":"7:99:20"},{"body":{"nodeType":"YulBlock","src":"208:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:20"},"nodeType":"YulFunctionCall","src":"218:19:20"},"nodeType":"YulExpressionStatement","src":"218:19:20"},{"nodeType":"YulAssignment","src":"246:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:20"},"nodeType":"YulFunctionCall","src":"261:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:20","type":""}],"src":"112:169:20"},{"body":{"nodeType":"YulBlock","src":"336:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"346:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"355:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"350:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"415:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"440:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"445:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"436:3:20"},"nodeType":"YulFunctionCall","src":"436:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"459:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"464:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"455:3:20"},"nodeType":"YulFunctionCall","src":"455:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:20"},"nodeType":"YulFunctionCall","src":"449:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"429:6:20"},"nodeType":"YulFunctionCall","src":"429:39:20"},"nodeType":"YulExpressionStatement","src":"429:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"376:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"373:2:20"},"nodeType":"YulFunctionCall","src":"373:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"387:19:20","statements":[{"nodeType":"YulAssignment","src":"389:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"398:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:20"},"nodeType":"YulFunctionCall","src":"394:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"369:3:20","statements":[]},"src":"365:113:20"},{"body":{"nodeType":"YulBlock","src":"512:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"562:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"567:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"558:3:20"},"nodeType":"YulFunctionCall","src":"558:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"576:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"551:6:20"},"nodeType":"YulFunctionCall","src":"551:27:20"},"nodeType":"YulExpressionStatement","src":"551:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"493:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"490:2:20"},"nodeType":"YulFunctionCall","src":"490:13:20"},"nodeType":"YulIf","src":"487:101:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"318:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"323:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"328:6:20","type":""}],"src":"287:307:20"},{"body":{"nodeType":"YulBlock","src":"648:54:20","statements":[{"nodeType":"YulAssignment","src":"658:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"683:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:20"},"nodeType":"YulFunctionCall","src":"672:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"692:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"688:3:20"},"nodeType":"YulFunctionCall","src":"688:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"668:3:20"},"nodeType":"YulFunctionCall","src":"668:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"658:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"631:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"641:6:20","type":""}],"src":"600:102:20"},{"body":{"nodeType":"YulBlock","src":"800:272:20","statements":[{"nodeType":"YulVariableDeclaration","src":"810:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"857:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"824:32:20"},"nodeType":"YulFunctionCall","src":"824:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"814:6:20","type":""}]},{"nodeType":"YulAssignment","src":"872:78:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"938:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"943:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"879:58:20"},"nodeType":"YulFunctionCall","src":"879:71:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"872:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"992:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"981:3:20"},"nodeType":"YulFunctionCall","src":"981:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"999:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"1004:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"959:21:20"},"nodeType":"YulFunctionCall","src":"959:52:20"},"nodeType":"YulExpressionStatement","src":"959:52:20"},{"nodeType":"YulAssignment","src":"1020:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1031:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1058:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1036:21:20"},"nodeType":"YulFunctionCall","src":"1036:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1027:3:20"},"nodeType":"YulFunctionCall","src":"1027:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1020:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"781:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"788:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"796:3:20","type":""}],"src":"708:364:20"},{"body":{"nodeType":"YulBlock","src":"1196:195:20","statements":[{"nodeType":"YulAssignment","src":"1206:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1218:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1229:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:20"},"nodeType":"YulFunctionCall","src":"1214:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1206:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1264:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1249:3:20"},"nodeType":"YulFunctionCall","src":"1249:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1272:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1278:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1268:3:20"},"nodeType":"YulFunctionCall","src":"1268:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1242:6:20"},"nodeType":"YulFunctionCall","src":"1242:47:20"},"nodeType":"YulExpressionStatement","src":"1242:47:20"},{"nodeType":"YulAssignment","src":"1298:86:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1370:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1306:63:20"},"nodeType":"YulFunctionCall","src":"1306:78:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1298:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1180:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1191:4:20","type":""}],"src":"1078:313:20"},{"body":{"nodeType":"YulBlock","src":"1437:35:20","statements":[{"nodeType":"YulAssignment","src":"1447:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1463:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1457:5:20"},"nodeType":"YulFunctionCall","src":"1457:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1447:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1430:6:20","type":""}],"src":"1397:75:20"},{"body":{"nodeType":"YulBlock","src":"1567:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1584:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1587:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1577:6:20"},"nodeType":"YulFunctionCall","src":"1577:12:20"},"nodeType":"YulExpressionStatement","src":"1577:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1478:117:20"},{"body":{"nodeType":"YulBlock","src":"1690:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1707:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1710:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1700:6:20"},"nodeType":"YulFunctionCall","src":"1700:12:20"},"nodeType":"YulExpressionStatement","src":"1700:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1601:117:20"},{"body":{"nodeType":"YulBlock","src":"1769:81:20","statements":[{"nodeType":"YulAssignment","src":"1779:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1794:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1801:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1790:3:20"},"nodeType":"YulFunctionCall","src":"1790:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1779:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1751:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1761:7:20","type":""}],"src":"1724:126:20"},{"body":{"nodeType":"YulBlock","src":"1901:51:20","statements":[{"nodeType":"YulAssignment","src":"1911:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1940:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1922:17:20"},"nodeType":"YulFunctionCall","src":"1922:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1911:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1893:7:20","type":""}],"src":"1856:96:20"},{"body":{"nodeType":"YulBlock","src":"2001:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"2058:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2067:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2070:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2060:6:20"},"nodeType":"YulFunctionCall","src":"2060:12:20"},"nodeType":"YulExpressionStatement","src":"2060:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2024:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2049:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2031:17:20"},"nodeType":"YulFunctionCall","src":"2031:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2021:2:20"},"nodeType":"YulFunctionCall","src":"2021:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2014:6:20"},"nodeType":"YulFunctionCall","src":"2014:43:20"},"nodeType":"YulIf","src":"2011:63:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1994:5:20","type":""}],"src":"1958:122:20"},{"body":{"nodeType":"YulBlock","src":"2138:87:20","statements":[{"nodeType":"YulAssignment","src":"2148:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2170:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2157:12:20"},"nodeType":"YulFunctionCall","src":"2157:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2148:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2213:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2186:26:20"},"nodeType":"YulFunctionCall","src":"2186:33:20"},"nodeType":"YulExpressionStatement","src":"2186:33:20"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2116:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2124:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2132:5:20","type":""}],"src":"2086:139:20"},{"body":{"nodeType":"YulBlock","src":"2276:32:20","statements":[{"nodeType":"YulAssignment","src":"2286:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"2297:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2286:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2258:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2268:7:20","type":""}],"src":"2231:77:20"},{"body":{"nodeType":"YulBlock","src":"2357:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"2414:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2423:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2426:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2416:6:20"},"nodeType":"YulFunctionCall","src":"2416:12:20"},"nodeType":"YulExpressionStatement","src":"2416:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2405:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2387:17:20"},"nodeType":"YulFunctionCall","src":"2387:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2377:2:20"},"nodeType":"YulFunctionCall","src":"2377:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2370:6:20"},"nodeType":"YulFunctionCall","src":"2370:43:20"},"nodeType":"YulIf","src":"2367:63:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2350:5:20","type":""}],"src":"2314:122:20"},{"body":{"nodeType":"YulBlock","src":"2494:87:20","statements":[{"nodeType":"YulAssignment","src":"2504:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2526:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2513:12:20"},"nodeType":"YulFunctionCall","src":"2513:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2504:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2569:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2542:26:20"},"nodeType":"YulFunctionCall","src":"2542:33:20"},"nodeType":"YulExpressionStatement","src":"2542:33:20"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2472:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2480:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2488:5:20","type":""}],"src":"2442:139:20"},{"body":{"nodeType":"YulBlock","src":"2670:391:20","statements":[{"body":{"nodeType":"YulBlock","src":"2716:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2718:77:20"},"nodeType":"YulFunctionCall","src":"2718:79:20"},"nodeType":"YulExpressionStatement","src":"2718:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2691:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2687:3:20"},"nodeType":"YulFunctionCall","src":"2687:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2712:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2683:3:20"},"nodeType":"YulFunctionCall","src":"2683:32:20"},"nodeType":"YulIf","src":"2680:119:20"},{"nodeType":"YulBlock","src":"2809:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2824:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2838:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2828:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:20"},"nodeType":"YulFunctionCall","src":"2884:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2863:20:20"},"nodeType":"YulFunctionCall","src":"2863:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2853:6:20"}]}]},{"nodeType":"YulBlock","src":"2936:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2951:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2965:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2955:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2981:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3016:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3027:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3012:3:20"},"nodeType":"YulFunctionCall","src":"3012:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3036:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2991:20:20"},"nodeType":"YulFunctionCall","src":"2991:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2981:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2632:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2643:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2655:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2663:6:20","type":""}],"src":"2587:474:20"},{"body":{"nodeType":"YulBlock","src":"3109:48:20","statements":[{"nodeType":"YulAssignment","src":"3119:32:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3144:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3137:6:20"},"nodeType":"YulFunctionCall","src":"3137:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3130:6:20"},"nodeType":"YulFunctionCall","src":"3130:21:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3119:7:20"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3101:7:20","type":""}],"src":"3067:90:20"},{"body":{"nodeType":"YulBlock","src":"3222:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3239:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3259:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3244:14:20"},"nodeType":"YulFunctionCall","src":"3244:21:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3232:6:20"},"nodeType":"YulFunctionCall","src":"3232:34:20"},"nodeType":"YulExpressionStatement","src":"3232:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3210:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3217:3:20","type":""}],"src":"3163:109:20"},{"body":{"nodeType":"YulBlock","src":"3370:118:20","statements":[{"nodeType":"YulAssignment","src":"3380:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3392:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3403:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3388:3:20"},"nodeType":"YulFunctionCall","src":"3388:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3380:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3454:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3478:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3463:3:20"},"nodeType":"YulFunctionCall","src":"3463:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3416:37:20"},"nodeType":"YulFunctionCall","src":"3416:65:20"},"nodeType":"YulExpressionStatement","src":"3416:65:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3342:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3354:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3365:4:20","type":""}],"src":"3278:210:20"},{"body":{"nodeType":"YulBlock","src":"3559:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3576:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3599:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3581:17:20"},"nodeType":"YulFunctionCall","src":"3581:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3569:6:20"},"nodeType":"YulFunctionCall","src":"3569:37:20"},"nodeType":"YulExpressionStatement","src":"3569:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3547:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3554:3:20","type":""}],"src":"3494:118:20"},{"body":{"nodeType":"YulBlock","src":"3716:124:20","statements":[{"nodeType":"YulAssignment","src":"3726:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3738:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3749:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3734:3:20"},"nodeType":"YulFunctionCall","src":"3734:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3726:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3806:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3819:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3830:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3815:3:20"},"nodeType":"YulFunctionCall","src":"3815:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3762:43:20"},"nodeType":"YulFunctionCall","src":"3762:71:20"},"nodeType":"YulExpressionStatement","src":"3762:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3688:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3700:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3711:4:20","type":""}],"src":"3618:222:20"},{"body":{"nodeType":"YulBlock","src":"3946:519:20","statements":[{"body":{"nodeType":"YulBlock","src":"3992:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3994:77:20"},"nodeType":"YulFunctionCall","src":"3994:79:20"},"nodeType":"YulExpressionStatement","src":"3994:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3967:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3976:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3963:3:20"},"nodeType":"YulFunctionCall","src":"3963:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3988:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3959:3:20"},"nodeType":"YulFunctionCall","src":"3959:32:20"},"nodeType":"YulIf","src":"3956:119:20"},{"nodeType":"YulBlock","src":"4085:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4100:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4114:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4104:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4129:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4164:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4175:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4160:3:20"},"nodeType":"YulFunctionCall","src":"4160:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4184:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4139:20:20"},"nodeType":"YulFunctionCall","src":"4139:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4129:6:20"}]}]},{"nodeType":"YulBlock","src":"4212:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4227:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4241:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4231:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4257:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4303:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:20"},"nodeType":"YulFunctionCall","src":"4288:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4312:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4267:20:20"},"nodeType":"YulFunctionCall","src":"4267:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4257:6:20"}]}]},{"nodeType":"YulBlock","src":"4340:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4355:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4369:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4359:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4385:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4420:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4431:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4416:3:20"},"nodeType":"YulFunctionCall","src":"4416:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4440:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4395:20:20"},"nodeType":"YulFunctionCall","src":"4395:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4385:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3911:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3923:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3931:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3939:6:20","type":""}],"src":"3846:619:20"},{"body":{"nodeType":"YulBlock","src":"4514:43:20","statements":[{"nodeType":"YulAssignment","src":"4524:27:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4539:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"4546:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4535:3:20"},"nodeType":"YulFunctionCall","src":"4535:16:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4524:7:20"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4496:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4506:7:20","type":""}],"src":"4471:86:20"},{"body":{"nodeType":"YulBlock","src":"4624:51:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4641:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4662:5:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4646:15:20"},"nodeType":"YulFunctionCall","src":"4646:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4634:6:20"},"nodeType":"YulFunctionCall","src":"4634:35:20"},"nodeType":"YulExpressionStatement","src":"4634:35:20"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4612:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4619:3:20","type":""}],"src":"4563:112:20"},{"body":{"nodeType":"YulBlock","src":"4775:120:20","statements":[{"nodeType":"YulAssignment","src":"4785:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4808:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:20"},"nodeType":"YulFunctionCall","src":"4793:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4785:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4861:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4874:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4885:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:20"},"nodeType":"YulFunctionCall","src":"4870:17:20"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4821:39:20"},"nodeType":"YulFunctionCall","src":"4821:67:20"},"nodeType":"YulExpressionStatement","src":"4821:67:20"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4747:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4759:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4770:4:20","type":""}],"src":"4681:214:20"},{"body":{"nodeType":"YulBlock","src":"4967:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"5013:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5015:77:20"},"nodeType":"YulFunctionCall","src":"5015:79:20"},"nodeType":"YulExpressionStatement","src":"5015:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4988:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4997:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4984:3:20"},"nodeType":"YulFunctionCall","src":"4984:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5009:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4980:3:20"},"nodeType":"YulFunctionCall","src":"4980:32:20"},"nodeType":"YulIf","src":"4977:119:20"},{"nodeType":"YulBlock","src":"5106:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5121:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5135:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5125:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5150:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5185:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5196:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5181:3:20"},"nodeType":"YulFunctionCall","src":"5181:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5205:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5160:20:20"},"nodeType":"YulFunctionCall","src":"5160:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5150:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4937:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4948:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4960:6:20","type":""}],"src":"4901:329:20"},{"body":{"nodeType":"YulBlock","src":"5319:391:20","statements":[{"body":{"nodeType":"YulBlock","src":"5365:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5367:77:20"},"nodeType":"YulFunctionCall","src":"5367:79:20"},"nodeType":"YulExpressionStatement","src":"5367:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5340:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5349:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5336:3:20"},"nodeType":"YulFunctionCall","src":"5336:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5361:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5332:3:20"},"nodeType":"YulFunctionCall","src":"5332:32:20"},"nodeType":"YulIf","src":"5329:119:20"},{"nodeType":"YulBlock","src":"5458:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5473:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5487:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5477:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5502:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5537:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5548:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5533:3:20"},"nodeType":"YulFunctionCall","src":"5533:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5557:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5512:20:20"},"nodeType":"YulFunctionCall","src":"5512:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5502:6:20"}]}]},{"nodeType":"YulBlock","src":"5585:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5600:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5614:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5604:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5630:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5665:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5676:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5661:3:20"},"nodeType":"YulFunctionCall","src":"5661:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5685:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5640:20:20"},"nodeType":"YulFunctionCall","src":"5640:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5630:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5281:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5292:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5304:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5312:6:20","type":""}],"src":"5236:474:20"},{"body":{"nodeType":"YulBlock","src":"5744:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5761:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5764:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5754:6:20"},"nodeType":"YulFunctionCall","src":"5754:88:20"},"nodeType":"YulExpressionStatement","src":"5754:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5858:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5861:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5851:6:20"},"nodeType":"YulFunctionCall","src":"5851:15:20"},"nodeType":"YulExpressionStatement","src":"5851:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5882:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5885:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5875:6:20"},"nodeType":"YulFunctionCall","src":"5875:15:20"},"nodeType":"YulExpressionStatement","src":"5875:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5716:180:20"},{"body":{"nodeType":"YulBlock","src":"5953:269:20","statements":[{"nodeType":"YulAssignment","src":"5963:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5977:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"5983:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5973:3:20"},"nodeType":"YulFunctionCall","src":"5973:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5963:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"5994:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6024:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"6030:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6020:3:20"},"nodeType":"YulFunctionCall","src":"6020:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5998:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"6071:51:20","statements":[{"nodeType":"YulAssignment","src":"6085:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6099:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6107:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6095:3:20"},"nodeType":"YulFunctionCall","src":"6095:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6085:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6051:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6044:6:20"},"nodeType":"YulFunctionCall","src":"6044:26:20"},"nodeType":"YulIf","src":"6041:81:20"},{"body":{"nodeType":"YulBlock","src":"6174:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6188:16:20"},"nodeType":"YulFunctionCall","src":"6188:18:20"},"nodeType":"YulExpressionStatement","src":"6188:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6138:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6161:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6169:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6158:2:20"},"nodeType":"YulFunctionCall","src":"6158:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6135:2:20"},"nodeType":"YulFunctionCall","src":"6135:38:20"},"nodeType":"YulIf","src":"6132:84:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5937:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5946:6:20","type":""}],"src":"5902:320:20"},{"body":{"nodeType":"YulBlock","src":"6256:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6273:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6276:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6266:6:20"},"nodeType":"YulFunctionCall","src":"6266:88:20"},"nodeType":"YulExpressionStatement","src":"6266:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6370:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6373:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6363:6:20"},"nodeType":"YulFunctionCall","src":"6363:15:20"},"nodeType":"YulExpressionStatement","src":"6363:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6394:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6397:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6387:6:20"},"nodeType":"YulFunctionCall","src":"6387:15:20"},"nodeType":"YulExpressionStatement","src":"6387:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6228:180:20"},{"body":{"nodeType":"YulBlock","src":"6458:261:20","statements":[{"nodeType":"YulAssignment","src":"6468:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6491:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6473:17:20"},"nodeType":"YulFunctionCall","src":"6473:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6468:1:20"}]},{"nodeType":"YulAssignment","src":"6502:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6525:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6507:17:20"},"nodeType":"YulFunctionCall","src":"6507:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6502:1:20"}]},{"body":{"nodeType":"YulBlock","src":"6665:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6667:16:20"},"nodeType":"YulFunctionCall","src":"6667:18:20"},"nodeType":"YulExpressionStatement","src":"6667:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6586:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6593:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"6661:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6589:3:20"},"nodeType":"YulFunctionCall","src":"6589:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6583:2:20"},"nodeType":"YulFunctionCall","src":"6583:81:20"},"nodeType":"YulIf","src":"6580:107:20"},{"nodeType":"YulAssignment","src":"6697:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6708:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"6711:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6704:3:20"},"nodeType":"YulFunctionCall","src":"6704:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6697:3:20"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6445:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"6448:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6454:3:20","type":""}],"src":"6414:305:20"},{"body":{"nodeType":"YulBlock","src":"6831:118:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6853:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6861:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6849:3:20"},"nodeType":"YulFunctionCall","src":"6849:14:20"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6865:34:20","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6842:6:20"},"nodeType":"YulFunctionCall","src":"6842:58:20"},"nodeType":"YulExpressionStatement","src":"6842:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6921:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6929:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6917:3:20"},"nodeType":"YulFunctionCall","src":"6917:15:20"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6934:7:20","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6910:6:20"},"nodeType":"YulFunctionCall","src":"6910:32:20"},"nodeType":"YulExpressionStatement","src":"6910:32:20"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6823:6:20","type":""}],"src":"6725:224:20"},{"body":{"nodeType":"YulBlock","src":"7101:220:20","statements":[{"nodeType":"YulAssignment","src":"7111:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7177:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7182:2:20","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7118:58:20"},"nodeType":"YulFunctionCall","src":"7118:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7111:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7283:3:20"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7194:88:20"},"nodeType":"YulFunctionCall","src":"7194:93:20"},"nodeType":"YulExpressionStatement","src":"7194:93:20"},{"nodeType":"YulAssignment","src":"7296:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7307:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7312:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7303:3:20"},"nodeType":"YulFunctionCall","src":"7303:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7296:3:20"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7089:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7097:3:20","type":""}],"src":"6955:366:20"},{"body":{"nodeType":"YulBlock","src":"7498:248:20","statements":[{"nodeType":"YulAssignment","src":"7508:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7520:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7531:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7516:3:20"},"nodeType":"YulFunctionCall","src":"7516:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7508:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7555:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7566:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7551:3:20"},"nodeType":"YulFunctionCall","src":"7551:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7574:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"7580:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7570:3:20"},"nodeType":"YulFunctionCall","src":"7570:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7544:6:20"},"nodeType":"YulFunctionCall","src":"7544:47:20"},"nodeType":"YulExpressionStatement","src":"7544:47:20"},{"nodeType":"YulAssignment","src":"7600:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7734:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7608:124:20"},"nodeType":"YulFunctionCall","src":"7608:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7600:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7478:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7493:4:20","type":""}],"src":"7327:419:20"},{"body":{"nodeType":"YulBlock","src":"7858:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7880:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7888:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7876:3:20"},"nodeType":"YulFunctionCall","src":"7876:14:20"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7892:34:20","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7869:6:20"},"nodeType":"YulFunctionCall","src":"7869:58:20"},"nodeType":"YulExpressionStatement","src":"7869:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7948:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7956:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7944:3:20"},"nodeType":"YulFunctionCall","src":"7944:15:20"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7961:6:20","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7937:6:20"},"nodeType":"YulFunctionCall","src":"7937:31:20"},"nodeType":"YulExpressionStatement","src":"7937:31:20"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7850:6:20","type":""}],"src":"7752:223:20"},{"body":{"nodeType":"YulBlock","src":"8127:220:20","statements":[{"nodeType":"YulAssignment","src":"8137:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8203:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8208:2:20","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8144:58:20"},"nodeType":"YulFunctionCall","src":"8144:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8137:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8309:3:20"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8220:88:20"},"nodeType":"YulFunctionCall","src":"8220:93:20"},"nodeType":"YulExpressionStatement","src":"8220:93:20"},{"nodeType":"YulAssignment","src":"8322:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8333:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8338:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8329:3:20"},"nodeType":"YulFunctionCall","src":"8329:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8322:3:20"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8115:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8123:3:20","type":""}],"src":"7981:366:20"},{"body":{"nodeType":"YulBlock","src":"8524:248:20","statements":[{"nodeType":"YulAssignment","src":"8534:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8546:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8557:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8542:3:20"},"nodeType":"YulFunctionCall","src":"8542:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8534:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8581:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8592:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8577:3:20"},"nodeType":"YulFunctionCall","src":"8577:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8600:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"8606:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8596:3:20"},"nodeType":"YulFunctionCall","src":"8596:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8570:6:20"},"nodeType":"YulFunctionCall","src":"8570:47:20"},"nodeType":"YulExpressionStatement","src":"8570:47:20"},{"nodeType":"YulAssignment","src":"8626:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8760:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8634:124:20"},"nodeType":"YulFunctionCall","src":"8634:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8626:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8504:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8519:4:20","type":""}],"src":"8353:419:20"},{"body":{"nodeType":"YulBlock","src":"8884:115:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8906:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8914:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8902:3:20"},"nodeType":"YulFunctionCall","src":"8902:14:20"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8918:34:20","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8895:6:20"},"nodeType":"YulFunctionCall","src":"8895:58:20"},"nodeType":"YulExpressionStatement","src":"8895:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8974:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8982:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8970:3:20"},"nodeType":"YulFunctionCall","src":"8970:15:20"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8987:4:20","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8963:6:20"},"nodeType":"YulFunctionCall","src":"8963:29:20"},"nodeType":"YulExpressionStatement","src":"8963:29:20"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8876:6:20","type":""}],"src":"8778:221:20"},{"body":{"nodeType":"YulBlock","src":"9151:220:20","statements":[{"nodeType":"YulAssignment","src":"9161:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9227:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9232:2:20","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9168:58:20"},"nodeType":"YulFunctionCall","src":"9168:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9161:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9333:3:20"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9244:88:20"},"nodeType":"YulFunctionCall","src":"9244:93:20"},"nodeType":"YulExpressionStatement","src":"9244:93:20"},{"nodeType":"YulAssignment","src":"9346:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9357:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9362:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9353:3:20"},"nodeType":"YulFunctionCall","src":"9353:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9346:3:20"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9139:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9147:3:20","type":""}],"src":"9005:366:20"},{"body":{"nodeType":"YulBlock","src":"9548:248:20","statements":[{"nodeType":"YulAssignment","src":"9558:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9570:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9581:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9566:3:20"},"nodeType":"YulFunctionCall","src":"9566:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9558:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9605:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9616:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9601:3:20"},"nodeType":"YulFunctionCall","src":"9601:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9624:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"9630:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9620:3:20"},"nodeType":"YulFunctionCall","src":"9620:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9594:6:20"},"nodeType":"YulFunctionCall","src":"9594:47:20"},"nodeType":"YulExpressionStatement","src":"9594:47:20"},{"nodeType":"YulAssignment","src":"9650:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9784:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9658:124:20"},"nodeType":"YulFunctionCall","src":"9658:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9650:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9528:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9543:4:20","type":""}],"src":"9377:419:20"},{"body":{"nodeType":"YulBlock","src":"9908:73:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9930:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"9938:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9926:3:20"},"nodeType":"YulFunctionCall","src":"9926:14:20"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9942:31:20","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9919:6:20"},"nodeType":"YulFunctionCall","src":"9919:55:20"},"nodeType":"YulExpressionStatement","src":"9919:55:20"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9900:6:20","type":""}],"src":"9802:179:20"},{"body":{"nodeType":"YulBlock","src":"10133:220:20","statements":[{"nodeType":"YulAssignment","src":"10143:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10209:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"10214:2:20","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10150:58:20"},"nodeType":"YulFunctionCall","src":"10150:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10143:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10315:3:20"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10226:88:20"},"nodeType":"YulFunctionCall","src":"10226:93:20"},"nodeType":"YulExpressionStatement","src":"10226:93:20"},{"nodeType":"YulAssignment","src":"10328:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10339:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"10344:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10335:3:20"},"nodeType":"YulFunctionCall","src":"10335:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10328:3:20"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10121:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10129:3:20","type":""}],"src":"9987:366:20"},{"body":{"nodeType":"YulBlock","src":"10530:248:20","statements":[{"nodeType":"YulAssignment","src":"10540:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10552:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10563:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10548:3:20"},"nodeType":"YulFunctionCall","src":"10548:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10540:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10587:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10598:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10583:3:20"},"nodeType":"YulFunctionCall","src":"10583:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10606:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"10612:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10602:3:20"},"nodeType":"YulFunctionCall","src":"10602:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10576:6:20"},"nodeType":"YulFunctionCall","src":"10576:47:20"},"nodeType":"YulExpressionStatement","src":"10576:47:20"},{"nodeType":"YulAssignment","src":"10632:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10766:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10640:124:20"},"nodeType":"YulFunctionCall","src":"10640:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10632:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10510:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10525:4:20","type":""}],"src":"10359:419:20"},{"body":{"nodeType":"YulBlock","src":"10890:118:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10912:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10920:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10908:3:20"},"nodeType":"YulFunctionCall","src":"10908:14:20"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10924:34:20","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10901:6:20"},"nodeType":"YulFunctionCall","src":"10901:58:20"},"nodeType":"YulExpressionStatement","src":"10901:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10980:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10988:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10976:3:20"},"nodeType":"YulFunctionCall","src":"10976:15:20"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10993:7:20","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10969:6:20"},"nodeType":"YulFunctionCall","src":"10969:32:20"},"nodeType":"YulExpressionStatement","src":"10969:32:20"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10882:6:20","type":""}],"src":"10784:224:20"},{"body":{"nodeType":"YulBlock","src":"11160:220:20","statements":[{"nodeType":"YulAssignment","src":"11170:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11236:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11241:2:20","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11177:58:20"},"nodeType":"YulFunctionCall","src":"11177:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11170:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11342:3:20"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11253:88:20"},"nodeType":"YulFunctionCall","src":"11253:93:20"},"nodeType":"YulExpressionStatement","src":"11253:93:20"},{"nodeType":"YulAssignment","src":"11355:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11366:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11371:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11362:3:20"},"nodeType":"YulFunctionCall","src":"11362:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11355:3:20"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11148:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11156:3:20","type":""}],"src":"11014:366:20"},{"body":{"nodeType":"YulBlock","src":"11557:248:20","statements":[{"nodeType":"YulAssignment","src":"11567:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11579:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11590:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11575:3:20"},"nodeType":"YulFunctionCall","src":"11575:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11567:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11614:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11625:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11610:3:20"},"nodeType":"YulFunctionCall","src":"11610:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11633:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"11639:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11629:3:20"},"nodeType":"YulFunctionCall","src":"11629:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11603:6:20"},"nodeType":"YulFunctionCall","src":"11603:47:20"},"nodeType":"YulExpressionStatement","src":"11603:47:20"},{"nodeType":"YulAssignment","src":"11659:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11793:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11667:124:20"},"nodeType":"YulFunctionCall","src":"11667:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11659:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11537:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11552:4:20","type":""}],"src":"11386:419:20"},{"body":{"nodeType":"YulBlock","src":"11917:116:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11939:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"11947:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11935:3:20"},"nodeType":"YulFunctionCall","src":"11935:14:20"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11951:34:20","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11928:6:20"},"nodeType":"YulFunctionCall","src":"11928:58:20"},"nodeType":"YulExpressionStatement","src":"11928:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12007:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"12015:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12003:3:20"},"nodeType":"YulFunctionCall","src":"12003:15:20"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"12020:5:20","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11996:6:20"},"nodeType":"YulFunctionCall","src":"11996:30:20"},"nodeType":"YulExpressionStatement","src":"11996:30:20"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11909:6:20","type":""}],"src":"11811:222:20"},{"body":{"nodeType":"YulBlock","src":"12185:220:20","statements":[{"nodeType":"YulAssignment","src":"12195:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12261:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12266:2:20","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12202:58:20"},"nodeType":"YulFunctionCall","src":"12202:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12195:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12367:3:20"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12278:88:20"},"nodeType":"YulFunctionCall","src":"12278:93:20"},"nodeType":"YulExpressionStatement","src":"12278:93:20"},{"nodeType":"YulAssignment","src":"12380:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12391:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12396:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12387:3:20"},"nodeType":"YulFunctionCall","src":"12387:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12380:3:20"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12173:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12181:3:20","type":""}],"src":"12039:366:20"},{"body":{"nodeType":"YulBlock","src":"12582:248:20","statements":[{"nodeType":"YulAssignment","src":"12592:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12604:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12615:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12600:3:20"},"nodeType":"YulFunctionCall","src":"12600:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12592:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12639:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12650:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12635:3:20"},"nodeType":"YulFunctionCall","src":"12635:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12658:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"12664:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12654:3:20"},"nodeType":"YulFunctionCall","src":"12654:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12628:6:20"},"nodeType":"YulFunctionCall","src":"12628:47:20"},"nodeType":"YulExpressionStatement","src":"12628:47:20"},{"nodeType":"YulAssignment","src":"12684:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12818:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12692:124:20"},"nodeType":"YulFunctionCall","src":"12692:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12684:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12562:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12577:4:20","type":""}],"src":"12411:419:20"},{"body":{"nodeType":"YulBlock","src":"12942:119:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12964:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"12972:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12960:3:20"},"nodeType":"YulFunctionCall","src":"12960:14:20"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12976:34:20","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12953:6:20"},"nodeType":"YulFunctionCall","src":"12953:58:20"},"nodeType":"YulExpressionStatement","src":"12953:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13032:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"13040:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13028:3:20"},"nodeType":"YulFunctionCall","src":"13028:15:20"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"13045:8:20","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13021:6:20"},"nodeType":"YulFunctionCall","src":"13021:33:20"},"nodeType":"YulExpressionStatement","src":"13021:33:20"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12934:6:20","type":""}],"src":"12836:225:20"},{"body":{"nodeType":"YulBlock","src":"13213:220:20","statements":[{"nodeType":"YulAssignment","src":"13223:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13289:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13294:2:20","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13230:58:20"},"nodeType":"YulFunctionCall","src":"13230:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13223:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13395:3:20"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13306:88:20"},"nodeType":"YulFunctionCall","src":"13306:93:20"},"nodeType":"YulExpressionStatement","src":"13306:93:20"},{"nodeType":"YulAssignment","src":"13408:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13419:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13424:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13415:3:20"},"nodeType":"YulFunctionCall","src":"13415:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13408:3:20"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13201:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13209:3:20","type":""}],"src":"13067:366:20"},{"body":{"nodeType":"YulBlock","src":"13610:248:20","statements":[{"nodeType":"YulAssignment","src":"13620:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13632:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13643:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13628:3:20"},"nodeType":"YulFunctionCall","src":"13628:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13620:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13667:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13678:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13663:3:20"},"nodeType":"YulFunctionCall","src":"13663:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13686:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"13692:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13682:3:20"},"nodeType":"YulFunctionCall","src":"13682:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13656:6:20"},"nodeType":"YulFunctionCall","src":"13656:47:20"},"nodeType":"YulExpressionStatement","src":"13656:47:20"},{"nodeType":"YulAssignment","src":"13712:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13846:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13720:124:20"},"nodeType":"YulFunctionCall","src":"13720:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13712:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13590:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13605:4:20","type":""}],"src":"13439:419:20"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b19565b60405180910390f35b6100e660048036038101906100e19190610bd4565b610308565b6040516100f39190610c2f565b60405180910390f35b61010461032b565b6040516101119190610c59565b60405180910390f35b610134600480360381019061012f9190610c74565b610335565b6040516101419190610c2f565b60405180910390f35b610152610364565b60405161015f9190610ce3565b60405180910390f35b610182600480360381019061017d9190610bd4565b61036d565b60405161018f9190610c2f565b60405180910390f35b6101b260048036038101906101ad9190610cfe565b6103a4565b6040516101bf9190610c59565b60405180910390f35b6101d06103ec565b6040516101dd9190610b19565b60405180910390f35b61020060048036038101906101fb9190610bd4565b61047e565b60405161020d9190610c2f565b60405180910390f35b610230600480360381019061022b9190610bd4565b6104f5565b60405161023d9190610c2f565b60405180910390f35b610260600480360381019061025b9190610d2b565b610518565b60405161026d9190610c59565b60405180910390f35b60606003805461028590610d9a565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d9a565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610dfb565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d9a565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d9a565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610ec3565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f55565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610fe7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610c59565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190611053565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610865906110e5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590611177565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690611209565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610c59565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aba578082015181840152602081019050610a9f565b83811115610ac9576000848401525b50505050565b6000601f19601f8301169050919050565b6000610aeb82610a80565b610af58185610a8b565b9350610b05818560208601610a9c565b610b0e81610acf565b840191505092915050565b60006020820190508181036000830152610b338184610ae0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6b82610b40565b9050919050565b610b7b81610b60565b8114610b8657600080fd5b50565b600081359050610b9881610b72565b92915050565b6000819050919050565b610bb181610b9e565b8114610bbc57600080fd5b50565b600081359050610bce81610ba8565b92915050565b60008060408385031215610beb57610bea610b3b565b5b6000610bf985828601610b89565b9250506020610c0a85828601610bbf565b9150509250929050565b60008115159050919050565b610c2981610c14565b82525050565b6000602082019050610c446000830184610c20565b92915050565b610c5381610b9e565b82525050565b6000602082019050610c6e6000830184610c4a565b92915050565b600080600060608486031215610c8d57610c8c610b3b565b5b6000610c9b86828701610b89565b9350506020610cac86828701610b89565b9250506040610cbd86828701610bbf565b9150509250925092565b600060ff82169050919050565b610cdd81610cc7565b82525050565b6000602082019050610cf86000830184610cd4565b92915050565b600060208284031215610d1457610d13610b3b565b5b6000610d2284828501610b89565b91505092915050565b60008060408385031215610d4257610d41610b3b565b5b6000610d5085828601610b89565b9250506020610d6185828601610b89565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610db257607f821691505b60208210811415610dc657610dc5610d6b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0682610b9e565b9150610e1183610b9e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4657610e45610dcc565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610ead602583610a8b565b9150610eb882610e51565b604082019050919050565b60006020820190508181036000830152610edc81610ea0565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f3f602483610a8b565b9150610f4a82610ee3565b604082019050919050565b60006020820190508181036000830152610f6e81610f32565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fd1602283610a8b565b9150610fdc82610f75565b604082019050919050565b6000602082019050818103600083015261100081610fc4565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061103d601d83610a8b565b915061104882611007565b602082019050919050565b6000602082019050818103600083015261106c81611030565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110cf602583610a8b565b91506110da82611073565b604082019050919050565b600060208201905081810360008301526110fe816110c2565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611161602383610a8b565b915061116c82611105565b604082019050919050565b6000602082019050818103600083015261119081611154565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111f3602683610a8b565b91506111fe82611197565b604082019050919050565b60006020820190508181036000830152611222816111e6565b905091905056fea2646970667358221220fb9b12738cb79c07b54ba57cb3004e6c3f8d4c276efda3a38b04cbea6eb9acf064736f6c634300080b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB DUP3 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xAF5 DUP2 DUP6 PUSH2 0xA8B JUMP JUMPDEST SWAP4 POP PUSH2 0xB05 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xB0E DUP2 PUSH2 0xACF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB33 DUP2 DUP5 PUSH2 0xAE0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP3 PUSH2 0xB40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7B DUP2 PUSH2 0xB60 JUMP JUMPDEST DUP2 EQ PUSH2 0xB86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB98 DUP2 PUSH2 0xB72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB1 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP2 EQ PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCE DUP2 PUSH2 0xBA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBEA PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF9 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0A DUP6 DUP3 DUP7 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC29 DUP2 PUSH2 0xC14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC53 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC8D JUMPI PUSH2 0xC8C PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC9B DUP7 DUP3 DUP8 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCAC DUP7 DUP3 DUP8 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCBD DUP7 DUP3 DUP8 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDD DUP2 PUSH2 0xCC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD13 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD22 DUP5 DUP3 DUP6 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH2 0xD41 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD50 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD61 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC5 PUSH2 0xD6B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE06 DUP3 PUSH2 0xB9E JUMP JUMPDEST SWAP2 POP PUSH2 0xE11 DUP4 PUSH2 0xB9E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE46 JUMPI PUSH2 0xE45 PUSH2 0xDCC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAD PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xEB8 DUP3 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEDC DUP2 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3F PUSH1 0x24 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xF4A DUP3 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF6E DUP2 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD1 PUSH1 0x22 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xFDC DUP3 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1000 DUP2 PUSH2 0xFC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103D PUSH1 0x1D DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x1048 DUP3 PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x106C DUP2 PUSH2 0x1030 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CF PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x10DA DUP3 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10FE DUP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 PUSH1 0x23 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x116C DUP3 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1190 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F3 PUSH1 0x26 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x11FE DUP3 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1222 DUP2 PUSH2 0x11E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB SWAP12 SLT PUSH20 0x8CB79C07B54BA57CB3004E6C3F8D4C276EFDA3A3 DUP12 DIV 0xCB 0xEA PUSH15 0xB9ACF064736F6C634300080B003300 ","sourceMap":"1401:11610:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;3406:125::-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;3974:149::-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;640:96:11:-;693:7;719:10;712:17;;640:96;:::o;10504:370:2:-;10652:1;10635:19;;:5;:19;;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;12180:121::-;;;;:::o;12889:120::-;;;;:::o;7:99:20:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:474::-;5304:6;5312;5361:2;5349:9;5340:7;5336:23;5332:32;5329:119;;;5367:79;;:::i;:::-;5329:119;5487:1;5512:53;5557:7;5548:6;5537:9;5533:22;5512:53;:::i;:::-;5502:63;;5458:117;5614:2;5640:53;5685:7;5676:6;5665:9;5661:22;5640:53;:::i;:::-;5630:63;;5585:118;5236:474;;;;;:::o;5716:180::-;5764:77;5761:1;5754:88;5861:4;5858:1;5851:15;5885:4;5882:1;5875:15;5902:320;5946:6;5983:1;5977:4;5973:12;5963:22;;6030:1;6024:4;6020:12;6051:18;6041:81;;6107:4;6099:6;6095:17;6085:27;;6041:81;6169:2;6161:6;6158:14;6138:18;6135:38;6132:84;;;6188:18;;:::i;:::-;6132:84;5953:269;5902:320;;;:::o;6228:180::-;6276:77;6273:1;6266:88;6373:4;6370:1;6363:15;6397:4;6394:1;6387:15;6414:305;6454:3;6473:20;6491:1;6473:20;:::i;:::-;6468:25;;6507:20;6525:1;6507:20;:::i;:::-;6502:25;;6661:1;6593:66;6589:74;6586:1;6583:81;6580:107;;;6667:18;;:::i;:::-;6580:107;6711:1;6708;6704:9;6697:16;;6414:305;;;;:::o;6725:224::-;6865:34;6861:1;6853:6;6849:14;6842:58;6934:7;6929:2;6921:6;6917:15;6910:32;6725:224;:::o;6955:366::-;7097:3;7118:67;7182:2;7177:3;7118:67;:::i;:::-;7111:74;;7194:93;7283:3;7194:93;:::i;:::-;7312:2;7307:3;7303:12;7296:19;;6955:366;;;:::o;7327:419::-;7493:4;7531:2;7520:9;7516:18;7508:26;;7580:9;7574:4;7570:20;7566:1;7555:9;7551:17;7544:47;7608:131;7734:4;7608:131;:::i;:::-;7600:139;;7327:419;;;:::o;7752:223::-;7892:34;7888:1;7880:6;7876:14;7869:58;7961:6;7956:2;7948:6;7944:15;7937:31;7752:223;:::o;7981:366::-;8123:3;8144:67;8208:2;8203:3;8144:67;:::i;:::-;8137:74;;8220:93;8309:3;8220:93;:::i;:::-;8338:2;8333:3;8329:12;8322:19;;7981:366;;;:::o;8353:419::-;8519:4;8557:2;8546:9;8542:18;8534:26;;8606:9;8600:4;8596:20;8592:1;8581:9;8577:17;8570:47;8634:131;8760:4;8634:131;:::i;:::-;8626:139;;8353:419;;;:::o;8778:221::-;8918:34;8914:1;8906:6;8902:14;8895:58;8987:4;8982:2;8974:6;8970:15;8963:29;8778:221;:::o;9005:366::-;9147:3;9168:67;9232:2;9227:3;9168:67;:::i;:::-;9161:74;;9244:93;9333:3;9244:93;:::i;:::-;9362:2;9357:3;9353:12;9346:19;;9005:366;;;:::o;9377:419::-;9543:4;9581:2;9570:9;9566:18;9558:26;;9630:9;9624:4;9620:20;9616:1;9605:9;9601:17;9594:47;9658:131;9784:4;9658:131;:::i;:::-;9650:139;;9377:419;;;:::o;9802:179::-;9942:31;9938:1;9930:6;9926:14;9919:55;9802:179;:::o;9987:366::-;10129:3;10150:67;10214:2;10209:3;10150:67;:::i;:::-;10143:74;;10226:93;10315:3;10226:93;:::i;:::-;10344:2;10339:3;10335:12;10328:19;;9987:366;;;:::o;10359:419::-;10525:4;10563:2;10552:9;10548:18;10540:26;;10612:9;10606:4;10602:20;10598:1;10587:9;10583:17;10576:47;10640:131;10766:4;10640:131;:::i;:::-;10632:139;;10359:419;;;:::o;10784:224::-;10924:34;10920:1;10912:6;10908:14;10901:58;10993:7;10988:2;10980:6;10976:15;10969:32;10784:224;:::o;11014:366::-;11156:3;11177:67;11241:2;11236:3;11177:67;:::i;:::-;11170:74;;11253:93;11342:3;11253:93;:::i;:::-;11371:2;11366:3;11362:12;11355:19;;11014:366;;;:::o;11386:419::-;11552:4;11590:2;11579:9;11575:18;11567:26;;11639:9;11633:4;11629:20;11625:1;11614:9;11610:17;11603:47;11667:131;11793:4;11667:131;:::i;:::-;11659:139;;11386:419;;;:::o;11811:222::-;11951:34;11947:1;11939:6;11935:14;11928:58;12020:5;12015:2;12007:6;12003:15;11996:30;11811:222;:::o;12039:366::-;12181:3;12202:67;12266:2;12261:3;12202:67;:::i;:::-;12195:74;;12278:93;12367:3;12278:93;:::i;:::-;12396:2;12391:3;12387:12;12380:19;;12039:366;;;:::o;12411:419::-;12577:4;12615:2;12604:9;12600:18;12592:26;;12664:9;12658:4;12654:20;12650:1;12639:9;12635:17;12628:47;12692:131;12818:4;12692:131;:::i;:::-;12684:139;;12411:419;;;:::o;12836:225::-;12976:34;12972:1;12964:6;12960:14;12953:58;13045:8;13040:2;13032:6;13028:15;13021:33;12836:225;:::o;13067:366::-;13209:3;13230:67;13294:2;13289:3;13230:67;:::i;:::-;13223:74;;13306:93;13395:3;13306:93;:::i;:::-;13424:2;13419:3;13415:12;13408:19;;13067:366;;;:::o;13439:419::-;13605:4;13643:2;13632:9;13628:18;13620:26;;13692:9;13686:4;13682:20;13678:1;13667:9;13663:17;13656:47;13720:131;13846:4;13720:131;:::i;:::-;13712:139;;13439:419;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1. NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked. _Available since v4.2._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x701d39aea4bce743cbc051a7f5ad0f27ee18f3eb38b5303e33b0eb7a54c0608d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e93c025465734c2adc943a0db1aa5d2e249e741f3ee28ed60eaf2944a080b693\",\"dweb:/ipfs/Qmc7tA4E2356bzms761sJYwRMh9JVtK8hG5hivHiPjL4pg\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7\",\"dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"ERC20Permit":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7\",\"dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a25e548dee04fbf8d39684ad9042c00e8878385e8a899c675855ed569038cc5264736f6c634300080b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0x5E SLOAD DUP14 0xEE DIV 0xFB 0xF8 0xD3 SWAP7 DUP5 0xAD SWAP1 TIMESTAMP 0xC0 0xE DUP9 PUSH25 0x385E8A899C675855ED569038CC5264736F6C634300080B0033 ","sourceMap":"707:3748:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a25e548dee04fbf8d39684ad9042c00e8878385e8a899c675855ed569038cc5264736f6c634300080b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0x5E SLOAD DUP14 0xEE DIV 0xFB 0xF8 0xD3 SWAP7 DUP5 0xAD SWAP1 TIMESTAMP 0xC0 0xE DUP9 PUSH25 0x385E8A899C675855ED569038CC5264736F6C634300080B0033 ","sourceMap":"707:3748:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a37dec2532e45797cbdd82018b7e18531e64bc3ff0d7f4f8df31ff25dcb5468e64736f6c634300080b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH30 0xEC2532E45797CBDD82018B7E18531E64BC3FF0D7F4F8DF31FF25DCB5468E PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ","sourceMap":"194:8964:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a37dec2532e45797cbdd82018b7e18531e64bc3ff0d7f4f8df31ff25dcb5468e64736f6c634300080b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH30 0xEC2532E45797CBDD82018B7E18531E64BC3FF0D7F4F8DF31FF25DCB5468E PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ","sourceMap":"194:8964:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fc2b60023912330e654e7231425e4b1b7de2df758b8fbb672e4d62bf90fa56264736f6c634300080b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xC2 0xB6 STOP 0x23 SWAP2 0x23 ADDRESS 0xE6 SLOAD 0xE7 0x23 EQ 0x25 0xE4 0xB1 0xB7 0xDE 0x2D 0xF7 PC 0xB8 0xFB 0xB6 PUSH19 0xE4D62BF90FA56264736F6C634300080B003300 ","sourceMap":"424:971:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fc2b60023912330e654e7231425e4b1b7de2df758b8fbb672e4d62bf90fa56264736f6c634300080b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xC2 0xB6 STOP 0x23 SWAP2 0x23 ADDRESS 0xE6 SLOAD 0xE7 0x23 EQ 0x25 0xE4 0xB1 0xB7 0xDE 0x2D 0xF7 PC 0xB8 0xFB 0xB6 PUSH19 0xE4D62BF90FA56264736F6C634300080B003300 ","sourceMap":"424:971:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220356ccaf4850c4168947394748664c5662bbf2d43461c3173761c6f1b70354b3064736f6c634300080b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD PUSH13 0xCAF4850C4168947394748664C5 PUSH7 0x2BBF2D43461C31 PUSH20 0x761C6F1B70354B3064736F6C634300080B003300 ","sourceMap":"188:2065:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220356ccaf4850c4168947394748664c5662bbf2d43461c3173761c6f1b70354b3064736f6c634300080b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD PUSH13 0xCAF4850C4168947394748664C5 PUSH7 0x2BBF2D43461C31 PUSH20 0x761C6F1B70354B3064736F6C634300080B003300 ","sourceMap":"188:2065:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c971636fcc62b048b5f200a6360a51ba4d4b7d4f2e8b7751795cc654d7c9fdf64736f6c634300080b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C SWAP8 AND CALLDATASIZE 0xFC 0xC6 0x2B DIV DUP12 0x5F KECCAK256 EXP PUSH4 0x60A51BA4 0xD4 0xB7 0xD4 CALLCODE 0xE8 0xB7 PUSH22 0x1795CC654D7C9FDF64736F6C634300080B0033000000 ","sourceMap":"369:8168:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c971636fcc62b048b5f200a6360a51ba4d4b7d4f2e8b7751795cc654d7c9fdf64736f6c634300080b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C SWAP8 AND CALLDATASIZE 0xFC 0xC6 0x2B DIV DUP12 0x5F KECCAK256 EXP PUSH4 0x60A51BA4 0xD4 0xB7 0xD4 CALLCODE 0xE8 0xB7 PUSH22 0x1795CC654D7C9FDF64736F6C634300080B0033000000 ","sourceMap":"369:8168:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201afb496a988bc569d70651eee691b5de6f534eb40d766dc4bc86d837505d5b7b64736f6c634300080b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xFB 0x49 PUSH11 0x988BC569D70651EEE691B5 0xDE PUSH16 0x534EB40D766DC4BC86D837505D5B7B64 PUSH20 0x6F6C634300080B00330000000000000000000000 ","sourceMap":"202:12302:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201afb496a988bc569d70651eee691b5de6f534eb40d766dc4bc86d837505d5b7b64736f6c634300080b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xFB 0x49 PUSH11 0x988BC569D70651EEE691B5 0xDE PUSH16 0x534EB40D766DC4BC86D837505D5B7B64 PUSH20 0x6F6C634300080B00330000000000000000000000 ","sourceMap":"202:12302:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206de953392c8a11e6261a65cc5cf1b658dbd5b53c881a85c88e9a292220bdd77264736f6c634300080b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xE953392C8A11E6261A65CC5CF1B6 PC 0xDB 0xD5 0xB5 EXTCODECOPY DUP9 BYTE DUP6 0xC8 DUP15 SWAP11 0x29 0x22 KECCAK256 0xBD 0xD7 PUSH19 0x64736F6C634300080B00330000000000000000 ","sourceMap":"927:34153:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206de953392c8a11e6261a65cc5cf1b658dbd5b53c881a85c88e9a292220bdd77264736f6c634300080b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xE953392C8A11E6261A65CC5CF1B6 PC 0xDB 0xD5 0xB5 EXTCODECOPY DUP9 BYTE DUP6 0xC8 DUP15 SWAP11 0x29 0x22 KECCAK256 0xBD 0xD7 PUSH19 0x64736F6C634300080B00330000000000000000 ","sourceMap":"927:34153:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"contracts/TalaxToken.sol":{"TalaxToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tax","type":"uint256"}],"name":"ChangeTaxPercentage","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tax","type":"uint256"}],"name":"changeTax","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"withdrawFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_1663":{"entryPoint":null,"id":1663,"parameterSlots":1,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_235":{"entryPoint":null,"id":235,"parameterSlots":2,"returnSlots":0},"@_3153":{"entryPoint":null,"id":3153,"parameterSlots":2,"returnSlots":0},"@_5712":{"entryPoint":null,"id":5712,"parameterSlots":0,"returnSlots":0},"@_add_1567":{"entryPoint":1575,"id":1567,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1343":{"entryPoint":2631,"id":1343,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_5930":{"entryPoint":2385,"id":5930,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_776":{"entryPoint":2711,"id":776,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_765":{"entryPoint":2380,"id":765,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_3209":{"entryPoint":877,"id":3209,"parameterSlots":3,"returnSlots":1},"@_maxSupply_1258":{"entryPoint":1529,"id":1258,"parameterSlots":0,"returnSlots":1},"@_mint_1290":{"entryPoint":973,"id":1290,"parameterSlots":2,"returnSlots":0},"@_mint_594":{"entryPoint":1163,"id":594,"parameterSlots":2,"returnSlots":0},"@_mint_5948":{"entryPoint":946,"id":5948,"parameterSlots":2,"returnSlots":0},"@_moveVotingPower_1453":{"entryPoint":2821,"id":1453,"parameterSlots":3,"returnSlots":0},"@_msgSender_2452":{"entryPoint":671,"id":2452,"parameterSlots":0,"returnSlots":1},"@_subtract_1581":{"entryPoint":3368,"id":1581,"parameterSlots":2,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":679,"id":111,"parameterSlots":1,"returnSlots":0},"@_unsafeAccess_1595":{"entryPoint":2414,"id":1595,"parameterSlots":2,"returnSlots":1},"@_writeCheckpoint_1553":{"entryPoint":1599,"id":1553,"parameterSlots":3,"returnSlots":2},"@decimals_265":{"entryPoint":937,"id":265,"parameterSlots":0,"returnSlots":1},"@delegates_984":{"entryPoint":2716,"id":984,"parameterSlots":1,"returnSlots":1},"@toUint224_4194":{"entryPoint":2435,"id":4194,"parameterSlots":1,"returnSlots":1},"@toUint32_4794":{"entryPoint":2545,"id":4794,"parameterSlots":1,"returnSlots":1},"@totalSupply_275":{"entryPoint":1565,"id":275,"parameterSlots":0,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4339,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4253,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack":{"entryPoint":4545,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack":{"entryPoint":4992,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack":{"entryPoint":5144,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":4659,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4270,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":4356,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4584,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5031,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5183,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4698,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4825,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5217,"id":null,"parameterSlots":3,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4449,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4732,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":3628,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":3978,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":3719,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4059,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint40":{"entryPoint":4173,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4854,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4319,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4243,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4287,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3955,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint40":{"entryPoint":4156,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3965,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5309,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3568,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":5262,"id":null,"parameterSlots":0,"returnSlots":0},"shift_right_1_unsigned":{"entryPoint":3615,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699":{"entryPoint":4466,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79":{"entryPoint":4913,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19":{"entryPoint":5065,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":4618,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10644:20","statements":[{"body":{"nodeType":"YulBlock","src":"35:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"55:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45:6:20"},"nodeType":"YulFunctionCall","src":"45:88:20"},"nodeType":"YulExpressionStatement","src":"45:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"149:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"152:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"142:6:20"},"nodeType":"YulFunctionCall","src":"142:15:20"},"nodeType":"YulExpressionStatement","src":"142:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"173:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"176:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"166:6:20"},"nodeType":"YulFunctionCall","src":"166:15:20"},"nodeType":"YulExpressionStatement","src":"166:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7:180:20"},{"body":{"nodeType":"YulBlock","src":"244:51:20","statements":[{"nodeType":"YulAssignment","src":"254:34:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"279:1:20","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"282:5:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"275:3:20"},"nodeType":"YulFunctionCall","src":"275:13:20"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"254:8:20"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"225:5:20","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"235:8:20","type":""}],"src":"193:102:20"},{"body":{"nodeType":"YulBlock","src":"374:775:20","statements":[{"nodeType":"YulAssignment","src":"384:15:20","value":{"name":"_power","nodeType":"YulIdentifier","src":"393:6:20"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"384:5:20"}]},{"nodeType":"YulAssignment","src":"408:14:20","value":{"name":"_base","nodeType":"YulIdentifier","src":"417:5:20"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"408:4:20"}]},{"body":{"nodeType":"YulBlock","src":"466:677:20","statements":[{"body":{"nodeType":"YulBlock","src":"554:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"556:16:20"},"nodeType":"YulFunctionCall","src":"556:18:20"},"nodeType":"YulExpressionStatement","src":"556:18:20"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"532:4:20"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"542:3:20"},{"name":"base","nodeType":"YulIdentifier","src":"547:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"538:3:20"},"nodeType":"YulFunctionCall","src":"538:14:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"529:2:20"},"nodeType":"YulFunctionCall","src":"529:24:20"},"nodeType":"YulIf","src":"526:50:20"},{"body":{"nodeType":"YulBlock","src":"621:419:20","statements":[{"nodeType":"YulAssignment","src":"1001:25:20","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"1014:5:20"},{"name":"base","nodeType":"YulIdentifier","src":"1021:4:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1010:3:20"},"nodeType":"YulFunctionCall","src":"1010:16:20"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1001:5:20"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"596:8:20"},{"kind":"number","nodeType":"YulLiteral","src":"606:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"592:3:20"},"nodeType":"YulFunctionCall","src":"592:16:20"},"nodeType":"YulIf","src":"589:451:20"},{"nodeType":"YulAssignment","src":"1053:23:20","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1065:4:20"},{"name":"base","nodeType":"YulIdentifier","src":"1071:4:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1061:3:20"},"nodeType":"YulFunctionCall","src":"1061:15:20"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"1053:4:20"}]},{"nodeType":"YulAssignment","src":"1089:44:20","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1124:8:20"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"1101:22:20"},"nodeType":"YulFunctionCall","src":"1101:32:20"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"1089:8:20"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"442:8:20"},{"kind":"number","nodeType":"YulLiteral","src":"452:1:20","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"439:2:20"},"nodeType":"YulFunctionCall","src":"439:15:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"455:2:20","statements":[]},"pre":{"nodeType":"YulBlock","src":"435:3:20","statements":[]},"src":"431:712:20"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"329:6:20","type":""},{"name":"_base","nodeType":"YulTypedName","src":"337:5:20","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"344:8:20","type":""},{"name":"max","nodeType":"YulTypedName","src":"354:3:20","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"362:5:20","type":""},{"name":"base","nodeType":"YulTypedName","src":"369:4:20","type":""}],"src":"301:848:20"},{"body":{"nodeType":"YulBlock","src":"1215:1013:20","statements":[{"body":{"nodeType":"YulBlock","src":"1410:20:20","statements":[{"nodeType":"YulAssignment","src":"1412:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1421:1:20","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1412:5:20"}]},{"nodeType":"YulLeave","src":"1423:5:20"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1400:8:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1393:6:20"},"nodeType":"YulFunctionCall","src":"1393:16:20"},"nodeType":"YulIf","src":"1390:40:20"},{"body":{"nodeType":"YulBlock","src":"1455:20:20","statements":[{"nodeType":"YulAssignment","src":"1457:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1466:1:20","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1457:5:20"}]},{"nodeType":"YulLeave","src":"1468:5:20"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1449:4:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1442:6:20"},"nodeType":"YulFunctionCall","src":"1442:12:20"},"nodeType":"YulIf","src":"1439:36:20"},{"cases":[{"body":{"nodeType":"YulBlock","src":"1585:20:20","statements":[{"nodeType":"YulAssignment","src":"1587:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1596:1:20","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1587:5:20"}]},{"nodeType":"YulLeave","src":"1598:5:20"}]},"nodeType":"YulCase","src":"1578:27:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1583:1:20","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"1629:176:20","statements":[{"body":{"nodeType":"YulBlock","src":"1664:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1666:16:20"},"nodeType":"YulFunctionCall","src":"1666:18:20"},"nodeType":"YulExpressionStatement","src":"1666:18:20"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1649:8:20"},{"kind":"number","nodeType":"YulLiteral","src":"1659:3:20","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1646:2:20"},"nodeType":"YulFunctionCall","src":"1646:17:20"},"nodeType":"YulIf","src":"1643:43:20"},{"nodeType":"YulAssignment","src":"1699:25:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1712:1:20","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"1715:8:20"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"1708:3:20"},"nodeType":"YulFunctionCall","src":"1708:16:20"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1699:5:20"}]},{"body":{"nodeType":"YulBlock","src":"1755:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1757:16:20"},"nodeType":"YulFunctionCall","src":"1757:18:20"},"nodeType":"YulExpressionStatement","src":"1757:18:20"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"1743:5:20"},{"name":"max","nodeType":"YulIdentifier","src":"1750:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1740:2:20"},"nodeType":"YulFunctionCall","src":"1740:14:20"},"nodeType":"YulIf","src":"1737:40:20"},{"nodeType":"YulLeave","src":"1790:5:20"}]},"nodeType":"YulCase","src":"1614:191:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1619:1:20","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"1535:4:20"},"nodeType":"YulSwitch","src":"1528:277:20"},{"body":{"nodeType":"YulBlock","src":"1937:123:20","statements":[{"nodeType":"YulAssignment","src":"1951:28:20","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1964:4:20"},{"name":"exponent","nodeType":"YulIdentifier","src":"1970:8:20"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"1960:3:20"},"nodeType":"YulFunctionCall","src":"1960:19:20"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1951:5:20"}]},{"body":{"nodeType":"YulBlock","src":"2010:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2012:16:20"},"nodeType":"YulFunctionCall","src":"2012:18:20"},"nodeType":"YulExpressionStatement","src":"2012:18:20"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"1998:5:20"},{"name":"max","nodeType":"YulIdentifier","src":"2005:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1995:2:20"},"nodeType":"YulFunctionCall","src":"1995:14:20"},"nodeType":"YulIf","src":"1992:40:20"},{"nodeType":"YulLeave","src":"2045:5:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1840:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"1846:2:20","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1837:2:20"},"nodeType":"YulFunctionCall","src":"1837:12:20"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1854:8:20"},{"kind":"number","nodeType":"YulLiteral","src":"1864:2:20","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1851:2:20"},"nodeType":"YulFunctionCall","src":"1851:16:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1833:3:20"},"nodeType":"YulFunctionCall","src":"1833:35:20"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1889:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"1895:3:20","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1886:2:20"},"nodeType":"YulFunctionCall","src":"1886:13:20"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1904:8:20"},{"kind":"number","nodeType":"YulLiteral","src":"1914:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1901:2:20"},"nodeType":"YulFunctionCall","src":"1901:16:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1882:3:20"},"nodeType":"YulFunctionCall","src":"1882:36:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1817:2:20"},"nodeType":"YulFunctionCall","src":"1817:111:20"},"nodeType":"YulIf","src":"1814:246:20"},{"nodeType":"YulAssignment","src":"2070:57:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2104:1:20","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"2107:4:20"},{"name":"exponent","nodeType":"YulIdentifier","src":"2113:8:20"},{"name":"max","nodeType":"YulIdentifier","src":"2123:3:20"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"2085:18:20"},"nodeType":"YulFunctionCall","src":"2085:42:20"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2070:5:20"},{"name":"base","nodeType":"YulIdentifier","src":"2077:4:20"}]},{"body":{"nodeType":"YulBlock","src":"2166:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2168:16:20"},"nodeType":"YulFunctionCall","src":"2168:18:20"},"nodeType":"YulExpressionStatement","src":"2168:18:20"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"2143:5:20"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"2154:3:20"},{"name":"base","nodeType":"YulIdentifier","src":"2159:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2150:3:20"},"nodeType":"YulFunctionCall","src":"2150:14:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2140:2:20"},"nodeType":"YulFunctionCall","src":"2140:25:20"},"nodeType":"YulIf","src":"2137:51:20"},{"nodeType":"YulAssignment","src":"2197:25:20","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"2210:5:20"},{"name":"base","nodeType":"YulIdentifier","src":"2217:4:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2206:3:20"},"nodeType":"YulFunctionCall","src":"2206:16:20"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2197:5:20"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"1185:4:20","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"1191:8:20","type":""},{"name":"max","nodeType":"YulTypedName","src":"1201:3:20","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"1209:5:20","type":""}],"src":"1155:1073:20"},{"body":{"nodeType":"YulBlock","src":"2279:32:20","statements":[{"nodeType":"YulAssignment","src":"2289:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"2300:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2289:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2261:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2271:7:20","type":""}],"src":"2234:77:20"},{"body":{"nodeType":"YulBlock","src":"2360:43:20","statements":[{"nodeType":"YulAssignment","src":"2370:27:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2385:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"2392:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2381:3:20"},"nodeType":"YulFunctionCall","src":"2381:16:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2370:7:20"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2342:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2352:7:20","type":""}],"src":"2317:86:20"},{"body":{"nodeType":"YulBlock","src":"2473:217:20","statements":[{"nodeType":"YulAssignment","src":"2483:31:20","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2509:4:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2491:17:20"},"nodeType":"YulFunctionCall","src":"2491:23:20"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"2483:4:20"}]},{"nodeType":"YulAssignment","src":"2523:37:20","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"2551:8:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"2535:15:20"},"nodeType":"YulFunctionCall","src":"2535:25:20"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"2523:8:20"}]},{"nodeType":"YulAssignment","src":"2570:113:20","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2600:4:20"},{"name":"exponent","nodeType":"YulIdentifier","src":"2606:8:20"},{"kind":"number","nodeType":"YulLiteral","src":"2616:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"2579:20:20"},"nodeType":"YulFunctionCall","src":"2579:104:20"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2570:5:20"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"2448:4:20","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"2454:8:20","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"2467:5:20","type":""}],"src":"2409:281:20"},{"body":{"nodeType":"YulBlock","src":"2744:300:20","statements":[{"nodeType":"YulAssignment","src":"2754:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2777:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2759:17:20"},"nodeType":"YulFunctionCall","src":"2759:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"2754:1:20"}]},{"nodeType":"YulAssignment","src":"2788:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2811:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2793:17:20"},"nodeType":"YulFunctionCall","src":"2793:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"2788:1:20"}]},{"body":{"nodeType":"YulBlock","src":"2986:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2988:16:20"},"nodeType":"YulFunctionCall","src":"2988:18:20"},"nodeType":"YulExpressionStatement","src":"2988:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2898:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2891:6:20"},"nodeType":"YulFunctionCall","src":"2891:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2884:6:20"},"nodeType":"YulFunctionCall","src":"2884:17:20"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2906:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2913:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"2981:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2909:3:20"},"nodeType":"YulFunctionCall","src":"2909:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2903:2:20"},"nodeType":"YulFunctionCall","src":"2903:81:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2880:3:20"},"nodeType":"YulFunctionCall","src":"2880:105:20"},"nodeType":"YulIf","src":"2877:131:20"},{"nodeType":"YulAssignment","src":"3018:20:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3033:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"3036:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3029:3:20"},"nodeType":"YulFunctionCall","src":"3029:9:20"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"3018:7:20"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2727:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"2730:1:20","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"2736:7:20","type":""}],"src":"2696:348:20"},{"body":{"nodeType":"YulBlock","src":"3094:51:20","statements":[{"nodeType":"YulAssignment","src":"3104:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3119:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"3126:12:20","type":"","value":"0xffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3115:3:20"},"nodeType":"YulFunctionCall","src":"3115:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3104:7:20"}]}]},"name":"cleanup_t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3076:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3086:7:20","type":""}],"src":"3050:95:20"},{"body":{"nodeType":"YulBlock","src":"3198:244:20","statements":[{"nodeType":"YulAssignment","src":"3208:24:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3230:1:20"}],"functionName":{"name":"cleanup_t_uint40","nodeType":"YulIdentifier","src":"3213:16:20"},"nodeType":"YulFunctionCall","src":"3213:19:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"3208:1:20"}]},{"nodeType":"YulAssignment","src":"3241:24:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3263:1:20"}],"functionName":{"name":"cleanup_t_uint40","nodeType":"YulIdentifier","src":"3246:16:20"},"nodeType":"YulFunctionCall","src":"3246:19:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"3241:1:20"}]},{"body":{"nodeType":"YulBlock","src":"3384:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3386:16:20"},"nodeType":"YulFunctionCall","src":"3386:18:20"},"nodeType":"YulExpressionStatement","src":"3386:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3350:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3343:6:20"},"nodeType":"YulFunctionCall","src":"3343:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3336:6:20"},"nodeType":"YulFunctionCall","src":"3336:17:20"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3358:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3365:12:20","type":"","value":"0xffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"3379:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3361:3:20"},"nodeType":"YulFunctionCall","src":"3361:20:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3355:2:20"},"nodeType":"YulFunctionCall","src":"3355:27:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3332:3:20"},"nodeType":"YulFunctionCall","src":"3332:51:20"},"nodeType":"YulIf","src":"3329:77:20"},{"nodeType":"YulAssignment","src":"3416:20:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3431:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"3434:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3427:3:20"},"nodeType":"YulFunctionCall","src":"3427:9:20"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"3416:7:20"}]}]},"name":"checked_mul_t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3181:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"3184:1:20","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"3190:7:20","type":""}],"src":"3151:291:20"},{"body":{"nodeType":"YulBlock","src":"3493:32:20","statements":[{"nodeType":"YulAssignment","src":"3503:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"3514:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3503:7:20"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3475:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3485:7:20","type":""}],"src":"3448:77:20"},{"body":{"nodeType":"YulBlock","src":"3596:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3613:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3636:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3618:17:20"},"nodeType":"YulFunctionCall","src":"3618:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3606:6:20"},"nodeType":"YulFunctionCall","src":"3606:37:20"},"nodeType":"YulExpressionStatement","src":"3606:37:20"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3584:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3591:3:20","type":""}],"src":"3531:118:20"},{"body":{"nodeType":"YulBlock","src":"3720:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3737:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3760:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3742:17:20"},"nodeType":"YulFunctionCall","src":"3742:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3730:6:20"},"nodeType":"YulFunctionCall","src":"3730:37:20"},"nodeType":"YulExpressionStatement","src":"3730:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3708:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3715:3:20","type":""}],"src":"3655:118:20"},{"body":{"nodeType":"YulBlock","src":"3824:81:20","statements":[{"nodeType":"YulAssignment","src":"3834:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3849:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"3856:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3845:3:20"},"nodeType":"YulFunctionCall","src":"3845:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3834:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3806:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3816:7:20","type":""}],"src":"3779:126:20"},{"body":{"nodeType":"YulBlock","src":"3956:51:20","statements":[{"nodeType":"YulAssignment","src":"3966:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3995:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3977:17:20"},"nodeType":"YulFunctionCall","src":"3977:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3966:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3938:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3948:7:20","type":""}],"src":"3911:96:20"},{"body":{"nodeType":"YulBlock","src":"4078:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4095:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4118:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4100:17:20"},"nodeType":"YulFunctionCall","src":"4100:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4088:6:20"},"nodeType":"YulFunctionCall","src":"4088:37:20"},"nodeType":"YulExpressionStatement","src":"4088:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4066:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4073:3:20","type":""}],"src":"4013:118:20"},{"body":{"nodeType":"YulBlock","src":"4347:454:20","statements":[{"nodeType":"YulAssignment","src":"4357:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4369:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4380:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4365:3:20"},"nodeType":"YulFunctionCall","src":"4365:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4357:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4438:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4451:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4462:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4447:3:20"},"nodeType":"YulFunctionCall","src":"4447:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"4394:43:20"},"nodeType":"YulFunctionCall","src":"4394:71:20"},"nodeType":"YulExpressionStatement","src":"4394:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4519:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4532:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4543:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4528:3:20"},"nodeType":"YulFunctionCall","src":"4528:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"4475:43:20"},"nodeType":"YulFunctionCall","src":"4475:72:20"},"nodeType":"YulExpressionStatement","src":"4475:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4601:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4614:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4625:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4610:3:20"},"nodeType":"YulFunctionCall","src":"4610:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"4557:43:20"},"nodeType":"YulFunctionCall","src":"4557:72:20"},"nodeType":"YulExpressionStatement","src":"4557:72:20"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"4683:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4696:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4707:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4692:3:20"},"nodeType":"YulFunctionCall","src":"4692:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4639:43:20"},"nodeType":"YulFunctionCall","src":"4639:72:20"},"nodeType":"YulExpressionStatement","src":"4639:72:20"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4765:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4778:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4789:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4774:3:20"},"nodeType":"YulFunctionCall","src":"4774:19:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4721:43:20"},"nodeType":"YulFunctionCall","src":"4721:73:20"},"nodeType":"YulExpressionStatement","src":"4721:73:20"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4287:9:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4299:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4307:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4315:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4323:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4331:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4342:4:20","type":""}],"src":"4137:664:20"},{"body":{"nodeType":"YulBlock","src":"4903:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4920:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"4925:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4913:6:20"},"nodeType":"YulFunctionCall","src":"4913:19:20"},"nodeType":"YulExpressionStatement","src":"4913:19:20"},{"nodeType":"YulAssignment","src":"4941:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4960:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"4965:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4956:3:20"},"nodeType":"YulFunctionCall","src":"4956:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4941:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4875:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"4880:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4891:11:20","type":""}],"src":"4807:169:20"},{"body":{"nodeType":"YulBlock","src":"5088:129:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5110:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"5118:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5106:3:20"},"nodeType":"YulFunctionCall","src":"5106:14:20"},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f","kind":"string","nodeType":"YulLiteral","src":"5122:34:20","type":"","value":"ERC20Votes: total supply risks o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5099:6:20"},"nodeType":"YulFunctionCall","src":"5099:58:20"},"nodeType":"YulExpressionStatement","src":"5099:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5178:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"5186:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5174:3:20"},"nodeType":"YulFunctionCall","src":"5174:15:20"},{"hexValue":"766572666c6f77696e6720766f746573","kind":"string","nodeType":"YulLiteral","src":"5191:18:20","type":"","value":"verflowing votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5167:6:20"},"nodeType":"YulFunctionCall","src":"5167:43:20"},"nodeType":"YulExpressionStatement","src":"5167:43:20"}]},"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5080:6:20","type":""}],"src":"4982:235:20"},{"body":{"nodeType":"YulBlock","src":"5369:220:20","statements":[{"nodeType":"YulAssignment","src":"5379:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5445:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"5450:2:20","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5386:58:20"},"nodeType":"YulFunctionCall","src":"5386:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5379:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5551:3:20"}],"functionName":{"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulIdentifier","src":"5462:88:20"},"nodeType":"YulFunctionCall","src":"5462:93:20"},"nodeType":"YulExpressionStatement","src":"5462:93:20"},{"nodeType":"YulAssignment","src":"5564:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5575:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"5580:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5571:3:20"},"nodeType":"YulFunctionCall","src":"5571:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5564:3:20"}]}]},"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5357:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5365:3:20","type":""}],"src":"5223:366:20"},{"body":{"nodeType":"YulBlock","src":"5766:248:20","statements":[{"nodeType":"YulAssignment","src":"5776:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5788:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5799:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5784:3:20"},"nodeType":"YulFunctionCall","src":"5784:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5776:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5823:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5834:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5819:3:20"},"nodeType":"YulFunctionCall","src":"5819:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5842:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5848:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5838:3:20"},"nodeType":"YulFunctionCall","src":"5838:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5812:6:20"},"nodeType":"YulFunctionCall","src":"5812:47:20"},"nodeType":"YulExpressionStatement","src":"5812:47:20"},{"nodeType":"YulAssignment","src":"5868:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6002:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5876:124:20"},"nodeType":"YulFunctionCall","src":"5876:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5868:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5746:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5761:4:20","type":""}],"src":"5595:419:20"},{"body":{"nodeType":"YulBlock","src":"6126:75:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6148:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6156:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6144:3:20"},"nodeType":"YulFunctionCall","src":"6144:14:20"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"6160:33:20","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6137:6:20"},"nodeType":"YulFunctionCall","src":"6137:57:20"},"nodeType":"YulExpressionStatement","src":"6137:57:20"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6118:6:20","type":""}],"src":"6020:181:20"},{"body":{"nodeType":"YulBlock","src":"6353:220:20","statements":[{"nodeType":"YulAssignment","src":"6363:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6429:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"6434:2:20","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6370:58:20"},"nodeType":"YulFunctionCall","src":"6370:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6363:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6535:3:20"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"6446:88:20"},"nodeType":"YulFunctionCall","src":"6446:93:20"},"nodeType":"YulExpressionStatement","src":"6446:93:20"},{"nodeType":"YulAssignment","src":"6548:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6559:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"6564:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6555:3:20"},"nodeType":"YulFunctionCall","src":"6555:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6548:3:20"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6341:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6349:3:20","type":""}],"src":"6207:366:20"},{"body":{"nodeType":"YulBlock","src":"6750:248:20","statements":[{"nodeType":"YulAssignment","src":"6760:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6772:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6783:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6768:3:20"},"nodeType":"YulFunctionCall","src":"6768:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6760:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6807:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6818:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6803:3:20"},"nodeType":"YulFunctionCall","src":"6803:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6826:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"6832:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6822:3:20"},"nodeType":"YulFunctionCall","src":"6822:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6796:6:20"},"nodeType":"YulFunctionCall","src":"6796:47:20"},"nodeType":"YulExpressionStatement","src":"6796:47:20"},{"nodeType":"YulAssignment","src":"6852:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6986:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6860:124:20"},"nodeType":"YulFunctionCall","src":"6860:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6852:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6730:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6745:4:20","type":""}],"src":"6579:419:20"},{"body":{"nodeType":"YulBlock","src":"7048:261:20","statements":[{"nodeType":"YulAssignment","src":"7058:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7081:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7063:17:20"},"nodeType":"YulFunctionCall","src":"7063:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7058:1:20"}]},{"nodeType":"YulAssignment","src":"7092:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7115:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7097:17:20"},"nodeType":"YulFunctionCall","src":"7097:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7092:1:20"}]},{"body":{"nodeType":"YulBlock","src":"7255:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7257:16:20"},"nodeType":"YulFunctionCall","src":"7257:18:20"},"nodeType":"YulExpressionStatement","src":"7257:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7176:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7183:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"7251:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7179:3:20"},"nodeType":"YulFunctionCall","src":"7179:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7173:2:20"},"nodeType":"YulFunctionCall","src":"7173:81:20"},"nodeType":"YulIf","src":"7170:107:20"},{"nodeType":"YulAssignment","src":"7287:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7298:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"7301:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7294:3:20"},"nodeType":"YulFunctionCall","src":"7294:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7287:3:20"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7035:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"7038:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7044:3:20","type":""}],"src":"7004:305:20"},{"body":{"nodeType":"YulBlock","src":"7413:124:20","statements":[{"nodeType":"YulAssignment","src":"7423:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7435:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7446:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7431:3:20"},"nodeType":"YulFunctionCall","src":"7431:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7423:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7503:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7516:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7527:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7512:3:20"},"nodeType":"YulFunctionCall","src":"7512:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7459:43:20"},"nodeType":"YulFunctionCall","src":"7459:71:20"},"nodeType":"YulExpressionStatement","src":"7459:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7385:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7397:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7408:4:20","type":""}],"src":"7315:222:20"},{"body":{"nodeType":"YulBlock","src":"7588:146:20","statements":[{"nodeType":"YulAssignment","src":"7598:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7621:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7603:17:20"},"nodeType":"YulFunctionCall","src":"7603:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7598:1:20"}]},{"nodeType":"YulAssignment","src":"7632:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7655:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7637:17:20"},"nodeType":"YulFunctionCall","src":"7637:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7632:1:20"}]},{"body":{"nodeType":"YulBlock","src":"7679:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7681:16:20"},"nodeType":"YulFunctionCall","src":"7681:18:20"},"nodeType":"YulExpressionStatement","src":"7681:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7673:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"7676:1:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7670:2:20"},"nodeType":"YulFunctionCall","src":"7670:8:20"},"nodeType":"YulIf","src":"7667:34:20"},{"nodeType":"YulAssignment","src":"7711:17:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7723:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"7726:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7719:3:20"},"nodeType":"YulFunctionCall","src":"7719:9:20"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"7711:4:20"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7574:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"7577:1:20","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"7583:4:20","type":""}],"src":"7543:191:20"},{"body":{"nodeType":"YulBlock","src":"7846:120:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7868:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7876:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7864:3:20"},"nodeType":"YulFunctionCall","src":"7864:14:20"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"7880:34:20","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7857:6:20"},"nodeType":"YulFunctionCall","src":"7857:58:20"},"nodeType":"YulExpressionStatement","src":"7857:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7936:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7944:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7932:3:20"},"nodeType":"YulFunctionCall","src":"7932:15:20"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"7949:9:20","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7925:6:20"},"nodeType":"YulFunctionCall","src":"7925:34:20"},"nodeType":"YulExpressionStatement","src":"7925:34:20"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7838:6:20","type":""}],"src":"7740:226:20"},{"body":{"nodeType":"YulBlock","src":"8118:220:20","statements":[{"nodeType":"YulAssignment","src":"8128:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8194:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8199:2:20","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8135:58:20"},"nodeType":"YulFunctionCall","src":"8135:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8128:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8300:3:20"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"8211:88:20"},"nodeType":"YulFunctionCall","src":"8211:93:20"},"nodeType":"YulExpressionStatement","src":"8211:93:20"},{"nodeType":"YulAssignment","src":"8313:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8324:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8329:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8320:3:20"},"nodeType":"YulFunctionCall","src":"8320:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8313:3:20"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8106:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8114:3:20","type":""}],"src":"7972:366:20"},{"body":{"nodeType":"YulBlock","src":"8515:248:20","statements":[{"nodeType":"YulAssignment","src":"8525:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8537:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8548:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8533:3:20"},"nodeType":"YulFunctionCall","src":"8533:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8525:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8572:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8583:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8568:3:20"},"nodeType":"YulFunctionCall","src":"8568:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8591:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"8597:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8587:3:20"},"nodeType":"YulFunctionCall","src":"8587:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8561:6:20"},"nodeType":"YulFunctionCall","src":"8561:47:20"},"nodeType":"YulExpressionStatement","src":"8561:47:20"},{"nodeType":"YulAssignment","src":"8617:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8751:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8625:124:20"},"nodeType":"YulFunctionCall","src":"8625:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8617:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8495:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8510:4:20","type":""}],"src":"8344:419:20"},{"body":{"nodeType":"YulBlock","src":"8875:119:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8897:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8905:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8893:3:20"},"nodeType":"YulFunctionCall","src":"8893:14:20"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"8909:34:20","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8886:6:20"},"nodeType":"YulFunctionCall","src":"8886:58:20"},"nodeType":"YulExpressionStatement","src":"8886:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8965:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8973:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8961:3:20"},"nodeType":"YulFunctionCall","src":"8961:15:20"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"8978:8:20","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8954:6:20"},"nodeType":"YulFunctionCall","src":"8954:33:20"},"nodeType":"YulExpressionStatement","src":"8954:33:20"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8867:6:20","type":""}],"src":"8769:225:20"},{"body":{"nodeType":"YulBlock","src":"9146:220:20","statements":[{"nodeType":"YulAssignment","src":"9156:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9222:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9227:2:20","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9163:58:20"},"nodeType":"YulFunctionCall","src":"9163:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9156:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9328:3:20"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"9239:88:20"},"nodeType":"YulFunctionCall","src":"9239:93:20"},"nodeType":"YulExpressionStatement","src":"9239:93:20"},{"nodeType":"YulAssignment","src":"9341:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9352:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9357:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9348:3:20"},"nodeType":"YulFunctionCall","src":"9348:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9341:3:20"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9134:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9142:3:20","type":""}],"src":"9000:366:20"},{"body":{"nodeType":"YulBlock","src":"9543:248:20","statements":[{"nodeType":"YulAssignment","src":"9553:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9565:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9576:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9561:3:20"},"nodeType":"YulFunctionCall","src":"9561:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9553:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9600:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9611:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9596:3:20"},"nodeType":"YulFunctionCall","src":"9596:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9619:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"9625:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9615:3:20"},"nodeType":"YulFunctionCall","src":"9615:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9589:6:20"},"nodeType":"YulFunctionCall","src":"9589:47:20"},"nodeType":"YulExpressionStatement","src":"9589:47:20"},{"nodeType":"YulAssignment","src":"9645:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9779:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9653:124:20"},"nodeType":"YulFunctionCall","src":"9653:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9645:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9523:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9538:4:20","type":""}],"src":"9372:419:20"},{"body":{"nodeType":"YulBlock","src":"9923:206:20","statements":[{"nodeType":"YulAssignment","src":"9933:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9945:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9956:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9941:3:20"},"nodeType":"YulFunctionCall","src":"9941:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9933:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10013:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10026:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10037:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10022:3:20"},"nodeType":"YulFunctionCall","src":"10022:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9969:43:20"},"nodeType":"YulFunctionCall","src":"9969:71:20"},"nodeType":"YulExpressionStatement","src":"9969:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10094:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10107:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10118:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10103:3:20"},"nodeType":"YulFunctionCall","src":"10103:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10050:43:20"},"nodeType":"YulFunctionCall","src":"10050:72:20"},"nodeType":"YulExpressionStatement","src":"10050:72:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9887:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9899:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9907:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9918:4:20","type":""}],"src":"9797:332:20"},{"body":{"nodeType":"YulBlock","src":"10163:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10180:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10183:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10173:6:20"},"nodeType":"YulFunctionCall","src":"10173:88:20"},"nodeType":"YulExpressionStatement","src":"10173:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10277:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10280:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10270:6:20"},"nodeType":"YulFunctionCall","src":"10270:15:20"},"nodeType":"YulExpressionStatement","src":"10270:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10301:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10304:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10294:6:20"},"nodeType":"YulFunctionCall","src":"10294:15:20"},"nodeType":"YulExpressionStatement","src":"10294:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10135:180:20"},{"body":{"nodeType":"YulBlock","src":"10372:269:20","statements":[{"nodeType":"YulAssignment","src":"10382:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10396:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"10402:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10392:3:20"},"nodeType":"YulFunctionCall","src":"10392:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10382:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"10413:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10443:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"10449:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10439:3:20"},"nodeType":"YulFunctionCall","src":"10439:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10417:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"10490:51:20","statements":[{"nodeType":"YulAssignment","src":"10504:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10518:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10526:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10514:3:20"},"nodeType":"YulFunctionCall","src":"10514:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10504:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10470:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10463:6:20"},"nodeType":"YulFunctionCall","src":"10463:26:20"},"nodeType":"YulIf","src":"10460:81:20"},{"body":{"nodeType":"YulBlock","src":"10593:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10607:16:20"},"nodeType":"YulFunctionCall","src":"10607:18:20"},"nodeType":"YulExpressionStatement","src":"10607:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10557:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10580:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10588:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10577:2:20"},"nodeType":"YulFunctionCall","src":"10577:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10554:2:20"},"nodeType":"YulFunctionCall","src":"10554:38:20"},"nodeType":"YulIf","src":"10551:84:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10356:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10365:6:20","type":""}],"src":"10321:320:20"}]},"contents":"{\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_uint40(value) -> cleaned {\n        cleaned := and(value, 0xffffffffff)\n    }\n\n    function checked_mul_t_uint40(x, y) -> product {\n        x := cleanup_t_uint40(x)\n        y := cleanup_t_uint40(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: total supply risks o\")\n\n        mstore(add(memPtr, 32), \"verflowing votes\")\n\n    }\n\n    function abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xB SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54616C617865756D000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54616C617865756D000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54414C4158000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x109 SWAP3 SWAP2 SWAP1 PUSH3 0xD40 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x122 SWAP3 SWAP2 SWAP1 PUSH3 0xD40 JUMP JUMPDEST POP POP POP PUSH3 0x145 PUSH3 0x139 PUSH3 0x29F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2A7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F SWAP1 POP DUP3 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP2 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x1AE DUP2 DUP5 DUP5 PUSH3 0x36D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP PUSH3 0x248 PUSH3 0x20C PUSH3 0x29F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x21C PUSH3 0x3A9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x22A SWAP2 SWAP1 PUSH3 0xF8A JUMP JUMPDEST PUSH5 0x4E3B29200 PUSH3 0x23C SWAP2 SWAP1 PUSH3 0xFDB JUMP JUMPDEST PUSH3 0x3B2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x299 PUSH20 0x5D0EF486F7BAD84A71FA17D9627887ED82C46FF7 PUSH3 0x271 PUSH3 0x3A9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xFF AND PUSH5 0x2540BE400 PUSH3 0x286 SWAP2 SWAP1 PUSH3 0x104D JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND PUSH3 0x3B2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x14F3 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x38A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x3C9 DUP3 DUP3 PUSH3 0x3CD PUSH1 0x20 SHL PUSH3 0x153A OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x3E4 DUP3 DUP3 PUSH3 0x48B PUSH1 0x20 SHL PUSH3 0x15C7 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3F4 PUSH3 0x5F9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x422 PUSH3 0x61D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST GT ISZERO PUSH3 0x466 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x45D SWAP1 PUSH3 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x485 PUSH1 0xA PUSH3 0x627 PUSH1 0x20 SHL PUSH3 0x171E OR DUP4 PUSH3 0x63F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4F5 SWAP1 PUSH3 0x125A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x512 PUSH1 0x0 DUP4 DUP4 PUSH3 0x94C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x526 SWAP2 SWAP1 PUSH3 0x127C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x5D9 SWAP2 SWAP1 PUSH3 0x12D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x5F5 PUSH1 0x0 DUP4 DUP4 PUSH3 0x951 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0x637 SWAP2 SWAP1 PUSH3 0x127C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 EQ PUSH3 0x71A JUMPI PUSH3 0x675 DUP8 PUSH1 0x1 DUP5 PUSH3 0x669 SWAP2 SWAP1 PUSH3 0x12F6 JUMP JUMPDEST PUSH3 0x96E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH3 0x756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH3 0x789 DUP5 DUP7 DUP9 PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH3 0x7A5 JUMPI POP NUMBER DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH3 0x838 JUMPI PUSH3 0x7C1 DUP4 PUSH3 0x983 PUSH1 0x20 SHL PUSH3 0x1734 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x7E1 DUP9 PUSH1 0x1 DUP6 PUSH3 0x7D5 SWAP2 SWAP1 PUSH3 0x12F6 JUMP JUMPDEST PUSH3 0x96E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x942 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH3 0x85A NUMBER PUSH3 0x9F1 PUSH1 0x20 SHL PUSH3 0x179F OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x87B DUP7 PUSH3 0x983 PUSH1 0x20 SHL PUSH3 0x1734 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x969 DUP4 DUP4 DUP4 PUSH3 0xA47 PUSH1 0x20 SHL PUSH3 0x17F2 OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9E0 SWAP1 PUSH3 0x13A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA36 SWAP1 PUSH3 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xA5F DUP4 DUP4 DUP4 PUSH3 0xA97 PUSH1 0x20 SHL PUSH3 0x181D OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA92 PUSH3 0xA74 DUP5 PUSH3 0xA9C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA85 DUP5 PUSH3 0xA9C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH3 0xB05 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0xB42 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH3 0xD23 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xC35 JUMPI PUSH1 0x0 DUP1 PUSH3 0xBDC PUSH1 0x9 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0xD28 PUSH1 0x20 SHL PUSH3 0x1822 OR DUP6 PUSH3 0x63F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0xC2A SWAP3 SWAP2 SWAP1 PUSH3 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xD22 JUMPI PUSH1 0x0 DUP1 PUSH3 0xCC9 PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0x627 PUSH1 0x20 SHL PUSH3 0x171E OR DUP6 PUSH3 0x63F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0xD17 SWAP3 SWAP2 SWAP1 PUSH3 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0xD38 SWAP2 SWAP1 PUSH3 0x12F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xD4E SWAP1 PUSH3 0x14BD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xD72 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xDBE JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xD8D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xDBE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xDBE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xDBD JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xDA0 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xDCD SWAP2 SWAP1 PUSH3 0xDD1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xDEC JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0xDD2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0xE7E JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0xE56 JUMPI PUSH3 0xE55 PUSH3 0xDF0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0xE66 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0xE76 DUP6 PUSH3 0xE1F JUMP JUMPDEST SWAP5 POP PUSH3 0xE36 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0xE99 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xF6C JUMP JUMPDEST DUP2 PUSH3 0xEA9 JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0xF6C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0xEC2 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0xECD JUMPI PUSH3 0xF03 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xF6C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xEE2 JUMPI PUSH3 0xEE1 PUSH3 0xDF0 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xEFC JUMPI PUSH3 0xEFB PUSH3 0xDF0 JUMP JUMPDEST JUMPDEST POP PUSH3 0xF6C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xF3D JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xF37 JUMPI PUSH3 0xF36 PUSH3 0xDF0 JUMP JUMPDEST JUMPDEST PUSH3 0xF6C JUMP JUMPDEST PUSH3 0xF4C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0xE2C JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xF66 JUMPI PUSH3 0xF65 PUSH3 0xDF0 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF97 DUP3 PUSH3 0xF73 JUMP JUMPDEST SWAP2 POP PUSH3 0xFA4 DUP4 PUSH3 0xF7D JUMP JUMPDEST SWAP3 POP PUSH3 0xFD3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0xE87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFE8 DUP3 PUSH3 0xF73 JUMP JUMPDEST SWAP2 POP PUSH3 0xFF5 DUP4 PUSH3 0xF73 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x1031 JUMPI PUSH3 0x1030 PUSH3 0xDF0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x105A DUP3 PUSH3 0x103C JUMP JUMPDEST SWAP2 POP PUSH3 0x1067 DUP4 PUSH3 0x103C JUMP JUMPDEST SWAP3 POP DUP2 PUSH5 0xFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x1088 JUMPI PUSH3 0x1087 PUSH3 0xDF0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x10A8 DUP2 PUSH3 0x1093 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x10B9 DUP2 PUSH3 0xF73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10EC DUP3 PUSH3 0x10BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x10FE DUP2 PUSH3 0x10DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x111B PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x109D JUMP JUMPDEST PUSH3 0x112A PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x109D JUMP JUMPDEST PUSH3 0x1139 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x109D JUMP JUMPDEST PUSH3 0x1148 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x10AE JUMP JUMPDEST PUSH3 0x1157 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x10F3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x11D0 PUSH1 0x30 DUP4 PUSH3 0x1161 JUMP JUMPDEST SWAP2 POP PUSH3 0x11DD DUP3 PUSH3 0x1172 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1203 DUP2 PUSH3 0x11C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1242 PUSH1 0x1F DUP4 PUSH3 0x1161 JUMP JUMPDEST SWAP2 POP PUSH3 0x124F DUP3 PUSH3 0x120A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1275 DUP2 PUSH3 0x1233 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1289 DUP3 PUSH3 0xF73 JUMP JUMPDEST SWAP2 POP PUSH3 0x1296 DUP4 PUSH3 0xF73 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH3 0x12CE JUMPI PUSH3 0x12CD PUSH3 0xDF0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x12F0 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x10AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1303 DUP3 PUSH3 0xF73 JUMP JUMPDEST SWAP2 POP PUSH3 0x1310 DUP4 PUSH3 0xF73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH3 0x1326 JUMPI PUSH3 0x1325 PUSH3 0xDF0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138F PUSH1 0x27 DUP4 PUSH3 0x1161 JUMP JUMPDEST SWAP2 POP PUSH3 0x139C DUP3 PUSH3 0x1331 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x13C2 DUP2 PUSH3 0x1380 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1427 PUSH1 0x26 DUP4 PUSH3 0x1161 JUMP JUMPDEST SWAP2 POP PUSH3 0x1434 DUP3 PUSH3 0x13C9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x145A DUP2 PUSH3 0x1418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x1478 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x10AE JUMP JUMPDEST PUSH3 0x1487 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x10AE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x14D6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x14ED JUMPI PUSH3 0x14EC PUSH3 0x148E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x4BAA PUSH3 0x1543 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1B55 ADD MSTORE PUSH1 0x0 PUSH2 0x1B97 ADD MSTORE PUSH1 0x0 PUSH2 0x1B76 ADD MSTORE PUSH1 0x0 PUSH2 0x1AAB ADD MSTORE PUSH1 0x0 PUSH2 0x1B01 ADD MSTORE PUSH1 0x0 PUSH2 0x1B2A ADD MSTORE PUSH2 0x4BAA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x746 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x76F JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x7AC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7E9 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6E0 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x71D JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5D3 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x63B JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x56D JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x68742DA6 EQ PUSH2 0x4B3 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x3E45C8AF EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3FB JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x32D JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x283 JUMPI PUSH2 0x1EE JUMP JUMPDEST CALLDATASIZE PUSH2 0x1EE JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x205 PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x3297 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x33AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x33F2 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x33AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x908 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x3461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x33AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x34B0 JUMP JUMPDEST PUSH2 0xAC7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x422 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x34B0 JUMP JUMPDEST PUSH2 0xB26 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x474 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x34DD JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x3519 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x34DD JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x34DD JUMP JUMPDEST PUSH2 0xBB7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x503 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x34DD JUMP JUMPDEST PUSH2 0xC52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x3553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x540 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x34DD JUMP JUMPDEST PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56B PUSH2 0xCEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x594 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58F SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0xD02 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0x34DD JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E8 PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x3519 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x625 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x620 SWAP2 SWAP1 PUSH2 0x34B0 JUMP JUMPDEST PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x632 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x650 PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x3297 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x34DD JUMP JUMPDEST PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x33AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x707 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x702 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0x100C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x33AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x744 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x35C6 JUMP JUMPDEST PUSH2 0x10D9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x768 SWAP2 SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH2 0x11DD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x796 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x791 SWAP2 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x3761 JUMP JUMPDEST PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E0 SWAP2 SWAP1 PUSH2 0x3816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x810 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80B SWAP2 SWAP1 PUSH2 0x34DD JUMP JUMPDEST PUSH2 0x14B6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x821 SWAP1 PUSH2 0x3860 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x84D SWAP1 PUSH2 0x3860 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x89A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x86F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x89A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x87D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8AF PUSH2 0x1838 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BC DUP2 DUP6 DUP6 PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8E4 PUSH2 0x1838 JUMP JUMPDEST SWAP1 POP PUSH2 0x8F1 DUP6 DUP3 DUP6 PUSH2 0x1A0B JUMP JUMPDEST PUSH2 0x8FC DUP6 DUP6 DUP6 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SELFBALANCE PUSH2 0x917 SWAP2 SWAP1 PUSH2 0x38F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x45094071C4DAAF6A9A73B0A0F095A2B138BD8A3A PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x953 SWAP1 PUSH2 0x3952 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x990 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x995 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x9E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D7 SWAP1 PUSH2 0x39B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F7 PUSH2 0x1AA7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA07 PUSH2 0x1838 JUMP JUMPDEST SWAP1 POP PUSH2 0xA28 DUP2 DUP6 DUP6 PUSH2 0xA19 DUP6 DUP10 PUSH2 0x131F JUMP JUMPDEST PUSH2 0xA23 SWAP2 SWAP1 PUSH2 0x39D3 JUMP JUMPDEST PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6E SWAP1 PUSH2 0x3A75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xABF PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xACF PUSH2 0x1D12 JUMP JUMPDEST DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH32 0xB2442D3FF243B2C486384CA93DE99597291265A56CC11D3F99C27AB2A96C1F24 DUP2 PUSH1 0x40 MLOAD PUSH2 0xB05 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xB18 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0xB22 DUP3 DUP3 PUSH2 0x1D90 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB37 PUSH2 0xB31 PUSH2 0x1838 JUMP JUMPDEST DUP3 PUSH2 0x1D9E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB4 PUSH2 0xBAE PUSH2 0x1838 JUMP JUMPDEST DUP3 PUSH2 0x1DAC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC4F DUP2 PUSH20 0x45094071C4DAAF6A9A73B0A0F095A2B138BD8A3A DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x3519 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST PUSH2 0x1EC6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9F PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x179F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF6 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0xD00 PUSH1 0x0 PUSH2 0x1F4C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD14 DUP3 PUSH2 0xD0E PUSH2 0x1838 JUMP JUMPDEST DUP4 PUSH2 0x1A0B JUMP JUMPDEST PUSH2 0xD1E DUP3 DUP3 PUSH2 0x1D9E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6B PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2012 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xDE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD7 SWAP1 PUSH2 0x3A75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEB PUSH1 0xA DUP4 PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xE01 SWAP1 PUSH2 0x3860 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE2D SWAP1 PUSH2 0x3860 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE7A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE4F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE7A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE5D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0xF6C JUMPI PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP3 PUSH2 0xF20 SWAP2 SWAP1 PUSH2 0x3AD7 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xF31 JUMPI PUSH2 0xF30 PUSH2 0x3B0B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFA0 PUSH2 0x1838 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFAE DUP3 DUP7 PUSH2 0x131F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEA SWAP1 PUSH2 0x3BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1000 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1017 PUSH2 0x1838 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0xB SLOAD DUP6 PUSH2 0x102B SWAP2 SWAP1 PUSH2 0x3BCC JUMP JUMPDEST PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x38F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP6 PUSH2 0x1045 SWAP2 SWAP1 PUSH2 0x3AD7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x2 DUP5 PUSH2 0x1058 SWAP2 SWAP1 PUSH2 0x3BCC JUMP JUMPDEST PUSH2 0x1062 SWAP2 SWAP1 PUSH2 0x38F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x8 DUP6 PUSH2 0x1075 SWAP2 SWAP1 PUSH2 0x3BCC JUMP JUMPDEST PUSH2 0x107F SWAP2 SWAP1 PUSH2 0x38F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x10A0 DUP6 PUSH20 0x45094071C4DAAF6A9A73B0A0F095A2B138BD8A3A DUP5 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x10BF DUP6 PUSH20 0x1A2118E056D6AF192E233C2C9CFB34E067DED1F8 DUP4 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x10CA DUP6 DUP10 DUP6 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1113 SWAP1 PUSH2 0x3C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x117E PUSH2 0x1176 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x115B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x2020 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x203A JUMP JUMPDEST SWAP1 POP PUSH2 0x1189 DUP2 PUSH2 0x2065 JUMP JUMPDEST DUP7 EQ PUSH2 0x11CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C1 SWAP1 PUSH2 0x3D23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D4 DUP2 DUP9 PUSH2 0x1DAC JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1220 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1217 SWAP1 PUSH2 0x3D8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x124F DUP13 PUSH2 0x2065 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1265 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1288 DUP3 PUSH2 0x2020 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1298 DUP3 DUP8 DUP8 DUP8 PUSH2 0x203A JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1308 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FF SWAP1 PUSH2 0x3E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1313 DUP11 DUP11 DUP11 PUSH2 0x1840 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13AE PUSH2 0x31C0 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1405 JUMPI PUSH2 0x1404 PUSH2 0x3B0B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14BE PUSH2 0x1D12 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x152E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1525 SWAP1 PUSH2 0x3EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1537 DUP2 PUSH2 0x1F4C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1544 DUP3 DUP3 PUSH2 0x15C7 JUMP JUMPDEST PUSH2 0x154C PUSH2 0x20C3 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1572 PUSH2 0x8CF JUMP JUMPDEST GT ISZERO PUSH2 0x15B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15AA SWAP1 PUSH2 0x3F80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15C1 PUSH1 0xA PUSH2 0x171E DUP4 PUSH2 0x20E7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162E SWAP1 PUSH2 0x3FEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1643 PUSH1 0x0 DUP4 DUP4 PUSH2 0x23B6 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1655 SWAP2 SWAP1 PUSH2 0x39D3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1706 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x171A PUSH1 0x0 DUP4 DUP4 PUSH2 0x23BB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x172C SWAP2 SWAP1 PUSH2 0x39D3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1797 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x178E SWAP1 PUSH2 0x407E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x17EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E1 SWAP1 PUSH2 0x4110 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17FD DUP4 DUP4 DUP4 PUSH2 0x181D JUMP JUMPDEST PUSH2 0x1818 PUSH2 0x1809 DUP5 PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x1812 DUP5 PUSH2 0xB3A JUMP JUMPDEST DUP4 PUSH2 0x23CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1830 SWAP2 SWAP1 PUSH2 0x3AD7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A7 SWAP1 PUSH2 0x41A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1920 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1917 SWAP1 PUSH2 0x4234 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x19FE SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A17 DUP5 DUP5 PUSH2 0x131F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1A91 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1A83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7A SWAP1 PUSH2 0x42A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A90 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1840 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1AA2 DUP4 DUP4 DUP4 PUSH2 0x25C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1B23 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1B50 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1BBE JUMP JUMPDEST PUSH2 0x1BBB PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x283C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x1C37 JUMPI PUSH1 0x0 PUSH2 0x1BE5 DUP5 PUSH2 0x2876 JUMP JUMPDEST DUP5 PUSH2 0x1BF0 SWAP2 SWAP1 PUSH2 0x3AD7 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1BFD DUP9 DUP4 PUSH2 0x2970 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1C25 JUMPI DUP1 SWAP2 POP PUSH2 0x1C35 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1C32 SWAP2 SWAP1 PUSH2 0x39D3 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1C97 JUMPI PUSH1 0x0 PUSH2 0x1C4C DUP4 DUP4 PUSH2 0x2985 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1C59 DUP9 DUP4 PUSH2 0x2970 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1C81 JUMPI DUP1 SWAP2 POP PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1C8E SWAP2 SWAP1 PUSH2 0x39D3 JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x1CE6 JUMPI PUSH2 0x1CB5 DUP7 PUSH1 0x1 DUP4 PUSH2 0x1CB0 SWAP2 SWAP1 PUSH2 0x3AD7 JUMP JUMPDEST PUSH2 0x2970 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D1A PUSH2 0x1838 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D38 PUSH2 0xD72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D85 SWAP1 PUSH2 0x430C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1D9A DUP3 DUP3 PUSH2 0x153A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1DA8 DUP3 DUP3 PUSH2 0x29AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB7 DUP4 PUSH2 0xB3A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DC4 DUP5 PUSH2 0xCA6 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1EC0 DUP3 DUP5 DUP4 PUSH2 0x23CB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1F47 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1EE5 SWAP3 SWAP2 SWAP1 PUSH2 0x432C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x29C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2033 PUSH2 0x202D PUSH2 0x1AA7 JUMP JUMPDEST DUP4 PUSH2 0x2A90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x204B DUP8 DUP8 DUP8 DUP8 PUSH2 0x2AC3 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x2058 DUP2 PUSH2 0x2BA6 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x20B2 DUP2 PUSH2 0x2012 JUMP JUMPDEST SWAP2 POP PUSH2 0x20BD DUP2 PUSH2 0x2D14 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 EQ PUSH2 0x21B6 JUMPI PUSH2 0x2112 DUP8 PUSH1 0x1 DUP5 PUSH2 0x210D SWAP2 SWAP1 PUSH2 0x3AD7 JUMP JUMPDEST PUSH2 0x2970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH2 0x2227 DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x2242 JUMPI POP NUMBER DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x22BC JUMPI PUSH2 0x2250 DUP4 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x2266 DUP9 PUSH1 0x1 DUP6 PUSH2 0x2261 SWAP2 SWAP1 PUSH2 0x3AD7 JUMP JUMPDEST PUSH2 0x2970 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x23AC JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x22D1 NUMBER PUSH2 0x179F JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22E5 DUP7 PUSH2 0x1734 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x23C6 DUP4 DUP4 DUP4 PUSH2 0x17F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2407 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x25BF JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24E5 JUMPI PUSH1 0x0 DUP1 PUSH2 0x248E PUSH1 0x9 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1822 DUP6 PUSH2 0x20E7 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x24DA SWAP3 SWAP2 SWAP1 PUSH2 0x4355 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25BE JUMPI PUSH1 0x0 DUP1 PUSH2 0x2567 PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x171E DUP6 PUSH2 0x20E7 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x25B3 SWAP3 SWAP2 SWAP1 PUSH2 0x4355 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2634 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262B SWAP1 PUSH2 0x43F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x26A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269B SWAP1 PUSH2 0x4482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26AF DUP4 DUP4 DUP4 PUSH2 0x23B6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2735 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x272C SWAP1 PUSH2 0x4514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2823 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x2836 DUP5 DUP5 DUP5 PUSH2 0x23BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2857 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0x2889 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x296B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2896 DUP5 PUSH2 0x2D2A JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28B0 JUMPI PUSH2 0x28AF PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28C9 JUMPI PUSH2 0x28C8 PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28E2 JUMPI PUSH2 0x28E1 PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28FB JUMPI PUSH2 0x28FA PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2914 JUMPI PUSH2 0x2913 PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x292D JUMPI PUSH2 0x292C PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2946 JUMPI PUSH2 0x2945 PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x2967 DUP2 DUP3 DUP6 DUP2 PUSH2 0x2961 JUMPI PUSH2 0x2960 PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DIV PUSH2 0x2E0B JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x2996 SWAP2 SWAP1 PUSH2 0x38F0 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x29A3 SWAP2 SWAP1 PUSH2 0x39D3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29B5 DUP3 DUP3 PUSH2 0x2E24 JUMP JUMPDEST PUSH2 0x29C3 PUSH1 0xA PUSH2 0x1822 DUP4 PUSH2 0x20E7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A2B DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2FF2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2A8B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2A4B SWAP2 SWAP1 PUSH2 0x45B3 JUMP JUMPDEST PUSH2 0x2A8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A81 SWAP1 PUSH2 0x4652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2AA5 SWAP3 SWAP2 SWAP1 PUSH2 0x46EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2AFE JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x2B9D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2B23 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4721 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2B94 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x2B9D JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2BBA JUMPI PUSH2 0x2BB9 PUSH2 0x4766 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2BCD JUMPI PUSH2 0x2BCC PUSH2 0x4766 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2BD8 JUMPI PUSH2 0x2D11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2BEC JUMPI PUSH2 0x2BEB PUSH2 0x4766 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2BFF JUMPI PUSH2 0x2BFE PUSH2 0x4766 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2C40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C37 SWAP1 PUSH2 0x47E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2C54 JUMPI PUSH2 0x2C53 PUSH2 0x4766 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2C67 JUMPI PUSH2 0x2C66 PUSH2 0x4766 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2CA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C9F SWAP1 PUSH2 0x484D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2CBC JUMPI PUSH2 0x2CBB PUSH2 0x4766 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2CCF JUMPI PUSH2 0x2CCE PUSH2 0x4766 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2D10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D07 SWAP1 PUSH2 0x48DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2D4C JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2D67 JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2D82 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2D9D JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2DB8 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2DD3 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2DEE JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2E02 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2E1A JUMPI DUP2 PUSH2 0x2E1C JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2E94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E8B SWAP1 PUSH2 0x4971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2EA0 DUP3 PUSH1 0x0 DUP4 PUSH2 0x23B6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2F26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F1D SWAP1 PUSH2 0x4A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2FD9 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x2FED DUP4 PUSH1 0x0 DUP5 PUSH2 0x23BB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3001 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x300A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x304F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3046 SWAP1 PUSH2 0x4A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3078 SWAP2 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x30B5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x30BA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x30CB DUP8 DUP4 DUP4 DUP8 PUSH2 0x30D7 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x313A JUMPI PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x3132 JUMPI PUSH2 0x30F2 DUP6 PUSH2 0x314D JUMP JUMPDEST PUSH2 0x3131 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3128 SWAP1 PUSH2 0x4B54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x3145 JUMP JUMPDEST PUSH2 0x3144 DUP4 DUP4 PUSH2 0x3170 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x3183 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31B7 SWAP2 SWAP1 PUSH2 0x3297 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3238 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x321D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3247 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3269 DUP3 PUSH2 0x31FE JUMP JUMPDEST PUSH2 0x3273 DUP2 DUP6 PUSH2 0x3209 JUMP JUMPDEST SWAP4 POP PUSH2 0x3283 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x321A JUMP JUMPDEST PUSH2 0x328C DUP2 PUSH2 0x324D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32B1 DUP2 DUP5 PUSH2 0x325E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E9 DUP3 PUSH2 0x32BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32F9 DUP2 PUSH2 0x32DE JUMP JUMPDEST DUP2 EQ PUSH2 0x3304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3316 DUP2 PUSH2 0x32F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x332F DUP2 PUSH2 0x331C JUMP JUMPDEST DUP2 EQ PUSH2 0x333A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x334C DUP2 PUSH2 0x3326 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3369 JUMPI PUSH2 0x3368 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3377 DUP6 DUP3 DUP7 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3388 DUP6 DUP3 DUP7 ADD PUSH2 0x333D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33A7 DUP2 PUSH2 0x3392 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x339E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33D1 DUP2 PUSH2 0x331C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x340B JUMPI PUSH2 0x340A PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3419 DUP7 DUP3 DUP8 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x342A DUP7 DUP3 DUP8 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x343B DUP7 DUP3 DUP8 ADD PUSH2 0x333D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x345B DUP2 PUSH2 0x3445 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3476 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3452 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x348F DUP2 PUSH2 0x347C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34AA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3486 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34C6 JUMPI PUSH2 0x34C5 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34D4 DUP5 DUP3 DUP6 ADD PUSH2 0x333D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34F3 JUMPI PUSH2 0x34F2 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3501 DUP5 DUP3 DUP6 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3513 DUP2 PUSH2 0x32DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x352E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x350A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x354D DUP2 PUSH2 0x3534 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3568 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3544 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3577 DUP2 PUSH2 0x3445 JUMP JUMPDEST DUP2 EQ PUSH2 0x3582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3594 DUP2 PUSH2 0x356E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35A3 DUP2 PUSH2 0x347C JUMP JUMPDEST DUP2 EQ PUSH2 0x35AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x35C0 DUP2 PUSH2 0x359A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x35E3 JUMPI PUSH2 0x35E2 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35F1 DUP10 DUP3 DUP11 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x3602 DUP10 DUP3 DUP11 ADD PUSH2 0x333D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x3613 DUP10 DUP3 DUP11 ADD PUSH2 0x333D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x3624 DUP10 DUP3 DUP11 ADD PUSH2 0x3585 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3635 DUP10 DUP3 DUP11 ADD PUSH2 0x35B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x3646 DUP10 DUP3 DUP11 ADD PUSH2 0x35B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3672 JUMPI PUSH2 0x3671 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3680 DUP11 DUP3 DUP12 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x3691 DUP11 DUP3 DUP12 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x36A2 DUP11 DUP3 DUP12 ADD PUSH2 0x333D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x36B3 DUP11 DUP3 DUP12 ADD PUSH2 0x333D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x36C4 DUP11 DUP3 DUP12 ADD PUSH2 0x3585 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x36D5 DUP11 DUP3 DUP12 ADD PUSH2 0x35B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x36E6 DUP11 DUP3 DUP12 ADD PUSH2 0x35B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x370C JUMPI PUSH2 0x370B PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x371A DUP6 DUP3 DUP7 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x372B DUP6 DUP3 DUP7 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x373E DUP2 PUSH2 0x3534 JUMP JUMPDEST DUP2 EQ PUSH2 0x3749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x375B DUP2 PUSH2 0x3735 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3778 JUMPI PUSH2 0x3777 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3786 DUP6 DUP3 DUP7 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3797 DUP6 DUP3 DUP7 ADD PUSH2 0x374C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x37AA DUP2 PUSH2 0x3534 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37E1 DUP2 PUSH2 0x37B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x37FD PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x37A1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3810 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x37D8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x382B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3878 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x388C JUMPI PUSH2 0x388B PUSH2 0x3831 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38FB DUP3 PUSH2 0x331C JUMP JUMPDEST SWAP2 POP PUSH2 0x3906 DUP4 PUSH2 0x331C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3916 JUMPI PUSH2 0x3915 PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x393C PUSH1 0x0 DUP4 PUSH2 0x3921 JUMP JUMPDEST SWAP2 POP PUSH2 0x3947 DUP3 PUSH2 0x392C JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x395D DUP3 PUSH2 0x392F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64204574686572000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x399D PUSH1 0x14 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x39A8 DUP3 PUSH2 0x3967 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39CC DUP2 PUSH2 0x3990 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39DE DUP3 PUSH2 0x331C JUMP JUMPDEST SWAP2 POP PUSH2 0x39E9 DUP4 PUSH2 0x331C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3A1E JUMPI PUSH2 0x3A1D PUSH2 0x38C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A5F PUSH1 0x1F DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A6A DUP3 PUSH2 0x3A29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A8E DUP2 PUSH2 0x3A52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3AA4 DUP2 PUSH2 0x3326 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AC0 JUMPI PUSH2 0x3ABF PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3ACE DUP5 DUP3 DUP6 ADD PUSH2 0x3A95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE2 DUP3 PUSH2 0x331C JUMP JUMPDEST SWAP2 POP PUSH2 0x3AED DUP4 PUSH2 0x331C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3B00 JUMPI PUSH2 0x3AFF PUSH2 0x38C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B96 PUSH1 0x25 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BA1 DUP3 PUSH2 0x3B3A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BC5 DUP2 PUSH2 0x3B89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BD7 DUP3 PUSH2 0x331C JUMP JUMPDEST SWAP2 POP PUSH2 0x3BE2 DUP4 PUSH2 0x331C JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3C1B JUMPI PUSH2 0x3C1A PUSH2 0x38C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5C PUSH1 0x1D DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C67 DUP3 PUSH2 0x3C26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C8B DUP2 PUSH2 0x3C4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3CA7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x3CB4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x350A JUMP JUMPDEST PUSH2 0x3CC1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x33C8 JUMP JUMPDEST PUSH2 0x3CCE PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x33C8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D0D PUSH1 0x19 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D18 DUP3 PUSH2 0x3CD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D3C DUP2 PUSH2 0x3D00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D79 PUSH1 0x1D DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D84 DUP3 PUSH2 0x3D43 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DA8 DUP2 PUSH2 0x3D6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3DC4 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x3DD1 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x350A JUMP JUMPDEST PUSH2 0x3DDE PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x350A JUMP JUMPDEST PUSH2 0x3DEB PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x33C8 JUMP JUMPDEST PUSH2 0x3DF8 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x33C8 JUMP JUMPDEST PUSH2 0x3E05 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x33C8 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E46 PUSH1 0x1E DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E51 DUP3 PUSH2 0x3E10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E75 DUP2 PUSH2 0x3E39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED8 PUSH1 0x26 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EE3 DUP3 PUSH2 0x3E7C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F07 DUP2 PUSH2 0x3ECB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F6A PUSH1 0x30 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F75 DUP3 PUSH2 0x3F0E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F99 DUP2 PUSH2 0x3F5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FD6 PUSH1 0x1F DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FE1 DUP3 PUSH2 0x3FA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4005 DUP2 PUSH2 0x3FC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4068 PUSH1 0x27 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4073 DUP3 PUSH2 0x400C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4097 DUP2 PUSH2 0x405B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40FA PUSH1 0x26 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4105 DUP3 PUSH2 0x409E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4129 DUP2 PUSH2 0x40ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x418C PUSH1 0x24 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4197 DUP3 PUSH2 0x4130 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x41BB DUP2 PUSH2 0x417F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x421E PUSH1 0x22 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4229 DUP3 PUSH2 0x41C2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x424D DUP2 PUSH2 0x4211 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x428A PUSH1 0x1D DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4295 DUP3 PUSH2 0x4254 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42B9 DUP2 PUSH2 0x427D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F6 PUSH1 0x20 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4301 DUP3 PUSH2 0x42C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4325 DUP2 PUSH2 0x42E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4341 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x350A JUMP JUMPDEST PUSH2 0x434E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x33C8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x436A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x33C8 JUMP JUMPDEST PUSH2 0x4377 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x33C8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43DA PUSH1 0x25 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x43E5 DUP3 PUSH2 0x437E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4409 DUP2 PUSH2 0x43CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x446C PUSH1 0x23 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4477 DUP3 PUSH2 0x4410 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x449B DUP2 PUSH2 0x445F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44FE PUSH1 0x26 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4509 DUP3 PUSH2 0x44A2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x452D DUP2 PUSH2 0x44F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4549 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x4556 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x4563 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x4570 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x33C8 JUMP JUMPDEST PUSH2 0x457D PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x350A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4590 DUP2 PUSH2 0x3392 JUMP JUMPDEST DUP2 EQ PUSH2 0x459B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x45AD DUP2 PUSH2 0x4587 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45C9 JUMPI PUSH2 0x45C8 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x45D7 DUP5 DUP3 DUP6 ADD PUSH2 0x459E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x463C PUSH1 0x2A DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4647 DUP3 PUSH2 0x45E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x466B DUP2 PUSH2 0x462F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46B3 PUSH1 0x2 DUP4 PUSH2 0x4672 JUMP JUMPDEST SWAP2 POP PUSH2 0x46BE DUP3 PUSH2 0x467D JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x46E4 PUSH2 0x46DF DUP3 PUSH2 0x347C JUMP JUMPDEST PUSH2 0x46C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46F5 DUP3 PUSH2 0x46A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4701 DUP3 DUP6 PUSH2 0x46D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x4711 DUP3 DUP5 PUSH2 0x46D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4736 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x4743 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3452 JUMP JUMPDEST PUSH2 0x4750 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x475D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3486 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47CB PUSH1 0x18 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x47D6 DUP3 PUSH2 0x4795 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47FA DUP2 PUSH2 0x47BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4837 PUSH1 0x1F DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4842 DUP3 PUSH2 0x4801 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4866 DUP2 PUSH2 0x482A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48C9 PUSH1 0x22 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x48D4 DUP3 PUSH2 0x486D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48F8 DUP2 PUSH2 0x48BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495B PUSH1 0x21 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4966 DUP3 PUSH2 0x48FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x498A DUP2 PUSH2 0x494E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49ED PUSH1 0x22 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x49F8 DUP3 PUSH2 0x4991 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A1C DUP2 PUSH2 0x49E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A7F PUSH1 0x26 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A8A DUP3 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4AAE DUP2 PUSH2 0x4A72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4ACB DUP3 PUSH2 0x4AB5 JUMP JUMPDEST PUSH2 0x4AD5 DUP2 DUP6 PUSH2 0x3921 JUMP JUMPDEST SWAP4 POP PUSH2 0x4AE5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x321A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AFD DUP3 DUP5 PUSH2 0x4AC0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3E PUSH1 0x1D DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B49 DUP3 PUSH2 0x4B08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B6D DUP2 PUSH2 0x4B31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xFB SELFDESTRUCT 0xF6 0xB9 DIV 0xD5 0x2C 0xFB ADDMOD DUP9 CHAINID TIMESTAMP 0xB7 0x24 PC 0xB4 LOG2 ADD ADDMOD SWAP4 CALLER RETURN DUP6 0xF9 RETURN 0xE1 SWAP13 KECCAK256 0xBD 0xD1 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ","sourceMap":"538:2607:19:-:0;;;651:1;622:30;;659:244;;;;;;;;;;1829:52:7;;;;;;;;;;;;;;;;;1868:4;2464:602:15;;;;;;;;;;;;;;;;;1976:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2050:5;2042;:13;;;;;;;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;;;;;;;:::i;:::-;;1976:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;2529:18:15;2566:4;2550:22;;;;;;2529:43;;2582:21;2622:7;2606:25;;;;;;2582:49;;2641:16;2660:117;2641:136;;2802:10;2787:25;;;;;;2840:13;2822:31;;;;;;2882:13;2863:32;;;;;;2932:58;2954:8;2964:10;2976:13;2932:21;;;:58;;:::i;:::-;2905:85;;;;;;3023:4;3000:28;;;;;;;;;;3051:8;3038:21;;;;;;2519:547;;;2464:602;;1829:52:7;734:46:19::2;740:12;:10;;;:12;;:::i;:::-;769:10;:8;;;:10;;:::i;:::-;765:2;:14;;;;:::i;:::-;754:8;:25;;;;:::i;:::-;734:5;;;:46;;:::i;:::-;790:106;809:42;876:10;:8;;;:10;;:::i;:::-;865:21;;:8;:21;;;;:::i;:::-;790:106;;:5;;;:106;;:::i;:::-;538:2607:::0;;640:96:11;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;3466:257:15:-;3606:7;3653:8;3663;3673:11;3686:13;3709:4;3642:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3632:84;;;;;;3625:91;;3466:257;;;;;:::o;3091:91:2:-;3149:5;3173:2;3166:9;;3091:91;:::o;2847:140:19:-;2957:23;2969:2;2973:6;2957:11;;;;;:23;;:::i;:::-;2847:140;;:::o;6705:285:5:-;6789:28;6801:7;6810:6;6789:11;;;;;:28;;:::i;:::-;6852:12;:10;;;:12;;:::i;:::-;6835:29;;:13;:11;;;:13;;:::i;:::-;:29;;6827:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;6928:55;6945:23;6970:4;;;;;6976:6;6928:16;;;:55;;:::i;:::-;;;6705:285;;:::o;8567:535:2:-;8669:1;8650:21;;:7;:21;;;;8642:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8718:49;8747:1;8751:7;8760:6;8718:20;;;:49;;:::i;:::-;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;;;;;8968:6;8946:9;:18;8956:7;8946:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;9020:7;8999:37;;9016:1;8999:37;;;9029:6;8999:37;;;;;;:::i;:::-;;;;;;;;9047:48;9075:1;9079:7;9088:6;9047:19;;;:48;;:::i;:::-;8567:535;;:::o;6513:103:5:-;6566:7;6592:17;6585:24;;6513:103;:::o;3242:106:2:-;3303:7;3329:12;;3322:19;;3242:106;:::o;9575:96:5:-;9633:7;9663:1;9659;:5;;;;:::i;:::-;9652:12;;9575:96;;;;:::o;8853:716::-;9023:17;9042;9071:11;9085:5;:12;;;;9071:26;;9108:25;9143:1;9136:3;:8;:59;;9166:29;9180:5;9193:1;9187:3;:7;;;;:::i;:::-;9166:13;;;:29;;:::i;:::-;9136:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9147:16;;;;;;;;9158:1;9147:16;;;;;;9161:1;9147:16;;;;;9136:59;9108:87;;9218:7;:13;;;9206:25;;;;9253:20;9256:9;9267:5;9253:2;:20;;:::i;:::-;9241:32;;9294:1;9288:3;:7;:44;;;;;9320:12;9299:7;:17;;;:33;;;9288:44;9284:279;;;9386:29;9405:9;9386:18;;;;;:29;;:::i;:::-;9348;9362:5;9375:1;9369:3;:7;;;;:::i;:::-;9348:13;;;:29;;:::i;:::-;:35;;;:67;;;;;;;;;;;;;;;;;;9284:279;;;9446:5;9457:94;;;;;;;;9480:31;9498:12;9480:17;;;;;:31;;:::i;:::-;9457:94;;;;;;9520:29;9539:9;9520:18;;;;;:29;;:::i;:::-;9457:94;;;;;9446:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9284:279;9061:508;;8853:716;;;;;;:::o;12180:121:2:-;;;;:::o;2643:198:19:-;2791:43;2817:4;2823:2;2827:6;2791:25;;;;;:43;;:::i;:::-;2643:198;;;:::o;9784:239:5:-;9870:25;9940:10;9937:1;9930:21;10003:3;9996:4;9993:1;9983:18;9979:28;9964:43;;9784:239;;;;:::o;2836:192:17:-;2893:7;2929:17;2920:26;;:5;:26;;2912:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3015:5;3000:21;;2836:192;;;:::o;15264:187::-;15320:6;15355:16;15346:25;;:5;:25;;15338:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15438:5;15424:20;;15264:187;;;:::o;7409:254:5:-;7546:43;7572:4;7578:2;7582:6;7546:25;;;;;:43;;:::i;:::-;7600:56;7617:15;7627:4;7617:9;;;:15;;:::i;:::-;7634:13;7644:2;7634:9;;;:13;;:::i;:::-;7649:6;7600:16;;;:56;;:::i;:::-;7409:254;;;:::o;12889:120:2:-;;;;:::o;2218:126:5:-;2292:7;2318:10;:19;2329:7;2318:19;;;;;;;;;;;;;;;;;;;;;;;;;2311:26;;2218:126;;;:::o;8220:627::-;8347:3;8340:10;;:3;:10;;;;:24;;;;;8363:1;8354:6;:10;8340:24;8336:505;;;8399:1;8384:17;;:3;:17;;;8380:221;;8422:17;8441;8462:54;8479:12;:17;8492:3;8479:17;;;;;;;;;;;;;;;8498:9;;;;;8509:6;8462:16;;;:54;;:::i;:::-;8421:95;;;;8560:3;8539:47;;;8565:9;8576;8539:47;;;;;;;:::i;:::-;;;;;;;;8403:198;;8380:221;8634:1;8619:17;;:3;:17;;;8615:216;;8657:17;8676;8697:49;8714:12;:17;8727:3;8714:17;;;;;;;;;;;;;;;8733:4;;;;;8739:6;8697:16;;;:49;;:::i;:::-;8656:90;;;;8790:3;8769:47;;;8795:9;8806;8769:47;;;;;;;:::i;:::-;;;;;;;;8638:193;;8615:216;8336:505;8220:627;;;:::o;9677:101::-;9740:7;9770:1;9766;:5;;;;:::i;:::-;9759:12;;9677:101;;;;:::o;538:2607:19:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:180:20:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:102;235:8;282:5;279:1;275:13;254:34;;193:102;;;:::o;301:848::-;362:5;369:4;393:6;384:15;;417:5;408:14;;431:712;452:1;442:8;439:15;431:712;;;547:4;542:3;538:14;532:4;529:24;526:50;;;556:18;;:::i;:::-;526:50;606:1;596:8;592:16;589:451;;;1021:4;1014:5;1010:16;1001:25;;589:451;1071:4;1065;1061:15;1053:23;;1101:32;1124:8;1101:32;:::i;:::-;1089:44;;431:712;;;301:848;;;;;;;:::o;1155:1073::-;1209:5;1400:8;1390:40;;1421:1;1412:10;;1423:5;;1390:40;1449:4;1439:36;;1466:1;1457:10;;1468:5;;1439:36;1535:4;1583:1;1578:27;;;;1619:1;1614:191;;;;1528:277;;1578:27;1596:1;1587:10;;1598:5;;;1614:191;1659:3;1649:8;1646:17;1643:43;;;1666:18;;:::i;:::-;1643:43;1715:8;1712:1;1708:16;1699:25;;1750:3;1743:5;1740:14;1737:40;;;1757:18;;:::i;:::-;1737:40;1790:5;;;1528:277;;1914:2;1904:8;1901:16;1895:3;1889:4;1886:13;1882:36;1864:2;1854:8;1851:16;1846:2;1840:4;1837:12;1833:35;1817:111;1814:246;;;1970:8;1964:4;1960:19;1951:28;;2005:3;1998:5;1995:14;1992:40;;;2012:18;;:::i;:::-;1992:40;2045:5;;1814:246;2085:42;2123:3;2113:8;2107:4;2104:1;2085:42;:::i;:::-;2070:57;;;;2159:4;2154:3;2150:14;2143:5;2140:25;2137:51;;;2168:18;;:::i;:::-;2137:51;2217:4;2210:5;2206:16;2197:25;;1155:1073;;;;;;:::o;2234:77::-;2271:7;2300:5;2289:16;;2234:77;;;:::o;2317:86::-;2352:7;2392:4;2385:5;2381:16;2370:27;;2317:86;;;:::o;2409:281::-;2467:5;2491:23;2509:4;2491:23;:::i;:::-;2483:31;;2535:25;2551:8;2535:25;:::i;:::-;2523:37;;2579:104;2616:66;2606:8;2600:4;2579:104;:::i;:::-;2570:113;;2409:281;;;;:::o;2696:348::-;2736:7;2759:20;2777:1;2759:20;:::i;:::-;2754:25;;2793:20;2811:1;2793:20;:::i;:::-;2788:25;;2981:1;2913:66;2909:74;2906:1;2903:81;2898:1;2891:9;2884:17;2880:105;2877:131;;;2988:18;;:::i;:::-;2877:131;3036:1;3033;3029:9;3018:20;;2696:348;;;;:::o;3050:95::-;3086:7;3126:12;3119:5;3115:24;3104:35;;3050:95;;;:::o;3151:291::-;3190:7;3213:19;3230:1;3213:19;:::i;:::-;3208:24;;3246:19;3263:1;3246:19;:::i;:::-;3241:24;;3379:1;3365:12;3361:20;3358:1;3355:27;3350:1;3343:9;3336:17;3332:51;3329:77;;;3386:18;;:::i;:::-;3329:77;3434:1;3431;3427:9;3416:20;;3151:291;;;;:::o;3448:77::-;3485:7;3514:5;3503:16;;3448:77;;;:::o;3531:118::-;3618:24;3636:5;3618:24;:::i;:::-;3613:3;3606:37;3531:118;;:::o;3655:::-;3742:24;3760:5;3742:24;:::i;:::-;3737:3;3730:37;3655:118;;:::o;3779:126::-;3816:7;3856:42;3849:5;3845:54;3834:65;;3779:126;;;:::o;3911:96::-;3948:7;3977:24;3995:5;3977:24;:::i;:::-;3966:35;;3911:96;;;:::o;4013:118::-;4100:24;4118:5;4100:24;:::i;:::-;4095:3;4088:37;4013:118;;:::o;4137:664::-;4342:4;4380:3;4369:9;4365:19;4357:27;;4394:71;4462:1;4451:9;4447:17;4438:6;4394:71;:::i;:::-;4475:72;4543:2;4532:9;4528:18;4519:6;4475:72;:::i;:::-;4557;4625:2;4614:9;4610:18;4601:6;4557:72;:::i;:::-;4639;4707:2;4696:9;4692:18;4683:6;4639:72;:::i;:::-;4721:73;4789:3;4778:9;4774:19;4765:6;4721:73;:::i;:::-;4137:664;;;;;;;;:::o;4807:169::-;4891:11;4925:6;4920:3;4913:19;4965:4;4960:3;4956:14;4941:29;;4807:169;;;;:::o;4982:235::-;5122:34;5118:1;5110:6;5106:14;5099:58;5191:18;5186:2;5178:6;5174:15;5167:43;4982:235;:::o;5223:366::-;5365:3;5386:67;5450:2;5445:3;5386:67;:::i;:::-;5379:74;;5462:93;5551:3;5462:93;:::i;:::-;5580:2;5575:3;5571:12;5564:19;;5223:366;;;:::o;5595:419::-;5761:4;5799:2;5788:9;5784:18;5776:26;;5848:9;5842:4;5838:20;5834:1;5823:9;5819:17;5812:47;5876:131;6002:4;5876:131;:::i;:::-;5868:139;;5595:419;;;:::o;6020:181::-;6160:33;6156:1;6148:6;6144:14;6137:57;6020:181;:::o;6207:366::-;6349:3;6370:67;6434:2;6429:3;6370:67;:::i;:::-;6363:74;;6446:93;6535:3;6446:93;:::i;:::-;6564:2;6559:3;6555:12;6548:19;;6207:366;;;:::o;6579:419::-;6745:4;6783:2;6772:9;6768:18;6760:26;;6832:9;6826:4;6822:20;6818:1;6807:9;6803:17;6796:47;6860:131;6986:4;6860:131;:::i;:::-;6852:139;;6579:419;;;:::o;7004:305::-;7044:3;7063:20;7081:1;7063:20;:::i;:::-;7058:25;;7097:20;7115:1;7097:20;:::i;:::-;7092:25;;7251:1;7183:66;7179:74;7176:1;7173:81;7170:107;;;7257:18;;:::i;:::-;7170:107;7301:1;7298;7294:9;7287:16;;7004:305;;;;:::o;7315:222::-;7408:4;7446:2;7435:9;7431:18;7423:26;;7459:71;7527:1;7516:9;7512:17;7503:6;7459:71;:::i;:::-;7315:222;;;;:::o;7543:191::-;7583:4;7603:20;7621:1;7603:20;:::i;:::-;7598:25;;7637:20;7655:1;7637:20;:::i;:::-;7632:25;;7676:1;7673;7670:8;7667:34;;;7681:18;;:::i;:::-;7667:34;7726:1;7723;7719:9;7711:17;;7543:191;;;;:::o;7740:226::-;7880:34;7876:1;7868:6;7864:14;7857:58;7949:9;7944:2;7936:6;7932:15;7925:34;7740:226;:::o;7972:366::-;8114:3;8135:67;8199:2;8194:3;8135:67;:::i;:::-;8128:74;;8211:93;8300:3;8211:93;:::i;:::-;8329:2;8324:3;8320:12;8313:19;;7972:366;;;:::o;8344:419::-;8510:4;8548:2;8537:9;8533:18;8525:26;;8597:9;8591:4;8587:20;8583:1;8572:9;8568:17;8561:47;8625:131;8751:4;8625:131;:::i;:::-;8617:139;;8344:419;;;:::o;8769:225::-;8909:34;8905:1;8897:6;8893:14;8886:58;8978:8;8973:2;8965:6;8961:15;8954:33;8769:225;:::o;9000:366::-;9142:3;9163:67;9227:2;9222:3;9163:67;:::i;:::-;9156:74;;9239:93;9328:3;9239:93;:::i;:::-;9357:2;9352:3;9348:12;9341:19;;9000:366;;;:::o;9372:419::-;9538:4;9576:2;9565:9;9561:18;9553:26;;9625:9;9619:4;9615:20;9611:1;9600:9;9596:17;9589:47;9653:131;9779:4;9653:131;:::i;:::-;9645:139;;9372:419;;;:::o;9797:332::-;9918:4;9956:2;9945:9;9941:18;9933:26;;9969:71;10037:1;10026:9;10022:17;10013:6;9969:71;:::i;:::-;10050:72;10118:2;10107:9;10103:18;10094:6;10050:72;:::i;:::-;9797:332;;;;;:::o;10135:180::-;10183:77;10180:1;10173:88;10280:4;10277:1;10270:15;10304:4;10301:1;10294:15;10321:320;10365:6;10402:1;10396:4;10392:12;10382:22;;10449:1;10443:4;10439:12;10470:18;10460:81;;10526:4;10518:6;10514:17;10504:27;;10460:81;10588:2;10580:6;10577:14;10557:18;10554:38;10551:84;;;10607:18;;:::i;:::-;10551:84;10372:269;10321:320;;;:::o;538:2607:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1763":{"entryPoint":2541,"id":1763,"parameterSlots":0,"returnSlots":1},"@_5720":{"entryPoint":null,"id":5720,"parameterSlots":0,"returnSlots":0},"@_5724":{"entryPoint":null,"id":5724,"parameterSlots":0,"returnSlots":0},"@_add_1567":{"entryPoint":5918,"id":1567,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1343":{"entryPoint":6130,"id":1343,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_5930":{"entryPoint":9147,"id":5930,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_776":{"entryPoint":6173,"id":776,"parameterSlots":3,"returnSlots":0},"@_approve_711":{"entryPoint":6208,"id":711,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_765":{"entryPoint":9142,"id":765,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_3209":{"entryPoint":10300,"id":3209,"parameterSlots":3,"returnSlots":1},"@_burn_1313":{"entryPoint":10667,"id":1313,"parameterSlots":2,"returnSlots":0},"@_burn_5966":{"entryPoint":7582,"id":5966,"parameterSlots":2,"returnSlots":0},"@_burn_666":{"entryPoint":11812,"id":666,"parameterSlots":2,"returnSlots":0},"@_callOptionalReturn_2109":{"entryPoint":10697,"id":2109,"parameterSlots":2,"returnSlots":0},"@_checkOwner_54":{"entryPoint":7442,"id":54,"parameterSlots":0,"returnSlots":0},"@_checkpointsLookup_1171":{"entryPoint":7105,"id":1171,"parameterSlots":2,"returnSlots":1},"@_delegate_1382":{"entryPoint":7596,"id":1382,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_3182":{"entryPoint":6823,"id":3182,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_3225":{"entryPoint":8224,"id":3225,"parameterSlots":1,"returnSlots":1},"@_maxSupply_1258":{"entryPoint":8387,"id":1258,"parameterSlots":0,"returnSlots":1},"@_mint_1290":{"entryPoint":5434,"id":1290,"parameterSlots":2,"returnSlots":0},"@_mint_594":{"entryPoint":5575,"id":594,"parameterSlots":2,"returnSlots":0},"@_mint_5948":{"entryPoint":7568,"id":5948,"parameterSlots":2,"returnSlots":0},"@_moveVotingPower_1453":{"entryPoint":9163,"id":1453,"parameterSlots":3,"returnSlots":0},"@_msgSender_2452":{"entryPoint":6200,"id":2452,"parameterSlots":0,"returnSlots":1},"@_revert_2439":{"entryPoint":12656,"id":2439,"parameterSlots":2,"returnSlots":0},"@_spendAllowance_754":{"entryPoint":6667,"id":754,"parameterSlots":3,"returnSlots":0},"@_subtract_1581":{"entryPoint":6178,"id":1581,"parameterSlots":2,"returnSlots":1},"@_throwError_2765":{"entryPoint":11174,"id":2765,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":8012,"id":111,"parameterSlots":1,"returnSlots":0},"@_transfer_537":{"entryPoint":9668,"id":537,"parameterSlots":3,"returnSlots":0},"@_transfer_5909":{"entryPoint":6807,"id":5909,"parameterSlots":3,"returnSlots":0},"@_unsafeAccess_1595":{"entryPoint":10608,"id":1595,"parameterSlots":2,"returnSlots":1},"@_useNonce_1792":{"entryPoint":8293,"id":1792,"parameterSlots":1,"returnSlots":1},"@_writeCheckpoint_1553":{"entryPoint":8423,"id":1553,"parameterSlots":3,"returnSlots":2},"@allowance_332":{"entryPoint":4895,"id":332,"parameterSlots":2,"returnSlots":1},"@approve_357":{"entryPoint":2212,"id":357,"parameterSlots":2,"returnSlots":1},"@average_3292":{"entryPoint":10629,"id":3292,"parameterSlots":2,"returnSlots":1},"@balanceOf_289":{"entryPoint":3238,"id":289,"parameterSlots":1,"returnSlots":1},"@burnFrom_898":{"entryPoint":3330,"id":898,"parameterSlots":2,"returnSlots":0},"@burn_877":{"entryPoint":2854,"id":877,"parameterSlots":1,"returnSlots":0},"@changeTax_5806":{"entryPoint":2759,"id":5806,"parameterSlots":1,"returnSlots":0},"@checkpoints_953":{"entryPoint":5030,"id":953,"parameterSlots":2,"returnSlots":1},"@current_2480":{"entryPoint":8210,"id":2480,"parameterSlots":1,"returnSlots":1},"@decimals_265":{"entryPoint":2532,"id":265,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_460":{"entryPoint":3989,"id":460,"parameterSlots":2,"returnSlots":1},"@delegateBySig_1245":{"entryPoint":4313,"id":1245,"parameterSlots":6,"returnSlots":0},"@delegate_1185":{"entryPoint":2979,"id":1185,"parameterSlots":1,"returnSlots":0},"@delegates_984":{"entryPoint":2874,"id":984,"parameterSlots":1,"returnSlots":1},"@functionCallWithValue_2264":{"entryPoint":12298,"id":2264,"parameterSlots":4,"returnSlots":1},"@functionCall_2200":{"entryPoint":12274,"id":2200,"parameterSlots":3,"returnSlots":1},"@getBalance_5736":{"entryPoint":2247,"id":5736,"parameterSlots":0,"returnSlots":1},"@getPastTotalSupply_1065":{"entryPoint":3484,"id":1065,"parameterSlots":1,"returnSlots":1},"@getPastVotes_1042":{"entryPoint":2611,"id":1042,"parameterSlots":2,"returnSlots":1},"@getVotes_1015":{"entryPoint":3716,"id":1015,"parameterSlots":1,"returnSlots":1},"@increaseAllowance_419":{"entryPoint":2556,"id":419,"parameterSlots":2,"returnSlots":1},"@increment_2494":{"entryPoint":11540,"id":2494,"parameterSlots":1,"returnSlots":0},"@isContract_2128":{"entryPoint":12621,"id":2128,"parameterSlots":1,"returnSlots":1},"@log2_3763":{"entryPoint":11562,"id":3763,"parameterSlots":1,"returnSlots":1},"@min_3269":{"entryPoint":11787,"id":3269,"parameterSlots":2,"returnSlots":1},"@mint_5821":{"entryPoint":2832,"id":5821,"parameterSlots":2,"returnSlots":0},"@name_245":{"entryPoint":2066,"id":245,"parameterSlots":0,"returnSlots":1},"@nonces_1752":{"entryPoint":3362,"id":1752,"parameterSlots":1,"returnSlots":1},"@numCheckpoints_970":{"entryPoint":3154,"id":970,"parameterSlots":1,"returnSlots":1},"@owner_40":{"entryPoint":3442,"id":40,"parameterSlots":0,"returnSlots":1},"@permit_1736":{"entryPoint":4573,"id":1736,"parameterSlots":7,"returnSlots":0},"@recover_3012":{"entryPoint":8250,"id":3012,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":3310,"id":68,"parameterSlots":0,"returnSlots":0},"@safeTransfer_1861":{"entryPoint":7878,"id":1861,"parameterSlots":3,"returnSlots":0},"@sqrt_3595":{"entryPoint":10358,"id":3595,"parameterSlots":1,"returnSlots":1},"@symbol_255":{"entryPoint":3570,"id":255,"parameterSlots":0,"returnSlots":1},"@toTypedDataHash_3071":{"entryPoint":10896,"id":3071,"parameterSlots":2,"returnSlots":1},"@toUint224_4194":{"entryPoint":5940,"id":4194,"parameterSlots":1,"returnSlots":1},"@toUint32_4794":{"entryPoint":6047,"id":4794,"parameterSlots":1,"returnSlots":1},"@totalSupply_275":{"entryPoint":2255,"id":275,"parameterSlots":0,"returnSlots":1},"@transferFrom_390":{"entryPoint":2265,"id":390,"parameterSlots":3,"returnSlots":1},"@transferOwnership_91":{"entryPoint":5302,"id":91,"parameterSlots":1,"returnSlots":0},"@transfer_5890":{"entryPoint":4108,"id":5890,"parameterSlots":2,"returnSlots":1},"@tryRecover_2979":{"entryPoint":10947,"id":2979,"parameterSlots":4,"returnSlots":2},"@verifyCallResultFromTarget_2395":{"entryPoint":12503,"id":2395,"parameterSlots":4,"returnSlots":1},"@withdrawFunds_5766":{"entryPoint":2312,"id":5766,"parameterSlots":0,"returnSlots":0},"@withdrawFunds_5790":{"entryPoint":2999,"id":5790,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":13063,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":17822,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":13745,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":13117,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":14997,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":14156,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":13701,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":13533,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":14069,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":13298,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":13907,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":13138,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":13766,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":14177,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":17843,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":13488,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":15018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":13578,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":13214,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":13446,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":18131,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19136,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":12894,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack":{"entryPoint":18366,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":17503,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack":{"entryPoint":14930,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack":{"entryPoint":15439,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack":{"entryPoint":18912,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack":{"entryPoint":18474,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack":{"entryPoint":15616,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":16075,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":16913,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18086,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":17021,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack":{"entryPoint":15724,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":17649,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack":{"entryPoint":14736,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack":{"entryPoint":18620,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack":{"entryPoint":19058,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack":{"entryPoint":15929,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack":{"entryPoint":16221,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":17129,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack":{"entryPoint":16475,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack":{"entryPoint":18766,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":17357,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14639,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack":{"entryPoint":16621,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":16767,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":19249,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":17967,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":15241,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":16329,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Checkpoint_$916_memory_ptr_to_t_struct$_Checkpoint_$916_memory_ptr_fromStack":{"entryPoint":14311,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint224_to_t_uint224":{"entryPoint":14296,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":13256,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32":{"entryPoint":14241,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":13636,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":13394,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":19185,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":18154,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":14674,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":13593,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":17196,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":13229,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":13461,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15791,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15506,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":17716,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":18209,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12951,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18401,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17538,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14965,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15474,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18947,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18509,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15651,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16110,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16948,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17056,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15759,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17684,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14771,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18655,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19093,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15964,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16256,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17164,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16510,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18801,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17392,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16656,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16802,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19284,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18002,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15276,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16364,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Checkpoint_$916_memory_ptr__to_t_struct$_Checkpoint_$916_memory_ptr__fromStack_reversed":{"entryPoint":14358,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":13271,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":17237,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":13651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":13409,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":19125,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":12798,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14625,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":12809,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18034,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":14803,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":14576,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":15308,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":15063,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":13022,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":13202,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":13436,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":12990,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint224":{"entryPoint":14256,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":13084,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":13620,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":13381,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":12826,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":14432,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":18121,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":14529,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":14482,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":18278,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":14385,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":15115,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":12985,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":12877,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be":{"entryPoint":18325,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":17424,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d":{"entryPoint":14889,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257":{"entryPoint":15398,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd":{"entryPoint":18833,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77":{"entryPoint":18433,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872":{"entryPoint":15575,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":15996,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":16834,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541":{"entryPoint":18045,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":16980,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd":{"entryPoint":15683,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":17570,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb":{"entryPoint":14695,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd":{"entryPoint":18541,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":18979,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124":{"entryPoint":15888,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699":{"entryPoint":16142,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":17088,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79":{"entryPoint":16396,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f":{"entryPoint":18687,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":17278,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":14636,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19":{"entryPoint":16542,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":16688,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":19208,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":17888,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":15162,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":16288,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":13040,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":17799,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":13722,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":13094,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":14133,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":13678,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:49500:20","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:20","statements":[{"nodeType":"YulAssignment","src":"77:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:20"},"nodeType":"YulFunctionCall","src":"87:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:20","type":""}],"src":"7:99:20"},{"body":{"nodeType":"YulBlock","src":"208:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:20"},"nodeType":"YulFunctionCall","src":"218:19:20"},"nodeType":"YulExpressionStatement","src":"218:19:20"},{"nodeType":"YulAssignment","src":"246:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:20"},"nodeType":"YulFunctionCall","src":"261:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:20","type":""}],"src":"112:169:20"},{"body":{"nodeType":"YulBlock","src":"336:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"346:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"355:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"350:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"415:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"440:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"445:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"436:3:20"},"nodeType":"YulFunctionCall","src":"436:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"459:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"464:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"455:3:20"},"nodeType":"YulFunctionCall","src":"455:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:20"},"nodeType":"YulFunctionCall","src":"449:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"429:6:20"},"nodeType":"YulFunctionCall","src":"429:39:20"},"nodeType":"YulExpressionStatement","src":"429:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"376:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"373:2:20"},"nodeType":"YulFunctionCall","src":"373:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"387:19:20","statements":[{"nodeType":"YulAssignment","src":"389:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"398:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:20"},"nodeType":"YulFunctionCall","src":"394:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"369:3:20","statements":[]},"src":"365:113:20"},{"body":{"nodeType":"YulBlock","src":"512:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"562:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"567:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"558:3:20"},"nodeType":"YulFunctionCall","src":"558:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"576:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"551:6:20"},"nodeType":"YulFunctionCall","src":"551:27:20"},"nodeType":"YulExpressionStatement","src":"551:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"493:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"490:2:20"},"nodeType":"YulFunctionCall","src":"490:13:20"},"nodeType":"YulIf","src":"487:101:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"318:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"323:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"328:6:20","type":""}],"src":"287:307:20"},{"body":{"nodeType":"YulBlock","src":"648:54:20","statements":[{"nodeType":"YulAssignment","src":"658:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"683:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:20"},"nodeType":"YulFunctionCall","src":"672:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"692:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"688:3:20"},"nodeType":"YulFunctionCall","src":"688:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"668:3:20"},"nodeType":"YulFunctionCall","src":"668:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"658:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"631:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"641:6:20","type":""}],"src":"600:102:20"},{"body":{"nodeType":"YulBlock","src":"800:272:20","statements":[{"nodeType":"YulVariableDeclaration","src":"810:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"857:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"824:32:20"},"nodeType":"YulFunctionCall","src":"824:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"814:6:20","type":""}]},{"nodeType":"YulAssignment","src":"872:78:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"938:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"943:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"879:58:20"},"nodeType":"YulFunctionCall","src":"879:71:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"872:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"992:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"981:3:20"},"nodeType":"YulFunctionCall","src":"981:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"999:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"1004:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"959:21:20"},"nodeType":"YulFunctionCall","src":"959:52:20"},"nodeType":"YulExpressionStatement","src":"959:52:20"},{"nodeType":"YulAssignment","src":"1020:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1031:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1058:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1036:21:20"},"nodeType":"YulFunctionCall","src":"1036:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1027:3:20"},"nodeType":"YulFunctionCall","src":"1027:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1020:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"781:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"788:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"796:3:20","type":""}],"src":"708:364:20"},{"body":{"nodeType":"YulBlock","src":"1196:195:20","statements":[{"nodeType":"YulAssignment","src":"1206:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1218:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1229:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:20"},"nodeType":"YulFunctionCall","src":"1214:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1206:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1264:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1249:3:20"},"nodeType":"YulFunctionCall","src":"1249:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1272:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1278:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1268:3:20"},"nodeType":"YulFunctionCall","src":"1268:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1242:6:20"},"nodeType":"YulFunctionCall","src":"1242:47:20"},"nodeType":"YulExpressionStatement","src":"1242:47:20"},{"nodeType":"YulAssignment","src":"1298:86:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1370:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1306:63:20"},"nodeType":"YulFunctionCall","src":"1306:78:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1298:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1180:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1191:4:20","type":""}],"src":"1078:313:20"},{"body":{"nodeType":"YulBlock","src":"1437:35:20","statements":[{"nodeType":"YulAssignment","src":"1447:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1463:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1457:5:20"},"nodeType":"YulFunctionCall","src":"1457:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1447:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1430:6:20","type":""}],"src":"1397:75:20"},{"body":{"nodeType":"YulBlock","src":"1567:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1584:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1587:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1577:6:20"},"nodeType":"YulFunctionCall","src":"1577:12:20"},"nodeType":"YulExpressionStatement","src":"1577:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1478:117:20"},{"body":{"nodeType":"YulBlock","src":"1690:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1707:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1710:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1700:6:20"},"nodeType":"YulFunctionCall","src":"1700:12:20"},"nodeType":"YulExpressionStatement","src":"1700:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1601:117:20"},{"body":{"nodeType":"YulBlock","src":"1769:81:20","statements":[{"nodeType":"YulAssignment","src":"1779:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1794:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1801:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1790:3:20"},"nodeType":"YulFunctionCall","src":"1790:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1779:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1751:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1761:7:20","type":""}],"src":"1724:126:20"},{"body":{"nodeType":"YulBlock","src":"1901:51:20","statements":[{"nodeType":"YulAssignment","src":"1911:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1940:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1922:17:20"},"nodeType":"YulFunctionCall","src":"1922:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1911:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1893:7:20","type":""}],"src":"1856:96:20"},{"body":{"nodeType":"YulBlock","src":"2001:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"2058:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2067:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2070:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2060:6:20"},"nodeType":"YulFunctionCall","src":"2060:12:20"},"nodeType":"YulExpressionStatement","src":"2060:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2024:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2049:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2031:17:20"},"nodeType":"YulFunctionCall","src":"2031:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2021:2:20"},"nodeType":"YulFunctionCall","src":"2021:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2014:6:20"},"nodeType":"YulFunctionCall","src":"2014:43:20"},"nodeType":"YulIf","src":"2011:63:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1994:5:20","type":""}],"src":"1958:122:20"},{"body":{"nodeType":"YulBlock","src":"2138:87:20","statements":[{"nodeType":"YulAssignment","src":"2148:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2170:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2157:12:20"},"nodeType":"YulFunctionCall","src":"2157:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2148:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2213:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2186:26:20"},"nodeType":"YulFunctionCall","src":"2186:33:20"},"nodeType":"YulExpressionStatement","src":"2186:33:20"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2116:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2124:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2132:5:20","type":""}],"src":"2086:139:20"},{"body":{"nodeType":"YulBlock","src":"2276:32:20","statements":[{"nodeType":"YulAssignment","src":"2286:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"2297:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2286:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2258:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2268:7:20","type":""}],"src":"2231:77:20"},{"body":{"nodeType":"YulBlock","src":"2357:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"2414:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2423:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2426:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2416:6:20"},"nodeType":"YulFunctionCall","src":"2416:12:20"},"nodeType":"YulExpressionStatement","src":"2416:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2405:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2387:17:20"},"nodeType":"YulFunctionCall","src":"2387:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2377:2:20"},"nodeType":"YulFunctionCall","src":"2377:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2370:6:20"},"nodeType":"YulFunctionCall","src":"2370:43:20"},"nodeType":"YulIf","src":"2367:63:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2350:5:20","type":""}],"src":"2314:122:20"},{"body":{"nodeType":"YulBlock","src":"2494:87:20","statements":[{"nodeType":"YulAssignment","src":"2504:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2526:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2513:12:20"},"nodeType":"YulFunctionCall","src":"2513:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2504:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2569:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2542:26:20"},"nodeType":"YulFunctionCall","src":"2542:33:20"},"nodeType":"YulExpressionStatement","src":"2542:33:20"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2472:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2480:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2488:5:20","type":""}],"src":"2442:139:20"},{"body":{"nodeType":"YulBlock","src":"2670:391:20","statements":[{"body":{"nodeType":"YulBlock","src":"2716:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2718:77:20"},"nodeType":"YulFunctionCall","src":"2718:79:20"},"nodeType":"YulExpressionStatement","src":"2718:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2691:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2687:3:20"},"nodeType":"YulFunctionCall","src":"2687:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2712:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2683:3:20"},"nodeType":"YulFunctionCall","src":"2683:32:20"},"nodeType":"YulIf","src":"2680:119:20"},{"nodeType":"YulBlock","src":"2809:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2824:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2838:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2828:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:20"},"nodeType":"YulFunctionCall","src":"2884:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2863:20:20"},"nodeType":"YulFunctionCall","src":"2863:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2853:6:20"}]}]},{"nodeType":"YulBlock","src":"2936:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2951:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2965:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2955:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2981:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3016:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3027:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3012:3:20"},"nodeType":"YulFunctionCall","src":"3012:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3036:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2991:20:20"},"nodeType":"YulFunctionCall","src":"2991:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2981:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2632:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2643:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2655:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2663:6:20","type":""}],"src":"2587:474:20"},{"body":{"nodeType":"YulBlock","src":"3109:48:20","statements":[{"nodeType":"YulAssignment","src":"3119:32:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3144:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3137:6:20"},"nodeType":"YulFunctionCall","src":"3137:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3130:6:20"},"nodeType":"YulFunctionCall","src":"3130:21:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3119:7:20"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3101:7:20","type":""}],"src":"3067:90:20"},{"body":{"nodeType":"YulBlock","src":"3222:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3239:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3259:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3244:14:20"},"nodeType":"YulFunctionCall","src":"3244:21:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3232:6:20"},"nodeType":"YulFunctionCall","src":"3232:34:20"},"nodeType":"YulExpressionStatement","src":"3232:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3210:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3217:3:20","type":""}],"src":"3163:109:20"},{"body":{"nodeType":"YulBlock","src":"3370:118:20","statements":[{"nodeType":"YulAssignment","src":"3380:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3392:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3403:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3388:3:20"},"nodeType":"YulFunctionCall","src":"3388:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3380:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3454:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3478:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3463:3:20"},"nodeType":"YulFunctionCall","src":"3463:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3416:37:20"},"nodeType":"YulFunctionCall","src":"3416:65:20"},"nodeType":"YulExpressionStatement","src":"3416:65:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3342:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3354:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3365:4:20","type":""}],"src":"3278:210:20"},{"body":{"nodeType":"YulBlock","src":"3559:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3576:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3599:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3581:17:20"},"nodeType":"YulFunctionCall","src":"3581:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3569:6:20"},"nodeType":"YulFunctionCall","src":"3569:37:20"},"nodeType":"YulExpressionStatement","src":"3569:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3547:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3554:3:20","type":""}],"src":"3494:118:20"},{"body":{"nodeType":"YulBlock","src":"3716:124:20","statements":[{"nodeType":"YulAssignment","src":"3726:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3738:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3749:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3734:3:20"},"nodeType":"YulFunctionCall","src":"3734:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3726:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3806:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3819:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3830:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3815:3:20"},"nodeType":"YulFunctionCall","src":"3815:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3762:43:20"},"nodeType":"YulFunctionCall","src":"3762:71:20"},"nodeType":"YulExpressionStatement","src":"3762:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3688:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3700:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3711:4:20","type":""}],"src":"3618:222:20"},{"body":{"nodeType":"YulBlock","src":"3946:519:20","statements":[{"body":{"nodeType":"YulBlock","src":"3992:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3994:77:20"},"nodeType":"YulFunctionCall","src":"3994:79:20"},"nodeType":"YulExpressionStatement","src":"3994:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3967:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3976:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3963:3:20"},"nodeType":"YulFunctionCall","src":"3963:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3988:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3959:3:20"},"nodeType":"YulFunctionCall","src":"3959:32:20"},"nodeType":"YulIf","src":"3956:119:20"},{"nodeType":"YulBlock","src":"4085:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4100:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4114:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4104:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4129:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4164:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4175:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4160:3:20"},"nodeType":"YulFunctionCall","src":"4160:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4184:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4139:20:20"},"nodeType":"YulFunctionCall","src":"4139:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4129:6:20"}]}]},{"nodeType":"YulBlock","src":"4212:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4227:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4241:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4231:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4257:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4303:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:20"},"nodeType":"YulFunctionCall","src":"4288:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4312:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4267:20:20"},"nodeType":"YulFunctionCall","src":"4267:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4257:6:20"}]}]},{"nodeType":"YulBlock","src":"4340:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4355:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4369:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4359:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4385:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4420:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4431:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4416:3:20"},"nodeType":"YulFunctionCall","src":"4416:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4440:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4395:20:20"},"nodeType":"YulFunctionCall","src":"4395:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4385:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3911:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3923:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3931:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3939:6:20","type":""}],"src":"3846:619:20"},{"body":{"nodeType":"YulBlock","src":"4514:43:20","statements":[{"nodeType":"YulAssignment","src":"4524:27:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4539:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"4546:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4535:3:20"},"nodeType":"YulFunctionCall","src":"4535:16:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4524:7:20"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4496:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4506:7:20","type":""}],"src":"4471:86:20"},{"body":{"nodeType":"YulBlock","src":"4624:51:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4641:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4662:5:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4646:15:20"},"nodeType":"YulFunctionCall","src":"4646:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4634:6:20"},"nodeType":"YulFunctionCall","src":"4634:35:20"},"nodeType":"YulExpressionStatement","src":"4634:35:20"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4612:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4619:3:20","type":""}],"src":"4563:112:20"},{"body":{"nodeType":"YulBlock","src":"4775:120:20","statements":[{"nodeType":"YulAssignment","src":"4785:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4808:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:20"},"nodeType":"YulFunctionCall","src":"4793:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4785:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4861:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4874:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4885:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:20"},"nodeType":"YulFunctionCall","src":"4870:17:20"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4821:39:20"},"nodeType":"YulFunctionCall","src":"4821:67:20"},"nodeType":"YulExpressionStatement","src":"4821:67:20"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4747:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4759:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4770:4:20","type":""}],"src":"4681:214:20"},{"body":{"nodeType":"YulBlock","src":"4946:32:20","statements":[{"nodeType":"YulAssignment","src":"4956:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"4967:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4956:7:20"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4928:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4938:7:20","type":""}],"src":"4901:77:20"},{"body":{"nodeType":"YulBlock","src":"5049:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5066:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5089:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5071:17:20"},"nodeType":"YulFunctionCall","src":"5071:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5059:6:20"},"nodeType":"YulFunctionCall","src":"5059:37:20"},"nodeType":"YulExpressionStatement","src":"5059:37:20"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5037:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5044:3:20","type":""}],"src":"4984:118:20"},{"body":{"nodeType":"YulBlock","src":"5206:124:20","statements":[{"nodeType":"YulAssignment","src":"5216:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5228:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5239:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5224:3:20"},"nodeType":"YulFunctionCall","src":"5224:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5216:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5296:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5309:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5320:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5305:3:20"},"nodeType":"YulFunctionCall","src":"5305:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5252:43:20"},"nodeType":"YulFunctionCall","src":"5252:71:20"},"nodeType":"YulExpressionStatement","src":"5252:71:20"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5178:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5190:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5201:4:20","type":""}],"src":"5108:222:20"},{"body":{"nodeType":"YulBlock","src":"5402:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"5448:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5450:77:20"},"nodeType":"YulFunctionCall","src":"5450:79:20"},"nodeType":"YulExpressionStatement","src":"5450:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5423:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5432:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5419:3:20"},"nodeType":"YulFunctionCall","src":"5419:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5444:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5415:3:20"},"nodeType":"YulFunctionCall","src":"5415:32:20"},"nodeType":"YulIf","src":"5412:119:20"},{"nodeType":"YulBlock","src":"5541:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5556:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5570:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5560:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5585:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5620:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5631:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5616:3:20"},"nodeType":"YulFunctionCall","src":"5616:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5640:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5595:20:20"},"nodeType":"YulFunctionCall","src":"5595:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5585:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5372:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5383:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5395:6:20","type":""}],"src":"5336:329:20"},{"body":{"nodeType":"YulBlock","src":"5737:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"5783:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5785:77:20"},"nodeType":"YulFunctionCall","src":"5785:79:20"},"nodeType":"YulExpressionStatement","src":"5785:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5758:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5767:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5754:3:20"},"nodeType":"YulFunctionCall","src":"5754:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5779:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5750:3:20"},"nodeType":"YulFunctionCall","src":"5750:32:20"},"nodeType":"YulIf","src":"5747:119:20"},{"nodeType":"YulBlock","src":"5876:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5891:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5905:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5895:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5920:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5955:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5966:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5951:3:20"},"nodeType":"YulFunctionCall","src":"5951:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5975:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5930:20:20"},"nodeType":"YulFunctionCall","src":"5930:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5920:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5707:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5718:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5730:6:20","type":""}],"src":"5671:329:20"},{"body":{"nodeType":"YulBlock","src":"6071:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6088:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6111:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6093:17:20"},"nodeType":"YulFunctionCall","src":"6093:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6081:6:20"},"nodeType":"YulFunctionCall","src":"6081:37:20"},"nodeType":"YulExpressionStatement","src":"6081:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6059:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6066:3:20","type":""}],"src":"6006:118:20"},{"body":{"nodeType":"YulBlock","src":"6228:124:20","statements":[{"nodeType":"YulAssignment","src":"6238:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6250:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6261:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6246:3:20"},"nodeType":"YulFunctionCall","src":"6246:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6238:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6318:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6331:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6342:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6327:3:20"},"nodeType":"YulFunctionCall","src":"6327:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6274:43:20"},"nodeType":"YulFunctionCall","src":"6274:71:20"},"nodeType":"YulExpressionStatement","src":"6274:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6200:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6212:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6223:4:20","type":""}],"src":"6130:222:20"},{"body":{"nodeType":"YulBlock","src":"6402:49:20","statements":[{"nodeType":"YulAssignment","src":"6412:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6427:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"6434:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6423:3:20"},"nodeType":"YulFunctionCall","src":"6423:22:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6412:7:20"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6384:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6394:7:20","type":""}],"src":"6358:93:20"},{"body":{"nodeType":"YulBlock","src":"6520:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6537:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6559:5:20"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"6542:16:20"},"nodeType":"YulFunctionCall","src":"6542:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6530:6:20"},"nodeType":"YulFunctionCall","src":"6530:36:20"},"nodeType":"YulExpressionStatement","src":"6530:36:20"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6508:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6515:3:20","type":""}],"src":"6457:115:20"},{"body":{"nodeType":"YulBlock","src":"6674:122:20","statements":[{"nodeType":"YulAssignment","src":"6684:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6696:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6707:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6692:3:20"},"nodeType":"YulFunctionCall","src":"6692:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6684:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6762:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6775:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6786:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6771:3:20"},"nodeType":"YulFunctionCall","src":"6771:17:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"6720:41:20"},"nodeType":"YulFunctionCall","src":"6720:69:20"},"nodeType":"YulExpressionStatement","src":"6720:69:20"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6646:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6658:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6669:4:20","type":""}],"src":"6578:218:20"},{"body":{"nodeType":"YulBlock","src":"6843:77:20","statements":[{"body":{"nodeType":"YulBlock","src":"6898:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6907:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6910:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6900:6:20"},"nodeType":"YulFunctionCall","src":"6900:12:20"},"nodeType":"YulExpressionStatement","src":"6900:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6866:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6889:5:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6873:15:20"},"nodeType":"YulFunctionCall","src":"6873:22:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6863:2:20"},"nodeType":"YulFunctionCall","src":"6863:33:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6856:6:20"},"nodeType":"YulFunctionCall","src":"6856:41:20"},"nodeType":"YulIf","src":"6853:61:20"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6836:5:20","type":""}],"src":"6802:118:20"},{"body":{"nodeType":"YulBlock","src":"6976:85:20","statements":[{"nodeType":"YulAssignment","src":"6986:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7008:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6995:12:20"},"nodeType":"YulFunctionCall","src":"6995:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6986:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7049:5:20"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"7024:24:20"},"nodeType":"YulFunctionCall","src":"7024:31:20"},"nodeType":"YulExpressionStatement","src":"7024:31:20"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6954:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"6962:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6970:5:20","type":""}],"src":"6926:135:20"},{"body":{"nodeType":"YulBlock","src":"7110:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"7167:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7176:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7179:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7169:6:20"},"nodeType":"YulFunctionCall","src":"7169:12:20"},"nodeType":"YulExpressionStatement","src":"7169:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7133:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7158:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"7140:17:20"},"nodeType":"YulFunctionCall","src":"7140:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7130:2:20"},"nodeType":"YulFunctionCall","src":"7130:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7123:6:20"},"nodeType":"YulFunctionCall","src":"7123:43:20"},"nodeType":"YulIf","src":"7120:63:20"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7103:5:20","type":""}],"src":"7067:122:20"},{"body":{"nodeType":"YulBlock","src":"7247:87:20","statements":[{"nodeType":"YulAssignment","src":"7257:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7279:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7266:12:20"},"nodeType":"YulFunctionCall","src":"7266:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7257:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7322:5:20"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"7295:26:20"},"nodeType":"YulFunctionCall","src":"7295:33:20"},"nodeType":"YulExpressionStatement","src":"7295:33:20"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7225:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"7233:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7241:5:20","type":""}],"src":"7195:139:20"},{"body":{"nodeType":"YulBlock","src":"7489:904:20","statements":[{"body":{"nodeType":"YulBlock","src":"7536:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7538:77:20"},"nodeType":"YulFunctionCall","src":"7538:79:20"},"nodeType":"YulExpressionStatement","src":"7538:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7510:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"7519:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7506:3:20"},"nodeType":"YulFunctionCall","src":"7506:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"7531:3:20","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7502:3:20"},"nodeType":"YulFunctionCall","src":"7502:33:20"},"nodeType":"YulIf","src":"7499:120:20"},{"nodeType":"YulBlock","src":"7629:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7644:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7658:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7648:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7673:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7708:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7719:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7704:3:20"},"nodeType":"YulFunctionCall","src":"7704:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7728:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7683:20:20"},"nodeType":"YulFunctionCall","src":"7683:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7673:6:20"}]}]},{"nodeType":"YulBlock","src":"7756:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7771:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7785:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7775:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7801:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7836:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7847:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7832:3:20"},"nodeType":"YulFunctionCall","src":"7832:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7856:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7811:20:20"},"nodeType":"YulFunctionCall","src":"7811:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7801:6:20"}]}]},{"nodeType":"YulBlock","src":"7884:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7899:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7913:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7903:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7929:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7964:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7975:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7960:3:20"},"nodeType":"YulFunctionCall","src":"7960:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7984:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7939:20:20"},"nodeType":"YulFunctionCall","src":"7939:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7929:6:20"}]}]},{"nodeType":"YulBlock","src":"8012:116:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8027:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"8041:2:20","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8031:6:20","type":""}]},{"nodeType":"YulAssignment","src":"8057:61:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8090:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"8101:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8086:3:20"},"nodeType":"YulFunctionCall","src":"8086:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8110:7:20"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"8067:18:20"},"nodeType":"YulFunctionCall","src":"8067:51:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8057:6:20"}]}]},{"nodeType":"YulBlock","src":"8138:119:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8153:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"8167:3:20","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8157:6:20","type":""}]},{"nodeType":"YulAssignment","src":"8184:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8219:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"8230:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8215:3:20"},"nodeType":"YulFunctionCall","src":"8215:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8239:7:20"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"8194:20:20"},"nodeType":"YulFunctionCall","src":"8194:53:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"8184:6:20"}]}]},{"nodeType":"YulBlock","src":"8267:119:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8282:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"8296:3:20","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8286:6:20","type":""}]},{"nodeType":"YulAssignment","src":"8313:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8348:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"8359:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8344:3:20"},"nodeType":"YulFunctionCall","src":"8344:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8368:7:20"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"8323:20:20"},"nodeType":"YulFunctionCall","src":"8323:53:20"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"8313:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7419:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7430:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7442:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7450:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7458:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7466:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7474:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"7482:6:20","type":""}],"src":"7340:1053:20"},{"body":{"nodeType":"YulBlock","src":"8565:1033:20","statements":[{"body":{"nodeType":"YulBlock","src":"8612:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8614:77:20"},"nodeType":"YulFunctionCall","src":"8614:79:20"},"nodeType":"YulExpressionStatement","src":"8614:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8586:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"8595:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8582:3:20"},"nodeType":"YulFunctionCall","src":"8582:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"8607:3:20","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8578:3:20"},"nodeType":"YulFunctionCall","src":"8578:33:20"},"nodeType":"YulIf","src":"8575:120:20"},{"nodeType":"YulBlock","src":"8705:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8720:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"8734:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8724:6:20","type":""}]},{"nodeType":"YulAssignment","src":"8749:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8784:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"8795:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8780:3:20"},"nodeType":"YulFunctionCall","src":"8780:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8804:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8759:20:20"},"nodeType":"YulFunctionCall","src":"8759:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8749:6:20"}]}]},{"nodeType":"YulBlock","src":"8832:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8847:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"8861:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8851:6:20","type":""}]},{"nodeType":"YulAssignment","src":"8877:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8912:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"8923:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8908:3:20"},"nodeType":"YulFunctionCall","src":"8908:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8932:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8887:20:20"},"nodeType":"YulFunctionCall","src":"8887:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8877:6:20"}]}]},{"nodeType":"YulBlock","src":"8960:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8975:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"8989:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8979:6:20","type":""}]},{"nodeType":"YulAssignment","src":"9005:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9040:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"9051:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9036:3:20"},"nodeType":"YulFunctionCall","src":"9036:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9060:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9015:20:20"},"nodeType":"YulFunctionCall","src":"9015:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9005:6:20"}]}]},{"nodeType":"YulBlock","src":"9088:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9103:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"9117:2:20","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9107:6:20","type":""}]},{"nodeType":"YulAssignment","src":"9133:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9168:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"9179:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9164:3:20"},"nodeType":"YulFunctionCall","src":"9164:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9188:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9143:20:20"},"nodeType":"YulFunctionCall","src":"9143:53:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9133:6:20"}]}]},{"nodeType":"YulBlock","src":"9216:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9231:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"9245:3:20","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9235:6:20","type":""}]},{"nodeType":"YulAssignment","src":"9262:61:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9295:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"9306:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9291:3:20"},"nodeType":"YulFunctionCall","src":"9291:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9315:7:20"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"9272:18:20"},"nodeType":"YulFunctionCall","src":"9272:51:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9262:6:20"}]}]},{"nodeType":"YulBlock","src":"9343:119:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9358:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"9372:3:20","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9362:6:20","type":""}]},{"nodeType":"YulAssignment","src":"9389:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9424:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"9435:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9420:3:20"},"nodeType":"YulFunctionCall","src":"9420:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9444:7:20"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"9399:20:20"},"nodeType":"YulFunctionCall","src":"9399:53:20"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"9389:6:20"}]}]},{"nodeType":"YulBlock","src":"9472:119:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9487:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"9501:3:20","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9491:6:20","type":""}]},{"nodeType":"YulAssignment","src":"9518:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9553:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"9564:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9549:3:20"},"nodeType":"YulFunctionCall","src":"9549:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9573:7:20"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"9528:20:20"},"nodeType":"YulFunctionCall","src":"9528:53:20"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"9518:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8487:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8498:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8510:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8518:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8526:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8534:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8542:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8550:6:20","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8558:6:20","type":""}],"src":"8399:1199:20"},{"body":{"nodeType":"YulBlock","src":"9687:391:20","statements":[{"body":{"nodeType":"YulBlock","src":"9733:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9735:77:20"},"nodeType":"YulFunctionCall","src":"9735:79:20"},"nodeType":"YulExpressionStatement","src":"9735:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9708:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"9717:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9704:3:20"},"nodeType":"YulFunctionCall","src":"9704:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"9729:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9700:3:20"},"nodeType":"YulFunctionCall","src":"9700:32:20"},"nodeType":"YulIf","src":"9697:119:20"},{"nodeType":"YulBlock","src":"9826:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9841:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"9855:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9845:6:20","type":""}]},{"nodeType":"YulAssignment","src":"9870:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9905:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"9916:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9901:3:20"},"nodeType":"YulFunctionCall","src":"9901:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9925:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9880:20:20"},"nodeType":"YulFunctionCall","src":"9880:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9870:6:20"}]}]},{"nodeType":"YulBlock","src":"9953:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9968:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"9982:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9972:6:20","type":""}]},{"nodeType":"YulAssignment","src":"9998:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10033:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"10044:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10029:3:20"},"nodeType":"YulFunctionCall","src":"10029:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10053:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10008:20:20"},"nodeType":"YulFunctionCall","src":"10008:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9998:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9649:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9660:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9672:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9680:6:20","type":""}],"src":"9604:474:20"},{"body":{"nodeType":"YulBlock","src":"10126:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"10182:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10191:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10194:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10184:6:20"},"nodeType":"YulFunctionCall","src":"10184:12:20"},"nodeType":"YulExpressionStatement","src":"10184:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10149:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10173:5:20"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"10156:16:20"},"nodeType":"YulFunctionCall","src":"10156:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10146:2:20"},"nodeType":"YulFunctionCall","src":"10146:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10139:6:20"},"nodeType":"YulFunctionCall","src":"10139:42:20"},"nodeType":"YulIf","src":"10136:62:20"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10119:5:20","type":""}],"src":"10084:120:20"},{"body":{"nodeType":"YulBlock","src":"10261:86:20","statements":[{"nodeType":"YulAssignment","src":"10271:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10293:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10280:12:20"},"nodeType":"YulFunctionCall","src":"10280:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10271:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10335:5:20"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"10309:25:20"},"nodeType":"YulFunctionCall","src":"10309:32:20"},"nodeType":"YulExpressionStatement","src":"10309:32:20"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10239:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"10247:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10255:5:20","type":""}],"src":"10210:137:20"},{"body":{"nodeType":"YulBlock","src":"10435:390:20","statements":[{"body":{"nodeType":"YulBlock","src":"10481:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10483:77:20"},"nodeType":"YulFunctionCall","src":"10483:79:20"},"nodeType":"YulExpressionStatement","src":"10483:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10456:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"10465:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10452:3:20"},"nodeType":"YulFunctionCall","src":"10452:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"10477:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10448:3:20"},"nodeType":"YulFunctionCall","src":"10448:32:20"},"nodeType":"YulIf","src":"10445:119:20"},{"nodeType":"YulBlock","src":"10574:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10589:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"10603:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10593:6:20","type":""}]},{"nodeType":"YulAssignment","src":"10618:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10653:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"10664:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10649:3:20"},"nodeType":"YulFunctionCall","src":"10649:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10673:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10628:20:20"},"nodeType":"YulFunctionCall","src":"10628:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10618:6:20"}]}]},{"nodeType":"YulBlock","src":"10701:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10716:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"10730:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10720:6:20","type":""}]},{"nodeType":"YulAssignment","src":"10746:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10780:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"10791:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10776:3:20"},"nodeType":"YulFunctionCall","src":"10776:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10800:7:20"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"10756:19:20"},"nodeType":"YulFunctionCall","src":"10756:52:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10746:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10397:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10408:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10420:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10428:6:20","type":""}],"src":"10353:472:20"},{"body":{"nodeType":"YulBlock","src":"10884:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10901:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10923:5:20"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"10906:16:20"},"nodeType":"YulFunctionCall","src":"10906:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10894:6:20"},"nodeType":"YulFunctionCall","src":"10894:36:20"},"nodeType":"YulExpressionStatement","src":"10894:36:20"}]},"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10872:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10879:3:20","type":""}],"src":"10831:105:20"},{"body":{"nodeType":"YulBlock","src":"10987:97:20","statements":[{"nodeType":"YulAssignment","src":"10997:81:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11012:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"11019:58:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11008:3:20"},"nodeType":"YulFunctionCall","src":"11008:70:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10997:7:20"}]}]},"name":"cleanup_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10969:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10979:7:20","type":""}],"src":"10942:142:20"},{"body":{"nodeType":"YulBlock","src":"11145:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11162:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11185:5:20"}],"functionName":{"name":"cleanup_t_uint224","nodeType":"YulIdentifier","src":"11167:17:20"},"nodeType":"YulFunctionCall","src":"11167:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11155:6:20"},"nodeType":"YulFunctionCall","src":"11155:37:20"},"nodeType":"YulExpressionStatement","src":"11155:37:20"}]},"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11133:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11140:3:20","type":""}],"src":"11090:108:20"},{"body":{"nodeType":"YulBlock","src":"11392:395:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11402:26:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11418:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11423:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11414:3:20"},"nodeType":"YulFunctionCall","src":"11414:14:20"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"11406:4:20","type":""}]},{"nodeType":"YulBlock","src":"11438:167:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11478:43:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11508:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"11515:4:20","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11504:3:20"},"nodeType":"YulFunctionCall","src":"11504:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11498:5:20"},"nodeType":"YulFunctionCall","src":"11498:23:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11482:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11566:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11584:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11589:4:20","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11580:3:20"},"nodeType":"YulFunctionCall","src":"11580:14:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"11534:31:20"},"nodeType":"YulFunctionCall","src":"11534:61:20"},"nodeType":"YulExpressionStatement","src":"11534:61:20"}]},{"nodeType":"YulBlock","src":"11615:165:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11651:43:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11681:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"11688:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11677:3:20"},"nodeType":"YulFunctionCall","src":"11677:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11671:5:20"},"nodeType":"YulFunctionCall","src":"11671:23:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11655:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11741:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11759:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11764:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11755:3:20"},"nodeType":"YulFunctionCall","src":"11755:14:20"}],"functionName":{"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulIdentifier","src":"11707:33:20"},"nodeType":"YulFunctionCall","src":"11707:63:20"},"nodeType":"YulExpressionStatement","src":"11707:63:20"}]}]},"name":"abi_encode_t_struct$_Checkpoint_$916_memory_ptr_to_t_struct$_Checkpoint_$916_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11379:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11386:3:20","type":""}],"src":"11272:515:20"},{"body":{"nodeType":"YulBlock","src":"11945:178:20","statements":[{"nodeType":"YulAssignment","src":"11955:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11967:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11978:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11963:3:20"},"nodeType":"YulFunctionCall","src":"11963:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11955:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12089:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12102:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12113:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12098:3:20"},"nodeType":"YulFunctionCall","src":"12098:17:20"}],"functionName":{"name":"abi_encode_t_struct$_Checkpoint_$916_memory_ptr_to_t_struct$_Checkpoint_$916_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11991:97:20"},"nodeType":"YulFunctionCall","src":"11991:125:20"},"nodeType":"YulExpressionStatement","src":"11991:125:20"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint_$916_memory_ptr__to_t_struct$_Checkpoint_$916_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11917:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11929:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11940:4:20","type":""}],"src":"11793:330:20"},{"body":{"nodeType":"YulBlock","src":"12157:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12174:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12177:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12167:6:20"},"nodeType":"YulFunctionCall","src":"12167:88:20"},"nodeType":"YulExpressionStatement","src":"12167:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12271:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12274:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12264:6:20"},"nodeType":"YulFunctionCall","src":"12264:15:20"},"nodeType":"YulExpressionStatement","src":"12264:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12295:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12298:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12288:6:20"},"nodeType":"YulFunctionCall","src":"12288:15:20"},"nodeType":"YulExpressionStatement","src":"12288:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12129:180:20"},{"body":{"nodeType":"YulBlock","src":"12366:269:20","statements":[{"nodeType":"YulAssignment","src":"12376:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12390:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"12396:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12386:3:20"},"nodeType":"YulFunctionCall","src":"12386:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12376:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"12407:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12437:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"12443:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12433:3:20"},"nodeType":"YulFunctionCall","src":"12433:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12411:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"12484:51:20","statements":[{"nodeType":"YulAssignment","src":"12498:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12512:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"12520:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12508:3:20"},"nodeType":"YulFunctionCall","src":"12508:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12498:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12464:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12457:6:20"},"nodeType":"YulFunctionCall","src":"12457:26:20"},"nodeType":"YulIf","src":"12454:81:20"},{"body":{"nodeType":"YulBlock","src":"12587:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"12601:16:20"},"nodeType":"YulFunctionCall","src":"12601:18:20"},"nodeType":"YulExpressionStatement","src":"12601:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12551:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12574:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"12582:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12571:2:20"},"nodeType":"YulFunctionCall","src":"12571:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12548:2:20"},"nodeType":"YulFunctionCall","src":"12548:38:20"},"nodeType":"YulIf","src":"12545:84:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12350:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12359:6:20","type":""}],"src":"12315:320:20"},{"body":{"nodeType":"YulBlock","src":"12669:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12686:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12689:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12679:6:20"},"nodeType":"YulFunctionCall","src":"12679:88:20"},"nodeType":"YulExpressionStatement","src":"12679:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12783:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12786:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12776:6:20"},"nodeType":"YulFunctionCall","src":"12776:15:20"},"nodeType":"YulExpressionStatement","src":"12776:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12807:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12810:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12800:6:20"},"nodeType":"YulFunctionCall","src":"12800:15:20"},"nodeType":"YulExpressionStatement","src":"12800:15:20"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"12641:180:20"},{"body":{"nodeType":"YulBlock","src":"12855:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12872:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12875:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12865:6:20"},"nodeType":"YulFunctionCall","src":"12865:88:20"},"nodeType":"YulExpressionStatement","src":"12865:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12969:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12972:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12962:6:20"},"nodeType":"YulFunctionCall","src":"12962:15:20"},"nodeType":"YulExpressionStatement","src":"12962:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12993:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12996:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12986:6:20"},"nodeType":"YulFunctionCall","src":"12986:15:20"},"nodeType":"YulExpressionStatement","src":"12986:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12827:180:20"},{"body":{"nodeType":"YulBlock","src":"13055:143:20","statements":[{"nodeType":"YulAssignment","src":"13065:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13088:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13070:17:20"},"nodeType":"YulFunctionCall","src":"13070:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"13065:1:20"}]},{"nodeType":"YulAssignment","src":"13099:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13122:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13104:17:20"},"nodeType":"YulFunctionCall","src":"13104:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"13099:1:20"}]},{"body":{"nodeType":"YulBlock","src":"13146:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"13148:16:20"},"nodeType":"YulFunctionCall","src":"13148:18:20"},"nodeType":"YulExpressionStatement","src":"13148:18:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13143:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13136:6:20"},"nodeType":"YulFunctionCall","src":"13136:9:20"},"nodeType":"YulIf","src":"13133:35:20"},{"nodeType":"YulAssignment","src":"13178:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13187:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"13190:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13183:3:20"},"nodeType":"YulFunctionCall","src":"13183:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"13178:1:20"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13044:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"13047:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"13053:1:20","type":""}],"src":"13013:185:20"},{"body":{"nodeType":"YulBlock","src":"13317:34:20","statements":[{"nodeType":"YulAssignment","src":"13327:18:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"13342:3:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13327:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13289:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"13294:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13305:11:20","type":""}],"src":"13204:147:20"},{"body":{"nodeType":"YulBlock","src":"13463:8:20","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13455:6:20","type":""}],"src":"13357:114:20"},{"body":{"nodeType":"YulBlock","src":"13640:235:20","statements":[{"nodeType":"YulAssignment","src":"13650:90:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13733:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13738:1:20","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13657:75:20"},"nodeType":"YulFunctionCall","src":"13657:83:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13650:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13838:3:20"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"13749:88:20"},"nodeType":"YulFunctionCall","src":"13749:93:20"},"nodeType":"YulExpressionStatement","src":"13749:93:20"},{"nodeType":"YulAssignment","src":"13851:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13862:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13867:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13858:3:20"},"nodeType":"YulFunctionCall","src":"13858:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13851:3:20"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13628:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13636:3:20","type":""}],"src":"13477:398:20"},{"body":{"nodeType":"YulBlock","src":"14069:191:20","statements":[{"nodeType":"YulAssignment","src":"14080:154:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14230:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14087:141:20"},"nodeType":"YulFunctionCall","src":"14087:147:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14080:3:20"}]},{"nodeType":"YulAssignment","src":"14244:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"14251:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14244:3:20"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14056:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14065:3:20","type":""}],"src":"13881:379:20"},{"body":{"nodeType":"YulBlock","src":"14372:64:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14394:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"14402:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14390:3:20"},"nodeType":"YulFunctionCall","src":"14390:14:20"},{"hexValue":"4661696c656420746f2073656e64204574686572","kind":"string","nodeType":"YulLiteral","src":"14406:22:20","type":"","value":"Failed to send Ether"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14383:6:20"},"nodeType":"YulFunctionCall","src":"14383:46:20"},"nodeType":"YulExpressionStatement","src":"14383:46:20"}]},"name":"store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14364:6:20","type":""}],"src":"14266:170:20"},{"body":{"nodeType":"YulBlock","src":"14588:220:20","statements":[{"nodeType":"YulAssignment","src":"14598:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14664:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14669:2:20","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14605:58:20"},"nodeType":"YulFunctionCall","src":"14605:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14598:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14770:3:20"}],"functionName":{"name":"store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","nodeType":"YulIdentifier","src":"14681:88:20"},"nodeType":"YulFunctionCall","src":"14681:93:20"},"nodeType":"YulExpressionStatement","src":"14681:93:20"},{"nodeType":"YulAssignment","src":"14783:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14794:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14799:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14790:3:20"},"nodeType":"YulFunctionCall","src":"14790:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14783:3:20"}]}]},"name":"abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14576:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14584:3:20","type":""}],"src":"14442:366:20"},{"body":{"nodeType":"YulBlock","src":"14985:248:20","statements":[{"nodeType":"YulAssignment","src":"14995:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15007:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15018:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15003:3:20"},"nodeType":"YulFunctionCall","src":"15003:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14995:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15042:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15053:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15038:3:20"},"nodeType":"YulFunctionCall","src":"15038:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15061:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"15067:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15057:3:20"},"nodeType":"YulFunctionCall","src":"15057:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15031:6:20"},"nodeType":"YulFunctionCall","src":"15031:47:20"},"nodeType":"YulExpressionStatement","src":"15031:47:20"},{"nodeType":"YulAssignment","src":"15087:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15221:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15095:124:20"},"nodeType":"YulFunctionCall","src":"15095:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15087:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14965:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14980:4:20","type":""}],"src":"14814:419:20"},{"body":{"nodeType":"YulBlock","src":"15283:261:20","statements":[{"nodeType":"YulAssignment","src":"15293:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15316:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15298:17:20"},"nodeType":"YulFunctionCall","src":"15298:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15293:1:20"}]},{"nodeType":"YulAssignment","src":"15327:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15350:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15332:17:20"},"nodeType":"YulFunctionCall","src":"15332:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15327:1:20"}]},{"body":{"nodeType":"YulBlock","src":"15490:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15492:16:20"},"nodeType":"YulFunctionCall","src":"15492:18:20"},"nodeType":"YulExpressionStatement","src":"15492:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15411:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15418:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"15486:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15414:3:20"},"nodeType":"YulFunctionCall","src":"15414:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15408:2:20"},"nodeType":"YulFunctionCall","src":"15408:81:20"},"nodeType":"YulIf","src":"15405:107:20"},{"nodeType":"YulAssignment","src":"15522:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15533:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"15536:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15529:3:20"},"nodeType":"YulFunctionCall","src":"15529:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"15522:3:20"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15270:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"15273:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"15279:3:20","type":""}],"src":"15239:305:20"},{"body":{"nodeType":"YulBlock","src":"15656:75:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15678:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"15686:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15674:3:20"},"nodeType":"YulFunctionCall","src":"15674:14:20"},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","kind":"string","nodeType":"YulLiteral","src":"15690:33:20","type":"","value":"ERC20Votes: block not yet mined"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15667:6:20"},"nodeType":"YulFunctionCall","src":"15667:57:20"},"nodeType":"YulExpressionStatement","src":"15667:57:20"}]},"name":"store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15648:6:20","type":""}],"src":"15550:181:20"},{"body":{"nodeType":"YulBlock","src":"15883:220:20","statements":[{"nodeType":"YulAssignment","src":"15893:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15959:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15964:2:20","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15900:58:20"},"nodeType":"YulFunctionCall","src":"15900:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15893:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16065:3:20"}],"functionName":{"name":"store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","nodeType":"YulIdentifier","src":"15976:88:20"},"nodeType":"YulFunctionCall","src":"15976:93:20"},"nodeType":"YulExpressionStatement","src":"15976:93:20"},{"nodeType":"YulAssignment","src":"16078:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16089:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16094:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16085:3:20"},"nodeType":"YulFunctionCall","src":"16085:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16078:3:20"}]}]},"name":"abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15871:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15879:3:20","type":""}],"src":"15737:366:20"},{"body":{"nodeType":"YulBlock","src":"16280:248:20","statements":[{"nodeType":"YulAssignment","src":"16290:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16302:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16313:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16298:3:20"},"nodeType":"YulFunctionCall","src":"16298:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16290:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16337:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16348:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16333:3:20"},"nodeType":"YulFunctionCall","src":"16333:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16356:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"16362:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16352:3:20"},"nodeType":"YulFunctionCall","src":"16352:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16326:6:20"},"nodeType":"YulFunctionCall","src":"16326:47:20"},"nodeType":"YulExpressionStatement","src":"16326:47:20"},{"nodeType":"YulAssignment","src":"16382:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16516:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16390:124:20"},"nodeType":"YulFunctionCall","src":"16390:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16382:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16260:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16275:4:20","type":""}],"src":"16109:419:20"},{"body":{"nodeType":"YulBlock","src":"16597:80:20","statements":[{"nodeType":"YulAssignment","src":"16607:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16622:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16616:5:20"},"nodeType":"YulFunctionCall","src":"16616:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16607:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16665:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"16638:26:20"},"nodeType":"YulFunctionCall","src":"16638:33:20"},"nodeType":"YulExpressionStatement","src":"16638:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16575:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"16583:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16591:5:20","type":""}],"src":"16534:143:20"},{"body":{"nodeType":"YulBlock","src":"16760:274:20","statements":[{"body":{"nodeType":"YulBlock","src":"16806:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16808:77:20"},"nodeType":"YulFunctionCall","src":"16808:79:20"},"nodeType":"YulExpressionStatement","src":"16808:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16781:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"16790:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16777:3:20"},"nodeType":"YulFunctionCall","src":"16777:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"16802:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16773:3:20"},"nodeType":"YulFunctionCall","src":"16773:32:20"},"nodeType":"YulIf","src":"16770:119:20"},{"nodeType":"YulBlock","src":"16899:128:20","statements":[{"nodeType":"YulVariableDeclaration","src":"16914:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"16928:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16918:6:20","type":""}]},{"nodeType":"YulAssignment","src":"16943:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16989:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"17000:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16985:3:20"},"nodeType":"YulFunctionCall","src":"16985:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17009:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"16953:31:20"},"nodeType":"YulFunctionCall","src":"16953:64:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16943:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16730:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16741:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16753:6:20","type":""}],"src":"16683:351:20"},{"body":{"nodeType":"YulBlock","src":"17085:146:20","statements":[{"nodeType":"YulAssignment","src":"17095:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17118:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17100:17:20"},"nodeType":"YulFunctionCall","src":"17100:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17095:1:20"}]},{"nodeType":"YulAssignment","src":"17129:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17152:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17134:17:20"},"nodeType":"YulFunctionCall","src":"17134:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17129:1:20"}]},{"body":{"nodeType":"YulBlock","src":"17176:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17178:16:20"},"nodeType":"YulFunctionCall","src":"17178:18:20"},"nodeType":"YulExpressionStatement","src":"17178:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17170:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"17173:1:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17167:2:20"},"nodeType":"YulFunctionCall","src":"17167:8:20"},"nodeType":"YulIf","src":"17164:34:20"},{"nodeType":"YulAssignment","src":"17208:17:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17220:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"17223:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17216:3:20"},"nodeType":"YulFunctionCall","src":"17216:9:20"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"17208:4:20"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17071:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"17074:1:20","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"17080:4:20","type":""}],"src":"17040:191:20"},{"body":{"nodeType":"YulBlock","src":"17265:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17282:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17285:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17275:6:20"},"nodeType":"YulFunctionCall","src":"17275:88:20"},"nodeType":"YulExpressionStatement","src":"17275:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17379:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17382:4:20","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17372:6:20"},"nodeType":"YulFunctionCall","src":"17372:15:20"},"nodeType":"YulExpressionStatement","src":"17372:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17403:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17406:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17396:6:20"},"nodeType":"YulFunctionCall","src":"17396:15:20"},"nodeType":"YulExpressionStatement","src":"17396:15:20"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"17237:180:20"},{"body":{"nodeType":"YulBlock","src":"17529:118:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17551:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"17559:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17547:3:20"},"nodeType":"YulFunctionCall","src":"17547:14:20"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"17563:34:20","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17540:6:20"},"nodeType":"YulFunctionCall","src":"17540:58:20"},"nodeType":"YulExpressionStatement","src":"17540:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17619:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"17627:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17615:3:20"},"nodeType":"YulFunctionCall","src":"17615:15:20"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"17632:7:20","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17608:6:20"},"nodeType":"YulFunctionCall","src":"17608:32:20"},"nodeType":"YulExpressionStatement","src":"17608:32:20"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17521:6:20","type":""}],"src":"17423:224:20"},{"body":{"nodeType":"YulBlock","src":"17799:220:20","statements":[{"nodeType":"YulAssignment","src":"17809:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17875:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17880:2:20","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17816:58:20"},"nodeType":"YulFunctionCall","src":"17816:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17809:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17981:3:20"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"17892:88:20"},"nodeType":"YulFunctionCall","src":"17892:93:20"},"nodeType":"YulExpressionStatement","src":"17892:93:20"},{"nodeType":"YulAssignment","src":"17994:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18005:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18010:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18001:3:20"},"nodeType":"YulFunctionCall","src":"18001:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17994:3:20"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17787:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17795:3:20","type":""}],"src":"17653:366:20"},{"body":{"nodeType":"YulBlock","src":"18196:248:20","statements":[{"nodeType":"YulAssignment","src":"18206:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18218:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"18229:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18214:3:20"},"nodeType":"YulFunctionCall","src":"18214:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18206:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18253:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"18264:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18249:3:20"},"nodeType":"YulFunctionCall","src":"18249:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18272:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"18278:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18268:3:20"},"nodeType":"YulFunctionCall","src":"18268:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18242:6:20"},"nodeType":"YulFunctionCall","src":"18242:47:20"},"nodeType":"YulExpressionStatement","src":"18242:47:20"},{"nodeType":"YulAssignment","src":"18298:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18432:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18306:124:20"},"nodeType":"YulFunctionCall","src":"18306:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18298:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18176:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18191:4:20","type":""}],"src":"18025:419:20"},{"body":{"nodeType":"YulBlock","src":"18498:300:20","statements":[{"nodeType":"YulAssignment","src":"18508:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18531:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18513:17:20"},"nodeType":"YulFunctionCall","src":"18513:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18508:1:20"}]},{"nodeType":"YulAssignment","src":"18542:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18565:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18547:17:20"},"nodeType":"YulFunctionCall","src":"18547:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18542:1:20"}]},{"body":{"nodeType":"YulBlock","src":"18740:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18742:16:20"},"nodeType":"YulFunctionCall","src":"18742:18:20"},"nodeType":"YulExpressionStatement","src":"18742:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18652:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18645:6:20"},"nodeType":"YulFunctionCall","src":"18645:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18638:6:20"},"nodeType":"YulFunctionCall","src":"18638:17:20"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18660:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18667:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"18735:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18663:3:20"},"nodeType":"YulFunctionCall","src":"18663:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18657:2:20"},"nodeType":"YulFunctionCall","src":"18657:81:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18634:3:20"},"nodeType":"YulFunctionCall","src":"18634:105:20"},"nodeType":"YulIf","src":"18631:131:20"},{"nodeType":"YulAssignment","src":"18772:20:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18787:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"18790:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18783:3:20"},"nodeType":"YulFunctionCall","src":"18783:9:20"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"18772:7:20"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18481:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"18484:1:20","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"18490:7:20","type":""}],"src":"18450:348:20"},{"body":{"nodeType":"YulBlock","src":"18910:73:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18932:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"18940:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18928:3:20"},"nodeType":"YulFunctionCall","src":"18928:14:20"},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","kind":"string","nodeType":"YulLiteral","src":"18944:31:20","type":"","value":"ERC20Votes: signature expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18921:6:20"},"nodeType":"YulFunctionCall","src":"18921:55:20"},"nodeType":"YulExpressionStatement","src":"18921:55:20"}]},"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18902:6:20","type":""}],"src":"18804:179:20"},{"body":{"nodeType":"YulBlock","src":"19135:220:20","statements":[{"nodeType":"YulAssignment","src":"19145:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19211:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19216:2:20","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19152:58:20"},"nodeType":"YulFunctionCall","src":"19152:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19145:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19317:3:20"}],"functionName":{"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulIdentifier","src":"19228:88:20"},"nodeType":"YulFunctionCall","src":"19228:93:20"},"nodeType":"YulExpressionStatement","src":"19228:93:20"},{"nodeType":"YulAssignment","src":"19330:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19341:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19346:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19337:3:20"},"nodeType":"YulFunctionCall","src":"19337:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19330:3:20"}]}]},"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19123:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19131:3:20","type":""}],"src":"18989:366:20"},{"body":{"nodeType":"YulBlock","src":"19532:248:20","statements":[{"nodeType":"YulAssignment","src":"19542:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19554:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"19565:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19550:3:20"},"nodeType":"YulFunctionCall","src":"19550:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19542:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19589:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"19600:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19585:3:20"},"nodeType":"YulFunctionCall","src":"19585:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19608:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"19614:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19604:3:20"},"nodeType":"YulFunctionCall","src":"19604:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19578:6:20"},"nodeType":"YulFunctionCall","src":"19578:47:20"},"nodeType":"YulExpressionStatement","src":"19578:47:20"},{"nodeType":"YulAssignment","src":"19634:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19768:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19642:124:20"},"nodeType":"YulFunctionCall","src":"19642:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19634:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19512:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19527:4:20","type":""}],"src":"19361:419:20"},{"body":{"nodeType":"YulBlock","src":"19968:371:20","statements":[{"nodeType":"YulAssignment","src":"19978:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19990:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20001:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19986:3:20"},"nodeType":"YulFunctionCall","src":"19986:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19978:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20059:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20072:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20083:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20068:3:20"},"nodeType":"YulFunctionCall","src":"20068:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"20015:43:20"},"nodeType":"YulFunctionCall","src":"20015:71:20"},"nodeType":"YulExpressionStatement","src":"20015:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20140:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20153:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20164:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20149:3:20"},"nodeType":"YulFunctionCall","src":"20149:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20096:43:20"},"nodeType":"YulFunctionCall","src":"20096:72:20"},"nodeType":"YulExpressionStatement","src":"20096:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20222:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20235:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20246:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20231:3:20"},"nodeType":"YulFunctionCall","src":"20231:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20178:43:20"},"nodeType":"YulFunctionCall","src":"20178:72:20"},"nodeType":"YulExpressionStatement","src":"20178:72:20"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"20304:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20317:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20328:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20313:3:20"},"nodeType":"YulFunctionCall","src":"20313:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20260:43:20"},"nodeType":"YulFunctionCall","src":"20260:72:20"},"nodeType":"YulExpressionStatement","src":"20260:72:20"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19916:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19928:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19936:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19944:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19952:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19963:4:20","type":""}],"src":"19786:553:20"},{"body":{"nodeType":"YulBlock","src":"20451:69:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20473:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"20481:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20469:3:20"},"nodeType":"YulFunctionCall","src":"20469:14:20"},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","kind":"string","nodeType":"YulLiteral","src":"20485:27:20","type":"","value":"ERC20Votes: invalid nonce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20462:6:20"},"nodeType":"YulFunctionCall","src":"20462:51:20"},"nodeType":"YulExpressionStatement","src":"20462:51:20"}]},"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20443:6:20","type":""}],"src":"20345:175:20"},{"body":{"nodeType":"YulBlock","src":"20672:220:20","statements":[{"nodeType":"YulAssignment","src":"20682:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20748:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"20753:2:20","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20689:58:20"},"nodeType":"YulFunctionCall","src":"20689:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20682:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20854:3:20"}],"functionName":{"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulIdentifier","src":"20765:88:20"},"nodeType":"YulFunctionCall","src":"20765:93:20"},"nodeType":"YulExpressionStatement","src":"20765:93:20"},{"nodeType":"YulAssignment","src":"20867:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20878:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"20883:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20874:3:20"},"nodeType":"YulFunctionCall","src":"20874:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20867:3:20"}]}]},"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20660:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20668:3:20","type":""}],"src":"20526:366:20"},{"body":{"nodeType":"YulBlock","src":"21069:248:20","statements":[{"nodeType":"YulAssignment","src":"21079:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21091:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21102:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21087:3:20"},"nodeType":"YulFunctionCall","src":"21087:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21079:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21126:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21137:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21122:3:20"},"nodeType":"YulFunctionCall","src":"21122:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21145:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"21151:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21141:3:20"},"nodeType":"YulFunctionCall","src":"21141:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21115:6:20"},"nodeType":"YulFunctionCall","src":"21115:47:20"},"nodeType":"YulExpressionStatement","src":"21115:47:20"},{"nodeType":"YulAssignment","src":"21171:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21305:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21179:124:20"},"nodeType":"YulFunctionCall","src":"21179:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21171:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21049:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21064:4:20","type":""}],"src":"20898:419:20"},{"body":{"nodeType":"YulBlock","src":"21429:73:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21451:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21459:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21447:3:20"},"nodeType":"YulFunctionCall","src":"21447:14:20"},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","kind":"string","nodeType":"YulLiteral","src":"21463:31:20","type":"","value":"ERC20Permit: expired deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21440:6:20"},"nodeType":"YulFunctionCall","src":"21440:55:20"},"nodeType":"YulExpressionStatement","src":"21440:55:20"}]},"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21421:6:20","type":""}],"src":"21323:179:20"},{"body":{"nodeType":"YulBlock","src":"21654:220:20","statements":[{"nodeType":"YulAssignment","src":"21664:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21730:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"21735:2:20","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21671:58:20"},"nodeType":"YulFunctionCall","src":"21671:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21664:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21836:3:20"}],"functionName":{"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulIdentifier","src":"21747:88:20"},"nodeType":"YulFunctionCall","src":"21747:93:20"},"nodeType":"YulExpressionStatement","src":"21747:93:20"},{"nodeType":"YulAssignment","src":"21849:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21860:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"21865:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21856:3:20"},"nodeType":"YulFunctionCall","src":"21856:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21849:3:20"}]}]},"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21642:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21650:3:20","type":""}],"src":"21508:366:20"},{"body":{"nodeType":"YulBlock","src":"22051:248:20","statements":[{"nodeType":"YulAssignment","src":"22061:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22073:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22084:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22069:3:20"},"nodeType":"YulFunctionCall","src":"22069:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22061:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22108:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22119:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22104:3:20"},"nodeType":"YulFunctionCall","src":"22104:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22127:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"22133:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22123:3:20"},"nodeType":"YulFunctionCall","src":"22123:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22097:6:20"},"nodeType":"YulFunctionCall","src":"22097:47:20"},"nodeType":"YulExpressionStatement","src":"22097:47:20"},{"nodeType":"YulAssignment","src":"22153:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22287:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22161:124:20"},"nodeType":"YulFunctionCall","src":"22161:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22153:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22031:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22046:4:20","type":""}],"src":"21880:419:20"},{"body":{"nodeType":"YulBlock","src":"22543:537:20","statements":[{"nodeType":"YulAssignment","src":"22553:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22565:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22576:3:20","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22561:3:20"},"nodeType":"YulFunctionCall","src":"22561:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22553:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22634:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22647:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22658:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22643:3:20"},"nodeType":"YulFunctionCall","src":"22643:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"22590:43:20"},"nodeType":"YulFunctionCall","src":"22590:71:20"},"nodeType":"YulExpressionStatement","src":"22590:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22715:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22728:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22739:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22724:3:20"},"nodeType":"YulFunctionCall","src":"22724:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22671:43:20"},"nodeType":"YulFunctionCall","src":"22671:72:20"},"nodeType":"YulExpressionStatement","src":"22671:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22797:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22810:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22821:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22806:3:20"},"nodeType":"YulFunctionCall","src":"22806:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22753:43:20"},"nodeType":"YulFunctionCall","src":"22753:72:20"},"nodeType":"YulExpressionStatement","src":"22753:72:20"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22879:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22892:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22903:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22888:3:20"},"nodeType":"YulFunctionCall","src":"22888:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22835:43:20"},"nodeType":"YulFunctionCall","src":"22835:72:20"},"nodeType":"YulExpressionStatement","src":"22835:72:20"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"22961:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22974:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22985:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22970:3:20"},"nodeType":"YulFunctionCall","src":"22970:19:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22917:43:20"},"nodeType":"YulFunctionCall","src":"22917:73:20"},"nodeType":"YulExpressionStatement","src":"22917:73:20"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"23044:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23057:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23068:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23053:3:20"},"nodeType":"YulFunctionCall","src":"23053:19:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23000:43:20"},"nodeType":"YulFunctionCall","src":"23000:73:20"},"nodeType":"YulExpressionStatement","src":"23000:73:20"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22475:9:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"22487:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22495:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22503:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22511:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22519:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22527:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22538:4:20","type":""}],"src":"22305:775:20"},{"body":{"nodeType":"YulBlock","src":"23192:74:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23214:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"23222:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23210:3:20"},"nodeType":"YulFunctionCall","src":"23210:14:20"},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"23226:32:20","type":"","value":"ERC20Permit: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23203:6:20"},"nodeType":"YulFunctionCall","src":"23203:56:20"},"nodeType":"YulExpressionStatement","src":"23203:56:20"}]},"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23184:6:20","type":""}],"src":"23086:180:20"},{"body":{"nodeType":"YulBlock","src":"23418:220:20","statements":[{"nodeType":"YulAssignment","src":"23428:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23494:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"23499:2:20","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23435:58:20"},"nodeType":"YulFunctionCall","src":"23435:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23428:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23600:3:20"}],"functionName":{"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulIdentifier","src":"23511:88:20"},"nodeType":"YulFunctionCall","src":"23511:93:20"},"nodeType":"YulExpressionStatement","src":"23511:93:20"},{"nodeType":"YulAssignment","src":"23613:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23624:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"23629:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23620:3:20"},"nodeType":"YulFunctionCall","src":"23620:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23613:3:20"}]}]},"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23406:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23414:3:20","type":""}],"src":"23272:366:20"},{"body":{"nodeType":"YulBlock","src":"23815:248:20","statements":[{"nodeType":"YulAssignment","src":"23825:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23837:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23848:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23833:3:20"},"nodeType":"YulFunctionCall","src":"23833:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23825:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23872:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23883:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23868:3:20"},"nodeType":"YulFunctionCall","src":"23868:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23891:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"23897:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23887:3:20"},"nodeType":"YulFunctionCall","src":"23887:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23861:6:20"},"nodeType":"YulFunctionCall","src":"23861:47:20"},"nodeType":"YulExpressionStatement","src":"23861:47:20"},{"nodeType":"YulAssignment","src":"23917:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24051:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23925:124:20"},"nodeType":"YulFunctionCall","src":"23925:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23917:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23795:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23810:4:20","type":""}],"src":"23644:419:20"},{"body":{"nodeType":"YulBlock","src":"24175:119:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24197:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"24205:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24193:3:20"},"nodeType":"YulFunctionCall","src":"24193:14:20"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"24209:34:20","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24186:6:20"},"nodeType":"YulFunctionCall","src":"24186:58:20"},"nodeType":"YulExpressionStatement","src":"24186:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24265:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"24273:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24261:3:20"},"nodeType":"YulFunctionCall","src":"24261:15:20"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"24278:8:20","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24254:6:20"},"nodeType":"YulFunctionCall","src":"24254:33:20"},"nodeType":"YulExpressionStatement","src":"24254:33:20"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24167:6:20","type":""}],"src":"24069:225:20"},{"body":{"nodeType":"YulBlock","src":"24446:220:20","statements":[{"nodeType":"YulAssignment","src":"24456:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24522:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"24527:2:20","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24463:58:20"},"nodeType":"YulFunctionCall","src":"24463:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24456:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24628:3:20"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"24539:88:20"},"nodeType":"YulFunctionCall","src":"24539:93:20"},"nodeType":"YulExpressionStatement","src":"24539:93:20"},{"nodeType":"YulAssignment","src":"24641:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24652:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"24657:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24648:3:20"},"nodeType":"YulFunctionCall","src":"24648:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24641:3:20"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24434:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24442:3:20","type":""}],"src":"24300:366:20"},{"body":{"nodeType":"YulBlock","src":"24843:248:20","statements":[{"nodeType":"YulAssignment","src":"24853:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24865:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24876:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24861:3:20"},"nodeType":"YulFunctionCall","src":"24861:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24853:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24900:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24911:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24896:3:20"},"nodeType":"YulFunctionCall","src":"24896:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24919:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"24925:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24915:3:20"},"nodeType":"YulFunctionCall","src":"24915:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24889:6:20"},"nodeType":"YulFunctionCall","src":"24889:47:20"},"nodeType":"YulExpressionStatement","src":"24889:47:20"},{"nodeType":"YulAssignment","src":"24945:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25079:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24953:124:20"},"nodeType":"YulFunctionCall","src":"24953:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24945:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24823:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24838:4:20","type":""}],"src":"24672:419:20"},{"body":{"nodeType":"YulBlock","src":"25203:129:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25225:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"25233:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25221:3:20"},"nodeType":"YulFunctionCall","src":"25221:14:20"},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f","kind":"string","nodeType":"YulLiteral","src":"25237:34:20","type":"","value":"ERC20Votes: total supply risks o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25214:6:20"},"nodeType":"YulFunctionCall","src":"25214:58:20"},"nodeType":"YulExpressionStatement","src":"25214:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25293:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"25301:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25289:3:20"},"nodeType":"YulFunctionCall","src":"25289:15:20"},{"hexValue":"766572666c6f77696e6720766f746573","kind":"string","nodeType":"YulLiteral","src":"25306:18:20","type":"","value":"verflowing votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25282:6:20"},"nodeType":"YulFunctionCall","src":"25282:43:20"},"nodeType":"YulExpressionStatement","src":"25282:43:20"}]},"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25195:6:20","type":""}],"src":"25097:235:20"},{"body":{"nodeType":"YulBlock","src":"25484:220:20","statements":[{"nodeType":"YulAssignment","src":"25494:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25560:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"25565:2:20","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25501:58:20"},"nodeType":"YulFunctionCall","src":"25501:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25494:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25666:3:20"}],"functionName":{"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulIdentifier","src":"25577:88:20"},"nodeType":"YulFunctionCall","src":"25577:93:20"},"nodeType":"YulExpressionStatement","src":"25577:93:20"},{"nodeType":"YulAssignment","src":"25679:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25690:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"25695:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25686:3:20"},"nodeType":"YulFunctionCall","src":"25686:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25679:3:20"}]}]},"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25472:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25480:3:20","type":""}],"src":"25338:366:20"},{"body":{"nodeType":"YulBlock","src":"25881:248:20","statements":[{"nodeType":"YulAssignment","src":"25891:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25903:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25914:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25899:3:20"},"nodeType":"YulFunctionCall","src":"25899:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25891:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25938:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25949:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25934:3:20"},"nodeType":"YulFunctionCall","src":"25934:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25957:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"25963:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25953:3:20"},"nodeType":"YulFunctionCall","src":"25953:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25927:6:20"},"nodeType":"YulFunctionCall","src":"25927:47:20"},"nodeType":"YulExpressionStatement","src":"25927:47:20"},{"nodeType":"YulAssignment","src":"25983:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26117:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25991:124:20"},"nodeType":"YulFunctionCall","src":"25991:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25983:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25861:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25876:4:20","type":""}],"src":"25710:419:20"},{"body":{"nodeType":"YulBlock","src":"26241:75:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26263:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"26271:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26259:3:20"},"nodeType":"YulFunctionCall","src":"26259:14:20"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"26275:33:20","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26252:6:20"},"nodeType":"YulFunctionCall","src":"26252:57:20"},"nodeType":"YulExpressionStatement","src":"26252:57:20"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26233:6:20","type":""}],"src":"26135:181:20"},{"body":{"nodeType":"YulBlock","src":"26468:220:20","statements":[{"nodeType":"YulAssignment","src":"26478:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26544:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"26549:2:20","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26485:58:20"},"nodeType":"YulFunctionCall","src":"26485:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26478:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26650:3:20"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"26561:88:20"},"nodeType":"YulFunctionCall","src":"26561:93:20"},"nodeType":"YulExpressionStatement","src":"26561:93:20"},{"nodeType":"YulAssignment","src":"26663:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26674:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"26679:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26670:3:20"},"nodeType":"YulFunctionCall","src":"26670:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26663:3:20"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26456:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26464:3:20","type":""}],"src":"26322:366:20"},{"body":{"nodeType":"YulBlock","src":"26865:248:20","statements":[{"nodeType":"YulAssignment","src":"26875:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26887:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"26898:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26883:3:20"},"nodeType":"YulFunctionCall","src":"26883:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26875:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26922:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"26933:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26918:3:20"},"nodeType":"YulFunctionCall","src":"26918:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26941:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"26947:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26937:3:20"},"nodeType":"YulFunctionCall","src":"26937:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26911:6:20"},"nodeType":"YulFunctionCall","src":"26911:47:20"},"nodeType":"YulExpressionStatement","src":"26911:47:20"},{"nodeType":"YulAssignment","src":"26967:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27101:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26975:124:20"},"nodeType":"YulFunctionCall","src":"26975:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26967:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26845:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26860:4:20","type":""}],"src":"26694:419:20"},{"body":{"nodeType":"YulBlock","src":"27225:120:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27247:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"27255:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27243:3:20"},"nodeType":"YulFunctionCall","src":"27243:14:20"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"27259:34:20","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27236:6:20"},"nodeType":"YulFunctionCall","src":"27236:58:20"},"nodeType":"YulExpressionStatement","src":"27236:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27315:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"27323:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27311:3:20"},"nodeType":"YulFunctionCall","src":"27311:15:20"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"27328:9:20","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27304:6:20"},"nodeType":"YulFunctionCall","src":"27304:34:20"},"nodeType":"YulExpressionStatement","src":"27304:34:20"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27217:6:20","type":""}],"src":"27119:226:20"},{"body":{"nodeType":"YulBlock","src":"27497:220:20","statements":[{"nodeType":"YulAssignment","src":"27507:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27573:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"27578:2:20","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27514:58:20"},"nodeType":"YulFunctionCall","src":"27514:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27507:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27679:3:20"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"27590:88:20"},"nodeType":"YulFunctionCall","src":"27590:93:20"},"nodeType":"YulExpressionStatement","src":"27590:93:20"},{"nodeType":"YulAssignment","src":"27692:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27703:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"27708:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27699:3:20"},"nodeType":"YulFunctionCall","src":"27699:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27692:3:20"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27485:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27493:3:20","type":""}],"src":"27351:366:20"},{"body":{"nodeType":"YulBlock","src":"27894:248:20","statements":[{"nodeType":"YulAssignment","src":"27904:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27916:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27927:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27912:3:20"},"nodeType":"YulFunctionCall","src":"27912:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27904:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27951:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27962:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27947:3:20"},"nodeType":"YulFunctionCall","src":"27947:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27970:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"27976:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27966:3:20"},"nodeType":"YulFunctionCall","src":"27966:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27940:6:20"},"nodeType":"YulFunctionCall","src":"27940:47:20"},"nodeType":"YulExpressionStatement","src":"27940:47:20"},{"nodeType":"YulAssignment","src":"27996:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28130:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28004:124:20"},"nodeType":"YulFunctionCall","src":"28004:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27996:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27874:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27889:4:20","type":""}],"src":"27723:419:20"},{"body":{"nodeType":"YulBlock","src":"28254:119:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28276:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"28284:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28272:3:20"},"nodeType":"YulFunctionCall","src":"28272:14:20"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"28288:34:20","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28265:6:20"},"nodeType":"YulFunctionCall","src":"28265:58:20"},"nodeType":"YulExpressionStatement","src":"28265:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28344:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"28352:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28340:3:20"},"nodeType":"YulFunctionCall","src":"28340:15:20"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"28357:8:20","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28333:6:20"},"nodeType":"YulFunctionCall","src":"28333:33:20"},"nodeType":"YulExpressionStatement","src":"28333:33:20"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28246:6:20","type":""}],"src":"28148:225:20"},{"body":{"nodeType":"YulBlock","src":"28525:220:20","statements":[{"nodeType":"YulAssignment","src":"28535:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28601:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"28606:2:20","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28542:58:20"},"nodeType":"YulFunctionCall","src":"28542:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28535:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28707:3:20"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"28618:88:20"},"nodeType":"YulFunctionCall","src":"28618:93:20"},"nodeType":"YulExpressionStatement","src":"28618:93:20"},{"nodeType":"YulAssignment","src":"28720:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28731:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"28736:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28727:3:20"},"nodeType":"YulFunctionCall","src":"28727:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28720:3:20"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28513:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28521:3:20","type":""}],"src":"28379:366:20"},{"body":{"nodeType":"YulBlock","src":"28922:248:20","statements":[{"nodeType":"YulAssignment","src":"28932:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28944:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28955:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28940:3:20"},"nodeType":"YulFunctionCall","src":"28940:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28932:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28979:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28990:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28975:3:20"},"nodeType":"YulFunctionCall","src":"28975:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28998:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"29004:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28994:3:20"},"nodeType":"YulFunctionCall","src":"28994:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28968:6:20"},"nodeType":"YulFunctionCall","src":"28968:47:20"},"nodeType":"YulExpressionStatement","src":"28968:47:20"},{"nodeType":"YulAssignment","src":"29024:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29158:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29032:124:20"},"nodeType":"YulFunctionCall","src":"29032:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29024:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28902:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28917:4:20","type":""}],"src":"28751:419:20"},{"body":{"nodeType":"YulBlock","src":"29282:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29304:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"29312:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29300:3:20"},"nodeType":"YulFunctionCall","src":"29300:14:20"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"29316:34:20","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29293:6:20"},"nodeType":"YulFunctionCall","src":"29293:58:20"},"nodeType":"YulExpressionStatement","src":"29293:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29372:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"29380:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29368:3:20"},"nodeType":"YulFunctionCall","src":"29368:15:20"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"29385:6:20","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29361:6:20"},"nodeType":"YulFunctionCall","src":"29361:31:20"},"nodeType":"YulExpressionStatement","src":"29361:31:20"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29274:6:20","type":""}],"src":"29176:223:20"},{"body":{"nodeType":"YulBlock","src":"29551:220:20","statements":[{"nodeType":"YulAssignment","src":"29561:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29627:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"29632:2:20","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29568:58:20"},"nodeType":"YulFunctionCall","src":"29568:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29561:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29733:3:20"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"29644:88:20"},"nodeType":"YulFunctionCall","src":"29644:93:20"},"nodeType":"YulExpressionStatement","src":"29644:93:20"},{"nodeType":"YulAssignment","src":"29746:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29757:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"29762:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29753:3:20"},"nodeType":"YulFunctionCall","src":"29753:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29746:3:20"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29539:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29547:3:20","type":""}],"src":"29405:366:20"},{"body":{"nodeType":"YulBlock","src":"29948:248:20","statements":[{"nodeType":"YulAssignment","src":"29958:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29970:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29981:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29966:3:20"},"nodeType":"YulFunctionCall","src":"29966:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29958:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30005:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30016:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30001:3:20"},"nodeType":"YulFunctionCall","src":"30001:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30024:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"30030:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30020:3:20"},"nodeType":"YulFunctionCall","src":"30020:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29994:6:20"},"nodeType":"YulFunctionCall","src":"29994:47:20"},"nodeType":"YulExpressionStatement","src":"29994:47:20"},{"nodeType":"YulAssignment","src":"30050:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30184:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30058:124:20"},"nodeType":"YulFunctionCall","src":"30058:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30050:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29928:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29943:4:20","type":""}],"src":"29777:419:20"},{"body":{"nodeType":"YulBlock","src":"30308:115:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30330:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"30338:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30326:3:20"},"nodeType":"YulFunctionCall","src":"30326:14:20"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"30342:34:20","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30319:6:20"},"nodeType":"YulFunctionCall","src":"30319:58:20"},"nodeType":"YulExpressionStatement","src":"30319:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30398:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"30406:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30394:3:20"},"nodeType":"YulFunctionCall","src":"30394:15:20"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"30411:4:20","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30387:6:20"},"nodeType":"YulFunctionCall","src":"30387:29:20"},"nodeType":"YulExpressionStatement","src":"30387:29:20"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30300:6:20","type":""}],"src":"30202:221:20"},{"body":{"nodeType":"YulBlock","src":"30575:220:20","statements":[{"nodeType":"YulAssignment","src":"30585:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30651:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"30656:2:20","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30592:58:20"},"nodeType":"YulFunctionCall","src":"30592:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30585:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30757:3:20"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"30668:88:20"},"nodeType":"YulFunctionCall","src":"30668:93:20"},"nodeType":"YulExpressionStatement","src":"30668:93:20"},{"nodeType":"YulAssignment","src":"30770:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30781:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"30786:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30777:3:20"},"nodeType":"YulFunctionCall","src":"30777:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30770:3:20"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30563:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30571:3:20","type":""}],"src":"30429:366:20"},{"body":{"nodeType":"YulBlock","src":"30972:248:20","statements":[{"nodeType":"YulAssignment","src":"30982:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30994:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31005:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30990:3:20"},"nodeType":"YulFunctionCall","src":"30990:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30982:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31029:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31040:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31025:3:20"},"nodeType":"YulFunctionCall","src":"31025:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31048:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"31054:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31044:3:20"},"nodeType":"YulFunctionCall","src":"31044:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31018:6:20"},"nodeType":"YulFunctionCall","src":"31018:47:20"},"nodeType":"YulExpressionStatement","src":"31018:47:20"},{"nodeType":"YulAssignment","src":"31074:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31208:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31082:124:20"},"nodeType":"YulFunctionCall","src":"31082:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31074:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30952:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30967:4:20","type":""}],"src":"30801:419:20"},{"body":{"nodeType":"YulBlock","src":"31332:73:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31354:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"31362:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31350:3:20"},"nodeType":"YulFunctionCall","src":"31350:14:20"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"31366:31:20","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31343:6:20"},"nodeType":"YulFunctionCall","src":"31343:55:20"},"nodeType":"YulExpressionStatement","src":"31343:55:20"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31324:6:20","type":""}],"src":"31226:179:20"},{"body":{"nodeType":"YulBlock","src":"31557:220:20","statements":[{"nodeType":"YulAssignment","src":"31567:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31633:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"31638:2:20","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31574:58:20"},"nodeType":"YulFunctionCall","src":"31574:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31567:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31739:3:20"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"31650:88:20"},"nodeType":"YulFunctionCall","src":"31650:93:20"},"nodeType":"YulExpressionStatement","src":"31650:93:20"},{"nodeType":"YulAssignment","src":"31752:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31763:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"31768:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31759:3:20"},"nodeType":"YulFunctionCall","src":"31759:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31752:3:20"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31545:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31553:3:20","type":""}],"src":"31411:366:20"},{"body":{"nodeType":"YulBlock","src":"31954:248:20","statements":[{"nodeType":"YulAssignment","src":"31964:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31976:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31987:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31972:3:20"},"nodeType":"YulFunctionCall","src":"31972:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31964:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32011:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32022:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32007:3:20"},"nodeType":"YulFunctionCall","src":"32007:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32030:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"32036:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32026:3:20"},"nodeType":"YulFunctionCall","src":"32026:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32000:6:20"},"nodeType":"YulFunctionCall","src":"32000:47:20"},"nodeType":"YulExpressionStatement","src":"32000:47:20"},{"nodeType":"YulAssignment","src":"32056:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32190:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32064:124:20"},"nodeType":"YulFunctionCall","src":"32064:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32056:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31934:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31949:4:20","type":""}],"src":"31783:419:20"},{"body":{"nodeType":"YulBlock","src":"32314:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32336:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"32344:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32332:3:20"},"nodeType":"YulFunctionCall","src":"32332:14:20"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"32348:34:20","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32325:6:20"},"nodeType":"YulFunctionCall","src":"32325:58:20"},"nodeType":"YulExpressionStatement","src":"32325:58:20"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32306:6:20","type":""}],"src":"32208:182:20"},{"body":{"nodeType":"YulBlock","src":"32542:220:20","statements":[{"nodeType":"YulAssignment","src":"32552:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32618:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"32623:2:20","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32559:58:20"},"nodeType":"YulFunctionCall","src":"32559:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32552:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32724:3:20"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"32635:88:20"},"nodeType":"YulFunctionCall","src":"32635:93:20"},"nodeType":"YulExpressionStatement","src":"32635:93:20"},{"nodeType":"YulAssignment","src":"32737:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32748:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"32753:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32744:3:20"},"nodeType":"YulFunctionCall","src":"32744:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32737:3:20"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32530:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32538:3:20","type":""}],"src":"32396:366:20"},{"body":{"nodeType":"YulBlock","src":"32939:248:20","statements":[{"nodeType":"YulAssignment","src":"32949:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32961:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32972:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32957:3:20"},"nodeType":"YulFunctionCall","src":"32957:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32949:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32996:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33007:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32992:3:20"},"nodeType":"YulFunctionCall","src":"32992:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33015:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"33021:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33011:3:20"},"nodeType":"YulFunctionCall","src":"33011:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32985:6:20"},"nodeType":"YulFunctionCall","src":"32985:47:20"},"nodeType":"YulExpressionStatement","src":"32985:47:20"},{"nodeType":"YulAssignment","src":"33041:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33175:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33049:124:20"},"nodeType":"YulFunctionCall","src":"33049:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33041:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32919:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32934:4:20","type":""}],"src":"32768:419:20"},{"body":{"nodeType":"YulBlock","src":"33319:206:20","statements":[{"nodeType":"YulAssignment","src":"33329:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33341:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33352:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33337:3:20"},"nodeType":"YulFunctionCall","src":"33337:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33329:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33409:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33422:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33433:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33418:3:20"},"nodeType":"YulFunctionCall","src":"33418:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33365:43:20"},"nodeType":"YulFunctionCall","src":"33365:71:20"},"nodeType":"YulExpressionStatement","src":"33365:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33490:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33503:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33514:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33499:3:20"},"nodeType":"YulFunctionCall","src":"33499:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33446:43:20"},"nodeType":"YulFunctionCall","src":"33446:72:20"},"nodeType":"YulExpressionStatement","src":"33446:72:20"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33283:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33295:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33303:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33314:4:20","type":""}],"src":"33193:332:20"},{"body":{"nodeType":"YulBlock","src":"33657:206:20","statements":[{"nodeType":"YulAssignment","src":"33667:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33679:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33690:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33675:3:20"},"nodeType":"YulFunctionCall","src":"33675:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33667:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33747:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33760:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33771:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33756:3:20"},"nodeType":"YulFunctionCall","src":"33756:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33703:43:20"},"nodeType":"YulFunctionCall","src":"33703:71:20"},"nodeType":"YulExpressionStatement","src":"33703:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33828:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33841:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33852:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33837:3:20"},"nodeType":"YulFunctionCall","src":"33837:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33784:43:20"},"nodeType":"YulFunctionCall","src":"33784:72:20"},"nodeType":"YulExpressionStatement","src":"33784:72:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33621:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33633:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33641:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33652:4:20","type":""}],"src":"33531:332:20"},{"body":{"nodeType":"YulBlock","src":"33975:118:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33997:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"34005:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33993:3:20"},"nodeType":"YulFunctionCall","src":"33993:14:20"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"34009:34:20","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33986:6:20"},"nodeType":"YulFunctionCall","src":"33986:58:20"},"nodeType":"YulExpressionStatement","src":"33986:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34065:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"34073:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34061:3:20"},"nodeType":"YulFunctionCall","src":"34061:15:20"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"34078:7:20","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34054:6:20"},"nodeType":"YulFunctionCall","src":"34054:32:20"},"nodeType":"YulExpressionStatement","src":"34054:32:20"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33967:6:20","type":""}],"src":"33869:224:20"},{"body":{"nodeType":"YulBlock","src":"34245:220:20","statements":[{"nodeType":"YulAssignment","src":"34255:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34321:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"34326:2:20","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34262:58:20"},"nodeType":"YulFunctionCall","src":"34262:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34255:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34427:3:20"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"34338:88:20"},"nodeType":"YulFunctionCall","src":"34338:93:20"},"nodeType":"YulExpressionStatement","src":"34338:93:20"},{"nodeType":"YulAssignment","src":"34440:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34451:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"34456:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34447:3:20"},"nodeType":"YulFunctionCall","src":"34447:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34440:3:20"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34233:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34241:3:20","type":""}],"src":"34099:366:20"},{"body":{"nodeType":"YulBlock","src":"34642:248:20","statements":[{"nodeType":"YulAssignment","src":"34652:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34664:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34675:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34660:3:20"},"nodeType":"YulFunctionCall","src":"34660:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34652:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34699:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34710:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34695:3:20"},"nodeType":"YulFunctionCall","src":"34695:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34718:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"34724:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34714:3:20"},"nodeType":"YulFunctionCall","src":"34714:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34688:6:20"},"nodeType":"YulFunctionCall","src":"34688:47:20"},"nodeType":"YulExpressionStatement","src":"34688:47:20"},{"nodeType":"YulAssignment","src":"34744:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34878:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34752:124:20"},"nodeType":"YulFunctionCall","src":"34752:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34744:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34622:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34637:4:20","type":""}],"src":"34471:419:20"},{"body":{"nodeType":"YulBlock","src":"35002:116:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35024:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"35032:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35020:3:20"},"nodeType":"YulFunctionCall","src":"35020:14:20"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"35036:34:20","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35013:6:20"},"nodeType":"YulFunctionCall","src":"35013:58:20"},"nodeType":"YulExpressionStatement","src":"35013:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35092:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"35100:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35088:3:20"},"nodeType":"YulFunctionCall","src":"35088:15:20"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"35105:5:20","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35081:6:20"},"nodeType":"YulFunctionCall","src":"35081:30:20"},"nodeType":"YulExpressionStatement","src":"35081:30:20"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34994:6:20","type":""}],"src":"34896:222:20"},{"body":{"nodeType":"YulBlock","src":"35270:220:20","statements":[{"nodeType":"YulAssignment","src":"35280:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35346:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"35351:2:20","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35287:58:20"},"nodeType":"YulFunctionCall","src":"35287:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35280:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35452:3:20"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"35363:88:20"},"nodeType":"YulFunctionCall","src":"35363:93:20"},"nodeType":"YulExpressionStatement","src":"35363:93:20"},{"nodeType":"YulAssignment","src":"35465:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35476:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"35481:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35472:3:20"},"nodeType":"YulFunctionCall","src":"35472:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35465:3:20"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35258:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35266:3:20","type":""}],"src":"35124:366:20"},{"body":{"nodeType":"YulBlock","src":"35667:248:20","statements":[{"nodeType":"YulAssignment","src":"35677:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35689:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35700:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35685:3:20"},"nodeType":"YulFunctionCall","src":"35685:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35677:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35724:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35735:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35720:3:20"},"nodeType":"YulFunctionCall","src":"35720:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35743:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"35749:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35739:3:20"},"nodeType":"YulFunctionCall","src":"35739:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35713:6:20"},"nodeType":"YulFunctionCall","src":"35713:47:20"},"nodeType":"YulExpressionStatement","src":"35713:47:20"},{"nodeType":"YulAssignment","src":"35769:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35903:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35777:124:20"},"nodeType":"YulFunctionCall","src":"35777:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35769:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35647:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35662:4:20","type":""}],"src":"35496:419:20"},{"body":{"nodeType":"YulBlock","src":"36027:119:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36049:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"36057:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36045:3:20"},"nodeType":"YulFunctionCall","src":"36045:14:20"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"36061:34:20","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36038:6:20"},"nodeType":"YulFunctionCall","src":"36038:58:20"},"nodeType":"YulExpressionStatement","src":"36038:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36117:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"36125:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36113:3:20"},"nodeType":"YulFunctionCall","src":"36113:15:20"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"36130:8:20","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36106:6:20"},"nodeType":"YulFunctionCall","src":"36106:33:20"},"nodeType":"YulExpressionStatement","src":"36106:33:20"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36019:6:20","type":""}],"src":"35921:225:20"},{"body":{"nodeType":"YulBlock","src":"36298:220:20","statements":[{"nodeType":"YulAssignment","src":"36308:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36374:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"36379:2:20","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36315:58:20"},"nodeType":"YulFunctionCall","src":"36315:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36308:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36480:3:20"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"36391:88:20"},"nodeType":"YulFunctionCall","src":"36391:93:20"},"nodeType":"YulExpressionStatement","src":"36391:93:20"},{"nodeType":"YulAssignment","src":"36493:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36504:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"36509:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36500:3:20"},"nodeType":"YulFunctionCall","src":"36500:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36493:3:20"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36286:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36294:3:20","type":""}],"src":"36152:366:20"},{"body":{"nodeType":"YulBlock","src":"36695:248:20","statements":[{"nodeType":"YulAssignment","src":"36705:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36717:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"36728:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36713:3:20"},"nodeType":"YulFunctionCall","src":"36713:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36705:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36752:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"36763:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36748:3:20"},"nodeType":"YulFunctionCall","src":"36748:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36771:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"36777:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36767:3:20"},"nodeType":"YulFunctionCall","src":"36767:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36741:6:20"},"nodeType":"YulFunctionCall","src":"36741:47:20"},"nodeType":"YulExpressionStatement","src":"36741:47:20"},{"nodeType":"YulAssignment","src":"36797:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36931:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36805:124:20"},"nodeType":"YulFunctionCall","src":"36805:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36797:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36675:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36690:4:20","type":""}],"src":"36524:419:20"},{"body":{"nodeType":"YulBlock","src":"37159:454:20","statements":[{"nodeType":"YulAssignment","src":"37169:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37181:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37192:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37177:3:20"},"nodeType":"YulFunctionCall","src":"37177:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37169:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37250:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37263:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37274:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37259:3:20"},"nodeType":"YulFunctionCall","src":"37259:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37206:43:20"},"nodeType":"YulFunctionCall","src":"37206:71:20"},"nodeType":"YulExpressionStatement","src":"37206:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37331:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37344:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37355:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37340:3:20"},"nodeType":"YulFunctionCall","src":"37340:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37287:43:20"},"nodeType":"YulFunctionCall","src":"37287:72:20"},"nodeType":"YulExpressionStatement","src":"37287:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"37413:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37426:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37437:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37422:3:20"},"nodeType":"YulFunctionCall","src":"37422:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37369:43:20"},"nodeType":"YulFunctionCall","src":"37369:72:20"},"nodeType":"YulExpressionStatement","src":"37369:72:20"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"37495:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37508:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37519:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37504:3:20"},"nodeType":"YulFunctionCall","src":"37504:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37451:43:20"},"nodeType":"YulFunctionCall","src":"37451:72:20"},"nodeType":"YulExpressionStatement","src":"37451:72:20"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"37577:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37590:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37601:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37586:3:20"},"nodeType":"YulFunctionCall","src":"37586:19:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"37533:43:20"},"nodeType":"YulFunctionCall","src":"37533:73:20"},"nodeType":"YulExpressionStatement","src":"37533:73:20"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37099:9:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"37111:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37119:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37127:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37135:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37143:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37154:4:20","type":""}],"src":"36949:664:20"},{"body":{"nodeType":"YulBlock","src":"37659:76:20","statements":[{"body":{"nodeType":"YulBlock","src":"37713:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37722:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37725:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37715:6:20"},"nodeType":"YulFunctionCall","src":"37715:12:20"},"nodeType":"YulExpressionStatement","src":"37715:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37682:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37704:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"37689:14:20"},"nodeType":"YulFunctionCall","src":"37689:21:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"37679:2:20"},"nodeType":"YulFunctionCall","src":"37679:32:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37672:6:20"},"nodeType":"YulFunctionCall","src":"37672:40:20"},"nodeType":"YulIf","src":"37669:60:20"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37652:5:20","type":""}],"src":"37619:116:20"},{"body":{"nodeType":"YulBlock","src":"37801:77:20","statements":[{"nodeType":"YulAssignment","src":"37811:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"37826:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37820:5:20"},"nodeType":"YulFunctionCall","src":"37820:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37811:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37866:5:20"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"37842:23:20"},"nodeType":"YulFunctionCall","src":"37842:30:20"},"nodeType":"YulExpressionStatement","src":"37842:30:20"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37779:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"37787:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"37795:5:20","type":""}],"src":"37741:137:20"},{"body":{"nodeType":"YulBlock","src":"37958:271:20","statements":[{"body":{"nodeType":"YulBlock","src":"38004:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"38006:77:20"},"nodeType":"YulFunctionCall","src":"38006:79:20"},"nodeType":"YulExpressionStatement","src":"38006:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"37979:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"37988:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37975:3:20"},"nodeType":"YulFunctionCall","src":"37975:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"38000:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"37971:3:20"},"nodeType":"YulFunctionCall","src":"37971:32:20"},"nodeType":"YulIf","src":"37968:119:20"},{"nodeType":"YulBlock","src":"38097:125:20","statements":[{"nodeType":"YulVariableDeclaration","src":"38112:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"38126:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"38116:6:20","type":""}]},{"nodeType":"YulAssignment","src":"38141:71:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38184:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"38195:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38180:3:20"},"nodeType":"YulFunctionCall","src":"38180:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"38204:7:20"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"38151:28:20"},"nodeType":"YulFunctionCall","src":"38151:61:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"38141:6:20"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37928:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"37939:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"37951:6:20","type":""}],"src":"37884:345:20"},{"body":{"nodeType":"YulBlock","src":"38341:123:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38363:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"38371:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38359:3:20"},"nodeType":"YulFunctionCall","src":"38359:14:20"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"38375:34:20","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38352:6:20"},"nodeType":"YulFunctionCall","src":"38352:58:20"},"nodeType":"YulExpressionStatement","src":"38352:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38431:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"38439:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38427:3:20"},"nodeType":"YulFunctionCall","src":"38427:15:20"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"38444:12:20","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38420:6:20"},"nodeType":"YulFunctionCall","src":"38420:37:20"},"nodeType":"YulExpressionStatement","src":"38420:37:20"}]},"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38333:6:20","type":""}],"src":"38235:229:20"},{"body":{"nodeType":"YulBlock","src":"38616:220:20","statements":[{"nodeType":"YulAssignment","src":"38626:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38692:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"38697:2:20","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38633:58:20"},"nodeType":"YulFunctionCall","src":"38633:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38626:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38798:3:20"}],"functionName":{"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulIdentifier","src":"38709:88:20"},"nodeType":"YulFunctionCall","src":"38709:93:20"},"nodeType":"YulExpressionStatement","src":"38709:93:20"},{"nodeType":"YulAssignment","src":"38811:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38822:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"38827:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38818:3:20"},"nodeType":"YulFunctionCall","src":"38818:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38811:3:20"}]}]},"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38604:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38612:3:20","type":""}],"src":"38470:366:20"},{"body":{"nodeType":"YulBlock","src":"39013:248:20","statements":[{"nodeType":"YulAssignment","src":"39023:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39035:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"39046:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39031:3:20"},"nodeType":"YulFunctionCall","src":"39031:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39023:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39070:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"39081:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39066:3:20"},"nodeType":"YulFunctionCall","src":"39066:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39089:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"39095:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39085:3:20"},"nodeType":"YulFunctionCall","src":"39085:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39059:6:20"},"nodeType":"YulFunctionCall","src":"39059:47:20"},"nodeType":"YulExpressionStatement","src":"39059:47:20"},{"nodeType":"YulAssignment","src":"39115:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39249:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39123:124:20"},"nodeType":"YulFunctionCall","src":"39123:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39115:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38993:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39008:4:20","type":""}],"src":"38842:419:20"},{"body":{"nodeType":"YulBlock","src":"39381:34:20","statements":[{"nodeType":"YulAssignment","src":"39391:18:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"39406:3:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"39391:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39353:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"39358:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"39369:11:20","type":""}],"src":"39267:148:20"},{"body":{"nodeType":"YulBlock","src":"39527:108:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39549:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"39557:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39545:3:20"},"nodeType":"YulFunctionCall","src":"39545:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"39561:66:20","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39538:6:20"},"nodeType":"YulFunctionCall","src":"39538:90:20"},"nodeType":"YulExpressionStatement","src":"39538:90:20"}]},"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39519:6:20","type":""}],"src":"39421:214:20"},{"body":{"nodeType":"YulBlock","src":"39805:236:20","statements":[{"nodeType":"YulAssignment","src":"39815:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39899:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"39904:1:20","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39822:76:20"},"nodeType":"YulFunctionCall","src":"39822:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39815:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40004:3:20"}],"functionName":{"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulIdentifier","src":"39915:88:20"},"nodeType":"YulFunctionCall","src":"39915:93:20"},"nodeType":"YulExpressionStatement","src":"39915:93:20"},{"nodeType":"YulAssignment","src":"40017:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40028:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"40033:1:20","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40024:3:20"},"nodeType":"YulFunctionCall","src":"40024:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40017:3:20"}]}]},"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39793:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39801:3:20","type":""}],"src":"39641:400:20"},{"body":{"nodeType":"YulBlock","src":"40094:32:20","statements":[{"nodeType":"YulAssignment","src":"40104:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"40115:5:20"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"40104:7:20"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40076:5:20","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"40086:7:20","type":""}],"src":"40047:79:20"},{"body":{"nodeType":"YulBlock","src":"40215:74:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40232:3:20"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40275:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"40257:17:20"},"nodeType":"YulFunctionCall","src":"40257:24:20"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"40237:19:20"},"nodeType":"YulFunctionCall","src":"40237:45:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40225:6:20"},"nodeType":"YulFunctionCall","src":"40225:58:20"},"nodeType":"YulExpressionStatement","src":"40225:58:20"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40203:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"40210:3:20","type":""}],"src":"40132:157:20"},{"body":{"nodeType":"YulBlock","src":"40540:418:20","statements":[{"nodeType":"YulAssignment","src":"40551:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40702:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"40558:142:20"},"nodeType":"YulFunctionCall","src":"40558:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40551:3:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40778:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"40787:3:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"40716:61:20"},"nodeType":"YulFunctionCall","src":"40716:75:20"},"nodeType":"YulExpressionStatement","src":"40716:75:20"},{"nodeType":"YulAssignment","src":"40800:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40811:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"40816:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40807:3:20"},"nodeType":"YulFunctionCall","src":"40807:12:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40800:3:20"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"40891:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"40900:3:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"40829:61:20"},"nodeType":"YulFunctionCall","src":"40829:75:20"},"nodeType":"YulExpressionStatement","src":"40829:75:20"},{"nodeType":"YulAssignment","src":"40913:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40924:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"40929:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40920:3:20"},"nodeType":"YulFunctionCall","src":"40920:12:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40913:3:20"}]},{"nodeType":"YulAssignment","src":"40942:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"40949:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40942:3:20"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40511:3:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"40517:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40525:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40536:3:20","type":""}],"src":"40295:663:20"},{"body":{"nodeType":"YulBlock","src":"41142:367:20","statements":[{"nodeType":"YulAssignment","src":"41152:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41164:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"41175:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41160:3:20"},"nodeType":"YulFunctionCall","src":"41160:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41152:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41233:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41246:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"41257:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41242:3:20"},"nodeType":"YulFunctionCall","src":"41242:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"41189:43:20"},"nodeType":"YulFunctionCall","src":"41189:71:20"},"nodeType":"YulExpressionStatement","src":"41189:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"41310:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41323:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"41334:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41319:3:20"},"nodeType":"YulFunctionCall","src":"41319:18:20"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"41270:39:20"},"nodeType":"YulFunctionCall","src":"41270:68:20"},"nodeType":"YulExpressionStatement","src":"41270:68:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"41392:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41405:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"41416:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41401:3:20"},"nodeType":"YulFunctionCall","src":"41401:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"41348:43:20"},"nodeType":"YulFunctionCall","src":"41348:72:20"},"nodeType":"YulExpressionStatement","src":"41348:72:20"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"41474:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41487:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"41498:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41483:3:20"},"nodeType":"YulFunctionCall","src":"41483:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"41430:43:20"},"nodeType":"YulFunctionCall","src":"41430:72:20"},"nodeType":"YulExpressionStatement","src":"41430:72:20"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41090:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"41102:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"41110:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"41118:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41126:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41137:4:20","type":""}],"src":"40964:545:20"},{"body":{"nodeType":"YulBlock","src":"41543:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41560:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41563:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41553:6:20"},"nodeType":"YulFunctionCall","src":"41553:88:20"},"nodeType":"YulExpressionStatement","src":"41553:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41657:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"41660:4:20","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41650:6:20"},"nodeType":"YulFunctionCall","src":"41650:15:20"},"nodeType":"YulExpressionStatement","src":"41650:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41681:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41684:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"41674:6:20"},"nodeType":"YulFunctionCall","src":"41674:15:20"},"nodeType":"YulExpressionStatement","src":"41674:15:20"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"41515:180:20"},{"body":{"nodeType":"YulBlock","src":"41807:68:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41829:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"41837:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41825:3:20"},"nodeType":"YulFunctionCall","src":"41825:14:20"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"41841:26:20","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41818:6:20"},"nodeType":"YulFunctionCall","src":"41818:50:20"},"nodeType":"YulExpressionStatement","src":"41818:50:20"}]},"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41799:6:20","type":""}],"src":"41701:174:20"},{"body":{"nodeType":"YulBlock","src":"42027:220:20","statements":[{"nodeType":"YulAssignment","src":"42037:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42103:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"42108:2:20","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42044:58:20"},"nodeType":"YulFunctionCall","src":"42044:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42037:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42209:3:20"}],"functionName":{"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulIdentifier","src":"42120:88:20"},"nodeType":"YulFunctionCall","src":"42120:93:20"},"nodeType":"YulExpressionStatement","src":"42120:93:20"},{"nodeType":"YulAssignment","src":"42222:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42233:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"42238:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42229:3:20"},"nodeType":"YulFunctionCall","src":"42229:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42222:3:20"}]}]},"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42015:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42023:3:20","type":""}],"src":"41881:366:20"},{"body":{"nodeType":"YulBlock","src":"42424:248:20","statements":[{"nodeType":"YulAssignment","src":"42434:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42446:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"42457:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42442:3:20"},"nodeType":"YulFunctionCall","src":"42442:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42434:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42481:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"42492:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42477:3:20"},"nodeType":"YulFunctionCall","src":"42477:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42500:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"42506:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42496:3:20"},"nodeType":"YulFunctionCall","src":"42496:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42470:6:20"},"nodeType":"YulFunctionCall","src":"42470:47:20"},"nodeType":"YulExpressionStatement","src":"42470:47:20"},{"nodeType":"YulAssignment","src":"42526:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42660:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42534:124:20"},"nodeType":"YulFunctionCall","src":"42534:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42526:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42404:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42419:4:20","type":""}],"src":"42253:419:20"},{"body":{"nodeType":"YulBlock","src":"42784:75:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42806:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"42814:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42802:3:20"},"nodeType":"YulFunctionCall","src":"42802:14:20"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"42818:33:20","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42795:6:20"},"nodeType":"YulFunctionCall","src":"42795:57:20"},"nodeType":"YulExpressionStatement","src":"42795:57:20"}]},"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42776:6:20","type":""}],"src":"42678:181:20"},{"body":{"nodeType":"YulBlock","src":"43011:220:20","statements":[{"nodeType":"YulAssignment","src":"43021:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43087:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"43092:2:20","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43028:58:20"},"nodeType":"YulFunctionCall","src":"43028:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43021:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43193:3:20"}],"functionName":{"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulIdentifier","src":"43104:88:20"},"nodeType":"YulFunctionCall","src":"43104:93:20"},"nodeType":"YulExpressionStatement","src":"43104:93:20"},{"nodeType":"YulAssignment","src":"43206:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43217:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"43222:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43213:3:20"},"nodeType":"YulFunctionCall","src":"43213:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43206:3:20"}]}]},"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42999:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43007:3:20","type":""}],"src":"42865:366:20"},{"body":{"nodeType":"YulBlock","src":"43408:248:20","statements":[{"nodeType":"YulAssignment","src":"43418:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43430:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"43441:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43426:3:20"},"nodeType":"YulFunctionCall","src":"43426:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43418:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43465:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"43476:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43461:3:20"},"nodeType":"YulFunctionCall","src":"43461:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43484:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"43490:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43480:3:20"},"nodeType":"YulFunctionCall","src":"43480:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43454:6:20"},"nodeType":"YulFunctionCall","src":"43454:47:20"},"nodeType":"YulExpressionStatement","src":"43454:47:20"},{"nodeType":"YulAssignment","src":"43510:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43644:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43518:124:20"},"nodeType":"YulFunctionCall","src":"43518:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43510:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43388:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43403:4:20","type":""}],"src":"43237:419:20"},{"body":{"nodeType":"YulBlock","src":"43768:115:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43790:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"43798:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43786:3:20"},"nodeType":"YulFunctionCall","src":"43786:14:20"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"43802:34:20","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43779:6:20"},"nodeType":"YulFunctionCall","src":"43779:58:20"},"nodeType":"YulExpressionStatement","src":"43779:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43858:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"43866:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43854:3:20"},"nodeType":"YulFunctionCall","src":"43854:15:20"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"43871:4:20","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43847:6:20"},"nodeType":"YulFunctionCall","src":"43847:29:20"},"nodeType":"YulExpressionStatement","src":"43847:29:20"}]},"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43760:6:20","type":""}],"src":"43662:221:20"},{"body":{"nodeType":"YulBlock","src":"44035:220:20","statements":[{"nodeType":"YulAssignment","src":"44045:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44111:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"44116:2:20","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44052:58:20"},"nodeType":"YulFunctionCall","src":"44052:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44045:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44217:3:20"}],"functionName":{"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulIdentifier","src":"44128:88:20"},"nodeType":"YulFunctionCall","src":"44128:93:20"},"nodeType":"YulExpressionStatement","src":"44128:93:20"},{"nodeType":"YulAssignment","src":"44230:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44241:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"44246:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44237:3:20"},"nodeType":"YulFunctionCall","src":"44237:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44230:3:20"}]}]},"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44023:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44031:3:20","type":""}],"src":"43889:366:20"},{"body":{"nodeType":"YulBlock","src":"44432:248:20","statements":[{"nodeType":"YulAssignment","src":"44442:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44454:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"44465:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44450:3:20"},"nodeType":"YulFunctionCall","src":"44450:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44442:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44489:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"44500:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44485:3:20"},"nodeType":"YulFunctionCall","src":"44485:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44508:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"44514:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44504:3:20"},"nodeType":"YulFunctionCall","src":"44504:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44478:6:20"},"nodeType":"YulFunctionCall","src":"44478:47:20"},"nodeType":"YulExpressionStatement","src":"44478:47:20"},{"nodeType":"YulAssignment","src":"44534:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44668:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44542:124:20"},"nodeType":"YulFunctionCall","src":"44542:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44534:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44412:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44427:4:20","type":""}],"src":"44261:419:20"},{"body":{"nodeType":"YulBlock","src":"44792:114:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44814:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"44822:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44810:3:20"},"nodeType":"YulFunctionCall","src":"44810:14:20"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"44826:34:20","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44803:6:20"},"nodeType":"YulFunctionCall","src":"44803:58:20"},"nodeType":"YulExpressionStatement","src":"44803:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44882:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"44890:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44878:3:20"},"nodeType":"YulFunctionCall","src":"44878:15:20"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"44895:3:20","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44871:6:20"},"nodeType":"YulFunctionCall","src":"44871:28:20"},"nodeType":"YulExpressionStatement","src":"44871:28:20"}]},"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44784:6:20","type":""}],"src":"44686:220:20"},{"body":{"nodeType":"YulBlock","src":"45058:220:20","statements":[{"nodeType":"YulAssignment","src":"45068:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45134:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"45139:2:20","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45075:58:20"},"nodeType":"YulFunctionCall","src":"45075:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45068:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45240:3:20"}],"functionName":{"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulIdentifier","src":"45151:88:20"},"nodeType":"YulFunctionCall","src":"45151:93:20"},"nodeType":"YulExpressionStatement","src":"45151:93:20"},{"nodeType":"YulAssignment","src":"45253:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45264:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"45269:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45260:3:20"},"nodeType":"YulFunctionCall","src":"45260:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"45253:3:20"}]}]},"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45046:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45054:3:20","type":""}],"src":"44912:366:20"},{"body":{"nodeType":"YulBlock","src":"45455:248:20","statements":[{"nodeType":"YulAssignment","src":"45465:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45477:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"45488:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45473:3:20"},"nodeType":"YulFunctionCall","src":"45473:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45465:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45512:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"45523:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45508:3:20"},"nodeType":"YulFunctionCall","src":"45508:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45531:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"45537:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45527:3:20"},"nodeType":"YulFunctionCall","src":"45527:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45501:6:20"},"nodeType":"YulFunctionCall","src":"45501:47:20"},"nodeType":"YulExpressionStatement","src":"45501:47:20"},{"nodeType":"YulAssignment","src":"45557:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45691:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45565:124:20"},"nodeType":"YulFunctionCall","src":"45565:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45557:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45435:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45450:4:20","type":""}],"src":"45284:419:20"},{"body":{"nodeType":"YulBlock","src":"45815:115:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45837:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45845:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45833:3:20"},"nodeType":"YulFunctionCall","src":"45833:14:20"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"45849:34:20","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45826:6:20"},"nodeType":"YulFunctionCall","src":"45826:58:20"},"nodeType":"YulExpressionStatement","src":"45826:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45905:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45913:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45901:3:20"},"nodeType":"YulFunctionCall","src":"45901:15:20"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"45918:4:20","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45894:6:20"},"nodeType":"YulFunctionCall","src":"45894:29:20"},"nodeType":"YulExpressionStatement","src":"45894:29:20"}]},"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45807:6:20","type":""}],"src":"45709:221:20"},{"body":{"nodeType":"YulBlock","src":"46082:220:20","statements":[{"nodeType":"YulAssignment","src":"46092:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46158:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"46163:2:20","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46099:58:20"},"nodeType":"YulFunctionCall","src":"46099:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46092:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46264:3:20"}],"functionName":{"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulIdentifier","src":"46175:88:20"},"nodeType":"YulFunctionCall","src":"46175:93:20"},"nodeType":"YulExpressionStatement","src":"46175:93:20"},{"nodeType":"YulAssignment","src":"46277:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46288:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"46293:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46284:3:20"},"nodeType":"YulFunctionCall","src":"46284:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46277:3:20"}]}]},"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46070:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46078:3:20","type":""}],"src":"45936:366:20"},{"body":{"nodeType":"YulBlock","src":"46479:248:20","statements":[{"nodeType":"YulAssignment","src":"46489:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46501:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"46512:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46497:3:20"},"nodeType":"YulFunctionCall","src":"46497:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46489:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46536:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"46547:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46532:3:20"},"nodeType":"YulFunctionCall","src":"46532:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46555:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"46561:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46551:3:20"},"nodeType":"YulFunctionCall","src":"46551:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46525:6:20"},"nodeType":"YulFunctionCall","src":"46525:47:20"},"nodeType":"YulExpressionStatement","src":"46525:47:20"},{"nodeType":"YulAssignment","src":"46581:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46715:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46589:124:20"},"nodeType":"YulFunctionCall","src":"46589:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46581:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46459:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46474:4:20","type":""}],"src":"46308:419:20"},{"body":{"nodeType":"YulBlock","src":"46839:119:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46861:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46869:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46857:3:20"},"nodeType":"YulFunctionCall","src":"46857:14:20"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"46873:34:20","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46850:6:20"},"nodeType":"YulFunctionCall","src":"46850:58:20"},"nodeType":"YulExpressionStatement","src":"46850:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46929:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46937:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46925:3:20"},"nodeType":"YulFunctionCall","src":"46925:15:20"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"46942:8:20","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46918:6:20"},"nodeType":"YulFunctionCall","src":"46918:33:20"},"nodeType":"YulExpressionStatement","src":"46918:33:20"}]},"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46831:6:20","type":""}],"src":"46733:225:20"},{"body":{"nodeType":"YulBlock","src":"47110:220:20","statements":[{"nodeType":"YulAssignment","src":"47120:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47186:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"47191:2:20","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47127:58:20"},"nodeType":"YulFunctionCall","src":"47127:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47120:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47292:3:20"}],"functionName":{"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulIdentifier","src":"47203:88:20"},"nodeType":"YulFunctionCall","src":"47203:93:20"},"nodeType":"YulExpressionStatement","src":"47203:93:20"},{"nodeType":"YulAssignment","src":"47305:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47316:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"47321:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47312:3:20"},"nodeType":"YulFunctionCall","src":"47312:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47305:3:20"}]}]},"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47098:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47106:3:20","type":""}],"src":"46964:366:20"},{"body":{"nodeType":"YulBlock","src":"47507:248:20","statements":[{"nodeType":"YulAssignment","src":"47517:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47529:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"47540:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47525:3:20"},"nodeType":"YulFunctionCall","src":"47525:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47517:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47564:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"47575:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47560:3:20"},"nodeType":"YulFunctionCall","src":"47560:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47583:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"47589:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47579:3:20"},"nodeType":"YulFunctionCall","src":"47579:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47553:6:20"},"nodeType":"YulFunctionCall","src":"47553:47:20"},"nodeType":"YulExpressionStatement","src":"47553:47:20"},{"nodeType":"YulAssignment","src":"47609:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47743:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47617:124:20"},"nodeType":"YulFunctionCall","src":"47617:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47609:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47487:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47502:4:20","type":""}],"src":"47336:419:20"},{"body":{"nodeType":"YulBlock","src":"47819:40:20","statements":[{"nodeType":"YulAssignment","src":"47830:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47846:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"47840:5:20"},"nodeType":"YulFunctionCall","src":"47840:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"47830:6:20"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47802:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"47812:6:20","type":""}],"src":"47761:98:20"},{"body":{"nodeType":"YulBlock","src":"47973:265:20","statements":[{"nodeType":"YulVariableDeclaration","src":"47983:52:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48029:5:20"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"47997:31:20"},"nodeType":"YulFunctionCall","src":"47997:38:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"47987:6:20","type":""}]},{"nodeType":"YulAssignment","src":"48044:95:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48127:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"48132:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"48051:75:20"},"nodeType":"YulFunctionCall","src":"48051:88:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48044:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48174:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"48181:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48170:3:20"},"nodeType":"YulFunctionCall","src":"48170:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"48188:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"48193:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"48148:21:20"},"nodeType":"YulFunctionCall","src":"48148:52:20"},"nodeType":"YulExpressionStatement","src":"48148:52:20"},{"nodeType":"YulAssignment","src":"48209:23:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48220:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"48225:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48216:3:20"},"nodeType":"YulFunctionCall","src":"48216:16:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"48209:3:20"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47954:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"47961:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47969:3:20","type":""}],"src":"47865:373:20"},{"body":{"nodeType":"YulBlock","src":"48378:137:20","statements":[{"nodeType":"YulAssignment","src":"48389:100:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"48476:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"48485:3:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"48396:79:20"},"nodeType":"YulFunctionCall","src":"48396:93:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48389:3:20"}]},{"nodeType":"YulAssignment","src":"48499:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"48506:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"48499:3:20"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"48357:3:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"48363:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"48374:3:20","type":""}],"src":"48244:271:20"},{"body":{"nodeType":"YulBlock","src":"48627:73:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48649:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"48657:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48645:3:20"},"nodeType":"YulFunctionCall","src":"48645:14:20"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"48661:31:20","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48638:6:20"},"nodeType":"YulFunctionCall","src":"48638:55:20"},"nodeType":"YulExpressionStatement","src":"48638:55:20"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48619:6:20","type":""}],"src":"48521:179:20"},{"body":{"nodeType":"YulBlock","src":"48852:220:20","statements":[{"nodeType":"YulAssignment","src":"48862:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48928:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"48933:2:20","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48869:58:20"},"nodeType":"YulFunctionCall","src":"48869:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48862:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49034:3:20"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"48945:88:20"},"nodeType":"YulFunctionCall","src":"48945:93:20"},"nodeType":"YulExpressionStatement","src":"48945:93:20"},{"nodeType":"YulAssignment","src":"49047:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49058:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"49063:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49054:3:20"},"nodeType":"YulFunctionCall","src":"49054:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"49047:3:20"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"48840:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"48848:3:20","type":""}],"src":"48706:366:20"},{"body":{"nodeType":"YulBlock","src":"49249:248:20","statements":[{"nodeType":"YulAssignment","src":"49259:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49271:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"49282:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49267:3:20"},"nodeType":"YulFunctionCall","src":"49267:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49259:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49306:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"49317:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49302:3:20"},"nodeType":"YulFunctionCall","src":"49302:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49325:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"49331:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49321:3:20"},"nodeType":"YulFunctionCall","src":"49321:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49295:6:20"},"nodeType":"YulFunctionCall","src":"49295:47:20"},"nodeType":"YulExpressionStatement","src":"49295:47:20"},{"nodeType":"YulAssignment","src":"49351:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49485:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49359:124:20"},"nodeType":"YulFunctionCall","src":"49359:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49351:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49229:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49244:4:20","type":""}],"src":"49078:419:20"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function cleanup_t_uint224(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint224_to_t_uint224(value, pos) {\n        mstore(pos, cleanup_t_uint224(value))\n    }\n\n    // struct ERC20Votes.Checkpoint -> struct ERC20Votes.Checkpoint\n    function abi_encode_t_struct$_Checkpoint_$916_memory_ptr_to_t_struct$_Checkpoint_$916_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // fromBlock\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // votes\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint224_to_t_uint224(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Checkpoint_$916_memory_ptr__to_t_struct$_Checkpoint_$916_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Checkpoint_$916_memory_ptr_to_t_struct$_Checkpoint_$916_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send Ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: block not yet mined\")\n\n    }\n\n    function abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: signature expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: invalid nonce\")\n\n    }\n\n    function abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: expired deadline\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: total supply risks o\")\n\n        mstore(add(memPtr, 32), \"verflowing votes\")\n\n    }\n\n    function abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(memPtr) {\n\n        mstore(add(memPtr, 0), 0x1901000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(pos)\n        end := add(pos, 2)\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3078":[{"length":32,"start":6954}],"3080":[{"length":32,"start":6913}],"3082":[{"length":32,"start":6827}],"3084":[{"length":32,"start":7030}],"3086":[{"length":32,"start":7063}],"3088":[{"length":32,"start":6997}]},"linkReferences":{},"object":"6080604052600436106101e75760003560e01c80636fcfff45116101025780639ab24eb011610095578063d505accf11610064578063d505accf14610746578063dd62ed3e1461076f578063f1127ed8146107ac578063f2fde38b146107e9576101ee565b80639ab24eb014610666578063a457c2d7146106a3578063a9059cbb146106e0578063c3cda5201461071d576101ee565b80637ecebe00116100d15780637ecebe00146105965780638da5cb5b146105d35780638e539e8c146105fe57806395d89b411461063b576101ee565b80636fcfff45146104dc57806370a0823114610519578063715018a61461055657806379cc67901461056d576101ee565b8063395093511161017a57806342966c681161014957806342966c6814610424578063587cde1e1461044d5780635c19a95c1461048a57806368742da6146104b3576101ee565b806339509351146103585780633a46b1a8146103955780633e45c8af146103d257806340c10f19146103fb576101ee565b806323b872dd116101b657806323b872dd146102ae57806324600fc3146102eb578063313ce567146103025780633644e5151461032d576101ee565b806306fdde03146101f0578063095ea7b31461021b57806312065fe01461025857806318160ddd14610283576101ee565b366101ee57005b005b3480156101fc57600080fd5b50610205610812565b6040516102129190613297565b60405180910390f35b34801561022757600080fd5b50610242600480360381019061023d9190613352565b6108a4565b60405161024f91906133ad565b60405180910390f35b34801561026457600080fd5b5061026d6108c7565b60405161027a91906133d7565b60405180910390f35b34801561028f57600080fd5b506102986108cf565b6040516102a591906133d7565b60405180910390f35b3480156102ba57600080fd5b506102d560048036038101906102d091906133f2565b6108d9565b6040516102e291906133ad565b60405180910390f35b3480156102f757600080fd5b50610300610908565b005b34801561030e57600080fd5b506103176109e4565b6040516103249190613461565b60405180910390f35b34801561033957600080fd5b506103426109ed565b60405161034f9190613495565b60405180910390f35b34801561036457600080fd5b5061037f600480360381019061037a9190613352565b6109fc565b60405161038c91906133ad565b60405180910390f35b3480156103a157600080fd5b506103bc60048036038101906103b79190613352565b610a33565b6040516103c991906133d7565b60405180910390f35b3480156103de57600080fd5b506103f960048036038101906103f491906134b0565b610ac7565b005b34801561040757600080fd5b50610422600480360381019061041d9190613352565b610b10565b005b34801561043057600080fd5b5061044b600480360381019061044691906134b0565b610b26565b005b34801561045957600080fd5b50610474600480360381019061046f91906134dd565b610b3a565b6040516104819190613519565b60405180910390f35b34801561049657600080fd5b506104b160048036038101906104ac91906134dd565b610ba3565b005b3480156104bf57600080fd5b506104da60048036038101906104d591906134dd565b610bb7565b005b3480156104e857600080fd5b5061050360048036038101906104fe91906134dd565b610c52565b6040516105109190613553565b60405180910390f35b34801561052557600080fd5b50610540600480360381019061053b91906134dd565b610ca6565b60405161054d91906133d7565b60405180910390f35b34801561056257600080fd5b5061056b610cee565b005b34801561057957600080fd5b50610594600480360381019061058f9190613352565b610d02565b005b3480156105a257600080fd5b506105bd60048036038101906105b891906134dd565b610d22565b6040516105ca91906133d7565b60405180910390f35b3480156105df57600080fd5b506105e8610d72565b6040516105f59190613519565b60405180910390f35b34801561060a57600080fd5b50610625600480360381019061062091906134b0565b610d9c565b60405161063291906133d7565b60405180910390f35b34801561064757600080fd5b50610650610df2565b60405161065d9190613297565b60405180910390f35b34801561067257600080fd5b5061068d600480360381019061068891906134dd565b610e84565b60405161069a91906133d7565b60405180910390f35b3480156106af57600080fd5b506106ca60048036038101906106c59190613352565b610f95565b6040516106d791906133ad565b60405180910390f35b3480156106ec57600080fd5b5061070760048036038101906107029190613352565b61100c565b60405161071491906133ad565b60405180910390f35b34801561072957600080fd5b50610744600480360381019061073f91906135c6565b6110d9565b005b34801561075257600080fd5b5061076d60048036038101906107689190613653565b6111dd565b005b34801561077b57600080fd5b50610796600480360381019061079191906136f5565b61131f565b6040516107a391906133d7565b60405180910390f35b3480156107b857600080fd5b506107d360048036038101906107ce9190613761565b6113a6565b6040516107e09190613816565b60405180910390f35b3480156107f557600080fd5b50610810600480360381019061080b91906134dd565b6114b6565b005b60606003805461082190613860565b80601f016020809104026020016040519081016040528092919081815260200182805461084d90613860565b801561089a5780601f1061086f5761010080835404028352916020019161089a565b820191906000526020600020905b81548152906001019060200180831161087d57829003601f168201915b5050505050905090565b6000806108af611838565b90506108bc818585611840565b600191505092915050565b600047905090565b6000600254905090565b6000806108e4611838565b90506108f1858285611a0b565b6108fc858585611a97565b60019150509392505050565b600060034761091791906138f0565b905060007345094071c4daaf6a9a73b0a0f095a2b138bd8a3a73ffffffffffffffffffffffffffffffffffffffff168260405161095390613952565b60006040518083038185875af1925050503d8060008114610990576040519150601f19603f3d011682016040523d82523d6000602084013e610995565b606091505b5050905060011515811515146109e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d7906139b3565b60405180910390fd5b5050565b60006012905090565b60006109f7611aa7565b905090565b600080610a07611838565b9050610a28818585610a19858961131f565b610a2391906139d3565b611840565b600191505092915050565b6000438210610a77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6e90613a75565b60405180910390fd5b610abf600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083611bc1565b905092915050565b610acf611d12565b80600b819055507fb2442d3ff243b2c486384ca93de99597291265a56cc11d3f99c27ab2a96c1f2481604051610b0591906133d7565b60405180910390a150565b610b18611d12565b610b228282611d90565b5050565b610b37610b31611838565b82611d9e565b50565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610bb4610bae611838565b82611dac565b50565b610c4f817345094071c4daaf6a9a73b0a0f095a2b138bd8a3a8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c099190613519565b602060405180830381865afa158015610c26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4a9190613aaa565b611ec6565b50565b6000610c9f600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061179f565b9050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610cf6611d12565b610d006000611f4c565b565b610d1482610d0e611838565b83611a0b565b610d1e8282611d9e565b5050565b6000610d6b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612012565b9050919050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000438210610de0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd790613a75565b60405180910390fd5b610deb600a83611bc1565b9050919050565b606060048054610e0190613860565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2d90613860565b8015610e7a5780601f10610e4f57610100808354040283529160200191610e7a565b820191906000526020600020905b815481529060010190602001808311610e5d57829003601f168201915b5050505050905090565b600080600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008114610f6c57600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600182610f209190613ad7565b81548110610f3157610f30613b0b565b5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16610f6f565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16915050919050565b600080610fa0611838565b90506000610fae828661131f565b905083811015610ff3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fea90613bac565b60405180910390fd5b6110008286868403611840565b60019250505092915050565b600080611017611838565b905060006064600b548561102b9190613bcc565b61103591906138f0565b9050600081856110459190613ad7565b90506000600a6002846110589190613bcc565b61106291906138f0565b90506000600a6008856110759190613bcc565b61107f91906138f0565b90506110a0857345094071c4daaf6a9a73b0a0f095a2b138bd8a3a84611a97565b6110bf85731a2118e056d6af192e233c2c9cfb34e067ded1f883611a97565b6110ca858985611a97565b60019550505050505092915050565b8342111561111c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111390613c72565b60405180910390fd5b600061117e6111767fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf89898960405160200161115b9493929190613c92565b60405160208183030381529060405280519060200120612020565b85858561203a565b905061118981612065565b86146111ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c190613d23565b60405180910390fd5b6111d48188611dac565b50505050505050565b83421115611220576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121790613d8f565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861124f8c612065565b8960405160200161126596959493929190613daf565b604051602081830303815290604052805190602001209050600061128882612020565b905060006112988287878761203a565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ff90613e5c565b60405180910390fd5b6113138a8a8a611840565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6113ae6131c0565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208263ffffffff168154811061140557611404613b0b565b5b906000526020600020016040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b6114be611d12565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561152e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152590613eee565b60405180910390fd5b61153781611f4c565b50565b61154482826115c7565b61154c6120c3565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166115726108cf565b11156115b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115aa90613f80565b60405180910390fd5b6115c1600a61171e836120e7565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611637576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162e90613fec565b60405180910390fd5b611643600083836123b6565b806002600082825461165591906139d3565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161170691906133d7565b60405180910390a361171a600083836123bb565b5050565b6000818361172c91906139d3565b905092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8016821115611797576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178e9061407e565b60405180910390fd5b819050919050565b600063ffffffff80168211156117ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e190614110565b60405180910390fd5b819050919050565b6117fd83838361181d565b61181861180984610b3a565b61181284610b3a565b836123cb565b505050565b505050565b600081836118309190613ad7565b905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156118b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a7906141a2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611920576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191790614234565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516119fe91906133d7565b60405180910390a3505050565b6000611a17848461131f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611a915781811015611a83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7a906142a0565b60405180910390fd5b611a908484848403611840565b5b50505050565b611aa28383836125c4565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015611b2357507f000000000000000000000000000000000000000000000000000000000000000046145b15611b50577f00000000000000000000000000000000000000000000000000000000000000009050611bbe565b611bbb7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061283c565b90505b90565b600080838054905090506000808290506005831115611c37576000611be584612876565b84611bf09190613ad7565b905085611bfd8883612970565b60000160009054906101000a900463ffffffff1663ffffffff161115611c2557809150611c35565b600181611c3291906139d3565b92505b505b5b80821015611c97576000611c4c8383612985565b905085611c598883612970565b60000160009054906101000a900463ffffffff1663ffffffff161115611c8157809150611c91565b600181611c8e91906139d3565b92505b50611c38565b60008114611ce657611cb586600183611cb09190613ad7565b612970565b60000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611ce9565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16935050505092915050565b611d1a611838565b73ffffffffffffffffffffffffffffffffffffffff16611d38610d72565b73ffffffffffffffffffffffffffffffffffffffff1614611d8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d859061430c565b60405180910390fd5b565b611d9a828261153a565b5050565b611da882826129ab565b5050565b6000611db783610b3a565b90506000611dc484610ca6565b905082600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a4611ec08284836123cb565b50505050565b611f478363a9059cbb60e01b8484604051602401611ee592919061432c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506129c9565b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600001549050919050565b600061203361202d611aa7565b83612a90565b9050919050565b600080600061204b87878787612ac3565b9150915061205881612ba6565b8192505050949350505050565b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506120b281612012565b91506120bd81612d14565b50919050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b60008060008580549050905060008082146121b6576121128760018461210d9190613ad7565b612970565b6040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250506121f2565b6040518060400160405280600063ffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152505b905080602001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16935061222784868863ffffffff16565b9250600082118015612242575043816000015163ffffffff16145b156122bc5761225083611734565b612266886001856122619190613ad7565b612970565b60000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1602179055506123ac565b8660405180604001604052806122d14361179f565b63ffffffff1681526020016122e586611734565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b5050935093915050565b505050565b6123c68383836117f2565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156124075750600081115b156125bf57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146124e55760008061248e600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611822856120e7565b915091508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516124da929190614355565b60405180910390a250505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146125be57600080612567600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061171e856120e7565b915091508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516125b3929190614355565b60405180910390a250505b5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612634576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161262b906143f0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156126a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161269b90614482565b60405180910390fd5b6126af8383836123b6565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161272c90614514565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161282391906133d7565b60405180910390a36128368484846123bb565b50505050565b60008383834630604051602001612857959493929190614534565b6040516020818303038152906040528051906020012090509392505050565b600080821415612889576000905061296b565b6000600161289684612d2a565b901c6001901b905060018184816128b0576128af613892565b5b048201901c905060018184816128c9576128c8613892565b5b048201901c905060018184816128e2576128e1613892565b5b048201901c905060018184816128fb576128fa613892565b5b048201901c9050600181848161291457612913613892565b5b048201901c9050600181848161292d5761292c613892565b5b048201901c9050600181848161294657612945613892565b5b048201901c90506129678182858161296157612960613892565b5b04612e0b565b9150505b919050565b60008260005281602060002001905092915050565b6000600282841861299691906138f0565b8284166129a391906139d3565b905092915050565b6129b58282612e24565b6129c3600a611822836120e7565b50505050565b6000612a2b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612ff29092919063ffffffff16565b9050600081511115612a8b5780806020019051810190612a4b91906145b3565b612a8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a8190614652565b60405180910390fd5b5b505050565b60008282604051602001612aa59291906146ea565b60405160208183030381529060405280519060200120905092915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115612afe576000600391509150612b9d565b600060018787878760405160008152602001604052604051612b239493929190614721565b6020604051602081039080840390855afa158015612b45573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612b9457600060019250925050612b9d565b80600092509250505b94509492505050565b60006004811115612bba57612bb9614766565b5b816004811115612bcd57612bcc614766565b5b1415612bd857612d11565b60016004811115612bec57612beb614766565b5b816004811115612bff57612bfe614766565b5b1415612c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c37906147e1565b60405180910390fd5b60026004811115612c5457612c53614766565b5b816004811115612c6757612c66614766565b5b1415612ca8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c9f9061484d565b60405180910390fd5b60036004811115612cbc57612cbb614766565b5b816004811115612ccf57612cce614766565b5b1415612d10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d07906148df565b60405180910390fd5b5b50565b6001816000016000828254019250508190555050565b600080600090506000608084901c1115612d4c57608083901c92506080810190505b6000604084901c1115612d6757604083901c92506040810190505b6000602084901c1115612d8257602083901c92506020810190505b6000601084901c1115612d9d57601083901c92506010810190505b6000600884901c1115612db857600883901c92506008810190505b6000600484901c1115612dd357600483901c92506004810190505b6000600284901c1115612dee57600283901c92506002810190505b6000600184901c1115612e02576001810190505b80915050919050565b6000818310612e1a5781612e1c565b825b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612e94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e8b90614971565b60405180910390fd5b612ea0826000836123b6565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612f26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f1d90614a03565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051612fd991906133d7565b60405180910390a3612fed836000846123bb565b505050565b6060613001848460008561300a565b90509392505050565b60608247101561304f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161304690614a95565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516130789190614af1565b60006040518083038185875af1925050503d80600081146130b5576040519150601f19603f3d011682016040523d82523d6000602084013e6130ba565b606091505b50915091506130cb878383876130d7565b92505050949350505050565b6060831561313a57600083511415613132576130f28561314d565b613131576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161312890614b54565b60405180910390fd5b5b829050613145565b6131448383613170565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156131835781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016131b79190613297565b60405180910390fd5b6040518060400160405280600063ffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561323857808201518184015260208101905061321d565b83811115613247576000848401525b50505050565b6000601f19601f8301169050919050565b6000613269826131fe565b6132738185613209565b935061328381856020860161321a565b61328c8161324d565b840191505092915050565b600060208201905081810360008301526132b1818461325e565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006132e9826132be565b9050919050565b6132f9816132de565b811461330457600080fd5b50565b600081359050613316816132f0565b92915050565b6000819050919050565b61332f8161331c565b811461333a57600080fd5b50565b60008135905061334c81613326565b92915050565b60008060408385031215613369576133686132b9565b5b600061337785828601613307565b92505060206133888582860161333d565b9150509250929050565b60008115159050919050565b6133a781613392565b82525050565b60006020820190506133c2600083018461339e565b92915050565b6133d18161331c565b82525050565b60006020820190506133ec60008301846133c8565b92915050565b60008060006060848603121561340b5761340a6132b9565b5b600061341986828701613307565b935050602061342a86828701613307565b925050604061343b8682870161333d565b9150509250925092565b600060ff82169050919050565b61345b81613445565b82525050565b60006020820190506134766000830184613452565b92915050565b6000819050919050565b61348f8161347c565b82525050565b60006020820190506134aa6000830184613486565b92915050565b6000602082840312156134c6576134c56132b9565b5b60006134d48482850161333d565b91505092915050565b6000602082840312156134f3576134f26132b9565b5b600061350184828501613307565b91505092915050565b613513816132de565b82525050565b600060208201905061352e600083018461350a565b92915050565b600063ffffffff82169050919050565b61354d81613534565b82525050565b60006020820190506135686000830184613544565b92915050565b61357781613445565b811461358257600080fd5b50565b6000813590506135948161356e565b92915050565b6135a38161347c565b81146135ae57600080fd5b50565b6000813590506135c08161359a565b92915050565b60008060008060008060c087890312156135e3576135e26132b9565b5b60006135f189828a01613307565b965050602061360289828a0161333d565b955050604061361389828a0161333d565b945050606061362489828a01613585565b935050608061363589828a016135b1565b92505060a061364689828a016135b1565b9150509295509295509295565b600080600080600080600060e0888a031215613672576136716132b9565b5b60006136808a828b01613307565b97505060206136918a828b01613307565b96505060406136a28a828b0161333d565b95505060606136b38a828b0161333d565b94505060806136c48a828b01613585565b93505060a06136d58a828b016135b1565b92505060c06136e68a828b016135b1565b91505092959891949750929550565b6000806040838503121561370c5761370b6132b9565b5b600061371a85828601613307565b925050602061372b85828601613307565b9150509250929050565b61373e81613534565b811461374957600080fd5b50565b60008135905061375b81613735565b92915050565b60008060408385031215613778576137776132b9565b5b600061378685828601613307565b92505060206137978582860161374c565b9150509250929050565b6137aa81613534565b82525050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6137e1816137b0565b82525050565b6040820160008201516137fd60008501826137a1565b50602082015161381060208501826137d8565b50505050565b600060408201905061382b60008301846137e7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061387857607f821691505b6020821081141561388c5761388b613831565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006138fb8261331c565b91506139068361331c565b92508261391657613915613892565b5b828204905092915050565b600081905092915050565b50565b600061393c600083613921565b91506139478261392c565b600082019050919050565b600061395d8261392f565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b600061399d601483613209565b91506139a882613967565b602082019050919050565b600060208201905081810360008301526139cc81613990565b9050919050565b60006139de8261331c565b91506139e98361331c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613a1e57613a1d6138c1565b5b828201905092915050565b7f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400600082015250565b6000613a5f601f83613209565b9150613a6a82613a29565b602082019050919050565b60006020820190508181036000830152613a8e81613a52565b9050919050565b600081519050613aa481613326565b92915050565b600060208284031215613ac057613abf6132b9565b5b6000613ace84828501613a95565b91505092915050565b6000613ae28261331c565b9150613aed8361331c565b925082821015613b0057613aff6138c1565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000613b96602583613209565b9150613ba182613b3a565b604082019050919050565b60006020820190508181036000830152613bc581613b89565b9050919050565b6000613bd78261331c565b9150613be28361331c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613c1b57613c1a6138c1565b5b828202905092915050565b7f4552433230566f7465733a207369676e61747572652065787069726564000000600082015250565b6000613c5c601d83613209565b9150613c6782613c26565b602082019050919050565b60006020820190508181036000830152613c8b81613c4f565b9050919050565b6000608082019050613ca76000830187613486565b613cb4602083018661350a565b613cc160408301856133c8565b613cce60608301846133c8565b95945050505050565b7f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000600082015250565b6000613d0d601983613209565b9150613d1882613cd7565b602082019050919050565b60006020820190508181036000830152613d3c81613d00565b9050919050565b7f45524332305065726d69743a206578706972656420646561646c696e65000000600082015250565b6000613d79601d83613209565b9150613d8482613d43565b602082019050919050565b60006020820190508181036000830152613da881613d6c565b9050919050565b600060c082019050613dc46000830189613486565b613dd1602083018861350a565b613dde604083018761350a565b613deb60608301866133c8565b613df860808301856133c8565b613e0560a08301846133c8565b979650505050505050565b7f45524332305065726d69743a20696e76616c6964207369676e61747572650000600082015250565b6000613e46601e83613209565b9150613e5182613e10565b602082019050919050565b60006020820190508181036000830152613e7581613e39565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000613ed8602683613209565b9150613ee382613e7c565b604082019050919050565b60006020820190508181036000830152613f0781613ecb565b9050919050565b7f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60008201527f766572666c6f77696e6720766f74657300000000000000000000000000000000602082015250565b6000613f6a603083613209565b9150613f7582613f0e565b604082019050919050565b60006020820190508181036000830152613f9981613f5d565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000613fd6601f83613209565b9150613fe182613fa0565b602082019050919050565b6000602082019050818103600083015261400581613fc9565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203260008201527f3234206269747300000000000000000000000000000000000000000000000000602082015250565b6000614068602783613209565b91506140738261400c565b604082019050919050565b600060208201905081810360008301526140978161405b565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203360008201527f3220626974730000000000000000000000000000000000000000000000000000602082015250565b60006140fa602683613209565b91506141058261409e565b604082019050919050565b60006020820190508181036000830152614129816140ed565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061418c602483613209565b915061419782614130565b604082019050919050565b600060208201905081810360008301526141bb8161417f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061421e602283613209565b9150614229826141c2565b604082019050919050565b6000602082019050818103600083015261424d81614211565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061428a601d83613209565b915061429582614254565b602082019050919050565b600060208201905081810360008301526142b98161427d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006142f6602083613209565b9150614301826142c0565b602082019050919050565b60006020820190508181036000830152614325816142e9565b9050919050565b6000604082019050614341600083018561350a565b61434e60208301846133c8565b9392505050565b600060408201905061436a60008301856133c8565b61437760208301846133c8565b9392505050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006143da602583613209565b91506143e58261437e565b604082019050919050565b60006020820190508181036000830152614409816143cd565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061446c602383613209565b915061447782614410565b604082019050919050565b6000602082019050818103600083015261449b8161445f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006144fe602683613209565b9150614509826144a2565b604082019050919050565b6000602082019050818103600083015261452d816144f1565b9050919050565b600060a0820190506145496000830188613486565b6145566020830187613486565b6145636040830186613486565b61457060608301856133c8565b61457d608083018461350a565b9695505050505050565b61459081613392565b811461459b57600080fd5b50565b6000815190506145ad81614587565b92915050565b6000602082840312156145c9576145c86132b9565b5b60006145d78482850161459e565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b600061463c602a83613209565b9150614647826145e0565b604082019050919050565b6000602082019050818103600083015261466b8161462f565b9050919050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b60006146b3600283614672565b91506146be8261467d565b600282019050919050565b6000819050919050565b6146e46146df8261347c565b6146c9565b82525050565b60006146f5826146a6565b915061470182856146d3565b60208201915061471182846146d3565b6020820191508190509392505050565b60006080820190506147366000830187613486565b6147436020830186613452565b6147506040830185613486565b61475d6060830184613486565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b60006147cb601883613209565b91506147d682614795565b602082019050919050565b600060208201905081810360008301526147fa816147be565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000614837601f83613209565b915061484282614801565b602082019050919050565b600060208201905081810360008301526148668161482a565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006148c9602283613209565b91506148d48261486d565b604082019050919050565b600060208201905081810360008301526148f8816148bc565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600061495b602183613209565b9150614966826148ff565b604082019050919050565b6000602082019050818103600083015261498a8161494e565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006149ed602283613209565b91506149f882614991565b604082019050919050565b60006020820190508181036000830152614a1c816149e0565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000614a7f602683613209565b9150614a8a82614a23565b604082019050919050565b60006020820190508181036000830152614aae81614a72565b9050919050565b600081519050919050565b6000614acb82614ab5565b614ad58185613921565b9350614ae581856020860161321a565b80840191505092915050565b6000614afd8284614ac0565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000614b3e601d83613209565b9150614b4982614b08565b602082019050919050565b60006020820190508181036000830152614b6d81614b31565b905091905056fea264697066735822122008fbfff6b904d52cfb08884642b72458b4a201089333f385f9f3e19c20bdd1ad64736f6c634300080b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x746 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x76F JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x7AC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7E9 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6E0 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x71D JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5D3 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x63B JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x56D JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x68742DA6 EQ PUSH2 0x4B3 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x3E45C8AF EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3FB JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x32D JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x283 JUMPI PUSH2 0x1EE JUMP JUMPDEST CALLDATASIZE PUSH2 0x1EE JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x205 PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x3297 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x33AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x33F2 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x33AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x908 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x3461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x33AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x34B0 JUMP JUMPDEST PUSH2 0xAC7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x422 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x34B0 JUMP JUMPDEST PUSH2 0xB26 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x474 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x34DD JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x3519 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x34DD JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x34DD JUMP JUMPDEST PUSH2 0xBB7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x503 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x34DD JUMP JUMPDEST PUSH2 0xC52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x3553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x540 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x34DD JUMP JUMPDEST PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56B PUSH2 0xCEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x594 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58F SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0xD02 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0x34DD JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E8 PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x3519 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x625 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x620 SWAP2 SWAP1 PUSH2 0x34B0 JUMP JUMPDEST PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x632 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x650 PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x3297 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x34DD JUMP JUMPDEST PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x33AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x707 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x702 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0x100C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x33AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x744 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x35C6 JUMP JUMPDEST PUSH2 0x10D9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x768 SWAP2 SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH2 0x11DD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x796 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x791 SWAP2 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x3761 JUMP JUMPDEST PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E0 SWAP2 SWAP1 PUSH2 0x3816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x810 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80B SWAP2 SWAP1 PUSH2 0x34DD JUMP JUMPDEST PUSH2 0x14B6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x821 SWAP1 PUSH2 0x3860 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x84D SWAP1 PUSH2 0x3860 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x89A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x86F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x89A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x87D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8AF PUSH2 0x1838 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BC DUP2 DUP6 DUP6 PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8E4 PUSH2 0x1838 JUMP JUMPDEST SWAP1 POP PUSH2 0x8F1 DUP6 DUP3 DUP6 PUSH2 0x1A0B JUMP JUMPDEST PUSH2 0x8FC DUP6 DUP6 DUP6 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SELFBALANCE PUSH2 0x917 SWAP2 SWAP1 PUSH2 0x38F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x45094071C4DAAF6A9A73B0A0F095A2B138BD8A3A PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x953 SWAP1 PUSH2 0x3952 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x990 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x995 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x9E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D7 SWAP1 PUSH2 0x39B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F7 PUSH2 0x1AA7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA07 PUSH2 0x1838 JUMP JUMPDEST SWAP1 POP PUSH2 0xA28 DUP2 DUP6 DUP6 PUSH2 0xA19 DUP6 DUP10 PUSH2 0x131F JUMP JUMPDEST PUSH2 0xA23 SWAP2 SWAP1 PUSH2 0x39D3 JUMP JUMPDEST PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6E SWAP1 PUSH2 0x3A75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xABF PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xACF PUSH2 0x1D12 JUMP JUMPDEST DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH32 0xB2442D3FF243B2C486384CA93DE99597291265A56CC11D3F99C27AB2A96C1F24 DUP2 PUSH1 0x40 MLOAD PUSH2 0xB05 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xB18 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0xB22 DUP3 DUP3 PUSH2 0x1D90 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB37 PUSH2 0xB31 PUSH2 0x1838 JUMP JUMPDEST DUP3 PUSH2 0x1D9E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB4 PUSH2 0xBAE PUSH2 0x1838 JUMP JUMPDEST DUP3 PUSH2 0x1DAC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC4F DUP2 PUSH20 0x45094071C4DAAF6A9A73B0A0F095A2B138BD8A3A DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x3519 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x3AAA JUMP JUMPDEST PUSH2 0x1EC6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9F PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x179F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF6 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0xD00 PUSH1 0x0 PUSH2 0x1F4C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD14 DUP3 PUSH2 0xD0E PUSH2 0x1838 JUMP JUMPDEST DUP4 PUSH2 0x1A0B JUMP JUMPDEST PUSH2 0xD1E DUP3 DUP3 PUSH2 0x1D9E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6B PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2012 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xDE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD7 SWAP1 PUSH2 0x3A75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEB PUSH1 0xA DUP4 PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xE01 SWAP1 PUSH2 0x3860 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE2D SWAP1 PUSH2 0x3860 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE7A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE4F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE7A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE5D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0xF6C JUMPI PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP3 PUSH2 0xF20 SWAP2 SWAP1 PUSH2 0x3AD7 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xF31 JUMPI PUSH2 0xF30 PUSH2 0x3B0B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFA0 PUSH2 0x1838 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFAE DUP3 DUP7 PUSH2 0x131F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEA SWAP1 PUSH2 0x3BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1000 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1017 PUSH2 0x1838 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0xB SLOAD DUP6 PUSH2 0x102B SWAP2 SWAP1 PUSH2 0x3BCC JUMP JUMPDEST PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x38F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP6 PUSH2 0x1045 SWAP2 SWAP1 PUSH2 0x3AD7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x2 DUP5 PUSH2 0x1058 SWAP2 SWAP1 PUSH2 0x3BCC JUMP JUMPDEST PUSH2 0x1062 SWAP2 SWAP1 PUSH2 0x38F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x8 DUP6 PUSH2 0x1075 SWAP2 SWAP1 PUSH2 0x3BCC JUMP JUMPDEST PUSH2 0x107F SWAP2 SWAP1 PUSH2 0x38F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x10A0 DUP6 PUSH20 0x45094071C4DAAF6A9A73B0A0F095A2B138BD8A3A DUP5 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x10BF DUP6 PUSH20 0x1A2118E056D6AF192E233C2C9CFB34E067DED1F8 DUP4 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x10CA DUP6 DUP10 DUP6 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1113 SWAP1 PUSH2 0x3C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x117E PUSH2 0x1176 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x115B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x2020 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x203A JUMP JUMPDEST SWAP1 POP PUSH2 0x1189 DUP2 PUSH2 0x2065 JUMP JUMPDEST DUP7 EQ PUSH2 0x11CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C1 SWAP1 PUSH2 0x3D23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D4 DUP2 DUP9 PUSH2 0x1DAC JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1220 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1217 SWAP1 PUSH2 0x3D8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x124F DUP13 PUSH2 0x2065 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1265 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1288 DUP3 PUSH2 0x2020 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1298 DUP3 DUP8 DUP8 DUP8 PUSH2 0x203A JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1308 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FF SWAP1 PUSH2 0x3E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1313 DUP11 DUP11 DUP11 PUSH2 0x1840 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13AE PUSH2 0x31C0 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1405 JUMPI PUSH2 0x1404 PUSH2 0x3B0B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14BE PUSH2 0x1D12 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x152E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1525 SWAP1 PUSH2 0x3EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1537 DUP2 PUSH2 0x1F4C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1544 DUP3 DUP3 PUSH2 0x15C7 JUMP JUMPDEST PUSH2 0x154C PUSH2 0x20C3 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1572 PUSH2 0x8CF JUMP JUMPDEST GT ISZERO PUSH2 0x15B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15AA SWAP1 PUSH2 0x3F80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15C1 PUSH1 0xA PUSH2 0x171E DUP4 PUSH2 0x20E7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162E SWAP1 PUSH2 0x3FEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1643 PUSH1 0x0 DUP4 DUP4 PUSH2 0x23B6 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1655 SWAP2 SWAP1 PUSH2 0x39D3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1706 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x171A PUSH1 0x0 DUP4 DUP4 PUSH2 0x23BB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x172C SWAP2 SWAP1 PUSH2 0x39D3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1797 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x178E SWAP1 PUSH2 0x407E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x17EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E1 SWAP1 PUSH2 0x4110 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17FD DUP4 DUP4 DUP4 PUSH2 0x181D JUMP JUMPDEST PUSH2 0x1818 PUSH2 0x1809 DUP5 PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x1812 DUP5 PUSH2 0xB3A JUMP JUMPDEST DUP4 PUSH2 0x23CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1830 SWAP2 SWAP1 PUSH2 0x3AD7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A7 SWAP1 PUSH2 0x41A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1920 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1917 SWAP1 PUSH2 0x4234 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x19FE SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A17 DUP5 DUP5 PUSH2 0x131F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1A91 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1A83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7A SWAP1 PUSH2 0x42A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A90 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1840 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1AA2 DUP4 DUP4 DUP4 PUSH2 0x25C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1B23 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1B50 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1BBE JUMP JUMPDEST PUSH2 0x1BBB PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x283C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x1C37 JUMPI PUSH1 0x0 PUSH2 0x1BE5 DUP5 PUSH2 0x2876 JUMP JUMPDEST DUP5 PUSH2 0x1BF0 SWAP2 SWAP1 PUSH2 0x3AD7 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1BFD DUP9 DUP4 PUSH2 0x2970 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1C25 JUMPI DUP1 SWAP2 POP PUSH2 0x1C35 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1C32 SWAP2 SWAP1 PUSH2 0x39D3 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1C97 JUMPI PUSH1 0x0 PUSH2 0x1C4C DUP4 DUP4 PUSH2 0x2985 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1C59 DUP9 DUP4 PUSH2 0x2970 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1C81 JUMPI DUP1 SWAP2 POP PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1C8E SWAP2 SWAP1 PUSH2 0x39D3 JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x1CE6 JUMPI PUSH2 0x1CB5 DUP7 PUSH1 0x1 DUP4 PUSH2 0x1CB0 SWAP2 SWAP1 PUSH2 0x3AD7 JUMP JUMPDEST PUSH2 0x2970 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D1A PUSH2 0x1838 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D38 PUSH2 0xD72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D85 SWAP1 PUSH2 0x430C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1D9A DUP3 DUP3 PUSH2 0x153A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1DA8 DUP3 DUP3 PUSH2 0x29AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB7 DUP4 PUSH2 0xB3A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DC4 DUP5 PUSH2 0xCA6 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1EC0 DUP3 DUP5 DUP4 PUSH2 0x23CB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1F47 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1EE5 SWAP3 SWAP2 SWAP1 PUSH2 0x432C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x29C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2033 PUSH2 0x202D PUSH2 0x1AA7 JUMP JUMPDEST DUP4 PUSH2 0x2A90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x204B DUP8 DUP8 DUP8 DUP8 PUSH2 0x2AC3 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x2058 DUP2 PUSH2 0x2BA6 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x20B2 DUP2 PUSH2 0x2012 JUMP JUMPDEST SWAP2 POP PUSH2 0x20BD DUP2 PUSH2 0x2D14 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 EQ PUSH2 0x21B6 JUMPI PUSH2 0x2112 DUP8 PUSH1 0x1 DUP5 PUSH2 0x210D SWAP2 SWAP1 PUSH2 0x3AD7 JUMP JUMPDEST PUSH2 0x2970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH2 0x2227 DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x2242 JUMPI POP NUMBER DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x22BC JUMPI PUSH2 0x2250 DUP4 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x2266 DUP9 PUSH1 0x1 DUP6 PUSH2 0x2261 SWAP2 SWAP1 PUSH2 0x3AD7 JUMP JUMPDEST PUSH2 0x2970 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x23AC JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x22D1 NUMBER PUSH2 0x179F JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22E5 DUP7 PUSH2 0x1734 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x23C6 DUP4 DUP4 DUP4 PUSH2 0x17F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2407 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x25BF JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24E5 JUMPI PUSH1 0x0 DUP1 PUSH2 0x248E PUSH1 0x9 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1822 DUP6 PUSH2 0x20E7 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x24DA SWAP3 SWAP2 SWAP1 PUSH2 0x4355 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25BE JUMPI PUSH1 0x0 DUP1 PUSH2 0x2567 PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x171E DUP6 PUSH2 0x20E7 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x25B3 SWAP3 SWAP2 SWAP1 PUSH2 0x4355 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2634 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262B SWAP1 PUSH2 0x43F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x26A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269B SWAP1 PUSH2 0x4482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26AF DUP4 DUP4 DUP4 PUSH2 0x23B6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2735 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x272C SWAP1 PUSH2 0x4514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2823 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x2836 DUP5 DUP5 DUP5 PUSH2 0x23BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2857 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0x2889 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x296B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2896 DUP5 PUSH2 0x2D2A JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28B0 JUMPI PUSH2 0x28AF PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28C9 JUMPI PUSH2 0x28C8 PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28E2 JUMPI PUSH2 0x28E1 PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28FB JUMPI PUSH2 0x28FA PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2914 JUMPI PUSH2 0x2913 PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x292D JUMPI PUSH2 0x292C PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2946 JUMPI PUSH2 0x2945 PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x2967 DUP2 DUP3 DUP6 DUP2 PUSH2 0x2961 JUMPI PUSH2 0x2960 PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DIV PUSH2 0x2E0B JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x2996 SWAP2 SWAP1 PUSH2 0x38F0 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x29A3 SWAP2 SWAP1 PUSH2 0x39D3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29B5 DUP3 DUP3 PUSH2 0x2E24 JUMP JUMPDEST PUSH2 0x29C3 PUSH1 0xA PUSH2 0x1822 DUP4 PUSH2 0x20E7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A2B DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2FF2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2A8B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2A4B SWAP2 SWAP1 PUSH2 0x45B3 JUMP JUMPDEST PUSH2 0x2A8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A81 SWAP1 PUSH2 0x4652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2AA5 SWAP3 SWAP2 SWAP1 PUSH2 0x46EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2AFE JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x2B9D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2B23 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4721 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2B94 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x2B9D JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2BBA JUMPI PUSH2 0x2BB9 PUSH2 0x4766 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2BCD JUMPI PUSH2 0x2BCC PUSH2 0x4766 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2BD8 JUMPI PUSH2 0x2D11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2BEC JUMPI PUSH2 0x2BEB PUSH2 0x4766 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2BFF JUMPI PUSH2 0x2BFE PUSH2 0x4766 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2C40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C37 SWAP1 PUSH2 0x47E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2C54 JUMPI PUSH2 0x2C53 PUSH2 0x4766 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2C67 JUMPI PUSH2 0x2C66 PUSH2 0x4766 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2CA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C9F SWAP1 PUSH2 0x484D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2CBC JUMPI PUSH2 0x2CBB PUSH2 0x4766 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2CCF JUMPI PUSH2 0x2CCE PUSH2 0x4766 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2D10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D07 SWAP1 PUSH2 0x48DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2D4C JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2D67 JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2D82 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2D9D JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2DB8 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2DD3 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2DEE JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2E02 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2E1A JUMPI DUP2 PUSH2 0x2E1C JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2E94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E8B SWAP1 PUSH2 0x4971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2EA0 DUP3 PUSH1 0x0 DUP4 PUSH2 0x23B6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2F26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F1D SWAP1 PUSH2 0x4A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2FD9 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x2FED DUP4 PUSH1 0x0 DUP5 PUSH2 0x23BB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3001 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x300A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x304F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3046 SWAP1 PUSH2 0x4A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3078 SWAP2 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x30B5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x30BA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x30CB DUP8 DUP4 DUP4 DUP8 PUSH2 0x30D7 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x313A JUMPI PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x3132 JUMPI PUSH2 0x30F2 DUP6 PUSH2 0x314D JUMP JUMPDEST PUSH2 0x3131 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3128 SWAP1 PUSH2 0x4B54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x3145 JUMP JUMPDEST PUSH2 0x3144 DUP4 DUP4 PUSH2 0x3170 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x3183 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31B7 SWAP2 SWAP1 PUSH2 0x3297 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3238 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x321D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3247 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3269 DUP3 PUSH2 0x31FE JUMP JUMPDEST PUSH2 0x3273 DUP2 DUP6 PUSH2 0x3209 JUMP JUMPDEST SWAP4 POP PUSH2 0x3283 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x321A JUMP JUMPDEST PUSH2 0x328C DUP2 PUSH2 0x324D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32B1 DUP2 DUP5 PUSH2 0x325E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E9 DUP3 PUSH2 0x32BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32F9 DUP2 PUSH2 0x32DE JUMP JUMPDEST DUP2 EQ PUSH2 0x3304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3316 DUP2 PUSH2 0x32F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x332F DUP2 PUSH2 0x331C JUMP JUMPDEST DUP2 EQ PUSH2 0x333A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x334C DUP2 PUSH2 0x3326 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3369 JUMPI PUSH2 0x3368 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3377 DUP6 DUP3 DUP7 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3388 DUP6 DUP3 DUP7 ADD PUSH2 0x333D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33A7 DUP2 PUSH2 0x3392 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x339E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33D1 DUP2 PUSH2 0x331C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x340B JUMPI PUSH2 0x340A PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3419 DUP7 DUP3 DUP8 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x342A DUP7 DUP3 DUP8 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x343B DUP7 DUP3 DUP8 ADD PUSH2 0x333D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x345B DUP2 PUSH2 0x3445 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3476 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3452 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x348F DUP2 PUSH2 0x347C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34AA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3486 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34C6 JUMPI PUSH2 0x34C5 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34D4 DUP5 DUP3 DUP6 ADD PUSH2 0x333D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34F3 JUMPI PUSH2 0x34F2 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3501 DUP5 DUP3 DUP6 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3513 DUP2 PUSH2 0x32DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x352E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x350A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x354D DUP2 PUSH2 0x3534 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3568 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3544 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3577 DUP2 PUSH2 0x3445 JUMP JUMPDEST DUP2 EQ PUSH2 0x3582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3594 DUP2 PUSH2 0x356E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35A3 DUP2 PUSH2 0x347C JUMP JUMPDEST DUP2 EQ PUSH2 0x35AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x35C0 DUP2 PUSH2 0x359A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x35E3 JUMPI PUSH2 0x35E2 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35F1 DUP10 DUP3 DUP11 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x3602 DUP10 DUP3 DUP11 ADD PUSH2 0x333D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x3613 DUP10 DUP3 DUP11 ADD PUSH2 0x333D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x3624 DUP10 DUP3 DUP11 ADD PUSH2 0x3585 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3635 DUP10 DUP3 DUP11 ADD PUSH2 0x35B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x3646 DUP10 DUP3 DUP11 ADD PUSH2 0x35B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3672 JUMPI PUSH2 0x3671 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3680 DUP11 DUP3 DUP12 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x3691 DUP11 DUP3 DUP12 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x36A2 DUP11 DUP3 DUP12 ADD PUSH2 0x333D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x36B3 DUP11 DUP3 DUP12 ADD PUSH2 0x333D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x36C4 DUP11 DUP3 DUP12 ADD PUSH2 0x3585 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x36D5 DUP11 DUP3 DUP12 ADD PUSH2 0x35B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x36E6 DUP11 DUP3 DUP12 ADD PUSH2 0x35B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x370C JUMPI PUSH2 0x370B PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x371A DUP6 DUP3 DUP7 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x372B DUP6 DUP3 DUP7 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x373E DUP2 PUSH2 0x3534 JUMP JUMPDEST DUP2 EQ PUSH2 0x3749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x375B DUP2 PUSH2 0x3735 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3778 JUMPI PUSH2 0x3777 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3786 DUP6 DUP3 DUP7 ADD PUSH2 0x3307 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3797 DUP6 DUP3 DUP7 ADD PUSH2 0x374C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x37AA DUP2 PUSH2 0x3534 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37E1 DUP2 PUSH2 0x37B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x37FD PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x37A1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3810 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x37D8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x382B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3878 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x388C JUMPI PUSH2 0x388B PUSH2 0x3831 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38FB DUP3 PUSH2 0x331C JUMP JUMPDEST SWAP2 POP PUSH2 0x3906 DUP4 PUSH2 0x331C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3916 JUMPI PUSH2 0x3915 PUSH2 0x3892 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x393C PUSH1 0x0 DUP4 PUSH2 0x3921 JUMP JUMPDEST SWAP2 POP PUSH2 0x3947 DUP3 PUSH2 0x392C JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x395D DUP3 PUSH2 0x392F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64204574686572000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x399D PUSH1 0x14 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x39A8 DUP3 PUSH2 0x3967 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39CC DUP2 PUSH2 0x3990 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39DE DUP3 PUSH2 0x331C JUMP JUMPDEST SWAP2 POP PUSH2 0x39E9 DUP4 PUSH2 0x331C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3A1E JUMPI PUSH2 0x3A1D PUSH2 0x38C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A5F PUSH1 0x1F DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A6A DUP3 PUSH2 0x3A29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A8E DUP2 PUSH2 0x3A52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3AA4 DUP2 PUSH2 0x3326 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AC0 JUMPI PUSH2 0x3ABF PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3ACE DUP5 DUP3 DUP6 ADD PUSH2 0x3A95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE2 DUP3 PUSH2 0x331C JUMP JUMPDEST SWAP2 POP PUSH2 0x3AED DUP4 PUSH2 0x331C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3B00 JUMPI PUSH2 0x3AFF PUSH2 0x38C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B96 PUSH1 0x25 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BA1 DUP3 PUSH2 0x3B3A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BC5 DUP2 PUSH2 0x3B89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BD7 DUP3 PUSH2 0x331C JUMP JUMPDEST SWAP2 POP PUSH2 0x3BE2 DUP4 PUSH2 0x331C JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3C1B JUMPI PUSH2 0x3C1A PUSH2 0x38C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5C PUSH1 0x1D DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C67 DUP3 PUSH2 0x3C26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C8B DUP2 PUSH2 0x3C4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3CA7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x3CB4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x350A JUMP JUMPDEST PUSH2 0x3CC1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x33C8 JUMP JUMPDEST PUSH2 0x3CCE PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x33C8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D0D PUSH1 0x19 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D18 DUP3 PUSH2 0x3CD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D3C DUP2 PUSH2 0x3D00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D79 PUSH1 0x1D DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D84 DUP3 PUSH2 0x3D43 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DA8 DUP2 PUSH2 0x3D6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3DC4 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x3DD1 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x350A JUMP JUMPDEST PUSH2 0x3DDE PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x350A JUMP JUMPDEST PUSH2 0x3DEB PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x33C8 JUMP JUMPDEST PUSH2 0x3DF8 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x33C8 JUMP JUMPDEST PUSH2 0x3E05 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x33C8 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E46 PUSH1 0x1E DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E51 DUP3 PUSH2 0x3E10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E75 DUP2 PUSH2 0x3E39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED8 PUSH1 0x26 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EE3 DUP3 PUSH2 0x3E7C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F07 DUP2 PUSH2 0x3ECB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F6A PUSH1 0x30 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F75 DUP3 PUSH2 0x3F0E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F99 DUP2 PUSH2 0x3F5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FD6 PUSH1 0x1F DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FE1 DUP3 PUSH2 0x3FA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4005 DUP2 PUSH2 0x3FC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4068 PUSH1 0x27 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4073 DUP3 PUSH2 0x400C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4097 DUP2 PUSH2 0x405B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40FA PUSH1 0x26 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4105 DUP3 PUSH2 0x409E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4129 DUP2 PUSH2 0x40ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x418C PUSH1 0x24 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4197 DUP3 PUSH2 0x4130 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x41BB DUP2 PUSH2 0x417F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x421E PUSH1 0x22 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4229 DUP3 PUSH2 0x41C2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x424D DUP2 PUSH2 0x4211 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x428A PUSH1 0x1D DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4295 DUP3 PUSH2 0x4254 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42B9 DUP2 PUSH2 0x427D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F6 PUSH1 0x20 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4301 DUP3 PUSH2 0x42C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4325 DUP2 PUSH2 0x42E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4341 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x350A JUMP JUMPDEST PUSH2 0x434E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x33C8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x436A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x33C8 JUMP JUMPDEST PUSH2 0x4377 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x33C8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43DA PUSH1 0x25 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x43E5 DUP3 PUSH2 0x437E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4409 DUP2 PUSH2 0x43CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x446C PUSH1 0x23 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4477 DUP3 PUSH2 0x4410 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x449B DUP2 PUSH2 0x445F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44FE PUSH1 0x26 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4509 DUP3 PUSH2 0x44A2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x452D DUP2 PUSH2 0x44F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4549 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x4556 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x4563 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x4570 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x33C8 JUMP JUMPDEST PUSH2 0x457D PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x350A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4590 DUP2 PUSH2 0x3392 JUMP JUMPDEST DUP2 EQ PUSH2 0x459B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x45AD DUP2 PUSH2 0x4587 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45C9 JUMPI PUSH2 0x45C8 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x45D7 DUP5 DUP3 DUP6 ADD PUSH2 0x459E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x463C PUSH1 0x2A DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4647 DUP3 PUSH2 0x45E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x466B DUP2 PUSH2 0x462F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46B3 PUSH1 0x2 DUP4 PUSH2 0x4672 JUMP JUMPDEST SWAP2 POP PUSH2 0x46BE DUP3 PUSH2 0x467D JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x46E4 PUSH2 0x46DF DUP3 PUSH2 0x347C JUMP JUMPDEST PUSH2 0x46C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46F5 DUP3 PUSH2 0x46A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4701 DUP3 DUP6 PUSH2 0x46D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x4711 DUP3 DUP5 PUSH2 0x46D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4736 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x4743 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3452 JUMP JUMPDEST PUSH2 0x4750 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3486 JUMP JUMPDEST PUSH2 0x475D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3486 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47CB PUSH1 0x18 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x47D6 DUP3 PUSH2 0x4795 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47FA DUP2 PUSH2 0x47BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4837 PUSH1 0x1F DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4842 DUP3 PUSH2 0x4801 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4866 DUP2 PUSH2 0x482A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48C9 PUSH1 0x22 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x48D4 DUP3 PUSH2 0x486D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48F8 DUP2 PUSH2 0x48BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495B PUSH1 0x21 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4966 DUP3 PUSH2 0x48FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x498A DUP2 PUSH2 0x494E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49ED PUSH1 0x22 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x49F8 DUP3 PUSH2 0x4991 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A1C DUP2 PUSH2 0x49E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A7F PUSH1 0x26 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A8A DUP3 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4AAE DUP2 PUSH2 0x4A72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4ACB DUP3 PUSH2 0x4AB5 JUMP JUMPDEST PUSH2 0x4AD5 DUP2 DUP6 PUSH2 0x3921 JUMP JUMPDEST SWAP4 POP PUSH2 0x4AE5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x321A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AFD DUP3 DUP5 PUSH2 0x4AC0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3E PUSH1 0x1D DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B49 DUP3 PUSH2 0x4B08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B6D DUP2 PUSH2 0x4B31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xFB SELFDESTRUCT 0xF6 0xB9 DIV 0xD5 0x2C 0xFB ADDMOD DUP9 CHAINID TIMESTAMP 0xB7 0x24 PC 0xB4 LOG2 ADD ADDMOD SWAP4 CALLER RETURN DUP6 0xF9 RETURN 0xE1 SWAP13 KECCAK256 0xBD 0xD1 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ","sourceMap":"538:2607:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1025:97:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1128:270:19;;;;;;;;;;;;;:::i;:::-;;3091:91:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2879:113:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2825:265:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1635:123:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1764:93;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;578:89:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2218:126:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5648:112;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1404:225:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1981:149:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;973:161:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2629:126:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3369:256:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2423:209:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1863:541:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5837:574:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1942:626:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3974:149:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1758:148:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2154:98:2;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;1025:97:19:-;1068:7;1094:21;1087:28;;1025:97;:::o;3242:106:2:-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;1128:270:19:-;1172:20;1219:1;1195:21;:25;;;;:::i;:::-;1172:48;;1232:9;224:42:18;1247:41:19;;1309:12;1247:88;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1231:104;;;1362:4;1354:12;;:4;:12;;;1346:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1162:236;;1128:270::o;3091:91:2:-;3149:5;3173:2;3166:9;;3091:91;:::o;2879:113:7:-;2939:7;2965:20;:18;:20::i;:::-;2958:27;;2879:113;:::o;5871:234:2:-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;2825:265:5:-;2923:7;2964:12;2950:11;:26;2942:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3029:54;3048:12;:21;3061:7;3048:21;;;;;;;;;;;;;;;3071:11;3029:18;:54::i;:::-;3022:61;;2825:265;;;;:::o;1635:123:19:-;1094:13:0;:11;:13::i;:::-;1709:3:19::1;1696:10;:16;;;;1727:24;1747:3;1727:24;;;;;;:::i;:::-;;;;;;;;1635:123:::0;:::o;1764:93::-;1094:13:0;:11;:13::i;:::-;1833:17:19::1;1839:2;1843:6;1833:5;:17::i;:::-;1764:93:::0;;:::o;578:89:4:-;633:27;639:12;:10;:12::i;:::-;653:6;633:5;:27::i;:::-;578:89;:::o;2218:126:5:-;2292:7;2318:10;:19;2329:7;2318:19;;;;;;;;;;;;;;;;;;;;;;;;;2311:26;;2218:126;;;:::o;5648:112::-;5719:34;5729:12;:10;:12::i;:::-;5743:9;5719;:34::i;:::-;5648:112;:::o;1404:225:19:-;1461:161;1504:5;224:42:18;1581:5:19;1574:23;;;1606:4;1574:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1461:22;:161::i;:::-;1404:225;:::o;1981:149:5:-;2051:6;2076:47;2094:12;:21;2107:7;2094:21;;;;;;;;;;;;;;;:28;;;;2076:17;:47::i;:::-;2069:54;;1981:149;;;:::o;3406:125:2:-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;973:161:4:-;1049:46;1065:7;1074:12;:10;:12::i;:::-;1088:6;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;:::-;973:161;;:::o;2629:126:7:-;2698:7;2724:24;:7;:14;2732:5;2724:14;;;;;;;;;;;;;;;:22;:24::i;:::-;2717:31;;2629:126;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;3369:256:5:-;3456:7;3497:12;3483:11;:26;3475:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3562:56;3581:23;3606:11;3562:18;:56::i;:::-;3555:63;;3369:256;;;:::o;2365:102:2:-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;2423:209:5:-;2496:7;2515:11;2529:12;:21;2542:7;2529:21;;;;;;;;;;;;;;;:28;;;;2515:42;;2581:1;2574:3;:8;:51;;2589:12;:21;2602:7;2589:21;;;;;;;;;;;;;;;2617:1;2611:3;:7;;;;:::i;:::-;2589:30;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;;;;;;;;;2574:51;;;2585:1;2574:51;2567:58;;;;;2423:209;;;:::o;6592:427:2:-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;1863:541:19:-;1958:4;1978:13;1994:12;:10;:12::i;:::-;1978:28;;2017:11;2055:3;2041:10;;2032:6;:19;;;;:::i;:::-;2031:27;;;;:::i;:::-;2017:41;;2068:19;2099:3;2090:6;:12;;;;:::i;:::-;2068:34;;2113:15;2143:2;2138:1;2132:3;:7;;;;:::i;:::-;2131:14;;;;:::i;:::-;2113:32;;2155:20;2190:2;2185:1;2179:3;:7;;;;:::i;:::-;2178:14;;;;:::i;:::-;2155:37;;2203:63;2213:5;224:42:18;2258:7:19;2203:9;:63::i;:::-;2276:57;2286:5;482:42:18;2320:12:19;2276:9;:57::i;:::-;2343:33;2353:5;2360:2;2364:11;2343:9;:33::i;:::-;2393:4;2386:11;;;;;;;1863:541;;;;:::o;5837:574:5:-;6056:6;6037:15;:25;;6029:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;6106:14;6123:169;6150:87;1447:71;6210:9;6221:5;6228:6;6177:58;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6167:69;;;;;;6150:16;:87::i;:::-;6251:1;6266;6281;6123:13;:169::i;:::-;6106:186;;6319:17;6329:6;6319:9;:17::i;:::-;6310:5;:26;6302:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;6376:28;6386:6;6394:9;6376;:28::i;:::-;6019:392;5837:574;;;;;;:::o;1942:626:7:-;2177:8;2158:15;:27;;2150:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2230:18;1137:95;2290:5;2297:7;2306:5;2313:16;2323:5;2313:9;:16::i;:::-;2331:8;2261:79;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2251:90;;;;;;2230:111;;2352:12;2367:28;2384:10;2367:16;:28::i;:::-;2352:43;;2406:14;2423:28;2437:4;2443:1;2446;2449;2423:13;:28::i;:::-;2406:45;;2479:5;2469:15;;:6;:15;;;2461:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2530:31;2539:5;2546:7;2555:5;2530:8;:31::i;:::-;2140:428;;;1942:626;;;;;;;:::o;3974:149:2:-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;1758:148:5:-;1837:17;;:::i;:::-;1873:12;:21;1886:7;1873:21;;;;;;;;;;;;;;;1895:3;1873:26;;;;;;;;;;:::i;:::-;;;;;;;;;1866:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1758:148;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;6705:285:5:-;6789:28;6801:7;6810:6;6789:11;:28::i;:::-;6852:12;:10;:12::i;:::-;6835:29;;:13;:11;:13::i;:::-;:29;;6827:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;6928:55;6945:23;6970:4;6976:6;6928:16;:55::i;:::-;;;6705:285;;:::o;8567:535:2:-;8669:1;8650:21;;:7;:21;;;;8642:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8718:49;8747:1;8751:7;8760:6;8718:20;:49::i;:::-;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;;;;;8968:6;8946:9;:18;8956:7;8946:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;9020:7;8999:37;;9016:1;8999:37;;;9029:6;8999:37;;;;;;:::i;:::-;;;;;;;;9047:48;9075:1;9079:7;9088:6;9047:19;:48::i;:::-;8567:535;;:::o;9575:96:5:-;9633:7;9663:1;9659;:5;;;;:::i;:::-;9652:12;;9575:96;;;;:::o;2836:192:17:-;2893:7;2929:17;2920:26;;:5;:26;;2912:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3015:5;3000:21;;2836:192;;;:::o;15264:187::-;15320:6;15355:16;15346:25;;:5;:25;;15338:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15438:5;15424:20;;15264:187;;;:::o;7409:254:5:-;7546:43;7572:4;7578:2;7582:6;7546:25;:43::i;:::-;7600:56;7617:15;7627:4;7617:9;:15::i;:::-;7634:13;7644:2;7634:9;:13::i;:::-;7649:6;7600:16;:56::i;:::-;7409:254;;;:::o;12889:120:2:-;;;;:::o;9677:101:5:-;9740:7;9770:1;9766;:5;;;;:::i;:::-;9759:12;;9677:101;;;;:::o;640:96:11:-;693:7;719:10;712:17;;640:96;:::o;10504:370:2:-;10652:1;10635:19;;:5;:19;;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;2478:159:19:-;2597:33;2613:4;2619:2;2623:6;2597:15;:33::i;:::-;2478:159;;;:::o;3152:308:15:-;3205:7;3245:12;3228:29;;3236:4;3228:29;;;:66;;;;;3278:16;3261:13;:33;3228:66;3224:230;;;3317:24;3310:31;;;;3224:230;3379:64;3401:10;3413:12;3427:15;3379:21;:64::i;:::-;3372:71;;3152:308;;:::o;3709:1858:5:-;3808:7;4896:14;4913:5;:12;;;;4896:29;;4936:11;4961:12;4976:6;4961:21;;5006:1;4997:6;:10;4993:244;;;5023:11;5046:17;5056:6;5046:9;:17::i;:::-;5037:6;:26;;;;:::i;:::-;5023:40;;5119:11;5081:25;5095:5;5102:3;5081:13;:25::i;:::-;:35;;;;;;;;;;;;:49;;;5077:150;;;5157:3;5150:10;;5077:150;;;5211:1;5205:3;:7;;;;:::i;:::-;5199:13;;5077:150;5009:228;4993:244;5247;5260:4;5254:3;:10;5247:244;;;5280:11;5294:23;5307:3;5312:4;5294:12;:23::i;:::-;5280:37;;5373:11;5335:25;5349:5;5356:3;5335:13;:25::i;:::-;:35;;;;;;;;;;;;:49;;;5331:150;;;5411:3;5404:10;;5331:150;;;5465:1;5459:3;:7;;;;:::i;:::-;5453:13;;5331:150;5266:225;5247:244;;;5516:1;5508:4;:9;:52;;5524:30;5538:5;5552:1;5545:4;:8;;;;:::i;:::-;5524:13;:30::i;:::-;:36;;;;;;;;;;;;5508:52;;;5520:1;5508:52;5501:59;;;;;;;3709:1858;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2847:140:19:-;2957:23;2969:2;2973:6;2957:11;:23::i;:::-;2847:140;;:::o;2993:150::-;3108:28;3120:7;3129:6;3108:11;:28::i;:::-;2993:150;;:::o;7834:380:5:-;7918:23;7944:20;7954:9;7944;:20::i;:::-;7918:46;;7974:24;8001:20;8011:9;8001;:20::i;:::-;7974:47;;8055:9;8031:10;:21;8042:9;8031:21;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;8124:9;8080:54;;8107:15;8080:54;;8096:9;8080:54;;;;;;;;;;;;8145:62;8162:15;8179:9;8190:16;8145;:62::i;:::-;7908:306;;7834:380;;:::o;763:205:9:-;875:86;895:5;925:23;;;950:2;954:5;902:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;827:112:12:-;892:7;918;:14;;;911:21;;827:112;;;:::o;4348:165:15:-;4425:7;4451:55;4473:20;:18;:20::i;:::-;4495:10;4451:21;:55::i;:::-;4444:62;;4348:165;;;:::o;6696:270:14:-;6819:7;6839:17;6858:18;6880:25;6891:4;6897:1;6900;6903;6880:10;:25::i;:::-;6838:67;;;;6915:18;6927:5;6915:11;:18::i;:::-;6950:9;6943:16;;;;6696:270;;;;;;:::o;3123:203:7:-;3183:15;3210:30;3243:7;:14;3251:5;3243:14;;;;;;;;;;;;;;;3210:47;;3277:15;:5;:13;:15::i;:::-;3267:25;;3302:17;:5;:15;:17::i;:::-;3200:126;3123:203;;;:::o;6513:103:5:-;6566:7;6592:17;6585:24;;6513:103;:::o;8853:716::-;9023:17;9042;9071:11;9085:5;:12;;;;9071:26;;9108:25;9143:1;9136:3;:8;:59;;9166:29;9180:5;9193:1;9187:3;:7;;;;:::i;:::-;9166:13;:29::i;:::-;9136:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9147:16;;;;;;;;9158:1;9147:16;;;;;;9161:1;9147:16;;;;;9136:59;9108:87;;9218:7;:13;;;9206:25;;;;9253:20;9256:9;9267:5;9253:2;:20;;:::i;:::-;9241:32;;9294:1;9288:3;:7;:44;;;;;9320:12;9299:7;:17;;;:33;;;9288:44;9284:279;;;9386:29;9405:9;9386:18;:29::i;:::-;9348;9362:5;9375:1;9369:3;:7;;;;:::i;:::-;9348:13;:29::i;:::-;:35;;;:67;;;;;;;;;;;;;;;;;;9284:279;;;9446:5;9457:94;;;;;;;;9480:31;9498:12;9480:17;:31::i;:::-;9457:94;;;;;;9520:29;9539:9;9520:18;:29::i;:::-;9457:94;;;;;9446:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9284:279;9061:508;;8853:716;;;;;;:::o;12180:121:2:-;;;;:::o;2643:198:19:-;2791:43;2817:4;2823:2;2827:6;2791:25;:43::i;:::-;2643:198;;;:::o;8220:627:5:-;8347:3;8340:10;;:3;:10;;;;:24;;;;;8363:1;8354:6;:10;8340:24;8336:505;;;8399:1;8384:17;;:3;:17;;;8380:221;;8422:17;8441;8462:54;8479:12;:17;8492:3;8479:17;;;;;;;;;;;;;;;8498:9;8509:6;8462:16;:54::i;:::-;8421:95;;;;8560:3;8539:47;;;8565:9;8576;8539:47;;;;;;;:::i;:::-;;;;;;;;8403:198;;8380:221;8634:1;8619:17;;:3;:17;;;8615:216;;8657:17;8676;8697:49;8714:12;:17;8727:3;8714:17;;;;;;;;;;;;;;;8733:4;8739:6;8697:16;:49::i;:::-;8656:90;;;;8790:3;8769:47;;;8795:9;8806;8769:47;;;;;;;:::i;:::-;;;;;;;;8638:193;;8615:216;8336:505;8220:627;;;:::o;7473:818:2:-;7615:1;7599:18;;:4;:18;;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;3466:257:15:-;3606:7;3653:8;3663;3673:11;3686:13;3709:4;3642:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3632:84;;;;;;3625:91;;3466:257;;;;;:::o;6280:1642:16:-;6328:7;6356:1;6351;:6;6347:45;;;6380:1;6373:8;;;;6347:45;7071:14;7105:1;7094:7;7099:1;7094:4;:7::i;:::-;:12;;7088:1;:19;;7071:36;;7566:1;7555:6;7551:1;:10;;;;;:::i;:::-;;;7542:6;:19;7541:26;;7532:35;;7615:1;7604:6;7600:1;:10;;;;;:::i;:::-;;;7591:6;:19;7590:26;;7581:35;;7664:1;7653:6;7649:1;:10;;;;;:::i;:::-;;;7640:6;:19;7639:26;;7630:35;;7713:1;7702:6;7698:1;:10;;;;;:::i;:::-;;;7689:6;:19;7688:26;;7679:35;;7762:1;7751:6;7747:1;:10;;;;;:::i;:::-;;;7738:6;:19;7737:26;;7728:35;;7811:1;7800:6;7796:1;:10;;;;;:::i;:::-;;;7787:6;:19;7786:26;;7777:35;;7860:1;7849:6;7845:1;:10;;;;;:::i;:::-;;;7836:6;:19;7835:26;;7826:35;;7882:23;7886:6;7898;7894:1;:10;;;;;:::i;:::-;;;7882:3;:23::i;:::-;7875:30;;;6280:1642;;;;:::o;9784:239:5:-;9870:25;9940:10;9937:1;9930:21;10003:3;9996:4;9993:1;9983:18;9979:28;9964:43;;9784:239;;;;:::o;805:153:16:-;867:7;950:1;945;941;:5;940:11;;;;:::i;:::-;935:1;931;:5;930:21;;;;:::i;:::-;923:28;;805:153;;;;:::o;7079:190:5:-;7163:28;7175:7;7184:6;7163:11;:28::i;:::-;7202:60;7219:23;7244:9;7255:6;7202:16;:60::i;:::-;;;7079:190;;:::o;3747:706:9:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;8341:194:14:-;8434:7;8499:15;8516:10;8470:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8460:68;;;;;;8453:75;;8341:194;;;;:::o;5069:1494::-;5195:7;5204:12;6119:66;6114:1;6106:10;;:79;6102:161;;;6217:1;6221:30;6201:51;;;;;;6102:161;6357:14;6374:24;6384:4;6390:1;6393;6396;6374:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6357:41;;6430:1;6412:20;;:6;:20;;;6408:101;;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;6535:20;6519:37;;;;;5069:1494;;;;;;;;:::o;570:511::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:441;;;683:7;;634:441;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:345;;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:345;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:236;;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:236;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:114;;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:114;570:511;;:::o;945:123:12:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;8383:983:16:-;8435:7;8454:14;8471:1;8454:18;;8525:1;8519:3;8510:5;:12;;:16;8506:99;;;8556:3;8546:13;;;;;8587:3;8577:13;;;;8506:99;8636:1;8631:2;8622:5;:11;;:15;8618:96;;;8667:2;8657:12;;;;;8697:2;8687:12;;;;8618:96;8745:1;8740:2;8731:5;:11;;:15;8727:96;;;8776:2;8766:12;;;;;8806:2;8796:12;;;;8727:96;8854:1;8849:2;8840:5;:11;;:15;8836:96;;;8885:2;8875:12;;;;;8915:2;8905:12;;;;8836:96;8962:1;8958;8949:5;:10;;:14;8945:93;;;8993:1;8983:11;;;;;9022:1;9012:11;;;;8945:93;9068:1;9064;9055:5;:10;;:14;9051:93;;;9099:1;9089:11;;;;;9128:1;9118:11;;;;9051:93;9174:1;9170;9161:5;:10;;:14;9157:93;;;9205:1;9195:11;;;;;9234:1;9224:11;;;;9157:93;9280:1;9276;9267:5;:10;;:14;9263:64;;;9311:1;9301:11;;;;9263:64;9353:6;9346:13;;;8383:983;;;:::o;588:104::-;646:7;676:1;672;:5;:13;;684:1;672:13;;;680:1;672:13;665:20;;588:104;;;;:::o;9422:659:2:-;9524:1;9505:21;;:7;:21;;;;9497:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9575:49;9596:7;9613:1;9617:6;9575:20;:49::i;:::-;9635:22;9660:9;:18;9670:7;9660:18;;;;;;;;;;;;;;;;9635:43;;9714:6;9696:14;:24;;9688:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9831:6;9814:14;:23;9793:9;:18;9803:7;9793:18;;;;;;;;;;;;;;;:44;;;;9946:6;9930:12;;:22;;;;;;;;;;;10004:1;9978:37;;9987:7;9978:37;;;10008:6;9978:37;;;;;;:::i;:::-;;;;;;;;10026:48;10046:7;10063:1;10067:6;10026:19;:48::i;:::-;9487:594;9422:659;;:::o;3873:223:10:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;;3873:223;;;;;:::o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;;;;4960:446;;;;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;;7916:18;7927:6;7916:10;:18::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:20:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:77::-;4938:7;4967:5;4956:16;;4901:77;;;:::o;4984:118::-;5071:24;5089:5;5071:24;:::i;:::-;5066:3;5059:37;4984:118;;:::o;5108:222::-;5201:4;5239:2;5228:9;5224:18;5216:26;;5252:71;5320:1;5309:9;5305:17;5296:6;5252:71;:::i;:::-;5108:222;;;;:::o;5336:329::-;5395:6;5444:2;5432:9;5423:7;5419:23;5415:32;5412:119;;;5450:79;;:::i;:::-;5412:119;5570:1;5595:53;5640:7;5631:6;5620:9;5616:22;5595:53;:::i;:::-;5585:63;;5541:117;5336:329;;;;:::o;5671:::-;5730:6;5779:2;5767:9;5758:7;5754:23;5750:32;5747:119;;;5785:79;;:::i;:::-;5747:119;5905:1;5930:53;5975:7;5966:6;5955:9;5951:22;5930:53;:::i;:::-;5920:63;;5876:117;5671:329;;;;:::o;6006:118::-;6093:24;6111:5;6093:24;:::i;:::-;6088:3;6081:37;6006:118;;:::o;6130:222::-;6223:4;6261:2;6250:9;6246:18;6238:26;;6274:71;6342:1;6331:9;6327:17;6318:6;6274:71;:::i;:::-;6130:222;;;;:::o;6358:93::-;6394:7;6434:10;6427:5;6423:22;6412:33;;6358:93;;;:::o;6457:115::-;6542:23;6559:5;6542:23;:::i;:::-;6537:3;6530:36;6457:115;;:::o;6578:218::-;6669:4;6707:2;6696:9;6692:18;6684:26;;6720:69;6786:1;6775:9;6771:17;6762:6;6720:69;:::i;:::-;6578:218;;;;:::o;6802:118::-;6873:22;6889:5;6873:22;:::i;:::-;6866:5;6863:33;6853:61;;6910:1;6907;6900:12;6853:61;6802:118;:::o;6926:135::-;6970:5;7008:6;6995:20;6986:29;;7024:31;7049:5;7024:31;:::i;:::-;6926:135;;;;:::o;7067:122::-;7140:24;7158:5;7140:24;:::i;:::-;7133:5;7130:35;7120:63;;7179:1;7176;7169:12;7120:63;7067:122;:::o;7195:139::-;7241:5;7279:6;7266:20;7257:29;;7295:33;7322:5;7295:33;:::i;:::-;7195:139;;;;:::o;7340:1053::-;7442:6;7450;7458;7466;7474;7482;7531:3;7519:9;7510:7;7506:23;7502:33;7499:120;;;7538:79;;:::i;:::-;7499:120;7658:1;7683:53;7728:7;7719:6;7708:9;7704:22;7683:53;:::i;:::-;7673:63;;7629:117;7785:2;7811:53;7856:7;7847:6;7836:9;7832:22;7811:53;:::i;:::-;7801:63;;7756:118;7913:2;7939:53;7984:7;7975:6;7964:9;7960:22;7939:53;:::i;:::-;7929:63;;7884:118;8041:2;8067:51;8110:7;8101:6;8090:9;8086:22;8067:51;:::i;:::-;8057:61;;8012:116;8167:3;8194:53;8239:7;8230:6;8219:9;8215:22;8194:53;:::i;:::-;8184:63;;8138:119;8296:3;8323:53;8368:7;8359:6;8348:9;8344:22;8323:53;:::i;:::-;8313:63;;8267:119;7340:1053;;;;;;;;:::o;8399:1199::-;8510:6;8518;8526;8534;8542;8550;8558;8607:3;8595:9;8586:7;8582:23;8578:33;8575:120;;;8614:79;;:::i;:::-;8575:120;8734:1;8759:53;8804:7;8795:6;8784:9;8780:22;8759:53;:::i;:::-;8749:63;;8705:117;8861:2;8887:53;8932:7;8923:6;8912:9;8908:22;8887:53;:::i;:::-;8877:63;;8832:118;8989:2;9015:53;9060:7;9051:6;9040:9;9036:22;9015:53;:::i;:::-;9005:63;;8960:118;9117:2;9143:53;9188:7;9179:6;9168:9;9164:22;9143:53;:::i;:::-;9133:63;;9088:118;9245:3;9272:51;9315:7;9306:6;9295:9;9291:22;9272:51;:::i;:::-;9262:61;;9216:117;9372:3;9399:53;9444:7;9435:6;9424:9;9420:22;9399:53;:::i;:::-;9389:63;;9343:119;9501:3;9528:53;9573:7;9564:6;9553:9;9549:22;9528:53;:::i;:::-;9518:63;;9472:119;8399:1199;;;;;;;;;;:::o;9604:474::-;9672:6;9680;9729:2;9717:9;9708:7;9704:23;9700:32;9697:119;;;9735:79;;:::i;:::-;9697:119;9855:1;9880:53;9925:7;9916:6;9905:9;9901:22;9880:53;:::i;:::-;9870:63;;9826:117;9982:2;10008:53;10053:7;10044:6;10033:9;10029:22;10008:53;:::i;:::-;9998:63;;9953:118;9604:474;;;;;:::o;10084:120::-;10156:23;10173:5;10156:23;:::i;:::-;10149:5;10146:34;10136:62;;10194:1;10191;10184:12;10136:62;10084:120;:::o;10210:137::-;10255:5;10293:6;10280:20;10271:29;;10309:32;10335:5;10309:32;:::i;:::-;10210:137;;;;:::o;10353:472::-;10420:6;10428;10477:2;10465:9;10456:7;10452:23;10448:32;10445:119;;;10483:79;;:::i;:::-;10445:119;10603:1;10628:53;10673:7;10664:6;10653:9;10649:22;10628:53;:::i;:::-;10618:63;;10574:117;10730:2;10756:52;10800:7;10791:6;10780:9;10776:22;10756:52;:::i;:::-;10746:62;;10701:117;10353:472;;;;;:::o;10831:105::-;10906:23;10923:5;10906:23;:::i;:::-;10901:3;10894:36;10831:105;;:::o;10942:142::-;10979:7;11019:58;11012:5;11008:70;10997:81;;10942:142;;;:::o;11090:108::-;11167:24;11185:5;11167:24;:::i;:::-;11162:3;11155:37;11090:108;;:::o;11272:515::-;11423:4;11418:3;11414:14;11515:4;11508:5;11504:16;11498:23;11534:61;11589:4;11584:3;11580:14;11566:12;11534:61;:::i;:::-;11438:167;11688:4;11681:5;11677:16;11671:23;11707:63;11764:4;11759:3;11755:14;11741:12;11707:63;:::i;:::-;11615:165;11392:395;11272:515;;:::o;11793:330::-;11940:4;11978:2;11967:9;11963:18;11955:26;;11991:125;12113:1;12102:9;12098:17;12089:6;11991:125;:::i;:::-;11793:330;;;;:::o;12129:180::-;12177:77;12174:1;12167:88;12274:4;12271:1;12264:15;12298:4;12295:1;12288:15;12315:320;12359:6;12396:1;12390:4;12386:12;12376:22;;12443:1;12437:4;12433:12;12464:18;12454:81;;12520:4;12512:6;12508:17;12498:27;;12454:81;12582:2;12574:6;12571:14;12551:18;12548:38;12545:84;;;12601:18;;:::i;:::-;12545:84;12366:269;12315:320;;;:::o;12641:180::-;12689:77;12686:1;12679:88;12786:4;12783:1;12776:15;12810:4;12807:1;12800:15;12827:180;12875:77;12872:1;12865:88;12972:4;12969:1;12962:15;12996:4;12993:1;12986:15;13013:185;13053:1;13070:20;13088:1;13070:20;:::i;:::-;13065:25;;13104:20;13122:1;13104:20;:::i;:::-;13099:25;;13143:1;13133:35;;13148:18;;:::i;:::-;13133:35;13190:1;13187;13183:9;13178:14;;13013:185;;;;:::o;13204:147::-;13305:11;13342:3;13327:18;;13204:147;;;;:::o;13357:114::-;;:::o;13477:398::-;13636:3;13657:83;13738:1;13733:3;13657:83;:::i;:::-;13650:90;;13749:93;13838:3;13749:93;:::i;:::-;13867:1;13862:3;13858:11;13851:18;;13477:398;;;:::o;13881:379::-;14065:3;14087:147;14230:3;14087:147;:::i;:::-;14080:154;;14251:3;14244:10;;13881:379;;;:::o;14266:170::-;14406:22;14402:1;14394:6;14390:14;14383:46;14266:170;:::o;14442:366::-;14584:3;14605:67;14669:2;14664:3;14605:67;:::i;:::-;14598:74;;14681:93;14770:3;14681:93;:::i;:::-;14799:2;14794:3;14790:12;14783:19;;14442:366;;;:::o;14814:419::-;14980:4;15018:2;15007:9;15003:18;14995:26;;15067:9;15061:4;15057:20;15053:1;15042:9;15038:17;15031:47;15095:131;15221:4;15095:131;:::i;:::-;15087:139;;14814:419;;;:::o;15239:305::-;15279:3;15298:20;15316:1;15298:20;:::i;:::-;15293:25;;15332:20;15350:1;15332:20;:::i;:::-;15327:25;;15486:1;15418:66;15414:74;15411:1;15408:81;15405:107;;;15492:18;;:::i;:::-;15405:107;15536:1;15533;15529:9;15522:16;;15239:305;;;;:::o;15550:181::-;15690:33;15686:1;15678:6;15674:14;15667:57;15550:181;:::o;15737:366::-;15879:3;15900:67;15964:2;15959:3;15900:67;:::i;:::-;15893:74;;15976:93;16065:3;15976:93;:::i;:::-;16094:2;16089:3;16085:12;16078:19;;15737:366;;;:::o;16109:419::-;16275:4;16313:2;16302:9;16298:18;16290:26;;16362:9;16356:4;16352:20;16348:1;16337:9;16333:17;16326:47;16390:131;16516:4;16390:131;:::i;:::-;16382:139;;16109:419;;;:::o;16534:143::-;16591:5;16622:6;16616:13;16607:22;;16638:33;16665:5;16638:33;:::i;:::-;16534:143;;;;:::o;16683:351::-;16753:6;16802:2;16790:9;16781:7;16777:23;16773:32;16770:119;;;16808:79;;:::i;:::-;16770:119;16928:1;16953:64;17009:7;17000:6;16989:9;16985:22;16953:64;:::i;:::-;16943:74;;16899:128;16683:351;;;;:::o;17040:191::-;17080:4;17100:20;17118:1;17100:20;:::i;:::-;17095:25;;17134:20;17152:1;17134:20;:::i;:::-;17129:25;;17173:1;17170;17167:8;17164:34;;;17178:18;;:::i;:::-;17164:34;17223:1;17220;17216:9;17208:17;;17040:191;;;;:::o;17237:180::-;17285:77;17282:1;17275:88;17382:4;17379:1;17372:15;17406:4;17403:1;17396:15;17423:224;17563:34;17559:1;17551:6;17547:14;17540:58;17632:7;17627:2;17619:6;17615:15;17608:32;17423:224;:::o;17653:366::-;17795:3;17816:67;17880:2;17875:3;17816:67;:::i;:::-;17809:74;;17892:93;17981:3;17892:93;:::i;:::-;18010:2;18005:3;18001:12;17994:19;;17653:366;;;:::o;18025:419::-;18191:4;18229:2;18218:9;18214:18;18206:26;;18278:9;18272:4;18268:20;18264:1;18253:9;18249:17;18242:47;18306:131;18432:4;18306:131;:::i;:::-;18298:139;;18025:419;;;:::o;18450:348::-;18490:7;18513:20;18531:1;18513:20;:::i;:::-;18508:25;;18547:20;18565:1;18547:20;:::i;:::-;18542:25;;18735:1;18667:66;18663:74;18660:1;18657:81;18652:1;18645:9;18638:17;18634:105;18631:131;;;18742:18;;:::i;:::-;18631:131;18790:1;18787;18783:9;18772:20;;18450:348;;;;:::o;18804:179::-;18944:31;18940:1;18932:6;18928:14;18921:55;18804:179;:::o;18989:366::-;19131:3;19152:67;19216:2;19211:3;19152:67;:::i;:::-;19145:74;;19228:93;19317:3;19228:93;:::i;:::-;19346:2;19341:3;19337:12;19330:19;;18989:366;;;:::o;19361:419::-;19527:4;19565:2;19554:9;19550:18;19542:26;;19614:9;19608:4;19604:20;19600:1;19589:9;19585:17;19578:47;19642:131;19768:4;19642:131;:::i;:::-;19634:139;;19361:419;;;:::o;19786:553::-;19963:4;20001:3;19990:9;19986:19;19978:27;;20015:71;20083:1;20072:9;20068:17;20059:6;20015:71;:::i;:::-;20096:72;20164:2;20153:9;20149:18;20140:6;20096:72;:::i;:::-;20178;20246:2;20235:9;20231:18;20222:6;20178:72;:::i;:::-;20260;20328:2;20317:9;20313:18;20304:6;20260:72;:::i;:::-;19786:553;;;;;;;:::o;20345:175::-;20485:27;20481:1;20473:6;20469:14;20462:51;20345:175;:::o;20526:366::-;20668:3;20689:67;20753:2;20748:3;20689:67;:::i;:::-;20682:74;;20765:93;20854:3;20765:93;:::i;:::-;20883:2;20878:3;20874:12;20867:19;;20526:366;;;:::o;20898:419::-;21064:4;21102:2;21091:9;21087:18;21079:26;;21151:9;21145:4;21141:20;21137:1;21126:9;21122:17;21115:47;21179:131;21305:4;21179:131;:::i;:::-;21171:139;;20898:419;;;:::o;21323:179::-;21463:31;21459:1;21451:6;21447:14;21440:55;21323:179;:::o;21508:366::-;21650:3;21671:67;21735:2;21730:3;21671:67;:::i;:::-;21664:74;;21747:93;21836:3;21747:93;:::i;:::-;21865:2;21860:3;21856:12;21849:19;;21508:366;;;:::o;21880:419::-;22046:4;22084:2;22073:9;22069:18;22061:26;;22133:9;22127:4;22123:20;22119:1;22108:9;22104:17;22097:47;22161:131;22287:4;22161:131;:::i;:::-;22153:139;;21880:419;;;:::o;22305:775::-;22538:4;22576:3;22565:9;22561:19;22553:27;;22590:71;22658:1;22647:9;22643:17;22634:6;22590:71;:::i;:::-;22671:72;22739:2;22728:9;22724:18;22715:6;22671:72;:::i;:::-;22753;22821:2;22810:9;22806:18;22797:6;22753:72;:::i;:::-;22835;22903:2;22892:9;22888:18;22879:6;22835:72;:::i;:::-;22917:73;22985:3;22974:9;22970:19;22961:6;22917:73;:::i;:::-;23000;23068:3;23057:9;23053:19;23044:6;23000:73;:::i;:::-;22305:775;;;;;;;;;:::o;23086:180::-;23226:32;23222:1;23214:6;23210:14;23203:56;23086:180;:::o;23272:366::-;23414:3;23435:67;23499:2;23494:3;23435:67;:::i;:::-;23428:74;;23511:93;23600:3;23511:93;:::i;:::-;23629:2;23624:3;23620:12;23613:19;;23272:366;;;:::o;23644:419::-;23810:4;23848:2;23837:9;23833:18;23825:26;;23897:9;23891:4;23887:20;23883:1;23872:9;23868:17;23861:47;23925:131;24051:4;23925:131;:::i;:::-;23917:139;;23644:419;;;:::o;24069:225::-;24209:34;24205:1;24197:6;24193:14;24186:58;24278:8;24273:2;24265:6;24261:15;24254:33;24069:225;:::o;24300:366::-;24442:3;24463:67;24527:2;24522:3;24463:67;:::i;:::-;24456:74;;24539:93;24628:3;24539:93;:::i;:::-;24657:2;24652:3;24648:12;24641:19;;24300:366;;;:::o;24672:419::-;24838:4;24876:2;24865:9;24861:18;24853:26;;24925:9;24919:4;24915:20;24911:1;24900:9;24896:17;24889:47;24953:131;25079:4;24953:131;:::i;:::-;24945:139;;24672:419;;;:::o;25097:235::-;25237:34;25233:1;25225:6;25221:14;25214:58;25306:18;25301:2;25293:6;25289:15;25282:43;25097:235;:::o;25338:366::-;25480:3;25501:67;25565:2;25560:3;25501:67;:::i;:::-;25494:74;;25577:93;25666:3;25577:93;:::i;:::-;25695:2;25690:3;25686:12;25679:19;;25338:366;;;:::o;25710:419::-;25876:4;25914:2;25903:9;25899:18;25891:26;;25963:9;25957:4;25953:20;25949:1;25938:9;25934:17;25927:47;25991:131;26117:4;25991:131;:::i;:::-;25983:139;;25710:419;;;:::o;26135:181::-;26275:33;26271:1;26263:6;26259:14;26252:57;26135:181;:::o;26322:366::-;26464:3;26485:67;26549:2;26544:3;26485:67;:::i;:::-;26478:74;;26561:93;26650:3;26561:93;:::i;:::-;26679:2;26674:3;26670:12;26663:19;;26322:366;;;:::o;26694:419::-;26860:4;26898:2;26887:9;26883:18;26875:26;;26947:9;26941:4;26937:20;26933:1;26922:9;26918:17;26911:47;26975:131;27101:4;26975:131;:::i;:::-;26967:139;;26694:419;;;:::o;27119:226::-;27259:34;27255:1;27247:6;27243:14;27236:58;27328:9;27323:2;27315:6;27311:15;27304:34;27119:226;:::o;27351:366::-;27493:3;27514:67;27578:2;27573:3;27514:67;:::i;:::-;27507:74;;27590:93;27679:3;27590:93;:::i;:::-;27708:2;27703:3;27699:12;27692:19;;27351:366;;;:::o;27723:419::-;27889:4;27927:2;27916:9;27912:18;27904:26;;27976:9;27970:4;27966:20;27962:1;27951:9;27947:17;27940:47;28004:131;28130:4;28004:131;:::i;:::-;27996:139;;27723:419;;;:::o;28148:225::-;28288:34;28284:1;28276:6;28272:14;28265:58;28357:8;28352:2;28344:6;28340:15;28333:33;28148:225;:::o;28379:366::-;28521:3;28542:67;28606:2;28601:3;28542:67;:::i;:::-;28535:74;;28618:93;28707:3;28618:93;:::i;:::-;28736:2;28731:3;28727:12;28720:19;;28379:366;;;:::o;28751:419::-;28917:4;28955:2;28944:9;28940:18;28932:26;;29004:9;28998:4;28994:20;28990:1;28979:9;28975:17;28968:47;29032:131;29158:4;29032:131;:::i;:::-;29024:139;;28751:419;;;:::o;29176:223::-;29316:34;29312:1;29304:6;29300:14;29293:58;29385:6;29380:2;29372:6;29368:15;29361:31;29176:223;:::o;29405:366::-;29547:3;29568:67;29632:2;29627:3;29568:67;:::i;:::-;29561:74;;29644:93;29733:3;29644:93;:::i;:::-;29762:2;29757:3;29753:12;29746:19;;29405:366;;;:::o;29777:419::-;29943:4;29981:2;29970:9;29966:18;29958:26;;30030:9;30024:4;30020:20;30016:1;30005:9;30001:17;29994:47;30058:131;30184:4;30058:131;:::i;:::-;30050:139;;29777:419;;;:::o;30202:221::-;30342:34;30338:1;30330:6;30326:14;30319:58;30411:4;30406:2;30398:6;30394:15;30387:29;30202:221;:::o;30429:366::-;30571:3;30592:67;30656:2;30651:3;30592:67;:::i;:::-;30585:74;;30668:93;30757:3;30668:93;:::i;:::-;30786:2;30781:3;30777:12;30770:19;;30429:366;;;:::o;30801:419::-;30967:4;31005:2;30994:9;30990:18;30982:26;;31054:9;31048:4;31044:20;31040:1;31029:9;31025:17;31018:47;31082:131;31208:4;31082:131;:::i;:::-;31074:139;;30801:419;;;:::o;31226:179::-;31366:31;31362:1;31354:6;31350:14;31343:55;31226:179;:::o;31411:366::-;31553:3;31574:67;31638:2;31633:3;31574:67;:::i;:::-;31567:74;;31650:93;31739:3;31650:93;:::i;:::-;31768:2;31763:3;31759:12;31752:19;;31411:366;;;:::o;31783:419::-;31949:4;31987:2;31976:9;31972:18;31964:26;;32036:9;32030:4;32026:20;32022:1;32011:9;32007:17;32000:47;32064:131;32190:4;32064:131;:::i;:::-;32056:139;;31783:419;;;:::o;32208:182::-;32348:34;32344:1;32336:6;32332:14;32325:58;32208:182;:::o;32396:366::-;32538:3;32559:67;32623:2;32618:3;32559:67;:::i;:::-;32552:74;;32635:93;32724:3;32635:93;:::i;:::-;32753:2;32748:3;32744:12;32737:19;;32396:366;;;:::o;32768:419::-;32934:4;32972:2;32961:9;32957:18;32949:26;;33021:9;33015:4;33011:20;33007:1;32996:9;32992:17;32985:47;33049:131;33175:4;33049:131;:::i;:::-;33041:139;;32768:419;;;:::o;33193:332::-;33314:4;33352:2;33341:9;33337:18;33329:26;;33365:71;33433:1;33422:9;33418:17;33409:6;33365:71;:::i;:::-;33446:72;33514:2;33503:9;33499:18;33490:6;33446:72;:::i;:::-;33193:332;;;;;:::o;33531:::-;33652:4;33690:2;33679:9;33675:18;33667:26;;33703:71;33771:1;33760:9;33756:17;33747:6;33703:71;:::i;:::-;33784:72;33852:2;33841:9;33837:18;33828:6;33784:72;:::i;:::-;33531:332;;;;;:::o;33869:224::-;34009:34;34005:1;33997:6;33993:14;33986:58;34078:7;34073:2;34065:6;34061:15;34054:32;33869:224;:::o;34099:366::-;34241:3;34262:67;34326:2;34321:3;34262:67;:::i;:::-;34255:74;;34338:93;34427:3;34338:93;:::i;:::-;34456:2;34451:3;34447:12;34440:19;;34099:366;;;:::o;34471:419::-;34637:4;34675:2;34664:9;34660:18;34652:26;;34724:9;34718:4;34714:20;34710:1;34699:9;34695:17;34688:47;34752:131;34878:4;34752:131;:::i;:::-;34744:139;;34471:419;;;:::o;34896:222::-;35036:34;35032:1;35024:6;35020:14;35013:58;35105:5;35100:2;35092:6;35088:15;35081:30;34896:222;:::o;35124:366::-;35266:3;35287:67;35351:2;35346:3;35287:67;:::i;:::-;35280:74;;35363:93;35452:3;35363:93;:::i;:::-;35481:2;35476:3;35472:12;35465:19;;35124:366;;;:::o;35496:419::-;35662:4;35700:2;35689:9;35685:18;35677:26;;35749:9;35743:4;35739:20;35735:1;35724:9;35720:17;35713:47;35777:131;35903:4;35777:131;:::i;:::-;35769:139;;35496:419;;;:::o;35921:225::-;36061:34;36057:1;36049:6;36045:14;36038:58;36130:8;36125:2;36117:6;36113:15;36106:33;35921:225;:::o;36152:366::-;36294:3;36315:67;36379:2;36374:3;36315:67;:::i;:::-;36308:74;;36391:93;36480:3;36391:93;:::i;:::-;36509:2;36504:3;36500:12;36493:19;;36152:366;;;:::o;36524:419::-;36690:4;36728:2;36717:9;36713:18;36705:26;;36777:9;36771:4;36767:20;36763:1;36752:9;36748:17;36741:47;36805:131;36931:4;36805:131;:::i;:::-;36797:139;;36524:419;;;:::o;36949:664::-;37154:4;37192:3;37181:9;37177:19;37169:27;;37206:71;37274:1;37263:9;37259:17;37250:6;37206:71;:::i;:::-;37287:72;37355:2;37344:9;37340:18;37331:6;37287:72;:::i;:::-;37369;37437:2;37426:9;37422:18;37413:6;37369:72;:::i;:::-;37451;37519:2;37508:9;37504:18;37495:6;37451:72;:::i;:::-;37533:73;37601:3;37590:9;37586:19;37577:6;37533:73;:::i;:::-;36949:664;;;;;;;;:::o;37619:116::-;37689:21;37704:5;37689:21;:::i;:::-;37682:5;37679:32;37669:60;;37725:1;37722;37715:12;37669:60;37619:116;:::o;37741:137::-;37795:5;37826:6;37820:13;37811:22;;37842:30;37866:5;37842:30;:::i;:::-;37741:137;;;;:::o;37884:345::-;37951:6;38000:2;37988:9;37979:7;37975:23;37971:32;37968:119;;;38006:79;;:::i;:::-;37968:119;38126:1;38151:61;38204:7;38195:6;38184:9;38180:22;38151:61;:::i;:::-;38141:71;;38097:125;37884:345;;;;:::o;38235:229::-;38375:34;38371:1;38363:6;38359:14;38352:58;38444:12;38439:2;38431:6;38427:15;38420:37;38235:229;:::o;38470:366::-;38612:3;38633:67;38697:2;38692:3;38633:67;:::i;:::-;38626:74;;38709:93;38798:3;38709:93;:::i;:::-;38827:2;38822:3;38818:12;38811:19;;38470:366;;;:::o;38842:419::-;39008:4;39046:2;39035:9;39031:18;39023:26;;39095:9;39089:4;39085:20;39081:1;39070:9;39066:17;39059:47;39123:131;39249:4;39123:131;:::i;:::-;39115:139;;38842:419;;;:::o;39267:148::-;39369:11;39406:3;39391:18;;39267:148;;;;:::o;39421:214::-;39561:66;39557:1;39549:6;39545:14;39538:90;39421:214;:::o;39641:400::-;39801:3;39822:84;39904:1;39899:3;39822:84;:::i;:::-;39815:91;;39915:93;40004:3;39915:93;:::i;:::-;40033:1;40028:3;40024:11;40017:18;;39641:400;;;:::o;40047:79::-;40086:7;40115:5;40104:16;;40047:79;;;:::o;40132:157::-;40237:45;40257:24;40275:5;40257:24;:::i;:::-;40237:45;:::i;:::-;40232:3;40225:58;40132:157;;:::o;40295:663::-;40536:3;40558:148;40702:3;40558:148;:::i;:::-;40551:155;;40716:75;40787:3;40778:6;40716:75;:::i;:::-;40816:2;40811:3;40807:12;40800:19;;40829:75;40900:3;40891:6;40829:75;:::i;:::-;40929:2;40924:3;40920:12;40913:19;;40949:3;40942:10;;40295:663;;;;;:::o;40964:545::-;41137:4;41175:3;41164:9;41160:19;41152:27;;41189:71;41257:1;41246:9;41242:17;41233:6;41189:71;:::i;:::-;41270:68;41334:2;41323:9;41319:18;41310:6;41270:68;:::i;:::-;41348:72;41416:2;41405:9;41401:18;41392:6;41348:72;:::i;:::-;41430;41498:2;41487:9;41483:18;41474:6;41430:72;:::i;:::-;40964:545;;;;;;;:::o;41515:180::-;41563:77;41560:1;41553:88;41660:4;41657:1;41650:15;41684:4;41681:1;41674:15;41701:174;41841:26;41837:1;41829:6;41825:14;41818:50;41701:174;:::o;41881:366::-;42023:3;42044:67;42108:2;42103:3;42044:67;:::i;:::-;42037:74;;42120:93;42209:3;42120:93;:::i;:::-;42238:2;42233:3;42229:12;42222:19;;41881:366;;;:::o;42253:419::-;42419:4;42457:2;42446:9;42442:18;42434:26;;42506:9;42500:4;42496:20;42492:1;42481:9;42477:17;42470:47;42534:131;42660:4;42534:131;:::i;:::-;42526:139;;42253:419;;;:::o;42678:181::-;42818:33;42814:1;42806:6;42802:14;42795:57;42678:181;:::o;42865:366::-;43007:3;43028:67;43092:2;43087:3;43028:67;:::i;:::-;43021:74;;43104:93;43193:3;43104:93;:::i;:::-;43222:2;43217:3;43213:12;43206:19;;42865:366;;;:::o;43237:419::-;43403:4;43441:2;43430:9;43426:18;43418:26;;43490:9;43484:4;43480:20;43476:1;43465:9;43461:17;43454:47;43518:131;43644:4;43518:131;:::i;:::-;43510:139;;43237:419;;;:::o;43662:221::-;43802:34;43798:1;43790:6;43786:14;43779:58;43871:4;43866:2;43858:6;43854:15;43847:29;43662:221;:::o;43889:366::-;44031:3;44052:67;44116:2;44111:3;44052:67;:::i;:::-;44045:74;;44128:93;44217:3;44128:93;:::i;:::-;44246:2;44241:3;44237:12;44230:19;;43889:366;;;:::o;44261:419::-;44427:4;44465:2;44454:9;44450:18;44442:26;;44514:9;44508:4;44504:20;44500:1;44489:9;44485:17;44478:47;44542:131;44668:4;44542:131;:::i;:::-;44534:139;;44261:419;;;:::o;44686:220::-;44826:34;44822:1;44814:6;44810:14;44803:58;44895:3;44890:2;44882:6;44878:15;44871:28;44686:220;:::o;44912:366::-;45054:3;45075:67;45139:2;45134:3;45075:67;:::i;:::-;45068:74;;45151:93;45240:3;45151:93;:::i;:::-;45269:2;45264:3;45260:12;45253:19;;44912:366;;;:::o;45284:419::-;45450:4;45488:2;45477:9;45473:18;45465:26;;45537:9;45531:4;45527:20;45523:1;45512:9;45508:17;45501:47;45565:131;45691:4;45565:131;:::i;:::-;45557:139;;45284:419;;;:::o;45709:221::-;45849:34;45845:1;45837:6;45833:14;45826:58;45918:4;45913:2;45905:6;45901:15;45894:29;45709:221;:::o;45936:366::-;46078:3;46099:67;46163:2;46158:3;46099:67;:::i;:::-;46092:74;;46175:93;46264:3;46175:93;:::i;:::-;46293:2;46288:3;46284:12;46277:19;;45936:366;;;:::o;46308:419::-;46474:4;46512:2;46501:9;46497:18;46489:26;;46561:9;46555:4;46551:20;46547:1;46536:9;46532:17;46525:47;46589:131;46715:4;46589:131;:::i;:::-;46581:139;;46308:419;;;:::o;46733:225::-;46873:34;46869:1;46861:6;46857:14;46850:58;46942:8;46937:2;46929:6;46925:15;46918:33;46733:225;:::o;46964:366::-;47106:3;47127:67;47191:2;47186:3;47127:67;:::i;:::-;47120:74;;47203:93;47292:3;47203:93;:::i;:::-;47321:2;47316:3;47312:12;47305:19;;46964:366;;;:::o;47336:419::-;47502:4;47540:2;47529:9;47525:18;47517:26;;47589:9;47583:4;47579:20;47575:1;47564:9;47560:17;47553:47;47617:131;47743:4;47617:131;:::i;:::-;47609:139;;47336:419;;;:::o;47761:98::-;47812:6;47846:5;47840:12;47830:22;;47761:98;;;:::o;47865:373::-;47969:3;47997:38;48029:5;47997:38;:::i;:::-;48051:88;48132:6;48127:3;48051:88;:::i;:::-;48044:95;;48148:52;48193:6;48188:3;48181:4;48174:5;48170:16;48148:52;:::i;:::-;48225:6;48220:3;48216:16;48209:23;;47973:265;47865:373;;;;:::o;48244:271::-;48374:3;48396:93;48485:3;48476:6;48396:93;:::i;:::-;48389:100;;48506:3;48499:10;;48244:271;;;;:::o;48521:179::-;48661:31;48657:1;48649:6;48645:14;48638:55;48521:179;:::o;48706:366::-;48848:3;48869:67;48933:2;48928:3;48869:67;:::i;:::-;48862:74;;48945:93;49034:3;48945:93;:::i;:::-;49063:2;49058:3;49054:12;49047:19;;48706:366;;;:::o;49078:419::-;49244:4;49282:2;49271:9;49267:18;49259:26;;49331:9;49325:4;49321:20;49317:1;49306:9;49302:17;49295:47;49359:131;49485:4;49359:131;:::i;:::-;49351:139;;49078:419;;;:::o"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","changeTax(uint256)":"3e45c8af","checkpoints(address,uint32)":"f1127ed8","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getBalance()":"12065fe0","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdrawFunds()":"24600fc3","withdrawFunds(address)":"68742da6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tax\",\"type\":\"uint256\"}],\"name\":\"ChangeTaxPercentage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tax\",\"type\":\"uint256\"}],\"name\":\"changeTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TalaxToken.sol\":\"TalaxToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x701d39aea4bce743cbc051a7f5ad0f27ee18f3eb38b5303e33b0eb7a54c0608d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e93c025465734c2adc943a0db1aa5d2e249e741f3ee28ed60eaf2944a080b693\",\"dweb:/ipfs/Qmc7tA4E2356bzms761sJYwRMh9JVtK8hG5hivHiPjL4pg\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7\",\"dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"contracts/Data.sol\":{\"keccak256\":\"0xc22a7d6eaa176e3dbf87eb09a35b8f7b410753d9e8143c37908bc02865bb0b7f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6aab2746c7459a87705a677a504c5753880145617665f845f1ca2dd55205b286\",\"dweb:/ipfs/QmcowN6uYJqhcgKVrVoxy1Tz8sUJ8u5tudDbEFNcW79xqx\"]},\"contracts/TalaxToken.sol\":{\"keccak256\":\"0x047572670a949b34f1e885afa83becf991e66725158a1abd75e3fd8dd3d8e8aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff1bf7a3f3ba1d5026296d7c3d73e1fbc90e01f3414b22bfb3dde8fac652a481\",\"dweb:/ipfs/QmZza2wYRHBFKPt32SCvxcpE13hhwudui5CFYYA3pAN3y5\"]}},\"version\":1}"}}}}}