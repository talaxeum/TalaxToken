{
	"id": "9da3b5daade949fbe94c3c2e0466e8c9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Lockedwallet.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.11;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"./Interfaces.sol\";\r\n\r\n// 700000000000000000000000000\r\n\r\ncontract LockedWallet is ILockable {\r\n    uint256 internal _amount;\r\n\r\n    address internal _owner;\r\n    // beneficiary of tokens after they are released\r\n    address public immutable beneficiary;\r\n\r\n    uint256 public startLockedWallet;\r\n\r\n    uint256 internal _latestClaimMonth;\r\n\r\n    constructor(uint256 amount_, address beneficiary_) {\r\n        _amount = amount_;\r\n        beneficiary = beneficiary_;\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    /* ------------------------------------------ Modifier ------------------------------------------ */\r\n\r\n    function _onlyTalax() internal view {\r\n        require(msg.sender == _owner, \"Not _owner\");\r\n    }\r\n\r\n    function getOwner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyTalax() {\r\n        _onlyTalax();\r\n        _;\r\n    }\r\n\r\n    /* ---------------------------------------------- - --------------------------------------------- */\r\n\r\n    function changeTalaxAddress(address talax) external onlyTalax {\r\n        _owner = talax;\r\n    }\r\n\r\n    /**\r\n     * @notice Initiate Locked Wallet\r\n     */\r\n\r\n    function initiateLockedWallet() external override onlyTalax {\r\n        startLockedWallet = block.timestamp;\r\n    }\r\n\r\n    function _unsafeInc(uint256 x) internal pure returns (uint256) {\r\n        unchecked {\r\n            return x + 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  @dev \t\tMain Functions\r\n     *  @return \tClaimable amount from Locked Wallet\r\n     */\r\n    function _calculateClaimableAmount(uint256[51] memory amount_)\r\n        internal\r\n        returns (uint256)\r\n    {\r\n        uint256 months = (block.timestamp - startLockedWallet) / 30 days;\r\n        uint256 claimable;\r\n\r\n        for (uint256 i = _latestClaimMonth; i <= months; i = _unsafeInc(i)) {\r\n            if (_latestClaimMonth <= 51) {\r\n                claimable += amount_[i];\r\n            }\r\n        }\r\n\r\n        _latestClaimMonth = months + 1;\r\n\r\n        require(claimable != 0, \"Nothing to claim yet\");\r\n        return claimable;\r\n    }\r\n\r\n    /**\r\n     * @notice Transfers tokens held by timelock to beneficiary.\r\n     */\r\n    function releaseClaimable(uint256[51] memory amount)\r\n        external\r\n        override\r\n        onlyTalax\r\n        returns (uint256)\r\n    {\r\n        uint256 claimableLockedAmount = _calculateClaimableAmount(amount);\r\n\r\n        // require(claimableLockedAmount > 0, \"Lockable: no tokens to release\");\r\n\r\n        _amount = SafeMath.sub(\r\n            _amount,\r\n            claimableLockedAmount,\r\n            \"Lockedwallet: Cannot substract total amount with claimable\"\r\n        );\r\n\r\n        return claimableLockedAmount;\r\n    }\r\n}\r\n"
			},
			"contracts/Interfaces.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.11;\r\n\r\ninterface IStakable {\r\n    function stakingPenaltyRate() external view returns (uint256);\r\n\r\n    function airdropRate() external view returns (uint256);\r\n\r\n    function airdropSince() external view returns (uint256);\r\n\r\n    function totalVoters() external view returns (uint256);\r\n\r\n    function getVoters(address user) external view returns (bool, bool); // votingRight and voted\r\n\r\n    function votedUsers(uint256 id) external view returns (uint256);\r\n\r\n    function startAirdropSince() external;\r\n\r\n    function changeTalaxAddress(address talax) external;\r\n\r\n    function stake(\r\n        address user,\r\n        uint256 amount,\r\n        uint256 stakePeriod,\r\n        uint256 rewardRate\r\n    ) external;\r\n\r\n    function changePenaltyFee(uint256 amount) external;\r\n\r\n    function changeAirdropPercentage(uint256 amount) external;\r\n\r\n    function withdrawStake(address user) external returns (uint256, uint256);\r\n\r\n    function claimAirdrop(address user) external view returns (uint256);\r\n\r\n    function startVoting() external;\r\n\r\n    function getVotingResult() external view returns (bool);\r\n\r\n    function stopVoting() external;\r\n}\r\n\r\ninterface IWhitelist {\r\n    function privateSaleUsers() external view returns (uint256);\r\n\r\n    function privateSaleAmount() external view returns (uint256);\r\n\r\n    function startPrivateSale() external view returns (uint256);\r\n\r\n    function changeTalaxAddress(address talax) external;\r\n\r\n    function beneficiary(address user)\r\n        external\r\n        view\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            bool,\r\n            uint256\r\n        ); // lockedAmount, amount, isPhase1Claimed, latestClaimDay\r\n\r\n    function initiateWhitelist() external;\r\n\r\n    function addBeneficiary(address user, uint256 amount) external;\r\n\r\n    function deleteBeneficiary(address user) external returns (uint256);\r\n\r\n    function releaseClaimable(address user) external returns (uint256);\r\n}\r\n\r\ninterface ILockable {\r\n    function beneficiary() external view returns (address);\r\n\r\n    function changeTalaxAddress(address talax) external;\r\n\r\n    function startLockedWallet() external view returns (uint256);\r\n\r\n    function initiateLockedWallet() external;\r\n\r\n    function releaseClaimable(uint256[51] memory amount)\r\n        external\r\n        returns (uint256);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xF7F CALLDATACOPY GASLIMIT ISZERO 0x27 PUSH29 0x40DC0699C995F2B4C7F397D9F3BFD9AE759628B3F81D334D64736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xF7F CALLDATACOPY GASLIMIT ISZERO 0x27 PUSH29 0x40DC0699C995F2B4C7F397D9F3BFD9AE759628B3F81D334D64736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Interfaces.sol": {
				"ILockable": {
					"abi": [
						{
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initiateLockedWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[51]",
									"name": "amount",
									"type": "uint256[51]"
								}
							],
							"name": "releaseClaimable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startLockedWallet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"changeTalaxAddress(address)": "1d77b00b",
							"initiateLockedWallet()": "c8cca41e",
							"releaseClaimable(uint256[51])": "0a95606e",
							"startLockedWallet()": "b580aa9e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateLockedWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[51]\",\"name\":\"amount\",\"type\":\"uint256[51]\"}],\"name\":\"releaseClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startLockedWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces.sol\":\"ILockable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/Interfaces.sol\":{\"keccak256\":\"0x3e6787e58214b5af4af523a2a603f03dbdf4e397be411edd1ce47d792872ad03\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3ceac46a908c7381881ed80661864bf9214de9b777f353a86b3d79f6d0dcf537\",\"dweb:/ipfs/QmewThGMZUjU2i4LkFmqMD8zFt8QtMJpV7nCn59opjZ48B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IStakable": {
					"abi": [
						{
							"inputs": [],
							"name": "airdropRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropSince",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changeAirdropPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changePenaltyFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "claimAirdrop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getVoters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVotingResult",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakePeriod",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingPenaltyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startAirdropSince",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startVoting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopVoting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVoters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "votedUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "withdrawStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"airdropRate()": "8891cf0d",
							"airdropSince()": "b87da76d",
							"changeAirdropPercentage(uint256)": "d5dbdf1b",
							"changePenaltyFee(uint256)": "8c63f97f",
							"changeTalaxAddress(address)": "1d77b00b",
							"claimAirdrop(address)": "65f8c6c5",
							"getVoters(address)": "2d15cc04",
							"getVotingResult()": "671d2b75",
							"stake(address,uint256,uint256,uint256)": "f93d4f8a",
							"stakingPenaltyRate()": "cb79c2e1",
							"startAirdropSince()": "71e3db87",
							"startVoting()": "1ec6b60a",
							"stopVoting()": "fab2f86b",
							"totalVoters()": "5f5300ff",
							"votedUsers(uint256)": "a143a5f2",
							"withdrawStake(address)": "c23a5cea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"airdropRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropSince\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeAirdropPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changePenaltyFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimAirdrop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVoters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotingResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakePeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPenaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAirdropSince\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVoters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"votedUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces.sol\":\"IStakable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/Interfaces.sol\":{\"keccak256\":\"0x3e6787e58214b5af4af523a2a603f03dbdf4e397be411edd1ce47d792872ad03\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3ceac46a908c7381881ed80661864bf9214de9b777f353a86b3d79f6d0dcf537\",\"dweb:/ipfs/QmewThGMZUjU2i4LkFmqMD8zFt8QtMJpV7nCn59opjZ48B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IWhitelist": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addBeneficiary",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "deleteBeneficiary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initiateWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "releaseClaimable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPrivateSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addBeneficiary(address,uint256)": "96074e70",
							"beneficiary(address)": "81008568",
							"changeTalaxAddress(address)": "1d77b00b",
							"deleteBeneficiary(address)": "7d3bca76",
							"initiateWhitelist()": "efdd8796",
							"privateSaleAmount()": "8b2b423a",
							"privateSaleUsers()": "549dee0b",
							"releaseClaimable(address)": "005171f4",
							"startPrivateSale()": "338dbf59"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"deleteBeneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"releaseClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPrivateSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces.sol\":\"IWhitelist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/Interfaces.sol\":{\"keccak256\":\"0x3e6787e58214b5af4af523a2a603f03dbdf4e397be411edd1ce47d792872ad03\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3ceac46a908c7381881ed80661864bf9214de9b777f353a86b3d79f6d0dcf537\",\"dweb:/ipfs/QmewThGMZUjU2i4LkFmqMD8zFt8QtMJpV7nCn59opjZ48B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Lockedwallet.sol": {
				"LockedWallet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "beneficiary_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initiateLockedWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[51]",
									"name": "amount",
									"type": "uint256[51]"
								}
							],
							"name": "releaseClaimable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startLockedWallet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Lockedwallet.sol\":190:2819  contract LockedWallet is ILockable {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Lockedwallet.sol\":478:632  constructor(uint256 amount_, address beneficiary_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Lockedwallet.sol\":540:547  _amount */\n  0x00\n    /* \"contracts/Lockedwallet.sol\":540:557  _amount = amount_ */\n  swap2\n  swap1\n  swap2\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Lockedwallet.sol\":568:594  beneficiary = beneficiary_ */\n  and\n  0x80\n  mstore\n    /* \"contracts/Lockedwallet.sol\":605:611  _owner */\n  0x01\n    /* \"contracts/Lockedwallet.sol\":605:624  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Lockedwallet.sol\":614:624  msg.sender */\n  caller\n    /* \"contracts/Lockedwallet.sol\":605:624  _owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Lockedwallet.sol\":190:2819  contract LockedWallet is ILockable {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:365   */\ntag_3:\n    /* \"#utility.yul\":93:99   */\n  0x00\n    /* \"#utility.yul\":101:107   */\n  dup1\n    /* \"#utility.yul\":154:156   */\n  0x40\n    /* \"#utility.yul\":142:151   */\n  dup4\n    /* \"#utility.yul\":133:140   */\n  dup6\n    /* \"#utility.yul\":129:152   */\n  sub\n    /* \"#utility.yul\":125:157   */\n  slt\n    /* \"#utility.yul\":122:174   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":170:171   */\n  0x00\n    /* \"#utility.yul\":167:168   */\n  dup1\n    /* \"#utility.yul\":160:172   */\n  revert\n    /* \"#utility.yul\":122:174   */\ntag_9:\n    /* \"#utility.yul\":193:209   */\n  dup3\n  mload\n    /* \"#utility.yul\":252:254   */\n  0x20\n    /* \"#utility.yul\":237:255   */\n  dup5\n  add\n    /* \"#utility.yul\":231:256   */\n  mload\n    /* \"#utility.yul\":193:209   */\n  swap1\n  swap3\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":285:316   */\n  dup2\n  and\n    /* \"#utility.yul\":275:317   */\n  dup2\n  eq\n    /* \"#utility.yul\":265:335   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":331:332   */\n  0x00\n    /* \"#utility.yul\":328:329   */\n  dup1\n    /* \"#utility.yul\":321:333   */\n  revert\n    /* \"#utility.yul\":265:335   */\ntag_10:\n    /* \"#utility.yul\":354:359   */\n  dup1\n    /* \"#utility.yul\":344:359   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":14:365   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_7:\n    /* \"contracts/Lockedwallet.sol\":190:2819  contract LockedWallet is ILockable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x74af0cf009313e3c0d92464af6a8b6afccd4848a55d5ef8dac37109dbdba36ea\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Lockedwallet.sol\":190:2819  contract LockedWallet is ILockable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb580aa9e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc8cca41e\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      dup1\n      0x0a95606e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1d77b00b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x38af3eed\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Lockedwallet.sol\":2288:2816  function releaseClaimable(uint256[51] memory amount)... */\n    tag_3:\n      tag_10\n      tag_11\n      calldatasize\n      0x04\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n        /* \"#utility.yul\":1101:1126   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1089:1091   */\n      0x20\n        /* \"#utility.yul\":1074:1092   */\n      add\n        /* \"contracts/Lockedwallet.sol\":2288:2816  function releaseClaimable(uint256[51] memory amount)... */\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Lockedwallet.sol\":1124:1219  function changeTalaxAddress(address talax) external onlyTalax {... */\n    tag_4:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/Lockedwallet.sol\":349:385  address public immutable beneficiary */\n    tag_5:\n      tag_20\n      immutable(\"0x74af0cf009313e3c0d92464af6a8b6afccd4848a55d5ef8dac37109dbdba36ea\")\n      dup2\n      jump\n    tag_20:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1615:1670   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1597:1671   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1585:1587   */\n      0x20\n        /* \"#utility.yul\":1570:1588   */\n      add\n        /* \"contracts/Lockedwallet.sol\":349:385  address public immutable beneficiary */\n      tag_14\n        /* \"#utility.yul\":1451:1677   */\n      jump\n        /* \"contracts/Lockedwallet.sol\":854:936  function getOwner() public view returns (address) {... */\n    tag_6:\n        /* \"contracts/Lockedwallet.sol\":922:928  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Lockedwallet.sol\":854:936  function getOwner() public view returns (address) {... */\n      jump(tag_20)\n        /* \"contracts/Lockedwallet.sol\":394:426  uint256 public startLockedWallet */\n    tag_7:\n      tag_10\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/Lockedwallet.sol\":1286:1400  function initiateLockedWallet() external override onlyTalax {... */\n    tag_8:\n      tag_16\n      tag_31\n      jump\t// in\n        /* \"contracts/Lockedwallet.sol\":2288:2816  function releaseClaimable(uint256[51] memory amount)... */\n    tag_13:\n        /* \"contracts/Lockedwallet.sol\":2414:2421  uint256 */\n      0x00\n        /* \"contracts/Lockedwallet.sol\":976:988  _onlyTalax() */\n      tag_33\n        /* \"contracts/Lockedwallet.sol\":976:986  _onlyTalax */\n      tag_34\n        /* \"contracts/Lockedwallet.sol\":976:988  _onlyTalax() */\n      jump\t// in\n    tag_33:\n        /* \"contracts/Lockedwallet.sol\":2439:2468  uint256 claimableLockedAmount */\n      0x00\n        /* \"contracts/Lockedwallet.sol\":2471:2504  _calculateClaimableAmount(amount) */\n      tag_36\n        /* \"contracts/Lockedwallet.sol\":2497:2503  amount */\n      dup4\n        /* \"contracts/Lockedwallet.sol\":2471:2496  _calculateClaimableAmount */\n      tag_37\n        /* \"contracts/Lockedwallet.sol\":2471:2504  _calculateClaimableAmount(amount) */\n      jump\t// in\n    tag_36:\n        /* \"contracts/Lockedwallet.sol\":2439:2504  uint256 claimableLockedAmount = _calculateClaimableAmount(amount) */\n      swap1\n      pop\n        /* \"contracts/Lockedwallet.sol\":2611:2767  SafeMath.sub(... */\n      tag_38\n        /* \"contracts/Lockedwallet.sol\":2638:2645  _amount */\n      sload(0x00)\n        /* \"contracts/Lockedwallet.sol\":2660:2681  claimableLockedAmount */\n      dup3\n        /* \"contracts/Lockedwallet.sol\":2611:2767  SafeMath.sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x3a\n      dup2\n      mstore\n      0x20\n      add\n      data_bc7335ef5a2766e252b0d20841b8a31e77013ede9c2a48b3b61a9c597162b79a\n      0x3a\n      swap2\n      codecopy\n        /* \"contracts/Lockedwallet.sol\":2611:2623  SafeMath.sub */\n      tag_39\n        /* \"contracts/Lockedwallet.sol\":2611:2767  SafeMath.sub(... */\n      jump\t// in\n    tag_38:\n        /* \"contracts/Lockedwallet.sol\":2601:2608  _amount */\n      0x00\n        /* \"contracts/Lockedwallet.sol\":2601:2767  _amount = SafeMath.sub(... */\n      sstore\n        /* \"contracts/Lockedwallet.sol\":2787:2808  claimableLockedAmount */\n      swap3\n        /* \"contracts/Lockedwallet.sol\":2288:2816  function releaseClaimable(uint256[51] memory amount)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Lockedwallet.sol\":1124:1219  function changeTalaxAddress(address talax) external onlyTalax {... */\n    tag_19:\n        /* \"contracts/Lockedwallet.sol\":976:988  _onlyTalax() */\n      tag_41\n        /* \"contracts/Lockedwallet.sol\":976:986  _onlyTalax */\n      tag_34\n        /* \"contracts/Lockedwallet.sol\":976:988  _onlyTalax() */\n      jump\t// in\n    tag_41:\n        /* \"contracts/Lockedwallet.sol\":1197:1203  _owner */\n      0x01\n        /* \"contracts/Lockedwallet.sol\":1197:1211  _owner = talax */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Lockedwallet.sol\":1124:1219  function changeTalaxAddress(address talax) external onlyTalax {... */\n      jump\t// out\n        /* \"contracts/Lockedwallet.sol\":1286:1400  function initiateLockedWallet() external override onlyTalax {... */\n    tag_31:\n        /* \"contracts/Lockedwallet.sol\":976:988  _onlyTalax() */\n      tag_45\n        /* \"contracts/Lockedwallet.sol\":976:986  _onlyTalax */\n      tag_34\n        /* \"contracts/Lockedwallet.sol\":976:988  _onlyTalax() */\n      jump\t// in\n    tag_45:\n        /* \"contracts/Lockedwallet.sol\":1377:1392  block.timestamp */\n      timestamp\n        /* \"contracts/Lockedwallet.sol\":1357:1374  startLockedWallet */\n      0x02\n        /* \"contracts/Lockedwallet.sol\":1357:1392  startLockedWallet = block.timestamp */\n      sstore\n        /* \"contracts/Lockedwallet.sol\":1286:1400  function initiateLockedWallet() external override onlyTalax {... */\n      jump\t// out\n        /* \"contracts/Lockedwallet.sol\":748:846  function _onlyTalax() internal view {... */\n    tag_34:\n        /* \"contracts/Lockedwallet.sol\":817:823  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Lockedwallet.sol\":803:813  msg.sender */\n      caller\n        /* \"contracts/Lockedwallet.sol\":803:823  msg.sender == _owner */\n      eq\n        /* \"contracts/Lockedwallet.sol\":795:838  require(msg.sender == _owner, \"Not _owner\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1884:1886   */\n      0x20\n        /* \"contracts/Lockedwallet.sol\":795:838  require(msg.sender == _owner, \"Not _owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1866:1887   */\n      mstore\n        /* \"#utility.yul\":1923:1925   */\n      0x0a\n        /* \"#utility.yul\":1903:1921   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1896:1926   */\n      mstore\n        /* \"#utility.yul\":1962:1974   */\n      0x4e6f74205f6f776e657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1942:1960   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1935:1975   */\n      mstore\n        /* \"#utility.yul\":1992:2010   */\n      0x64\n      add\n        /* \"contracts/Lockedwallet.sol\":795:838  require(msg.sender == _owner, \"Not _owner\") */\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n        /* \"contracts/Lockedwallet.sol\":748:846  function _onlyTalax() internal view {... */\n      jump\t// out\n        /* \"contracts/Lockedwallet.sol\":1649:2196  function _calculateClaimableAmount(uint256[51] memory amount_)... */\n    tag_37:\n        /* \"contracts/Lockedwallet.sol\":1748:1755  uint256 */\n      0x00\n        /* \"contracts/Lockedwallet.sol\":1773:1787  uint256 months */\n      dup1\n        /* \"contracts/Lockedwallet.sol\":1830:1837  30 days */\n      0x278d00\n        /* \"contracts/Lockedwallet.sol\":1809:1826  startLockedWallet */\n      sload(0x02)\n        /* \"contracts/Lockedwallet.sol\":1791:1806  block.timestamp */\n      timestamp\n        /* \"contracts/Lockedwallet.sol\":1791:1826  block.timestamp - startLockedWallet */\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"contracts/Lockedwallet.sol\":1790:1837  (block.timestamp - startLockedWallet) / 30 days */\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"contracts/Lockedwallet.sol\":1895:1912  _latestClaimMonth */\n      sload(0x03)\n        /* \"contracts/Lockedwallet.sol\":1773:1837  uint256 months = (block.timestamp - startLockedWallet) / 30 days */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Lockedwallet.sol\":1848:1865  uint256 claimable */\n      0x00\n      swap1\n        /* \"contracts/Lockedwallet.sol\":1878:2059  for (uint256 i = _latestClaimMonth; i <= months; i = _unsafeInc(i)) {... */\n    tag_56:\n        /* \"contracts/Lockedwallet.sol\":1919:1925  months */\n      dup3\n        /* \"contracts/Lockedwallet.sol\":1914:1915  i */\n      dup2\n        /* \"contracts/Lockedwallet.sol\":1914:1925  i <= months */\n      gt\n        /* \"contracts/Lockedwallet.sol\":1878:2059  for (uint256 i = _latestClaimMonth; i <= months; i = _unsafeInc(i)) {... */\n      tag_57\n      jumpi\n        /* \"contracts/Lockedwallet.sol\":1986:1988  51 */\n      0x33\n        /* \"contracts/Lockedwallet.sol\":1965:1982  _latestClaimMonth */\n      sload(0x03)\n        /* \"contracts/Lockedwallet.sol\":1965:1988  _latestClaimMonth <= 51 */\n      gt\n        /* \"contracts/Lockedwallet.sol\":1961:2048  if (_latestClaimMonth <= 51) {... */\n      tag_59\n      jumpi\n        /* \"contracts/Lockedwallet.sol\":2022:2029  amount_ */\n      dup5\n        /* \"contracts/Lockedwallet.sol\":2030:2031  i */\n      dup2\n        /* \"contracts/Lockedwallet.sol\":2022:2032  amount_[i] */\n      0x33\n      dup2\n      lt\n      tag_61\n      jumpi\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/Lockedwallet.sol\":2009:2032  claimable += amount_[i] */\n      tag_63\n      swap1\n      dup4\n      tag_64\n      jump\t// in\n    tag_63:\n      swap2\n      pop\n        /* \"contracts/Lockedwallet.sol\":1961:2048  if (_latestClaimMonth <= 51) {... */\n    tag_59:\n        /* \"contracts/Lockedwallet.sol\":1518:1519  1 */\n      0x01\n        /* \"contracts/Lockedwallet.sol\":1514:1519  x + 1 */\n      add\n        /* \"contracts/Lockedwallet.sol\":1878:2059  for (uint256 i = _latestClaimMonth; i <= months; i = _unsafeInc(i)) {... */\n      jump(tag_56)\n    tag_57:\n      pop\n        /* \"contracts/Lockedwallet.sol\":2091:2101  months + 1 */\n      tag_67\n        /* \"contracts/Lockedwallet.sol\":2091:2097  months */\n      dup3\n        /* \"contracts/Lockedwallet.sol\":2100:2101  1 */\n      0x01\n        /* \"contracts/Lockedwallet.sol\":2091:2101  months + 1 */\n      tag_64\n      jump\t// in\n    tag_67:\n        /* \"contracts/Lockedwallet.sol\":2071:2088  _latestClaimMonth */\n      0x03\n        /* \"contracts/Lockedwallet.sol\":2071:2101  _latestClaimMonth = months + 1 */\n      sstore\n        /* \"contracts/Lockedwallet.sol\":2122:2136  claimable != 0 */\n      dup1\n        /* \"contracts/Lockedwallet.sol\":2114:2161  require(claimable != 0, \"Nothing to claim yet\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3143:3145   */\n      0x20\n        /* \"contracts/Lockedwallet.sol\":2114:2161  require(claimable != 0, \"Nothing to claim yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3125:3146   */\n      mstore\n        /* \"#utility.yul\":3182:3184   */\n      0x14\n        /* \"#utility.yul\":3162:3180   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3155:3185   */\n      mstore\n        /* \"#utility.yul\":3221:3243   */\n      0x4e6f7468696e6720746f20636c61696d20796574000000000000000000000000\n        /* \"#utility.yul\":3201:3219   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3194:3244   */\n      mstore\n        /* \"#utility.yul\":3261:3279   */\n      0x64\n      add\n        /* \"contracts/Lockedwallet.sol\":2114:2161  require(claimable != 0, \"Nothing to claim yet\") */\n      tag_49\n        /* \"#utility.yul\":2941:3285   */\n      jump\n        /* \"contracts/Lockedwallet.sol\":2114:2161  require(claimable != 0, \"Nothing to claim yet\") */\n    tag_68:\n        /* \"contracts/Lockedwallet.sol\":2179:2188  claimable */\n      swap4\n        /* \"contracts/Lockedwallet.sol\":1649:2196  function _calculateClaimableAmount(uint256[51] memory amount_)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4945:5176  function sub(... */\n    tag_39:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5061:5068  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5120:5132  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5112:5118  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5104:5133  require(b <= a, errorMessage) */\n      tag_72\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_72:\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5154:5159  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4945:5176  function sub(... */\n      jump\t// out\n        /* \"#utility.yul\":14:950   */\n    tag_12:\n        /* \"#utility.yul\":97:103   */\n      0x00\n        /* \"#utility.yul\":128:132   */\n      0x0660\n        /* \"#utility.yul\":173:175   */\n      dup1\n        /* \"#utility.yul\":161:170   */\n      dup4\n        /* \"#utility.yul\":152:159   */\n      dup6\n        /* \"#utility.yul\":148:171   */\n      sub\n        /* \"#utility.yul\":144:176   */\n      slt\n        /* \"#utility.yul\":141:193   */\n      iszero\n      tag_79\n      jumpi\n        /* \"#utility.yul\":189:190   */\n      0x00\n        /* \"#utility.yul\":186:187   */\n      dup1\n        /* \"#utility.yul\":179:191   */\n      revert\n        /* \"#utility.yul\":141:193   */\n    tag_79:\n        /* \"#utility.yul\":238:245   */\n      dup4\n        /* \"#utility.yul\":231:235   */\n      0x1f\n        /* \"#utility.yul\":220:229   */\n      dup5\n        /* \"#utility.yul\":216:236   */\n      add\n        /* \"#utility.yul\":212:246   */\n      slt\n        /* \"#utility.yul\":202:264   */\n      tag_80\n      jumpi\n        /* \"#utility.yul\":260:261   */\n      0x00\n        /* \"#utility.yul\":257:258   */\n      dup1\n        /* \"#utility.yul\":250:262   */\n      revert\n        /* \"#utility.yul\":202:264   */\n    tag_80:\n        /* \"#utility.yul\":293:295   */\n      0x40\n        /* \"#utility.yul\":287:296   */\n      mload\n        /* \"#utility.yul\":335:337   */\n      dup2\n        /* \"#utility.yul\":327:333   */\n      dup2\n        /* \"#utility.yul\":323:338   */\n      add\n        /* \"#utility.yul\":404:410   */\n      dup2\n        /* \"#utility.yul\":392:402   */\n      dup2\n        /* \"#utility.yul\":389:411   */\n      lt\n        /* \"#utility.yul\":368:386   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":356:366   */\n      dup3\n        /* \"#utility.yul\":353:387   */\n      gt\n        /* \"#utility.yul\":350:412   */\n      or\n        /* \"#utility.yul\":347:589   */\n      iszero\n      tag_81\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":442:443   */\n      0x00\n        /* \"#utility.yul\":435:523   */\n      mstore\n        /* \"#utility.yul\":546:550   */\n      0x41\n        /* \"#utility.yul\":543:544   */\n      0x04\n        /* \"#utility.yul\":536:551   */\n      mstore\n        /* \"#utility.yul\":574:578   */\n      0x24\n        /* \"#utility.yul\":571:572   */\n      0x00\n        /* \"#utility.yul\":564:579   */\n      revert\n        /* \"#utility.yul\":347:589   */\n    tag_81:\n        /* \"#utility.yul\":605:607   */\n      0x40\n        /* \"#utility.yul\":598:620   */\n      mstore\n        /* \"#utility.yul\":669:687   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":640:646   */\n      dup1\n        /* \"#utility.yul\":699:718   */\n      dup6\n      dup4\n      gt\n        /* \"#utility.yul\":696:735   */\n      iszero\n      tag_82\n      jumpi\n        /* \"#utility.yul\":731:732   */\n      0x00\n        /* \"#utility.yul\":728:729   */\n      dup1\n        /* \"#utility.yul\":721:733   */\n      revert\n        /* \"#utility.yul\":696:735   */\n    tag_82:\n        /* \"#utility.yul\":755:764   */\n      dup5\n        /* \"#utility.yul\":773:919   */\n    tag_83:\n        /* \"#utility.yul\":789:795   */\n      dup4\n        /* \"#utility.yul\":784:787   */\n      dup2\n        /* \"#utility.yul\":781:796   */\n      lt\n        /* \"#utility.yul\":773:919   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":857:874   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":845:875   */\n      dup3\n      mstore\n        /* \"#utility.yul\":904:908   */\n      0x20\n        /* \"#utility.yul\":895:909   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"#utility.yul\":806:820   */\n      add\n        /* \"#utility.yul\":773:919   */\n      jump(tag_83)\n    tag_85:\n      pop\n        /* \"#utility.yul\":938:944   */\n      swap1\n      swap6\n        /* \"#utility.yul\":14:950   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1137:1446   */\n    tag_18:\n        /* \"#utility.yul\":1196:1202   */\n      0x00\n        /* \"#utility.yul\":1249:1251   */\n      0x20\n        /* \"#utility.yul\":1237:1246   */\n      dup3\n        /* \"#utility.yul\":1228:1235   */\n      dup5\n        /* \"#utility.yul\":1224:1247   */\n      sub\n        /* \"#utility.yul\":1220:1252   */\n      slt\n        /* \"#utility.yul\":1217:1269   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":1265:1266   */\n      0x00\n        /* \"#utility.yul\":1262:1263   */\n      dup1\n        /* \"#utility.yul\":1255:1267   */\n      revert\n        /* \"#utility.yul\":1217:1269   */\n    tag_88:\n        /* \"#utility.yul\":1304:1313   */\n      dup2\n        /* \"#utility.yul\":1291:1314   */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1347:1352   */\n      dup2\n        /* \"#utility.yul\":1343:1397   */\n      and\n        /* \"#utility.yul\":1336:1341   */\n      dup2\n        /* \"#utility.yul\":1333:1398   */\n      eq\n        /* \"#utility.yul\":1323:1416   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":1412:1413   */\n      0x00\n        /* \"#utility.yul\":1409:1410   */\n      dup1\n        /* \"#utility.yul\":1402:1414   */\n      revert\n        /* \"#utility.yul\":2021:2205   */\n    tag_76:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":2070:2071   */\n      0x00\n        /* \"#utility.yul\":2063:2151   */\n      mstore\n        /* \"#utility.yul\":2170:2174   */\n      0x11\n        /* \"#utility.yul\":2167:2168   */\n      0x04\n        /* \"#utility.yul\":2160:2175   */\n      mstore\n        /* \"#utility.yul\":2194:2198   */\n      0x24\n        /* \"#utility.yul\":2191:2192   */\n      0x00\n        /* \"#utility.yul\":2184:2199   */\n      revert\n        /* \"#utility.yul\":2210:2335   */\n    tag_53:\n        /* \"#utility.yul\":2250:2254   */\n      0x00\n        /* \"#utility.yul\":2278:2279   */\n      dup3\n        /* \"#utility.yul\":2275:2276   */\n      dup3\n        /* \"#utility.yul\":2272:2280   */\n      lt\n        /* \"#utility.yul\":2269:2303   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":2283:2301   */\n      tag_95\n      tag_76\n      jump\t// in\n    tag_95:\n      pop\n        /* \"#utility.yul\":2320:2329   */\n      sub\n      swap1\n        /* \"#utility.yul\":2210:2335   */\n      jump\t// out\n        /* \"#utility.yul\":2340:2614   */\n    tag_55:\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2406:2407   */\n      dup3\n        /* \"#utility.yul\":2396:2585   */\n      tag_97\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":2438:2439   */\n      0x00\n        /* \"#utility.yul\":2431:2519   */\n      mstore\n        /* \"#utility.yul\":2542:2546   */\n      0x12\n        /* \"#utility.yul\":2539:2540   */\n      0x04\n        /* \"#utility.yul\":2532:2547   */\n      mstore\n        /* \"#utility.yul\":2570:2574   */\n      0x24\n        /* \"#utility.yul\":2567:2568   */\n      0x00\n        /* \"#utility.yul\":2560:2575   */\n      revert\n        /* \"#utility.yul\":2396:2585   */\n    tag_97:\n      pop\n        /* \"#utility.yul\":2599:2608   */\n      div\n      swap1\n        /* \"#utility.yul\":2340:2614   */\n      jump\t// out\n        /* \"#utility.yul\":2619:2803   */\n    tag_62:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":2668:2669   */\n      0x00\n        /* \"#utility.yul\":2661:2749   */\n      mstore\n        /* \"#utility.yul\":2768:2772   */\n      0x32\n        /* \"#utility.yul\":2765:2766   */\n      0x04\n        /* \"#utility.yul\":2758:2773   */\n      mstore\n        /* \"#utility.yul\":2792:2796   */\n      0x24\n        /* \"#utility.yul\":2789:2790   */\n      0x00\n        /* \"#utility.yul\":2782:2797   */\n      revert\n        /* \"#utility.yul\":2808:2936   */\n    tag_64:\n        /* \"#utility.yul\":2848:2851   */\n      0x00\n        /* \"#utility.yul\":2879:2880   */\n      dup3\n        /* \"#utility.yul\":2875:2881   */\n      not\n        /* \"#utility.yul\":2872:2873   */\n      dup3\n        /* \"#utility.yul\":2869:2882   */\n      gt\n        /* \"#utility.yul\":2866:2905   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":2885:2903   */\n      tag_101\n      tag_76\n      jump\t// in\n    tag_101:\n      pop\n        /* \"#utility.yul\":2921:2930   */\n      add\n      swap1\n        /* \"#utility.yul\":2808:2936   */\n      jump\t// out\n        /* \"#utility.yul\":3290:3887   */\n    tag_74:\n        /* \"#utility.yul\":3402:3406   */\n      0x00\n        /* \"#utility.yul\":3431:3433   */\n      0x20\n        /* \"#utility.yul\":3460:3462   */\n      dup1\n        /* \"#utility.yul\":3449:3458   */\n      dup4\n        /* \"#utility.yul\":3442:3463   */\n      mstore\n        /* \"#utility.yul\":3492:3498   */\n      dup4\n        /* \"#utility.yul\":3486:3499   */\n      mload\n        /* \"#utility.yul\":3535:3541   */\n      dup1\n        /* \"#utility.yul\":3530:3532   */\n      dup3\n        /* \"#utility.yul\":3519:3528   */\n      dup6\n        /* \"#utility.yul\":3515:3533   */\n      add\n        /* \"#utility.yul\":3508:3542   */\n      mstore\n        /* \"#utility.yul\":3560:3561   */\n      0x00\n        /* \"#utility.yul\":3570:3710   */\n    tag_104:\n        /* \"#utility.yul\":3584:3590   */\n      dup2\n        /* \"#utility.yul\":3581:3582   */\n      dup2\n        /* \"#utility.yul\":3578:3591   */\n      lt\n        /* \"#utility.yul\":3570:3710   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":3679:3693   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":3675:3698   */\n      dup4\n      add\n        /* \"#utility.yul\":3669:3699   */\n      mload\n        /* \"#utility.yul\":3645:3662   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":3664:3666   */\n      0x40\n        /* \"#utility.yul\":3641:3667   */\n      add\n        /* \"#utility.yul\":3634:3700   */\n      mstore\n        /* \"#utility.yul\":3599:3609   */\n      dup3\n      add\n        /* \"#utility.yul\":3570:3710   */\n      jump(tag_104)\n    tag_106:\n        /* \"#utility.yul\":3728:3734   */\n      dup2\n        /* \"#utility.yul\":3725:3726   */\n      dup2\n        /* \"#utility.yul\":3722:3735   */\n      gt\n        /* \"#utility.yul\":3719:3810   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":3798:3799   */\n      0x00\n        /* \"#utility.yul\":3793:3795   */\n      0x40\n        /* \"#utility.yul\":3784:3790   */\n      dup4\n        /* \"#utility.yul\":3773:3782   */\n      dup8\n        /* \"#utility.yul\":3769:3791   */\n      add\n        /* \"#utility.yul\":3765:3796   */\n      add\n        /* \"#utility.yul\":3758:3800   */\n      mstore\n        /* \"#utility.yul\":3719:3810   */\n    tag_107:\n      pop\n        /* \"#utility.yul\":3871:3873   */\n      0x1f\n        /* \"#utility.yul\":3850:3865   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3846:3875   */\n      and\n        /* \"#utility.yul\":3831:3876   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3878:3880   */\n      0x40\n        /* \"#utility.yul\":3827:3881   */\n      add\n      swap4\n        /* \"#utility.yul\":3290:3887   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_bc7335ef5a2766e252b0d20841b8a31e77013ede9c2a48b3b61a9c597162b79a 4c6f636b656477616c6c65743a2043616e6e6f742073756273747261637420746f74616c20616d6f756e74207769746820636c61696d61626c65\n\n    auxdata: 0xa264697066735822122090bcfba276bf2907b74c1ba3f73831bb44d532322f6c84f831a0deff4c624e8c64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_529": {
									"entryPoint": null,
									"id": 529,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256t_address_fromMemory": {
									"entryPoint": 88,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:367:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "112:253:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "158:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "167:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "170:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "160:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "160:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "160:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "133:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "142:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "129:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "129:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "154:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "125:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "125:32:3"
															},
															"nodeType": "YulIf",
															"src": "122:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "183:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "199:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "193:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "193:16:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "218:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "241:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "252:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "237:18:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:25:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "222:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "328:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "331:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "321:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "321:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "278:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "289:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "304:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "309:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "300:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "300:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "313:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "296:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "296:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "285:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "285:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "275:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "268:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:50:3"
															},
															"nodeType": "YulIf",
															"src": "265:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "344:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "354:5:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "344:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "70:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "81:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "93:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "101:6:3",
														"type": ""
													}
												],
												"src": "14:351:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b506040516105a53803806105a583398101604081905261002f91610058565b6000919091556001600160a01b0316608052600180546001600160a01b03191633179055610095565b6000806040838503121561006b57600080fd5b825160208401519092506001600160a01b038116811461008a57600080fd5b809150509250929050565b6080516104f66100af600039600060b701526104f66000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063893d20e811610050578063893d20e8146100f1578063b580aa9e14610102578063c8cca41e1461010b57600080fd5b80630a95606e146100775780631d77b00b1461009d57806338af3eed146100b2575b600080fd5b61008a6100853660046102fe565b610113565b6040519081526020015b60405180910390f35b6100b06100ab36600461038b565b610158565b005b6100d97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610094565b6001546001600160a01b03166100d9565b61008a60025481565b6100b061019a565b600061011d6101a8565b600061012883610209565b905061014f600054826040518060600160405280603a8152602001610487603a91396102d2565b60005592915050565b6101606101a8565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6101a26101a8565b42600255565b6001546001600160a01b031633146102075760405162461bcd60e51b815260206004820152600a60248201527f4e6f74205f6f776e65720000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b565b60008062278d006002544261021e91906103ca565b61022891906103e1565b6003549091506000905b82811161026f576033600354116102675784816033811061025557610255610403565b60200201516102649083610419565b91505b600101610232565b5061027b826001610419565b600355806102cb5760405162461bcd60e51b815260206004820152601460248201527f4e6f7468696e6720746f20636c61696d2079657400000000000000000000000060448201526064016101fe565b9392505050565b600081848411156102f65760405162461bcd60e51b81526004016101fe9190610431565b505050900390565b600061066080838503121561031257600080fd5b83601f84011261032157600080fd5b60405181810181811067ffffffffffffffff8211171561035157634e487b7160e01b600052604160045260246000fd5b60405290830190808583111561036657600080fd5b845b83811015610380578035825260209182019101610368565b509095945050505050565b60006020828403121561039d57600080fd5b81356001600160a01b03811681146102cb57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156103dc576103dc6103b4565b500390565b6000826103fe57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000821982111561042c5761042c6103b4565b500190565b600060208083528351808285015260005b8181101561045e57858101830151858201604001528201610442565b81811115610470576000604083870101525b50601f01601f191692909201604001939250505056fe4c6f636b656477616c6c65743a2043616e6e6f742073756273747261637420746f74616c20616d6f756e74207769746820636c61696d61626c65a264697066735822122090bcfba276bf2907b74c1ba3f73831bb44d532322f6c84f831a0deff4c624e8c64736f6c634300080b0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5A5 CODESIZE SUB DUP1 PUSH2 0x5A5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x58 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x95 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x4F6 PUSH2 0xAF PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0xB7 ADD MSTORE PUSH2 0x4F6 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xB580AA9E EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xC8CCA41E EQ PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA95606E EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x85 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH2 0xAB CALLDATASIZE PUSH1 0x4 PUSH2 0x38B JUMP JUMPDEST PUSH2 0x158 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD9 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x94 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD9 JUMP JUMPDEST PUSH2 0x8A PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB0 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128 DUP4 PUSH2 0x209 JUMP JUMPDEST SWAP1 POP PUSH2 0x14F PUSH1 0x0 SLOAD DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x487 PUSH1 0x3A SWAP2 CODECOPY PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x0 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x160 PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x1A8 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x207 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74205F6F776E657200000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x278D00 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP2 GT PUSH2 0x26F JUMPI PUSH1 0x33 PUSH1 0x3 SLOAD GT PUSH2 0x267 JUMPI DUP5 DUP2 PUSH1 0x33 DUP2 LT PUSH2 0x255 JUMPI PUSH2 0x255 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x264 SWAP1 DUP4 PUSH2 0x419 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x232 JUMP JUMPDEST POP PUSH2 0x27B DUP3 PUSH1 0x1 PUSH2 0x419 JUMP JUMPDEST PUSH1 0x3 SSTORE DUP1 PUSH2 0x2CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F20636C61696D20796574000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x431 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x660 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x351 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 DUP4 ADD SWAP1 DUP1 DUP6 DUP4 GT ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x380 JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x368 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3DC JUMPI PUSH2 0x3DC PUSH2 0x3B4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x42C JUMPI PUSH2 0x42C PUSH2 0x3B4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x45E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x442 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4C PUSH16 0x636B656477616C6C65743A2043616E6E PUSH16 0x742073756273747261637420746F7461 PUSH13 0x20616D6F756E74207769746820 PUSH4 0x6C61696D PUSH2 0x626C PUSH6 0xA26469706673 PC 0x22 SLT KECCAK256 SWAP1 0xBC 0xFB LOG2 PUSH23 0xBF2907B74C1BA3F73831BB44D532322F6C84F831A0DEFF 0x4C PUSH3 0x4E8C64 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
							"sourceMap": "190:2629:2:-:0;;;478:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;540:7;:17;;;;-1:-1:-1;;;;;568:26:2;;;605:6;:19;;-1:-1:-1;;;;;;605:19:2;614:10;605:19;;;190:2629;;14:351:3;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;193:16;;252:2;237:18;;231:25;193:16;;-1:-1:-1;;;;;;285:31:3;;275:42;;265:70;;331:1;328;321:12;265:70;354:5;344:15;;;14:351;;;;;:::o;:::-;190:2629:2;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateClaimableAmount_659": {
									"entryPoint": 521,
									"id": 659,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_onlyTalax_541": {
									"entryPoint": 424,
									"id": 541,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_unsafeInc_594": {
									"entryPoint": null,
									"id": 594,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@beneficiary_504": {
									"entryPoint": null,
									"id": 504,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@changeTalaxAddress_568": {
									"entryPoint": 344,
									"id": 568,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getOwner_549": {
									"entryPoint": null,
									"id": 549,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initiateLockedWallet_581": {
									"entryPoint": 410,
									"id": 581,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@releaseClaimable_690": {
									"entryPoint": 275,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@startLockedWallet_506": {
									"entryPoint": null,
									"id": 506,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_260": {
									"entryPoint": 722,
									"id": 260,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$51_memory_ptr": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ee508ea70425a29c7610cd2f9910c217a86b66d8c07f515ad19475c1d71b59f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3889:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "108:842:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "118:14:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "128:4:3",
																"type": "",
																"value": "1632"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "122:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "177:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "186:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "189:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "179:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "179:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "152:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "161:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "148:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "148:23:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "173:2:3"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "144:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "144:32:3"
															},
															"nodeType": "YulIf",
															"src": "141:52:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "248:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "257:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "260:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "250:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "250:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "250:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "220:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "231:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "216:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "216:20:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "238:7:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "212:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "212:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "205:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:42:3"
															},
															"nodeType": "YulIf",
															"src": "202:62:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "273:23:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "293:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "287:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "287:9:3"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "277:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "305:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "327:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "335:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "323:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "323:15:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "309:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "421:168:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "442:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "445:77:3",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "435:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "435:88:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "435:88:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "543:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "546:4:3",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "536:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "536:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "536:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "571:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "574:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "564:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "564:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "564:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "356:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "368:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "353:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "353:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "392:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "404:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "389:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "389:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "350:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "350:62:3"
															},
															"nodeType": "YulIf",
															"src": "347:242:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "605:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "609:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "598:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "598:22:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "629:17:3",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "640:6:3"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "633:3:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "655:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "673:9:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "684:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "669:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "669:18:3"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "659:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "719:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "728:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "731:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "721:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "721:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "721:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "702:6:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "710:7:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "699:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "699:19:3"
															},
															"nodeType": "YulIf",
															"src": "696:39:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "744:20:3",
															"value": {
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "755:9:3"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "748:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "831:88:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "852:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "870:3:3"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "857:12:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "857:17:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "845:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "845:30:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "845:30:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "888:21:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "899:3:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "904:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "895:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "895:14:3"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "888:3:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "784:3:3"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "789:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "781:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "781:15:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:25:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:21:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "810:3:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "815:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "806:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "806:14:3"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "799:3:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "777:3:3",
																"statements": []
															},
															"src": "773:146:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:16:3",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "938:6:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$51_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "74:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "85:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "97:6:3",
														"type": ""
													}
												],
												"src": "14:936:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1056:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1066:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1078:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1089:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1074:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1066:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1108:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1119:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1101:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1101:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1025:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1036:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1047:4:3",
														"type": ""
													}
												],
												"src": "955:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1207:239:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1253:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1262:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1265:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1255:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1255:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1255:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1228:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1237:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1224:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1224:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1249:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1220:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:32:3"
															},
															"nodeType": "YulIf",
															"src": "1217:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1278:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1304:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1291:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1291:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1282:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1400:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1409:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1412:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1402:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1402:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1402:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1336:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1347:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1354:42:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1343:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1343:54:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1333:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1333:65:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1326:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:73:3"
															},
															"nodeType": "YulIf",
															"src": "1323:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1425:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1435:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1425:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1173:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1184:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1196:6:3",
														"type": ""
													}
												],
												"src": "1137:309:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1552:125:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1562:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1574:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1585:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1570:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1570:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1562:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1604:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1619:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1627:42:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1615:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1615:55:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1597:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1597:74:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1597:74:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1521:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1532:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1543:4:3",
														"type": ""
													}
												],
												"src": "1451:226:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1856:160:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1873:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1884:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1866:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1866:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1866:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1907:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1918:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1903:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1903:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1923:2:3",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1896:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1896:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1946:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1957:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1942:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1942:18:3"
																	},
																	{
																		"hexValue": "4e6f74205f6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1962:12:3",
																		"type": "",
																		"value": "Not _owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1935:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:40:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1935:40:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1984:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1996:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2007:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1992:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1984:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ee508ea70425a29c7610cd2f9910c217a86b66d8c07f515ad19475c1d71b59f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1833:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1847:4:3",
														"type": ""
													}
												],
												"src": "1682:334:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2053:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2070:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2073:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2063:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2063:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2167:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2170:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2160:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2160:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2160:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2191:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2194:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2184:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2184:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2184:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2021:184:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2259:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2281:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2283:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2283:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2283:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2275:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2278:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2272:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2272:8:3"
															},
															"nodeType": "YulIf",
															"src": "2269:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2312:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2324:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2327:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2320:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2312:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2241:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2244:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2250:4:3",
														"type": ""
													}
												],
												"src": "2210:125:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2386:228:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2417:168:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2438:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2441:77:3",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2431:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2431:88:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2431:88:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2539:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2542:4:3",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2532:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2532:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2532:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2567:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2570:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2560:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2560:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2560:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2406:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2399:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2399:9:3"
															},
															"nodeType": "YulIf",
															"src": "2396:189:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2594:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2603:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2606:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2599:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2599:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2594:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2371:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2374:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2380:1:3",
														"type": ""
													}
												],
												"src": "2340:274:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2651:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2668:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2671:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2661:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2661:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2661:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2765:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2768:4:3",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2758:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2758:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2758:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2789:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2792:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2782:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2782:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2782:15:3"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2619:184:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2856:80:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2883:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2885:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2885:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2885:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2872:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2879:1:3"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2875:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2875:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2869:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:13:3"
															},
															"nodeType": "YulIf",
															"src": "2866:39:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2914:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2925:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2928:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2921:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2921:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2914:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2839:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2842:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2848:3:3",
														"type": ""
													}
												],
												"src": "2808:128:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3115:170:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3132:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3143:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3125:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3125:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3125:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3166:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3177:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3162:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3162:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3182:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3155:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3155:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3155:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3216:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3201:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3201:18:3"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d20796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3221:22:3",
																		"type": "",
																		"value": "Nothing to claim yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3194:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3194:50:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3194:50:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3253:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3265:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3276:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3261:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3261:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3253:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3092:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3106:4:3",
														"type": ""
													}
												],
												"src": "2941:344:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3411:476:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3421:12:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3431:2:3",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3425:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3449:9:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3460:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3442:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3442:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3442:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3472:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3492:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3486:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3486:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3476:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3519:9:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3530:2:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:18:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3535:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3508:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3508:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3508:34:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3551:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3560:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3555:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3620:90:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "3649:9:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3660:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3645:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3645:17:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3664:2:3",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3641:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3641:26:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "3683:6:3"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "3691:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3679:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3679:14:3"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "3695:2:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3675:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3675:23:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3669:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3669:30:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3634:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3634:66:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3634:66:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3581:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3584:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3578:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3578:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3592:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3594:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3603:1:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3606:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3599:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3599:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3594:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3574:3:3",
																"statements": []
															},
															"src": "3570:140:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3744:66:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "3773:9:3"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "3784:6:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3769:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3769:22:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3793:2:3",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3765:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3765:31:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3798:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3758:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3758:42:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3758:42:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3725:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3728:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3722:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3722:13:3"
															},
															"nodeType": "YulIf",
															"src": "3719:91:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3819:62:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3835:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3854:6:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3862:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3850:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3850:15:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3871:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3867:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3867:7:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3846:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3846:29:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3831:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3831:45:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3878:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3827:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3827:54:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3819:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3380:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3391:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3402:4:3",
														"type": ""
													}
												],
												"src": "3290:597:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_array$_t_uint256_$51_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 1632\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        if iszero(slt(add(headStart, 0x1f), dataEnd)) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, _1)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        let srcEnd := add(headStart, _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := headStart\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, 0x20)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_8ee508ea70425a29c7610cd2f9910c217a86b66d8c07f515ad19475c1d71b59f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Not _owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Nothing to claim yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"504": [
									{
										"length": 32,
										"start": 183
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100725760003560e01c8063893d20e811610050578063893d20e8146100f1578063b580aa9e14610102578063c8cca41e1461010b57600080fd5b80630a95606e146100775780631d77b00b1461009d57806338af3eed146100b2575b600080fd5b61008a6100853660046102fe565b610113565b6040519081526020015b60405180910390f35b6100b06100ab36600461038b565b610158565b005b6100d97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610094565b6001546001600160a01b03166100d9565b61008a60025481565b6100b061019a565b600061011d6101a8565b600061012883610209565b905061014f600054826040518060600160405280603a8152602001610487603a91396102d2565b60005592915050565b6101606101a8565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6101a26101a8565b42600255565b6001546001600160a01b031633146102075760405162461bcd60e51b815260206004820152600a60248201527f4e6f74205f6f776e65720000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b565b60008062278d006002544261021e91906103ca565b61022891906103e1565b6003549091506000905b82811161026f576033600354116102675784816033811061025557610255610403565b60200201516102649083610419565b91505b600101610232565b5061027b826001610419565b600355806102cb5760405162461bcd60e51b815260206004820152601460248201527f4e6f7468696e6720746f20636c61696d2079657400000000000000000000000060448201526064016101fe565b9392505050565b600081848411156102f65760405162461bcd60e51b81526004016101fe9190610431565b505050900390565b600061066080838503121561031257600080fd5b83601f84011261032157600080fd5b60405181810181811067ffffffffffffffff8211171561035157634e487b7160e01b600052604160045260246000fd5b60405290830190808583111561036657600080fd5b845b83811015610380578035825260209182019101610368565b509095945050505050565b60006020828403121561039d57600080fd5b81356001600160a01b03811681146102cb57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156103dc576103dc6103b4565b500390565b6000826103fe57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000821982111561042c5761042c6103b4565b500190565b600060208083528351808285015260005b8181101561045e57858101830151858201604001528201610442565b81811115610470576000604083870101525b50601f01601f191692909201604001939250505056fe4c6f636b656477616c6c65743a2043616e6e6f742073756273747261637420746f74616c20616d6f756e74207769746820636c61696d61626c65a264697066735822122090bcfba276bf2907b74c1ba3f73831bb44d532322f6c84f831a0deff4c624e8c64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xB580AA9E EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xC8CCA41E EQ PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA95606E EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x85 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH2 0xAB CALLDATASIZE PUSH1 0x4 PUSH2 0x38B JUMP JUMPDEST PUSH2 0x158 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD9 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x94 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD9 JUMP JUMPDEST PUSH2 0x8A PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB0 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128 DUP4 PUSH2 0x209 JUMP JUMPDEST SWAP1 POP PUSH2 0x14F PUSH1 0x0 SLOAD DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x487 PUSH1 0x3A SWAP2 CODECOPY PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x0 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x160 PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x1A8 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x207 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74205F6F776E657200000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x278D00 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP2 GT PUSH2 0x26F JUMPI PUSH1 0x33 PUSH1 0x3 SLOAD GT PUSH2 0x267 JUMPI DUP5 DUP2 PUSH1 0x33 DUP2 LT PUSH2 0x255 JUMPI PUSH2 0x255 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x264 SWAP1 DUP4 PUSH2 0x419 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x232 JUMP JUMPDEST POP PUSH2 0x27B DUP3 PUSH1 0x1 PUSH2 0x419 JUMP JUMPDEST PUSH1 0x3 SSTORE DUP1 PUSH2 0x2CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F20636C61696D20796574000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x431 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x660 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x351 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 DUP4 ADD SWAP1 DUP1 DUP6 DUP4 GT ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x380 JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x368 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3DC JUMPI PUSH2 0x3DC PUSH2 0x3B4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x42C JUMPI PUSH2 0x42C PUSH2 0x3B4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x45E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x442 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4C PUSH16 0x636B656477616C6C65743A2043616E6E PUSH16 0x742073756273747261637420746F7461 PUSH13 0x20616D6F756E74207769746820 PUSH4 0x6C61696D PUSH2 0x626C PUSH6 0xA26469706673 PC 0x22 SLT KECCAK256 SWAP1 0xBC 0xFB LOG2 PUSH23 0xBF2907B74C1BA3F73831BB44D532322F6C84F831A0DEFF 0x4C PUSH3 0x4E8C64 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
							"sourceMap": "190:2629:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2288:528;;;;;;:::i;:::-;;:::i;:::-;;;1101:25:3;;;1089:2;1074:18;2288:528:2;;;;;;;;1124:95;;;;;;:::i;:::-;;:::i;:::-;;349:36;;;;;;;;-1:-1:-1;;;;;1615:55:3;;;1597:74;;1585:2;1570:18;349:36:2;1451:226:3;854:82:2;922:6;;-1:-1:-1;;;;;922:6:2;854:82;;394:32;;;;;;1286:114;;;:::i;2288:528::-;2414:7;976:12;:10;:12::i;:::-;2439:29:::1;2471:33;2497:6;2471:25;:33::i;:::-;2439:65;;2611:156;2638:7;;2660:21;2611:156;;;;;;;;;;;;;;;;;:12;:156::i;:::-;2601:7;:166:::0;2787:21;2288:528;-1:-1:-1;;2288:528:2:o;1124:95::-;976:12;:10;:12::i;:::-;1197:6:::1;:14:::0;;;::::1;-1:-1:-1::0;;;;;1197:14:2;;;::::1;::::0;;;::::1;::::0;;1124:95::o;1286:114::-;976:12;:10;:12::i;:::-;1377:15:::1;1357:17;:35:::0;1286:114::o;748:98::-;817:6;;-1:-1:-1;;;;;817:6:2;803:10;:20;795:43;;;;-1:-1:-1;;;795:43:2;;1884:2:3;795:43:2;;;1866:21:3;1923:2;1903:18;;;1896:30;1962:12;1942:18;;;1935:40;1992:18;;795:43:2;;;;;;;;;748:98::o;1649:547::-;1748:7;1773:14;1830:7;1809:17;;1791:15;:35;;;;:::i;:::-;1790:47;;;;:::i;:::-;1895:17;;1773:64;;-1:-1:-1;1848:17:2;;1878:181;1919:6;1914:1;:11;1878:181;;1986:2;1965:17;;:23;1961:87;;2022:7;2030:1;2022:10;;;;;;;:::i;:::-;;;;;2009:23;;;;:::i;:::-;;;1961:87;1518:1;1514:5;1878:181;;;-1:-1:-1;2091:10:2;:6;2100:1;2091:10;:::i;:::-;2071:17;:30;2122:14;2114:47;;;;-1:-1:-1;;;2114:47:2;;3143:2:3;2114:47:2;;;3125:21:3;3182:2;3162:18;;;3155:30;3221:22;3201:18;;;3194:50;3261:18;;2114:47:2;2941:344:3;2114:47:2;2179:9;1649:547;-1:-1:-1;;;1649:547:2:o;4945:231:0:-;5061:7;5120:12;5112:6;;;;5104:29;;;;-1:-1:-1;;;5104:29:0;;;;;;;;:::i;:::-;-1:-1:-1;;;5154:5:0;;;4945:231::o;14:936:3:-;97:6;128:4;173:2;161:9;152:7;148:23;144:32;141:52;;;189:1;186;179:12;141:52;238:7;231:4;220:9;216:20;212:34;202:62;;260:1;257;250:12;202:62;293:2;287:9;335:2;327:6;323:15;404:6;392:10;389:22;368:18;356:10;353:34;350:62;347:242;;;-1:-1:-1;;;442:1:3;435:88;546:4;543:1;536:15;574:4;571:1;564:15;347:242;605:2;598:22;669:18;;;;640:6;699:19;;;696:39;;;731:1;728;721:12;696:39;755:9;773:146;789:6;784:3;781:15;773:146;;;857:17;;845:30;;904:4;895:14;;;;806;773:146;;;-1:-1:-1;938:6:3;;14:936;-1:-1:-1;;;;;14:936:3:o;1137:309::-;1196:6;1249:2;1237:9;1228:7;1224:23;1220:32;1217:52;;;1265:1;1262;1255:12;1217:52;1304:9;1291:23;-1:-1:-1;;;;;1347:5:3;1343:54;1336:5;1333:65;1323:93;;1412:1;1409;1402:12;2021:184;-1:-1:-1;;;2070:1:3;2063:88;2170:4;2167:1;2160:15;2194:4;2191:1;2184:15;2210:125;2250:4;2278:1;2275;2272:8;2269:34;;;2283:18;;:::i;:::-;-1:-1:-1;2320:9:3;;2210:125::o;2340:274::-;2380:1;2406;2396:189;;-1:-1:-1;;;2438:1:3;2431:88;2542:4;2539:1;2532:15;2570:4;2567:1;2560:15;2396:189;-1:-1:-1;2599:9:3;;2340:274::o;2619:184::-;-1:-1:-1;;;2668:1:3;2661:88;2768:4;2765:1;2758:15;2792:4;2789:1;2782:15;2808:128;2848:3;2879:1;2875:6;2872:1;2869:13;2866:39;;;2885:18;;:::i;:::-;-1:-1:-1;2921:9:3;;2808:128::o;3290:597::-;3402:4;3431:2;3460;3449:9;3442:21;3492:6;3486:13;3535:6;3530:2;3519:9;3515:18;3508:34;3560:1;3570:140;3584:6;3581:1;3578:13;3570:140;;;3679:14;;;3675:23;;3669:30;3645:17;;;3664:2;3641:26;3634:66;3599:10;;3570:140;;;3728:6;3725:1;3722:13;3719:91;;;3798:1;3793:2;3784:6;3773:9;3769:22;3765:31;3758:42;3719:91;-1:-1:-1;3871:2:3;3850:15;-1:-1:-1;;3846:29:3;3831:45;;;;3878:2;3827:54;;3290:597;-1:-1:-1;;;3290:597:3:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "254000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"beneficiary()": "infinite",
								"changeTalaxAddress(address)": "26708",
								"getOwner()": "2331",
								"initiateLockedWallet()": "24457",
								"releaseClaimable(uint256[51])": "infinite",
								"startLockedWallet()": "2306"
							},
							"internal": {
								"_calculateClaimableAmount(uint256[51] memory)": "infinite",
								"_onlyTalax()": "infinite",
								"_unsafeInc(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 190,
									"end": 2819,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 190,
									"end": 2819,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 190,
									"end": 2819,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 478,
									"end": 632,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 632,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 478,
									"end": 632,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 478,
									"end": 632,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 478,
									"end": 632,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 478,
									"end": 632,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 478,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 478,
									"end": 632,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 478,
									"end": 632,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 478,
									"end": 632,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 540,
									"end": 547,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 568,
									"end": 594,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 568,
									"end": 594,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 568,
									"end": 594,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 605,
									"end": 611,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 605,
									"end": 624,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 605,
									"end": 624,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 605,
									"end": 624,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 614,
									"end": 624,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 605,
									"end": 624,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 605,
									"end": 624,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 605,
									"end": 624,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 190,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 190,
									"end": 2819,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 365,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 365,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 93,
									"end": 99,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 101,
									"end": 107,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 154,
									"end": 156,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 142,
									"end": 151,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 133,
									"end": 140,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 129,
									"end": 152,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 125,
									"end": 157,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 122,
									"end": 174,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 122,
									"end": 174,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 170,
									"end": 171,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 168,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 160,
									"end": 172,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 122,
									"end": 174,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 193,
									"end": 209,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 193,
									"end": 209,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 252,
									"end": 254,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 237,
									"end": 255,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 231,
									"end": 256,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 193,
									"end": 209,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 193,
									"end": 209,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 285,
									"end": 316,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 285,
									"end": 316,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 275,
									"end": 317,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 275,
									"end": 317,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 265,
									"end": 335,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 265,
									"end": 335,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 331,
									"end": 332,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 328,
									"end": 329,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 321,
									"end": 333,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 265,
									"end": 335,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 265,
									"end": 335,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 354,
									"end": 359,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 344,
									"end": 359,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 344,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 344,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 365,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 14,
									"end": 365,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 365,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 14,
									"end": 365,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 14,
									"end": 365,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 365,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 365,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 365,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 190,
									"end": 2819,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 190,
									"end": 2819,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 190,
									"end": 2819,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 190,
									"end": 2819,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 190,
									"end": 2819,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 190,
									"end": 2819,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 190,
									"end": 2819,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 190,
									"end": 2819,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "504"
								},
								{
									"begin": 190,
									"end": 2819,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 190,
									"end": 2819,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 190,
									"end": 2819,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122090bcfba276bf2907b74c1ba3f73831bb44d532322f6c84f831a0deff4c624e8c64736f6c634300080b0033",
									".code": [
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "893D20E8"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "893D20E8"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "B580AA9E"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "C8CCA41E"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "A95606E"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "1D77B00B"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "38AF3EED"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 190,
											"end": 2819,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1126,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1091,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 349,
											"end": 385,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 349,
											"end": 385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 349,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 349,
											"end": 385,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "504"
										},
										{
											"begin": 349,
											"end": 385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 349,
											"end": 385,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 349,
											"end": 385,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 349,
											"end": 385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 349,
											"end": 385,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 349,
											"end": 385,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1615,
											"end": 1670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1670,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1585,
											"end": 1587,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 349,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1451,
											"end": 1677,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 854,
											"end": 936,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 854,
											"end": 936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 922,
											"end": 928,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 922,
											"end": 928,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 922,
											"end": 928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 854,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 854,
											"end": 936,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 394,
											"end": 426,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 394,
											"end": 426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 394,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 394,
											"end": 426,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 394,
											"end": 426,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 394,
											"end": 426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 394,
											"end": 426,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1400,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1286,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1286,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1286,
											"end": 1400,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 976,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 976,
											"end": 988,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 976,
											"end": 988,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 976,
											"end": 988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2439,
											"end": 2468,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2471,
											"end": 2504,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2471,
											"end": 2504,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2471,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2439,
											"end": 2504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2439,
											"end": 2504,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2638,
											"end": 2645,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2645,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2681,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "PUSH",
											"source": 2,
											"value": "3A"
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "PUSH data",
											"source": 2,
											"value": "BC7335EF5A2766E252B0D20841B8A31E77013EDE9C2A48B3B61A9C597162B79A"
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "PUSH",
											"source": 2,
											"value": "3A"
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2611,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2601,
											"end": 2608,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2767,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2787,
											"end": 2808,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2288,
											"end": 2816,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 976,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 976,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 976,
											"end": 988,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 976,
											"end": 988,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 976,
											"end": 988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1219,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1286,
											"end": 1400,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1286,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 976,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 976,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 976,
											"end": 988,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 976,
											"end": 988,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 976,
											"end": 988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1392,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1357,
											"end": 1392,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1400,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 748,
											"end": 846,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 748,
											"end": 846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 817,
											"end": 823,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 823,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 817,
											"end": 823,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 803,
											"end": 813,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 803,
											"end": 823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 795,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 795,
											"end": 838,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 795,
											"end": 838,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 838,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 795,
											"end": 838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 795,
											"end": 838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 795,
											"end": 838,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 795,
											"end": 838,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 795,
											"end": 838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1925,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1903,
											"end": 1921,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1903,
											"end": 1921,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1903,
											"end": 1921,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1896,
											"end": 1926,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 1974,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F74205F6F776E657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 1942,
											"end": 1960,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1942,
											"end": 1960,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1935,
											"end": 1975,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1992,
											"end": 2010,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 795,
											"end": 838,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 795,
											"end": 838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 795,
											"end": 838,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 838,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 795,
											"end": 838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 795,
											"end": 838,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 795,
											"end": 838,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 795,
											"end": 838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 795,
											"end": 838,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 795,
											"end": 838,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 795,
											"end": 838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 748,
											"end": 846,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1649,
											"end": 2196,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1649,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1773,
											"end": 1787,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "278D00"
										},
										{
											"begin": 1809,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1809,
											"end": 1826,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1806,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1791,
											"end": 1826,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1791,
											"end": 1826,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1791,
											"end": 1826,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1791,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1790,
											"end": 1837,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1790,
											"end": 1837,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1790,
											"end": 1837,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1790,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1912,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1895,
											"end": 1912,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1837,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1848,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 2059,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1878,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 1925,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1878,
											"end": 2059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1965,
											"end": 1982,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1965,
											"end": 1982,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 1988,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1961,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2029,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2031,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2009,
											"end": 2032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2032,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2009,
											"end": 2032,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2009,
											"end": 2032,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2009,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1961,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1519,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1878,
											"end": 2059,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 2059,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1878,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2091,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2091,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2091,
											"end": 2101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2091,
											"end": 2101,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2091,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2071,
											"end": 2101,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2114,
											"end": 2161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2114,
											"end": 2161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2114,
											"end": 2161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3143,
											"end": 3145,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2114,
											"end": 2161,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2114,
											"end": 2161,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2161,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3125,
											"end": 3146,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3182,
											"end": 3184,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3162,
											"end": 3180,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3162,
											"end": 3180,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3162,
											"end": 3180,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3185,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3221,
											"end": 3243,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F7468696E6720746F20636C61696D20796574000000000000000000000000"
										},
										{
											"begin": 3201,
											"end": 3219,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3201,
											"end": 3219,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3201,
											"end": 3219,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3194,
											"end": 3244,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2941,
											"end": 3285,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2161,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2114,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2188,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1649,
											"end": 2196,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1649,
											"end": 2196,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5061,
											"end": 5068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5154,
											"end": 5159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 950,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 14,
											"end": 950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 97,
											"end": 103,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 132,
											"name": "PUSH",
											"source": 3,
											"value": "660"
										},
										{
											"begin": 173,
											"end": 175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 161,
											"end": 170,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 152,
											"end": 159,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 148,
											"end": 171,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 144,
											"end": 176,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 141,
											"end": 193,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 141,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 141,
											"end": 193,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 189,
											"end": 190,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 187,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 179,
											"end": 191,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 141,
											"end": 193,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 141,
											"end": 193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 238,
											"end": 245,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 231,
											"end": 235,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 220,
											"end": 229,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 216,
											"end": 236,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 212,
											"end": 246,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 202,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 264,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 260,
											"end": 261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 258,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 250,
											"end": 262,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 202,
											"end": 264,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 296,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 335,
											"end": 337,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 323,
											"end": 338,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 392,
											"end": 402,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 411,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 368,
											"end": 386,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 356,
											"end": 366,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 353,
											"end": 387,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 350,
											"end": 412,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 347,
											"end": 589,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 347,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 347,
											"end": 589,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 442,
											"end": 443,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 546,
											"end": 550,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 536,
											"end": 551,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 574,
											"end": 578,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 571,
											"end": 572,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 564,
											"end": 579,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 347,
											"end": 589,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 347,
											"end": 589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 605,
											"end": 607,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 669,
											"end": 687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 669,
											"end": 687,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 669,
											"end": 687,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 669,
											"end": 687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 646,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 699,
											"end": 718,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 699,
											"end": 718,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 699,
											"end": 718,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 696,
											"end": 735,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 696,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 696,
											"end": 735,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 731,
											"end": 732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 729,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 721,
											"end": 733,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 696,
											"end": 735,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 696,
											"end": 735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 755,
											"end": 764,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 773,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 773,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 789,
											"end": 795,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 784,
											"end": 787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 781,
											"end": 796,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 773,
											"end": 919,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 773,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 773,
											"end": 919,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 857,
											"end": 874,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 857,
											"end": 874,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 845,
											"end": 875,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 845,
											"end": 875,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 904,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 909,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 909,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 895,
											"end": 909,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 909,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 806,
											"end": 820,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 773,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 773,
											"end": 919,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 773,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 773,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 938,
											"end": 944,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 944,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 14,
											"end": 950,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 950,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1137,
											"end": 1446,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1137,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1196,
											"end": 1202,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1246,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1252,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1217,
											"end": 1269,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1217,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1217,
											"end": 1269,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1266,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1217,
											"end": 1269,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1217,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1313,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1347,
											"end": 1352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1343,
											"end": 1397,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1323,
											"end": 1416,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1413,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1414,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2205,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2021,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2070,
											"end": 2071,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2151,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2174,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2167,
											"end": 2168,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2198,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2191,
											"end": 2192,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2210,
											"end": 2335,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2210,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2279,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2276,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2280,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2303,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2269,
											"end": 2303,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2283,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2283,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2283,
											"end": 2301,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2283,
											"end": 2301,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2283,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2329,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2210,
											"end": 2335,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2340,
											"end": 2614,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2340,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2396,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2396,
											"end": 2585,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2438,
											"end": 2439,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2519,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2546,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2539,
											"end": 2540,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2532,
											"end": 2547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 2574,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2567,
											"end": 2568,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2575,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2396,
											"end": 2585,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2396,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2599,
											"end": 2608,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2599,
											"end": 2608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2340,
											"end": 2614,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2619,
											"end": 2803,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2619,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2668,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2749,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2772,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2765,
											"end": 2766,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2792,
											"end": 2796,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2789,
											"end": 2790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2936,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2808,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2851,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2875,
											"end": 2881,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2869,
											"end": 2882,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 2905,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2866,
											"end": 2905,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2885,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2885,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2885,
											"end": 2903,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2885,
											"end": 2903,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2885,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2921,
											"end": 2930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2936,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3290,
											"end": 3887,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3290,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3406,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3460,
											"end": 3462,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3492,
											"end": 3498,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3486,
											"end": 3499,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3535,
											"end": 3541,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3532,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3519,
											"end": 3528,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3533,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3542,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3561,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3710,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3570,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 3590,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3582,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3578,
											"end": 3591,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3710,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3570,
											"end": 3710,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3693,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3693,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3693,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3698,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3669,
											"end": 3699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3664,
											"end": 3666,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3667,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3700,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3609,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3609,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3570,
											"end": 3710,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3710,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3570,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3728,
											"end": 3734,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3725,
											"end": 3726,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3735,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3719,
											"end": 3810,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3719,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3719,
											"end": 3810,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3799,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3795,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3773,
											"end": 3782,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3769,
											"end": 3791,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 3796,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3800,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3719,
											"end": 3810,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3719,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3871,
											"end": 3873,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3846,
											"end": 3875,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3831,
											"end": 3876,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3831,
											"end": 3876,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3831,
											"end": 3876,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3831,
											"end": 3876,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3878,
											"end": 3880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3827,
											"end": 3881,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3881,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3887,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3290,
											"end": 3887,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"BC7335EF5A2766E252B0D20841B8A31E77013EDE9C2A48B3B61A9C597162B79A": "4c6f636b656477616c6c65743a2043616e6e6f742073756273747261637420746f74616c20616d6f756e74207769746820636c61696d61626c65"
									}
								}
							}
						},
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"changeTalaxAddress(address)": "1d77b00b",
							"getOwner()": "893d20e8",
							"initiateLockedWallet()": "c8cca41e",
							"releaseClaimable(uint256[51])": "0a95606e",
							"startLockedWallet()": "b580aa9e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"beneficiary_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateLockedWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[51]\",\"name\":\"amount\",\"type\":\"uint256[51]\"}],\"name\":\"releaseClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startLockedWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initiateLockedWallet()\":{\"notice\":\"Initiate Locked Wallet\"},\"releaseClaimable(uint256[51])\":{\"notice\":\"Transfers tokens held by timelock to beneficiary.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lockedwallet.sol\":\"LockedWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/Interfaces.sol\":{\"keccak256\":\"0x3e6787e58214b5af4af523a2a603f03dbdf4e397be411edd1ce47d792872ad03\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3ceac46a908c7381881ed80661864bf9214de9b777f353a86b3d79f6d0dcf537\",\"dweb:/ipfs/QmewThGMZUjU2i4LkFmqMD8zFt8QtMJpV7nCn59opjZ48B\"]},\"contracts/Lockedwallet.sol\":{\"keccak256\":\"0x48b42e24077d9726bc4b8d4295d54e4d2c816501a21e14d0a4a970b2ce581b57\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cd28cca75ec0da67e75c778bd3e864d340895ed91698df121839c51b020ce3ab\",\"dweb:/ipfs/QmXg6AiUUwWZkXeqFaQchCvHq43XEeVJH1GFwH1KYYi9i5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 500,
								"contract": "contracts/Lockedwallet.sol:LockedWallet",
								"label": "_amount",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 502,
								"contract": "contracts/Lockedwallet.sol:LockedWallet",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 506,
								"contract": "contracts/Lockedwallet.sol:LockedWallet",
								"label": "startLockedWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 508,
								"contract": "contracts/Lockedwallet.sol:LockedWallet",
								"label": "_latestClaimMonth",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"initiateLockedWallet()": {
								"notice": "Initiate Locked Wallet"
							},
							"releaseClaimable(uint256[51])": {
								"notice": "Transfers tokens held by timelock to beneficiary."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "475:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "702:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "712:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "736:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "767:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "778:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "823:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "809:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:0"
									},
									"scope": 311,
									"src": "626:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1064:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1102:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1106:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1098:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1109:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1158:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1140:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:0"
									},
									"scope": 311,
									"src": "988:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1401:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1665:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1677:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1707:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1742:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1738:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1754:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1785:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:0"
									},
									"scope": 311,
									"src": "1325:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2043:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2077:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2089:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2120:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:0"
									},
									"scope": 311,
									"src": "1967:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2392:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2426:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2438:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2483:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2487:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2469:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:0"
									},
									"scope": 311,
									"src": "2316:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2808:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2818:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:0"
									},
									"scope": 311,
									"src": "2741:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3175:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3185:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:0"
									},
									"scope": 311,
									"src": "3108:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3518:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3528:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:0"
									},
									"scope": 311,
									"src": "3451:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3903:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3913:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3849:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:0"
									},
									"scope": 311,
									"src": "3836:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4452:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4462:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:0"
									},
									"scope": 311,
									"src": "4385:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5070:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5120:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5147:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:0"
									},
									"scope": 311,
									"src": "4945:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5785:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5834:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5861:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5701:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5720:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5776:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:0"
									},
									"scope": 311,
									"src": "5660:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6661:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6710:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6737:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:0"
									},
									"scope": 311,
									"src": "6536:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "467:6301:0",
							"usedErrors": []
						}
					],
					"src": "92:6677:0"
				},
				"id": 0
			},
			"contracts/Interfaces.sol": {
				"ast": {
					"absolutePath": "contracts/Interfaces.sol",
					"exportedSymbols": {
						"ILockable": [
							492
						],
						"IStakable": [
							406
						],
						"IWhitelist": [
							464
						]
					},
					"id": 493,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStakable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 406,
							"linearizedBaseContracts": [
								406
							],
							"name": "IStakable",
							"nameLocation": "77:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cb79c2e1",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakingPenaltyRate",
									"nameLocation": "103:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "121:2:1"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "147:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "147:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "146:9:1"
									},
									"scope": 406,
									"src": "94:62:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8891cf0d",
									"id": 323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "airdropRate",
									"nameLocation": "173:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "184:2:1"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "210:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "209:9:1"
									},
									"scope": 406,
									"src": "164:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b87da76d",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "airdropSince",
									"nameLocation": "236:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "248:2:1"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "274:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "273:9:1"
									},
									"scope": 406,
									"src": "227:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5f5300ff",
									"id": 333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalVoters",
									"nameLocation": "300:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "311:2:1"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "337:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:9:1"
									},
									"scope": 406,
									"src": "291:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2d15cc04",
									"id": 342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVoters",
									"nameLocation": "363:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "381:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "373:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:14:1"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "410:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "410:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "416:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:12:1"
									},
									"scope": 406,
									"src": "354:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a143a5f2",
									"id": 349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votedUsers",
									"nameLocation": "464:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "483:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "475:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:12:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "510:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "509:9:1"
									},
									"scope": 406,
									"src": "455:64:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "71e3db87",
									"id": 352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startAirdropSince",
									"nameLocation": "536:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "553:2:1"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "564:0:1"
									},
									"scope": 406,
									"src": "527:38:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d77b00b",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeTalaxAddress",
									"nameLocation": "582:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "609:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "601:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:15:1"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:0:1"
									},
									"scope": 406,
									"src": "573:52:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f93d4f8a",
									"id": 368,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "642:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "666:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "658:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "689:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "681:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "stakePeriod",
												"nameLocation": "714:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "706:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "744:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "736:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:114:1"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:0:1"
									},
									"scope": 406,
									"src": "633:138:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8c63f97f",
									"id": 373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changePenaltyFee",
									"nameLocation": "788:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "813:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "805:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:16:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "829:0:1"
									},
									"scope": 406,
									"src": "779:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5dbdf1b",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeAirdropPercentage",
									"nameLocation": "847:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "879:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "871:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "870:16:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "895:0:1"
									},
									"scope": 406,
									"src": "838:58:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c23a5cea",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStake",
									"nameLocation": "913:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "935:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "927:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:14:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "959:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "968:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:18:1"
									},
									"scope": 406,
									"src": "904:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "65f8c6c5",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimAirdrop",
									"nameLocation": "994:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1015:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1007:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:14:1"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1044:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:9:1"
									},
									"scope": 406,
									"src": "985:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1ec6b60a",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startVoting",
									"nameLocation": "1070:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:1"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1092:0:1"
									},
									"scope": 406,
									"src": "1061:32:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "671d2b75",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVotingResult",
									"nameLocation": "1110:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1125:2:1"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1151:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1151:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:6:1"
									},
									"scope": 406,
									"src": "1101:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fab2f86b",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stopVoting",
									"nameLocation": "1174:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1184:2:1"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1195:0:1"
									},
									"scope": 406,
									"src": "1165:31:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 493,
							"src": "67:1132:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWhitelist",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 464,
							"linearizedBaseContracts": [
								464
							],
							"name": "IWhitelist",
							"nameLocation": "1213:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "549dee0b",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "privateSaleUsers",
									"nameLocation": "1240:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1256:2:1"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "1282:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1281:9:1"
									},
									"scope": 464,
									"src": "1231:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8b2b423a",
									"id": 416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "privateSaleAmount",
									"nameLocation": "1308:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1325:2:1"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "1351:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1350:9:1"
									},
									"scope": 464,
									"src": "1299:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "338dbf59",
									"id": 421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startPrivateSale",
									"nameLocation": "1377:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1393:2:1"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "1419:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1418:9:1"
									},
									"scope": 464,
									"src": "1368:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d77b00b",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeTalaxAddress",
									"nameLocation": "1445:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "1472:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1464:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1464:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1463:15:1"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1487:0:1"
									},
									"scope": 464,
									"src": "1436:52:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "81008568",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nameLocation": "1505:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1525:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1517:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1517:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1516:14:1"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1595:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1595:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1617:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1639:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1639:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1658:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1580:96:1"
									},
									"scope": 464,
									"src": "1496:181:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "efdd8796",
									"id": 442,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initiateWhitelist",
									"nameLocation": "1751:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1768:2:1"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1779:0:1"
									},
									"scope": 464,
									"src": "1742:38:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "96074e70",
									"id": 449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addBeneficiary",
									"nameLocation": "1797:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1820:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "1812:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1834:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "1826:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:30:1"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:0:1"
									},
									"scope": 464,
									"src": "1788:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7d3bca76",
									"id": 456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteBeneficiary",
									"nameLocation": "1868:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "1886:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1885:14:1"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "1918:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1917:9:1"
									},
									"scope": 464,
									"src": "1859:68:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "005171f4",
									"id": 463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "releaseClaimable",
									"nameLocation": "1944:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1969:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1961:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1961:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1960:14:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1993:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1993:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1992:9:1"
									},
									"scope": 464,
									"src": "1935:67:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 493,
							"src": "1203:802:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILockable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 492,
							"linearizedBaseContracts": [
								492
							],
							"name": "ILockable",
							"nameLocation": "2019:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "38af3eed",
									"id": 469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nameLocation": "2045:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2056:2:1"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "2082:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2082:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2081:9:1"
									},
									"scope": 492,
									"src": "2036:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d77b00b",
									"id": 474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeTalaxAddress",
									"nameLocation": "2108:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "2135:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2127:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2127:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:15:1"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2150:0:1"
									},
									"scope": 492,
									"src": "2099:52:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b580aa9e",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startLockedWallet",
									"nameLocation": "2168:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2185:2:1"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "2211:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2211:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2210:9:1"
									},
									"scope": 492,
									"src": "2159:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c8cca41e",
									"id": 482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initiateLockedWallet",
									"nameLocation": "2237:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:2:1"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2268:0:1"
									},
									"scope": 492,
									"src": "2228:41:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0a95606e",
									"id": 491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "releaseClaimable",
									"nameLocation": "2286:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2322:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "2303:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$51_memory_ptr",
													"typeString": "uint256[51]"
												},
												"typeName": {
													"baseType": {
														"id": 483,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2303:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 485,
													"length": {
														"hexValue": "3531",
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2311:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_51_by_1",
															"typeString": "int_const 51"
														},
														"value": "51"
													},
													"nodeType": "ArrayTypeName",
													"src": "2303:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$51_storage_ptr",
														"typeString": "uint256[51]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:27:1"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "2366:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2365:9:1"
									},
									"scope": 492,
									"src": "2277:98:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 493,
							"src": "2009:369:1",
							"usedErrors": []
						}
					],
					"src": "40:2340:1"
				},
				"id": 1
			},
			"contracts/Lockedwallet.sol": {
				"ast": {
					"absolutePath": "contracts/Lockedwallet.sol",
					"exportedSymbols": {
						"ILockable": [
							492
						],
						"IStakable": [
							406
						],
						"IWhitelist": [
							464
						],
						"LockedWallet": [
							691
						],
						"SafeMath": [
							311
						]
					},
					"id": 692,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 494,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 495,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 692,
							"sourceUnit": 312,
							"src": "67:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Interfaces.sol",
							"file": "./Interfaces.sol",
							"id": 496,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 692,
							"sourceUnit": 493,
							"src": "126:26:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 497,
										"name": "ILockable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 492,
										"src": "215:9:2"
									},
									"id": 498,
									"nodeType": "InheritanceSpecifier",
									"src": "215:9:2"
								}
							],
							"canonicalName": "LockedWallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 691,
							"linearizedBaseContracts": [
								691,
								492
							],
							"name": "LockedWallet",
							"nameLocation": "199:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 500,
									"mutability": "mutable",
									"name": "_amount",
									"nameLocation": "249:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 691,
									"src": "232:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 499,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "232:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 502,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "282:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 691,
									"src": "265:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 501,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "265:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										469
									],
									"constant": false,
									"functionSelector": "38af3eed",
									"id": 504,
									"mutability": "immutable",
									"name": "beneficiary",
									"nameLocation": "374:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 691,
									"src": "349:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 503,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "349:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										479
									],
									"constant": false,
									"functionSelector": "b580aa9e",
									"id": 506,
									"mutability": "mutable",
									"name": "startLockedWallet",
									"nameLocation": "409:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 691,
									"src": "394:32:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 505,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "394:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 508,
									"mutability": "mutable",
									"name": "_latestClaimMonth",
									"nameLocation": "452:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 691,
									"src": "435:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 507,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "435:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "529:103:2",
										"statements": [
											{
												"expression": {
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 515,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "540:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 516,
														"name": "amount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "550:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "540:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "540:17:2"
											},
											{
												"expression": {
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 519,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "568:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 520,
														"name": "beneficiary_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "582:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "568:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "568:26:2"
											},
											{
												"expression": {
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 523,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "605:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 524,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "614:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "614:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "605:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "605:19:2"
											}
										]
									},
									"id": 529,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "498:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "490:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "beneficiary_",
												"nameLocation": "515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:39:2"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:0:2"
									},
									"scope": 691,
									"src": "478:154:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "784:62:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 533,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "803:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "803:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 535,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "817:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "803:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74205f6f776e6572",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "825:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ee508ea70425a29c7610cd2f9910c217a86b66d8c07f515ad19475c1d71b59f",
																"typeString": "literal_string \"Not _owner\""
															},
															"value": "Not _owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ee508ea70425a29c7610cd2f9910c217a86b66d8c07f515ad19475c1d71b59f",
																"typeString": "literal_string \"Not _owner\""
															}
														],
														"id": 532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "795:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "795:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "795:43:2"
											}
										]
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_onlyTalax",
									"nameLocation": "757:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "767:2:2"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "784:0:2"
									},
									"scope": 691,
									"src": "748:98:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "904:32:2",
										"statements": [
											{
												"expression": {
													"id": 546,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 502,
													"src": "922:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 545,
												"id": 547,
												"nodeType": "Return",
												"src": "915:13:2"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "863:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "871:2:2"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "895:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "894:9:2"
									},
									"scope": 691,
									"src": "854:82:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "965:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 551,
														"name": "_onlyTalax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "976:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "976:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "976:12:2"
											},
											{
												"id": 554,
												"nodeType": "PlaceholderStatement",
												"src": "999:1:2"
											}
										]
									},
									"id": 556,
									"name": "onlyTalax",
									"nameLocation": "953:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "962:2:2"
									},
									"src": "944:64:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										474
									],
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "1186:33:2",
										"statements": [
											{
												"expression": {
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 563,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "1197:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 564,
														"name": "talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "1206:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1197:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "1197:14:2"
											}
										]
									},
									"functionSelector": "1d77b00b",
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 561,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 560,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 556,
												"src": "1176:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1176:9:2"
										}
									],
									"name": "changeTalaxAddress",
									"nameLocation": "1133:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "1160:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1152:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:15:2"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1186:0:2"
									},
									"scope": 691,
									"src": "1124:95:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										482
									],
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "1346:54:2",
										"statements": [
											{
												"expression": {
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 575,
														"name": "startLockedWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "1357:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 576,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1377:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1377:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1357:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "1357:35:2"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "1227:51:2",
										"text": " @notice Initiate Locked Wallet"
									},
									"functionSelector": "c8cca41e",
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 573,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 572,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 556,
												"src": "1336:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1336:9:2"
										}
									],
									"name": "initiateLockedWallet",
									"nameLocation": "1295:20:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 571,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1327:8:2"
									},
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1315:2:2"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1346:0:2"
									},
									"scope": 691,
									"src": "1286:114:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "1471:67:2",
										"statements": [
											{
												"id": 592,
												"nodeType": "UncheckedBlock",
												"src": "1482:49:2",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 588,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "1514:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1518:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1514:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 587,
														"id": 591,
														"nodeType": "Return",
														"src": "1507:12:2"
													}
												]
											}
										]
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unsafeInc",
									"nameLocation": "1417:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1436:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1428:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1428:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1427:11:2"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1462:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:9:2"
									},
									"scope": 691,
									"src": "1408:130:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "1762:434:2",
										"statements": [
											{
												"assignments": [
													605
												],
												"declarations": [
													{
														"constant": false,
														"id": 605,
														"mutability": "mutable",
														"name": "months",
														"nameLocation": "1781:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 658,
														"src": "1773:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 604,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1773:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 613,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 606,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1791:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1791:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 608,
																	"name": "startLockedWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "1809:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1791:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 610,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1790:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3330",
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1830:7:2",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2592000_by_1",
															"typeString": "int_const 2592000"
														},
														"value": "30"
													},
													"src": "1790:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1773:64:2"
											},
											{
												"assignments": [
													615
												],
												"declarations": [
													{
														"constant": false,
														"id": 615,
														"mutability": "mutable",
														"name": "claimable",
														"nameLocation": "1856:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 658,
														"src": "1848:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 614,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1848:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 616,
												"nodeType": "VariableDeclarationStatement",
												"src": "1848:17:2"
											},
											{
												"body": {
													"id": 641,
													"nodeType": "Block",
													"src": "1946:113:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 630,
																	"name": "_latestClaimMonth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "1965:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3531",
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1986:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_51_by_1",
																		"typeString": "int_const 51"
																	},
																	"value": "51"
																},
																"src": "1965:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 640,
															"nodeType": "IfStatement",
															"src": "1961:87:2",
															"trueBody": {
																"id": 639,
																"nodeType": "Block",
																"src": "1990:58:2",
																"statements": [
																	{
																		"expression": {
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 633,
																				"name": "claimable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 615,
																				"src": "2009:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 634,
																					"name": "amount_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 599,
																					"src": "2022:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$51_memory_ptr",
																						"typeString": "uint256[51] memory"
																					}
																				},
																				"id": 636,
																				"indexExpression": {
																					"id": 635,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 618,
																					"src": "2030:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2022:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2009:23:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 638,
																		"nodeType": "ExpressionStatement",
																		"src": "2009:23:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 621,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "1914:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 622,
														"name": "months",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "1919:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1914:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 642,
												"initializationExpression": {
													"assignments": [
														618
													],
													"declarations": [
														{
															"constant": false,
															"id": 618,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1891:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 642,
															"src": "1883:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 617,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1883:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 620,
													"initialValue": {
														"id": 619,
														"name": "_latestClaimMonth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "1895:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1883:29:2"
												},
												"loopExpression": {
													"expression": {
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 624,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "1927:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"id": 626,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "1942:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 625,
																"name": "_unsafeInc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "1931:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1931:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1927:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 629,
													"nodeType": "ExpressionStatement",
													"src": "1927:17:2"
												},
												"nodeType": "ForStatement",
												"src": "1878:181:2"
											},
											{
												"expression": {
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 643,
														"name": "_latestClaimMonth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "2071:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 644,
															"name": "months",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "2091:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2100:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2091:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2071:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "2071:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 650,
																"name": "claimable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "2122:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2135:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2122:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d20796574",
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2138:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9",
																"typeString": "literal_string \"Nothing to claim yet\""
															},
															"value": "Nothing to claim yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9",
																"typeString": "literal_string \"Nothing to claim yet\""
															}
														],
														"id": 649,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2114:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2114:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "2114:47:2"
											},
											{
												"expression": {
													"id": 656,
													"name": "claimable",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 615,
													"src": "2179:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 603,
												"id": 657,
												"nodeType": "Return",
												"src": "2172:16:2"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "1546:97:2",
										"text": "  @dev \t\tMain Functions\n  @return \tClaimable amount from Locked Wallet"
									},
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateClaimableAmount",
									"nameLocation": "1658:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "1703:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1684:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$51_memory_ptr",
													"typeString": "uint256[51]"
												},
												"typeName": {
													"baseType": {
														"id": 596,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1684:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 598,
													"length": {
														"hexValue": "3531",
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1692:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_51_by_1",
															"typeString": "int_const 51"
														},
														"value": "51"
													},
													"nodeType": "ArrayTypeName",
													"src": "1684:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$51_storage_ptr",
														"typeString": "uint256[51]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:28:2"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1748:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1747:9:2"
									},
									"scope": 691,
									"src": "1649:547:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										491
									],
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "2428:388:2",
										"statements": [
											{
												"assignments": [
													673
												],
												"declarations": [
													{
														"constant": false,
														"id": 673,
														"mutability": "mutable",
														"name": "claimableLockedAmount",
														"nameLocation": "2447:21:2",
														"nodeType": "VariableDeclaration",
														"scope": 689,
														"src": "2439:29:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 672,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2439:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 677,
												"initialValue": {
													"arguments": [
														{
															"id": 675,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "2497:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$51_memory_ptr",
																"typeString": "uint256[51] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$51_memory_ptr",
																"typeString": "uint256[51] memory"
															}
														],
														"id": 674,
														"name": "_calculateClaimableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "2471:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$51_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256[51] memory) returns (uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2471:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2439:65:2"
											},
											{
												"expression": {
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 678,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "2601:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 681,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "2638:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 682,
																"name": "claimableLockedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "2660:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "4c6f636b656477616c6c65743a2043616e6e6f742073756273747261637420746f74616c20616d6f756e74207769746820636c61696d61626c65",
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2696:60:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_bc7335ef5a2766e252b0d20841b8a31e77013ede9c2a48b3b61a9c597162b79a",
																	"typeString": "literal_string \"Lockedwallet: Cannot substract total amount with claimable\""
																},
																"value": "Lockedwallet: Cannot substract total amount with claimable"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_bc7335ef5a2766e252b0d20841b8a31e77013ede9c2a48b3b61a9c597162b79a",
																	"typeString": "literal_string \"Lockedwallet: Cannot substract total amount with claimable\""
																}
															],
															"expression": {
																"id": 679,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2611:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 260,
															"src": "2611:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2611:156:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2601:166:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "2601:166:2"
											},
											{
												"expression": {
													"id": 687,
													"name": "claimableLockedAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 673,
													"src": "2787:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 671,
												"id": 688,
												"nodeType": "Return",
												"src": "2780:28:2"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "2204:78:2",
										"text": " @notice Transfers tokens held by timelock to beneficiary."
									},
									"functionSelector": "0a95606e",
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 668,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 667,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 556,
												"src": "2386:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2386:9:2"
										}
									],
									"name": "releaseClaimable",
									"nameLocation": "2297:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 666,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2368:8:2"
									},
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2333:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2314:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$51_memory_ptr",
													"typeString": "uint256[51]"
												},
												"typeName": {
													"baseType": {
														"id": 661,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2314:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 663,
													"length": {
														"hexValue": "3531",
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2322:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_51_by_1",
															"typeString": "int_const 51"
														},
														"value": "51"
													},
													"nodeType": "ArrayTypeName",
													"src": "2314:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$51_storage_ptr",
														"typeString": "uint256[51]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2313:27:2"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2414:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2414:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2413:9:2"
									},
									"scope": 691,
									"src": "2288:528:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 692,
							"src": "190:2629:2",
							"usedErrors": []
						}
					],
					"src": "40:2781:2"
				},
				"id": 2
			}
		}
	}
}