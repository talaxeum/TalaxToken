{
	"id": "75b42ca40901fc756dcb93741cc6bc00",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/VestingWallet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (finance/VestingWallet.sol)\r\npragma solidity 0.8.11;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\n\r\n/**\r\n * @title VestingWallet\r\n * @dev This contract handles the vesting of Eth and ERC20 tokens for a given beneficiary. Custody of multiple tokens\r\n * can be given to this contract, which will release the token to the beneficiary following a given vesting schedule.\r\n * The vesting schedule is customizable through the {vestedAmount} function.\r\n *\r\n * Any token transferred to this contract will follow the vesting schedule as if they were locked from the beginning.\r\n * Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly)\r\n * be immediately releasable.\r\n */\r\ncontract VestingWallet is Context {\r\n    event EtherReleased(uint256 amount);\r\n    event ERC20Released(address indexed token, uint256 amount);\r\n\r\n    uint256 private _released;\r\n    mapping(address => uint256) private _erc20Released;\r\n    address private immutable _beneficiary;\r\n    uint64 private immutable _start;\r\n    uint64 private immutable _duration;\r\n\r\n    uint256 private lastMonth;\r\n\r\n    /**\r\n     * @dev Set the beneficiary, start timestamp and vesting duration of the vesting wallet.\r\n     */\r\n    constructor(\r\n        address beneficiaryAddress,\r\n        uint64 startTimestamp,\r\n        uint64 durationSeconds\r\n    ) payable {\r\n        require(\r\n            beneficiaryAddress != address(0),\r\n            \"VestingWallet: beneficiary is zero address\"\r\n        );\r\n        _beneficiary = beneficiaryAddress;\r\n        _start = startTimestamp;\r\n        _duration = durationSeconds;\r\n    }\r\n\r\n    /**\r\n     * @dev The contract should be able to receive Eth.\r\n     */\r\n    receive() external payable virtual {}\r\n\r\n    /**\r\n     * @dev Getter for the beneficiary address.\r\n     */\r\n    function beneficiary() public view virtual returns (address) {\r\n        return _beneficiary;\r\n    }\r\n\r\n    /**\r\n     * @dev Getter for the start timestamp.\r\n     */\r\n    function start() public view virtual returns (uint256) {\r\n        return _start;\r\n    }\r\n\r\n    /**\r\n     * @dev Getter for the vesting duration.\r\n     */\r\n    function duration() public view virtual returns (uint256) {\r\n        return _duration;\r\n    }\r\n\r\n    /**\r\n     * @dev Amount of eth already released\r\n     */\r\n    function released() public view virtual returns (uint256) {\r\n        return _released;\r\n    }\r\n\r\n    /**\r\n     * @dev Amount of token already released\r\n     */\r\n    function released(address token) public view  virtual returns (uint256) {\r\n        return _erc20Released[token];\r\n    }\r\n\r\n    /**\r\n     * @dev Getter for the amount of releasable eth.\r\n     */\r\n    function releasable() public view virtual returns (uint256) {\r\n        return vestedAmount(uint64(block.timestamp)) - released();\r\n    }\r\n\r\n    /**\r\n     * @dev Getter for the amount of releasable `token` tokens. `token` should be the address of an\r\n     * IERC20 contract.\r\n     */\r\n    function releasable(address token) public view virtual returns (uint256) {\r\n        return vestedAmount(token, uint64(block.timestamp)) - released(token);\r\n    }\r\n\r\n    /**\r\n     * @dev Release the native token (ether) that have already vested.\r\n     *\r\n     * Emits a {EtherReleased} event.\r\n     */\r\n    function release() public virtual {\r\n        uint256 amount = releasable();\r\n        _released += amount;\r\n        emit EtherReleased(amount);\r\n        Address.sendValue(payable(beneficiary()), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Getter for the current running month of the vesting process\r\n     */\r\n\r\n    function _currentMonth() internal view returns (uint256) {\r\n        return (uint64(block.timestamp) - start()) / 30 days;\r\n    }\r\n\r\n    /**\r\n     * @dev Release the tokens that have already vested.\r\n     *\r\n     * Emits a {ERC20Released} event.\r\n     */\r\n    function release(address token) public virtual {\r\n        uint256 amount = releasable(token);\r\n        if (_currentMonth() > lastMonth) {\r\n            lastMonth = _currentMonth();\r\n            _erc20Released[token] += amount;\r\n            emit ERC20Released(token, amount);\r\n            SafeERC20.safeTransfer(IERC20(token), beneficiary(), amount);\r\n        }\r\n    }\r\n\r\n    // ? Default function\r\n    // function release(address token) public virtual {\r\n    //     uint256 amount = releasable(token);\r\n    //     _erc20Released[token] += amount;\r\n    //     emit ERC20Released(token, amount);\r\n    //     SafeERC20.safeTransfer(IERC20(token), beneficiary(), amount);\r\n    // }\r\n\r\n    /**\r\n     * @dev Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\r\n     */\r\n    function vestedAmount(uint64 timestamp)\r\n        public\r\n        view\r\n        virtual\r\n        returns (uint256)\r\n    {\r\n        return _vestingSchedule(address(this).balance + released(), timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\r\n     */\r\n    function vestedAmount(address token, uint64 timestamp)\r\n        public\r\n        view\r\n        virtual\r\n        returns (uint256)\r\n    {\r\n        return\r\n            _vestingSchedule(\r\n                IERC20(token).balanceOf(address(this)) + released(token),\r\n                timestamp\r\n            );\r\n    }\r\n\r\n    /**\r\n     * @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\r\n     * an asset given its total historical allocation.\r\n     */\r\n    function _vestingSchedule(uint256 totalAllocation, uint64 timestamp)\r\n        internal\r\n        view\r\n        virtual\r\n        returns (uint256)\r\n    {\r\n        if (timestamp < start()) {\r\n            return 0;\r\n        } else if (timestamp > start() + duration()) {\r\n            return totalAllocation;\r\n        } else {\r\n            return (totalAllocation * (timestamp - start())) / duration();\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202af7873cced4125181aaaf3ee1f8b13ec0b6145b43ac2427eacc61df4e142cc864736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202af7873cced4125181aaaf3ee1f8b13ec0b6145b43ac2427eacc61df4e142cc864736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xF7 DUP8 EXTCODECOPY 0xCE 0xD4 SLT MLOAD DUP2 0xAA 0xAF RETURNDATACOPY 0xE1 0xF8 0xB1 RETURNDATACOPY 0xC0 0xB6 EQ JUMPDEST NUMBER 0xAC 0x24 0x27 0xEA 0xCC PUSH2 0xDF4E EQ 0x2C 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "645:3270:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;645:3270:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202af7873cced4125181aaaf3ee1f8b13ec0b6145b43ac2427eacc61df4e142cc864736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xF7 DUP8 EXTCODECOPY 0xCE 0xD4 SLT MLOAD DUP2 0xAA 0xAF RETURNDATACOPY 0xE1 0xF8 0xB1 RETURNDATACOPY 0xC0 0xB6 EQ JUMPDEST NUMBER 0xAC 0x24 0x27 0xEA 0xCC PUSH2 0xDF4E EQ 0x2C 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "645:3270:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202af7873cced4125181aaaf3ee1f8b13ec0b6145b43ac2427eacc61df4e142cc864736f6c634300080b0033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205ce6eedf44d65f52613bcfab93821c9ef56c2157c74d9db29e16940b500a4c9664736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205ce6eedf44d65f52613bcfab93821c9ef56c2157c74d9db29e16940b500a4c9664736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xE6 0xEE 0xDF DIFFICULTY 0xD6 0x5F MSTORE PUSH2 0x3BCF 0xAB SWAP4 DUP3 SHR SWAP15 CREATE2 PUSH13 0x2157C74D9DB29E16940B500A4C SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205ce6eedf44d65f52613bcfab93821c9ef56c2157c74d9db29e16940b500a4c9664736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xE6 0xEE 0xDF DIFFICULTY 0xD6 0x5F MSTORE PUSH2 0x3BCF 0xAB SWAP4 DUP3 SHR SWAP15 CREATE2 PUSH13 0x2157C74D9DB29E16940B500A4C SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205ce6eedf44d65f52613bcfab93821c9ef56c2157c74d9db29e16940b500a4c9664736f6c634300080b0033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/VestingWallet.sol": {
				"VestingWallet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiaryAddress",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "startTimestamp",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "durationSeconds",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Released",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EtherReleased",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "releasable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releasable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "timestamp",
									"type": "uint64"
								}
							],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "timestamp",
									"type": "uint64"
								}
							],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract handles the vesting of Eth and ERC20 tokens for a given beneficiary. Custody of multiple tokens can be given to this contract, which will release the token to the beneficiary following a given vesting schedule. The vesting schedule is customizable through the {vestedAmount} function. Any token transferred to this contract will follow the vesting schedule as if they were locked from the beginning. Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly) be immediately releasable.",
						"kind": "dev",
						"methods": {
							"beneficiary()": {
								"details": "Getter for the beneficiary address."
							},
							"constructor": {
								"details": "Set the beneficiary, start timestamp and vesting duration of the vesting wallet."
							},
							"duration()": {
								"details": "Getter for the vesting duration."
							},
							"releasable()": {
								"details": "Getter for the amount of releasable eth."
							},
							"releasable(address)": {
								"details": "Getter for the amount of releasable `token` tokens. `token` should be the address of an IERC20 contract."
							},
							"release()": {
								"details": "Release the native token (ether) that have already vested. Emits a {EtherReleased} event."
							},
							"release(address)": {
								"details": "Release the tokens that have already vested. Emits a {ERC20Released} event."
							},
							"released()": {
								"details": "Amount of eth already released"
							},
							"released(address)": {
								"details": "Amount of token already released"
							},
							"start()": {
								"details": "Getter for the start timestamp."
							},
							"vestedAmount(address,uint64)": {
								"details": "Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."
							},
							"vestedAmount(uint64)": {
								"details": "Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve."
							}
						},
						"title": "VestingWallet",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/VestingWallet.sol\":937:6151  contract VestingWallet is Context {... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/VestingWallet.sol\":1448:1836  constructor(... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/VestingWallet.sol\":1610:1642  beneficiaryAddress != address(0) */\n  dup4\n  and\n    /* \"contracts/VestingWallet.sol\":1588:1712  require(... */\n  tag_5\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":857:859   */\n  0x20\n    /* \"contracts/VestingWallet.sol\":1588:1712  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":839:860   */\n  mstore\n    /* \"#utility.yul\":896:898   */\n  0x2a\n    /* \"#utility.yul\":876:894   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":869:899   */\n  mstore\n    /* \"#utility.yul\":935:969   */\n  0x56657374696e6757616c6c65743a2062656e6566696369617279206973207a65\n    /* \"#utility.yul\":915:933   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":908:970   */\n  mstore\n  shl(0xb0, 0x726f2061646472657373)\n    /* \"#utility.yul\":986:1004   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":979:1019   */\n  mstore\n    /* \"#utility.yul\":1036:1055   */\n  0x84\n  add\n    /* \"contracts/VestingWallet.sol\":1588:1712  require(... */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_5:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/VestingWallet.sol\":1723:1756  _beneficiary = beneficiaryAddress */\n  swap1\n  swap3\n  and\n  0x80\n  mstore\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"contracts/VestingWallet.sol\":1767:1790  _start = startTimestamp */\n  swap1\n  dup2\n  and\n  0xa0\n  mstore\n    /* \"contracts/VestingWallet.sol\":1801:1828  _duration = durationSeconds */\n  and\n  0xc0\n  mstore\n    /* \"contracts/VestingWallet.sol\":937:6151  contract VestingWallet is Context {... */\n  jump(tag_10)\n    /* \"#utility.yul\":14:189   */\ntag_9:\n    /* \"#utility.yul\":92:105   */\n  dup1\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":134:164   */\n  dup2\n  and\n    /* \"#utility.yul\":124:165   */\n  dup2\n  eq\n    /* \"#utility.yul\":114:183   */\n  tag_12\n  jumpi\n    /* \"#utility.yul\":179:180   */\n  0x00\n    /* \"#utility.yul\":176:177   */\n  dup1\n    /* \"#utility.yul\":169:181   */\n  revert\n    /* \"#utility.yul\":114:183   */\ntag_12:\n    /* \"#utility.yul\":14:189   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":194:650   */\ntag_2:\n    /* \"#utility.yul\":280:286   */\n  0x00\n    /* \"#utility.yul\":288:294   */\n  dup1\n    /* \"#utility.yul\":296:302   */\n  0x00\n    /* \"#utility.yul\":349:351   */\n  0x60\n    /* \"#utility.yul\":337:346   */\n  dup5\n    /* \"#utility.yul\":328:335   */\n  dup7\n    /* \"#utility.yul\":324:347   */\n  sub\n    /* \"#utility.yul\":320:352   */\n  slt\n    /* \"#utility.yul\":317:369   */\n  iszero\n  tag_14\n  jumpi\n    /* \"#utility.yul\":365:366   */\n  0x00\n    /* \"#utility.yul\":362:363   */\n  dup1\n    /* \"#utility.yul\":355:367   */\n  revert\n    /* \"#utility.yul\":317:369   */\ntag_14:\n    /* \"#utility.yul\":391:407   */\n  dup4\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":436:467   */\n  dup2\n  and\n    /* \"#utility.yul\":426:468   */\n  dup2\n  eq\n    /* \"#utility.yul\":416:486   */\n  tag_15\n  jumpi\n    /* \"#utility.yul\":482:483   */\n  0x00\n    /* \"#utility.yul\":479:480   */\n  dup1\n    /* \"#utility.yul\":472:484   */\n  revert\n    /* \"#utility.yul\":416:486   */\ntag_15:\n    /* \"#utility.yul\":505:510   */\n  swap3\n  pop\n    /* \"#utility.yul\":529:577   */\n  tag_16\n    /* \"#utility.yul\":573:575   */\n  0x20\n    /* \"#utility.yul\":558:576   */\n  dup6\n  add\n    /* \"#utility.yul\":529:577   */\n  tag_9\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":519:577   */\n  swap2\n  pop\n    /* \"#utility.yul\":596:644   */\n  tag_17\n    /* \"#utility.yul\":640:642   */\n  0x40\n    /* \"#utility.yul\":629:638   */\n  dup6\n    /* \"#utility.yul\":625:643   */\n  add\n    /* \"#utility.yul\":596:644   */\n  tag_9\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":586:644   */\n  swap1\n  pop\n    /* \"#utility.yul\":194:650   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":655:1061   */\ntag_10:\n    /* \"contracts/VestingWallet.sol\":937:6151  contract VestingWallet is Context {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x42fa20e8c2fc174121a60bb5704cfd8579fc4a2698f9ae487d1310659094676e\")\n  0x00\n  assignImmutable(\"0x7017d9c97eaea77d01457db50e6363ce7b077b4a6becffdfbcdd71ef4a35f299\")\n  0x00\n  assignImmutable(\"0x229c1a869fa9219aaf3cffa1029c94731492e7db4f2bafdf90c8213837a49fd5\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/VestingWallet.sol\":937:6151  contract VestingWallet is Context {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x86d1a69f\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xa3f8eace\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xa3f8eace\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfbccedae\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x86d1a69f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x96132521\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9852595c\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x19165587\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x19165587\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x38af3eed\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x810ec23b\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x0a17b06b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/VestingWallet.sol\":4871:5079  function vestedAmount(uint64 timestamp)... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":525:550   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":498:516   */\n      add\n        /* \"contracts/VestingWallet.sol\":4871:5079  function vestedAmount(uint64 timestamp)... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/VestingWallet.sol\":2360:2453  function duration() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n        /* \"contracts/VestingWallet.sol\":2436:2445  _duration */\n      immutable(\"0x42fa20e8c2fc174121a60bb5704cfd8579fc4a2698f9ae487d1310659094676e\")\n        /* \"contracts/VestingWallet.sol\":2429:2445  return _duration */\n      0xffffffffffffffff\n      and\n        /* \"contracts/VestingWallet.sol\":2360:2453  function duration() public view virtual returns (uint256) {... */\n      jump(tag_20)\n        /* \"contracts/VestingWallet.sol\":4050:4416  function release(address token) public virtual {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/VestingWallet.sol\":2031:2130  function beneficiary() public view virtual returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/VestingWallet.sol\":2110:2122  _beneficiary */\n      immutable(\"0x229c1a869fa9219aaf3cffa1029c94731492e7db4f2bafdf90c8213837a49fd5\")\n        /* \"#utility.yul\":1117:1172   */\n      and\n        /* \"#utility.yul\":1099:1173   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1087:1089   */\n      0x20\n        /* \"#utility.yul\":1072:1090   */\n      add\n        /* \"contracts/VestingWallet.sol\":2031:2130  function beneficiary() public view virtual returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":953:1179   */\n      jump\n        /* \"contracts/VestingWallet.sol\":5225:5532  function vestedAmount(address token, uint64 timestamp)... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_20\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"contracts/VestingWallet.sol\":3481:3690  function release() public virtual {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_31\n      tag_48\n      jump\t// in\n        /* \"contracts/VestingWallet.sol\":2523:2616  function released() public view virtual returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n        /* \"contracts/VestingWallet.sol\":2572:2579  uint256 */\n      0x00\n        /* \"contracts/VestingWallet.sol\":2599:2608  _released */\n      sload\n        /* \"contracts/VestingWallet.sol\":2523:2616  function released() public view virtual returns (uint256) {... */\n      jump(tag_20)\n        /* \"contracts/VestingWallet.sol\":2688:2807  function released(address token) public view  virtual returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_20\n      tag_55\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/VestingWallet.sol\":2778:2799  _erc20Released[token] */\n      and\n        /* \"contracts/VestingWallet.sol\":2751:2758  uint256 */\n      0x00\n        /* \"contracts/VestingWallet.sol\":2778:2799  _erc20Released[token] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/VestingWallet.sol\":2778:2792  _erc20Released */\n      0x01\n        /* \"contracts/VestingWallet.sol\":2778:2799  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/VestingWallet.sol\":2688:2807  function released(address token) public view  virtual returns (uint256) {... */\n      jump\n        /* \"contracts/VestingWallet.sol\":3175:3336  function releasable(address token) public view virtual returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_20\n      tag_60\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"contracts/VestingWallet.sol\":2201:2288  function start() public view virtual returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n        /* \"contracts/VestingWallet.sol\":2274:2280  _start */\n      immutable(\"0x7017d9c97eaea77d01457db50e6363ce7b077b4a6becffdfbcdd71ef4a35f299\")\n        /* \"contracts/VestingWallet.sol\":2267:2280  return _start */\n      0xffffffffffffffff\n      and\n        /* \"contracts/VestingWallet.sol\":2201:2288  function start() public view virtual returns (uint256) {... */\n      jump(tag_20)\n        /* \"contracts/VestingWallet.sol\":2887:3023  function releasable() public view virtual returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_20\n      tag_69\n      jump\t// in\n        /* \"contracts/VestingWallet.sol\":4871:5079  function vestedAmount(uint64 timestamp)... */\n    tag_23:\n        /* \"contracts/VestingWallet.sol\":4976:4983  uint256 */\n      0x00\n        /* \"contracts/VestingWallet.sol\":5008:5071  _vestingSchedule(address(this).balance + released(), timestamp) */\n      tag_72\n        /* \"contracts/VestingWallet.sol\":5049:5059  released() */\n      tag_73\n        /* \"contracts/VestingWallet.sol\":2572:2579  uint256 */\n      0x00\n        /* \"contracts/VestingWallet.sol\":2599:2608  _released */\n      sload\n      swap1\n        /* \"contracts/VestingWallet.sol\":2523:2616  function released() public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/VestingWallet.sol\":5049:5059  released() */\n    tag_73:\n        /* \"contracts/VestingWallet.sol\":5025:5059  address(this).balance + released() */\n      tag_74\n      swap1\n        /* \"contracts/VestingWallet.sol\":5025:5046  address(this).balance */\n      selfbalance\n        /* \"contracts/VestingWallet.sol\":5025:5059  address(this).balance + released() */\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"contracts/VestingWallet.sol\":5061:5070  timestamp */\n      dup4\n        /* \"contracts/VestingWallet.sol\":5008:5024  _vestingSchedule */\n      tag_76\n        /* \"contracts/VestingWallet.sol\":5008:5071  _vestingSchedule(address(this).balance + released(), timestamp) */\n      jump\t// in\n    tag_72:\n        /* \"contracts/VestingWallet.sol\":5001:5071  return _vestingSchedule(address(this).balance + released(), timestamp) */\n      swap3\n        /* \"contracts/VestingWallet.sol\":4871:5079  function vestedAmount(uint64 timestamp)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/VestingWallet.sol\":4050:4416  function release(address token) public virtual {... */\n    tag_34:\n        /* \"contracts/VestingWallet.sol\":4108:4122  uint256 amount */\n      0x00\n        /* \"contracts/VestingWallet.sol\":4125:4142  releasable(token) */\n      tag_79\n        /* \"contracts/VestingWallet.sol\":4136:4141  token */\n      dup3\n        /* \"contracts/VestingWallet.sol\":4125:4135  releasable */\n      tag_61\n        /* \"contracts/VestingWallet.sol\":4125:4142  releasable(token) */\n      jump\t// in\n    tag_79:\n        /* \"contracts/VestingWallet.sol\":4108:4142  uint256 amount = releasable(token) */\n      swap1\n      pop\n        /* \"contracts/VestingWallet.sol\":4175:4184  lastMonth */\n      sload(0x02)\n        /* \"contracts/VestingWallet.sol\":4157:4172  _currentMonth() */\n      tag_80\n        /* \"contracts/VestingWallet.sol\":4157:4170  _currentMonth */\n      tag_81\n        /* \"contracts/VestingWallet.sol\":4157:4172  _currentMonth() */\n      jump\t// in\n    tag_80:\n        /* \"contracts/VestingWallet.sol\":4157:4184  _currentMonth() > lastMonth */\n      gt\n        /* \"contracts/VestingWallet.sol\":4153:4409  if (_currentMonth() > lastMonth) {... */\n      iszero\n      tag_86\n      jumpi\n        /* \"contracts/VestingWallet.sol\":4213:4228  _currentMonth() */\n      tag_83\n        /* \"contracts/VestingWallet.sol\":4213:4226  _currentMonth */\n      tag_81\n        /* \"contracts/VestingWallet.sol\":4213:4228  _currentMonth() */\n      jump\t// in\n    tag_83:\n        /* \"contracts/VestingWallet.sol\":4201:4210  lastMonth */\n      0x02\n        /* \"contracts/VestingWallet.sol\":4201:4228  lastMonth = _currentMonth() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/VestingWallet.sol\":4243:4264  _erc20Released[token] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/VestingWallet.sol\":4243:4257  _erc20Released */\n      0x01\n        /* \"contracts/VestingWallet.sol\":4243:4264  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/VestingWallet.sol\":4243:4274  _erc20Released[token] += amount */\n      dup1\n      sload\n        /* \"contracts/VestingWallet.sol\":4268:4274  amount */\n      dup4\n      swap3\n        /* \"contracts/VestingWallet.sol\":4243:4264  _erc20Released[token] */\n      swap1\n        /* \"contracts/VestingWallet.sol\":4243:4274  _erc20Released[token] += amount */\n      tag_84\n      swap1\n        /* \"contracts/VestingWallet.sol\":4268:4274  amount */\n      dup5\n      swap1\n        /* \"contracts/VestingWallet.sol\":4243:4274  _erc20Released[token] += amount */\n      tag_75\n      jump\t// in\n    tag_84:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/VestingWallet.sol\":4294:4322  ERC20Released(token, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":525:550   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/VestingWallet.sol\":4294:4322  ERC20Released(token, amount) */\n      dup4\n      and\n      swap1\n      0xc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b\n      swap1\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":498:516   */\n      add\n        /* \"contracts/VestingWallet.sol\":4294:4322  ERC20Released(token, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/VestingWallet.sol\":4337:4397  SafeERC20.safeTransfer(IERC20(token), beneficiary(), amount) */\n      tag_86\n        /* \"contracts/VestingWallet.sol\":4367:4372  token */\n      dup3\n        /* \"contracts/VestingWallet.sol\":2110:2122  _beneficiary */\n      immutable(\"0x229c1a869fa9219aaf3cffa1029c94731492e7db4f2bafdf90c8213837a49fd5\")\n        /* \"contracts/VestingWallet.sol\":4390:4396  amount */\n      dup4\n        /* \"contracts/VestingWallet.sol\":4337:4359  SafeERC20.safeTransfer */\n      tag_88\n        /* \"contracts/VestingWallet.sol\":4337:4397  SafeERC20.safeTransfer(IERC20(token), beneficiary(), amount) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/VestingWallet.sol\":4097:4416  {... */\n      pop\n        /* \"contracts/VestingWallet.sol\":4050:4416  function release(address token) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/VestingWallet.sol\":5225:5532  function vestedAmount(address token, uint64 timestamp)... */\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/VestingWallet.sol\":2778:2799  _erc20Released[token] */\n      dup3\n      and\n        /* \"contracts/VestingWallet.sol\":5345:5352  uint256 */\n      0x00\n        /* \"contracts/VestingWallet.sol\":2778:2799  _erc20Released[token] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/VestingWallet.sol\":2778:2792  _erc20Released */\n      0x01\n        /* \"contracts/VestingWallet.sol\":2778:2799  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/VestingWallet.sol\":5390:5524  _vestingSchedule(... */\n      tag_91\n      swap1\n        /* \"contracts/VestingWallet.sol\":5425:5463  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/VestingWallet.sol\":5457:5461  this */\n      address\n        /* \"contracts/VestingWallet.sol\":5425:5463  IERC20(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1099:1173   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/VestingWallet.sol\":5425:5448  IERC20(token).balanceOf */\n      dup7\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1072:1090   */\n      0x24\n      add\n        /* \"contracts/VestingWallet.sol\":5425:5463  IERC20(token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"contracts/VestingWallet.sol\":5425:5481  IERC20(token).balanceOf(address(this)) + released(token) */\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n        /* \"contracts/VestingWallet.sol\":5390:5524  _vestingSchedule(... */\n    tag_91:\n        /* \"contracts/VestingWallet.sol\":5370:5524  return... */\n      swap4\n        /* \"contracts/VestingWallet.sol\":5225:5532  function vestedAmount(address token, uint64 timestamp)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/VestingWallet.sol\":3481:3690  function release() public virtual {... */\n    tag_48:\n        /* \"contracts/VestingWallet.sol\":3526:3540  uint256 amount */\n      0x00\n        /* \"contracts/VestingWallet.sol\":3543:3555  releasable() */\n      tag_100\n        /* \"contracts/VestingWallet.sol\":3543:3553  releasable */\n      tag_69\n        /* \"contracts/VestingWallet.sol\":3543:3555  releasable() */\n      jump\t// in\n    tag_100:\n        /* \"contracts/VestingWallet.sol\":3526:3555  uint256 amount = releasable() */\n      swap1\n      pop\n        /* \"contracts/VestingWallet.sol\":3579:3585  amount */\n      dup1\n        /* \"contracts/VestingWallet.sol\":3566:3575  _released */\n      0x00\n      dup1\n        /* \"contracts/VestingWallet.sol\":3566:3585  _released += amount */\n      dup3\n      dup3\n      sload\n      tag_101\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_101:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/VestingWallet.sol\":3601:3622  EtherReleased(amount) */\n      mload(0x40)\n        /* \"#utility.yul\":525:550   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/VestingWallet.sol\":3601:3622  EtherReleased(amount) */\n      0xda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b\n      swap1\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":498:516   */\n      add\n        /* \"contracts/VestingWallet.sol\":3601:3622  EtherReleased(amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/VestingWallet.sol\":3633:3682  Address.sendValue(payable(beneficiary()), amount) */\n      tag_103\n        /* \"contracts/VestingWallet.sol\":2110:2122  _beneficiary */\n      immutable(\"0x229c1a869fa9219aaf3cffa1029c94731492e7db4f2bafdf90c8213837a49fd5\")\n        /* \"contracts/VestingWallet.sol\":3675:3681  amount */\n      dup3\n        /* \"contracts/VestingWallet.sol\":3633:3650  Address.sendValue */\n      tag_105\n        /* \"contracts/VestingWallet.sol\":3633:3682  Address.sendValue(payable(beneficiary()), amount) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/VestingWallet.sol\":3515:3690  {... */\n      pop\n        /* \"contracts/VestingWallet.sol\":3481:3690  function release() public virtual {... */\n      jump\t// out\n        /* \"contracts/VestingWallet.sol\":3175:3336  function releasable(address token) public view virtual returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/VestingWallet.sol\":2778:2799  _erc20Released[token] */\n      dup2\n      and\n        /* \"contracts/VestingWallet.sol\":3239:3246  uint256 */\n      0x00\n        /* \"contracts/VestingWallet.sol\":2778:2799  _erc20Released[token] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/VestingWallet.sol\":2778:2792  _erc20Released */\n      0x01\n        /* \"contracts/VestingWallet.sol\":2778:2799  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/VestingWallet.sol\":3266:3310  vestedAmount(token, uint64(block.timestamp)) */\n      tag_110\n        /* \"contracts/VestingWallet.sol\":3279:3284  token */\n      dup4\n        /* \"contracts/VestingWallet.sol\":3293:3308  block.timestamp */\n      timestamp\n        /* \"contracts/VestingWallet.sol\":3266:3278  vestedAmount */\n      tag_44\n        /* \"contracts/VestingWallet.sol\":3266:3310  vestedAmount(token, uint64(block.timestamp)) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/VestingWallet.sol\":3266:3328  vestedAmount(token, uint64(block.timestamp)) - released(token) */\n      tag_72\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n        /* \"contracts/VestingWallet.sol\":2887:3023  function releasable() public view virtual returns (uint256) {... */\n    tag_69:\n        /* \"contracts/VestingWallet.sol\":2938:2945  uint256 */\n      0x00\n        /* \"contracts/VestingWallet.sol\":2599:2608  _released */\n      dup1\n      sload\n        /* \"contracts/VestingWallet.sol\":2965:3002  vestedAmount(uint64(block.timestamp)) */\n      tag_116\n        /* \"contracts/VestingWallet.sol\":2985:3000  block.timestamp */\n      timestamp\n        /* \"contracts/VestingWallet.sol\":2965:2977  vestedAmount */\n      tag_23\n        /* \"contracts/VestingWallet.sol\":2965:3002  vestedAmount(uint64(block.timestamp)) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/VestingWallet.sol\":2965:3015  vestedAmount(uint64(block.timestamp)) - released() */\n      tag_117\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_117:\n        /* \"contracts/VestingWallet.sol\":2958:3015  return vestedAmount(uint64(block.timestamp)) - released() */\n      swap1\n      pop\n        /* \"contracts/VestingWallet.sol\":2887:3023  function releasable() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/VestingWallet.sol\":5733:6148  function _vestingSchedule(uint256 totalAllocation, uint64 timestamp)... */\n    tag_76:\n        /* \"contracts/VestingWallet.sol\":5869:5876  uint256 */\n      0x00\n        /* \"contracts/VestingWallet.sol\":2274:2280  _start */\n      immutable(\"0x7017d9c97eaea77d01457db50e6363ce7b077b4a6becffdfbcdd71ef4a35f299\")\n        /* \"contracts/VestingWallet.sol\":2267:2280  return _start */\n      0xffffffffffffffff\n      and\n        /* \"contracts/VestingWallet.sol\":5898:5907  timestamp */\n      dup3\n        /* \"contracts/VestingWallet.sol\":5898:5917  timestamp < start() */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"contracts/VestingWallet.sol\":5894:6141  if (timestamp < start()) {... */\n      iszero\n      tag_120\n      jumpi\n      pop\n        /* \"contracts/VestingWallet.sol\":5941:5942  0 */\n      0x00\n        /* \"contracts/VestingWallet.sol\":5934:5942  return 0 */\n      jump(tag_72)\n        /* \"contracts/VestingWallet.sol\":5894:6141  if (timestamp < start()) {... */\n    tag_120:\n        /* \"contracts/VestingWallet.sol\":5976:5996  start() + duration() */\n      tag_124\n        /* \"contracts/VestingWallet.sol\":2429:2445  return _duration */\n      0xffffffffffffffff\n        /* \"contracts/VestingWallet.sol\":2436:2445  _duration */\n      immutable(\"0x42fa20e8c2fc174121a60bb5704cfd8579fc4a2698f9ae487d1310659094676e\")\n        /* \"contracts/VestingWallet.sol\":2429:2445  return _duration */\n      dup2\n      and\n      swap1\n        /* \"contracts/VestingWallet.sol\":2274:2280  _start */\n      immutable(\"0x7017d9c97eaea77d01457db50e6363ce7b077b4a6becffdfbcdd71ef4a35f299\")\n        /* \"contracts/VestingWallet.sol\":2267:2280  return _start */\n      and\n        /* \"contracts/VestingWallet.sol\":5976:5996  start() + duration() */\n      tag_75\n      jump\t// in\n    tag_124:\n        /* \"contracts/VestingWallet.sol\":5964:5973  timestamp */\n      dup3\n        /* \"contracts/VestingWallet.sol\":5964:5996  timestamp > start() + duration() */\n      0xffffffffffffffff\n      and\n      gt\n        /* \"contracts/VestingWallet.sol\":5960:6141  if (timestamp > start() + duration()) {... */\n      iszero\n      tag_125\n      jumpi\n      pop\n        /* \"contracts/VestingWallet.sol\":6020:6035  totalAllocation */\n      dup2\n        /* \"contracts/VestingWallet.sol\":6013:6035  return totalAllocation */\n      jump(tag_72)\n        /* \"contracts/VestingWallet.sol\":5960:6141  if (timestamp > start() + duration()) {... */\n    tag_125:\n        /* \"contracts/VestingWallet.sol\":2436:2445  _duration */\n      immutable(\"0x42fa20e8c2fc174121a60bb5704cfd8579fc4a2698f9ae487d1310659094676e\")\n        /* \"contracts/VestingWallet.sol\":2429:2445  return _duration */\n      0xffffffffffffffff\n      and\n        /* \"contracts/VestingWallet.sol\":2274:2280  _start */\n      immutable(\"0x7017d9c97eaea77d01457db50e6363ce7b077b4a6becffdfbcdd71ef4a35f299\")\n        /* \"contracts/VestingWallet.sol\":2267:2280  return _start */\n      0xffffffffffffffff\n      and\n        /* \"contracts/VestingWallet.sol\":6095:6114  timestamp - start() */\n      tag_129\n      swap1\n      0xffffffffffffffff\n      dup6\n      and\n      tag_112\n      jump\t// in\n    tag_129:\n        /* \"contracts/VestingWallet.sol\":6076:6115  totalAllocation * (timestamp - start()) */\n      tag_130\n      swap1\n        /* \"contracts/VestingWallet.sol\":6076:6091  totalAllocation */\n      dup6\n        /* \"contracts/VestingWallet.sol\":6076:6115  totalAllocation * (timestamp - start()) */\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"contracts/VestingWallet.sol\":6075:6129  (totalAllocation * (timestamp - start())) / duration() */\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"contracts/VestingWallet.sol\":6068:6129  return (totalAllocation * (timestamp - start())) / duration() */\n      swap1\n      pop\n      jump(tag_72)\n        /* \"contracts/VestingWallet.sol\":3791:3919  function _currentMonth() internal view returns (uint256) {... */\n    tag_81:\n        /* \"contracts/VestingWallet.sol\":3839:3846  uint256 */\n      0x00\n        /* \"contracts/VestingWallet.sol\":3904:3911  30 days */\n      0x278d00\n        /* \"contracts/VestingWallet.sol\":2274:2280  _start */\n      immutable(\"0x7017d9c97eaea77d01457db50e6363ce7b077b4a6becffdfbcdd71ef4a35f299\")\n        /* \"contracts/VestingWallet.sol\":2267:2280  return _start */\n      0xffffffffffffffff\n      and\n        /* \"contracts/VestingWallet.sol\":3867:3900  uint64(block.timestamp) - start() */\n      tag_136\n      swap1\n      0xffffffffffffffff\n        /* \"contracts/VestingWallet.sol\":3874:3889  block.timestamp */\n      timestamp\n        /* \"contracts/VestingWallet.sol\":3867:3900  uint64(block.timestamp) - start() */\n      and\n      tag_112\n      jump\t// in\n    tag_136:\n        /* \"contracts/VestingWallet.sol\":3866:3911  (uint64(block.timestamp) - start()) / 30 days */\n      tag_117\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2732:2787   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2714:2788   */\n      mstore\n        /* \"#utility.yul\":2804:2822   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2797:2831   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":2687:2705   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":863:886  token.transfer.selector */\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_139\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":833:838  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:832  _callOptionalReturn */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2412:2724  function sendValue(address payable recipient, uint256 amount) internal {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2526:2532  amount */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2501:2522  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2501:2532  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2493:2566  require(address(this).balance >= amount, \"Address: insufficient balance\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3044:3046   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2493:2566  require(address(this).balance >= amount, \"Address: insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3026:3047   */\n      mstore\n        /* \"#utility.yul\":3083:3085   */\n      0x1d\n        /* \"#utility.yul\":3063:3081   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3056:3086   */\n      mstore\n        /* \"#utility.yul\":3122:3153   */\n      0x416464726573733a20696e73756666696369656e742062616c616e6365000000\n        /* \"#utility.yul\":3102:3120   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3095:3154   */\n      mstore\n        /* \"#utility.yul\":3171:3189   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2493:2566  require(address(this).balance >= amount, \"Address: insufficient balance\") */\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2578:2590  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2596:2605  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2596:2610  recipient.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2618:2624  amount */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2596:2629  recipient.call{value: amount}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_151\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_150)\n    tag_151:\n      0x60\n      swap2\n      pop\n    tag_150:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2577:2629  (bool success, ) = recipient.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2647:2654  success */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2639:2717  require(success, \"Address: unable to send value, recipient may have reverted\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3612:3614   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2639:2717  require(success, \"Address: unable to send value, recipient may have reverted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3594:3615   */\n      mstore\n        /* \"#utility.yul\":3651:3653   */\n      0x3a\n        /* \"#utility.yul\":3631:3649   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3624:3654   */\n      mstore\n        /* \"#utility.yul\":3690:3724   */\n      0x416464726573733a20756e61626c6520746f2073656e642076616c75652c2072\n        /* \"#utility.yul\":3670:3688   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3663:3725   */\n      mstore\n        /* \"#utility.yul\":3761:3789   */\n      0x6563697069656e74206d61792068617665207265766572746564000000000000\n        /* \"#utility.yul\":3741:3759   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3734:3790   */\n      mstore\n        /* \"#utility.yul\":3807:3826   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2639:2717  require(success, \"Address: unable to send value, recipient may have reverted\") */\n      tag_145\n        /* \"#utility.yul\":3410:3832   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3649  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3680:3684  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3660:3665  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3679  address(token).functionCall */\n      and\n      tag_157\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3752  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3721  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3756  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3830:3840  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3819:3849  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4321:4323   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4303:4324   */\n      mstore\n        /* \"#utility.yul\":4360:4362   */\n      0x2a\n        /* \"#utility.yul\":4340:4358   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4333:4363   */\n      mstore\n        /* \"#utility.yul\":4399:4433   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":4379:4397   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4372:4434   */\n      mstore\n        /* \"#utility.yul\":4470:4482   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4450:4468   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4443:4483   */\n      mstore\n        /* \"#utility.yul\":4500:4519   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_145\n        /* \"#utility.yul\":4119:4525   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_165\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_166\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4732:4734   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4714:4735   */\n      mstore\n        /* \"#utility.yul\":4771:4773   */\n      0x26\n        /* \"#utility.yul\":4751:4769   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4744:4774   */\n      mstore\n        /* \"#utility.yul\":4810:4844   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":4790:4808   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4783:4845   */\n      mstore\n        /* \"#utility.yul\":4881:4889   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4861:4879   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4854:4890   */\n      mstore\n        /* \"#utility.yul\":4907:4926   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_145\n        /* \"#utility.yul\":4530:4932   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5139:5141   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5121:5142   */\n      mstore\n        /* \"#utility.yul\":5178:5180   */\n      0x1d\n        /* \"#utility.yul\":5158:5176   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5151:5181   */\n      mstore\n        /* \"#utility.yul\":5217:5248   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":5197:5215   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5190:5249   */\n      mstore\n        /* \"#utility.yul\":5266:5284   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_145\n        /* \"#utility.yul\":4937:5290   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_180\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_179)\n    tag_180:\n      0x60\n      swap2\n      pop\n    tag_179:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_181\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_182\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_182:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_185\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      jump(tag_91)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n        /* \"#utility.yul\":14:185   */\n    tag_191:\n        /* \"#utility.yul\":81:101   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":141:159   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":130:160   */\n      dup2\n      and\n        /* \"#utility.yul\":120:161   */\n      dup2\n      eq\n        /* \"#utility.yul\":110:179   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":175:176   */\n      0x00\n        /* \"#utility.yul\":172:173   */\n      dup1\n        /* \"#utility.yul\":165:177   */\n      revert\n        /* \"#utility.yul\":110:179   */\n    tag_197:\n        /* \"#utility.yul\":14:185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":190:374   */\n    tag_22:\n        /* \"#utility.yul\":248:254   */\n      0x00\n        /* \"#utility.yul\":301:303   */\n      0x20\n        /* \"#utility.yul\":289:298   */\n      dup3\n        /* \"#utility.yul\":280:287   */\n      dup5\n        /* \"#utility.yul\":276:299   */\n      sub\n        /* \"#utility.yul\":272:304   */\n      slt\n        /* \"#utility.yul\":269:321   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":314:315   */\n      dup1\n        /* \"#utility.yul\":307:319   */\n      revert\n        /* \"#utility.yul\":269:321   */\n    tag_199:\n        /* \"#utility.yul\":340:368   */\n      tag_91\n        /* \"#utility.yul\":358:367   */\n      dup3\n        /* \"#utility.yul\":340:368   */\n      tag_191\n      jump\t// in\n        /* \"#utility.yul\":561:757   */\n    tag_192:\n        /* \"#utility.yul\":629:649   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":678:732   */\n      dup2\n      and\n        /* \"#utility.yul\":668:733   */\n      dup2\n      eq\n        /* \"#utility.yul\":658:751   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":747:748   */\n      0x00\n        /* \"#utility.yul\":744:745   */\n      dup1\n        /* \"#utility.yul\":737:749   */\n      revert\n        /* \"#utility.yul\":762:948   */\n    tag_33:\n        /* \"#utility.yul\":821:827   */\n      0x00\n        /* \"#utility.yul\":874:876   */\n      0x20\n        /* \"#utility.yul\":862:871   */\n      dup3\n        /* \"#utility.yul\":853:860   */\n      dup5\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_205:\n        /* \"#utility.yul\":913:942   */\n      tag_91\n        /* \"#utility.yul\":932:941   */\n      dup3\n        /* \"#utility.yul\":913:942   */\n      tag_192\n      jump\t// in\n        /* \"#utility.yul\":1184:1442   */\n    tag_43:\n        /* \"#utility.yul\":1251:1257   */\n      0x00\n        /* \"#utility.yul\":1259:1265   */\n      dup1\n        /* \"#utility.yul\":1312:1314   */\n      0x40\n        /* \"#utility.yul\":1300:1309   */\n      dup4\n        /* \"#utility.yul\":1291:1298   */\n      dup6\n        /* \"#utility.yul\":1287:1310   */\n      sub\n        /* \"#utility.yul\":1283:1315   */\n      slt\n        /* \"#utility.yul\":1280:1332   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":1328:1329   */\n      0x00\n        /* \"#utility.yul\":1325:1326   */\n      dup1\n        /* \"#utility.yul\":1318:1330   */\n      revert\n        /* \"#utility.yul\":1280:1332   */\n    tag_209:\n        /* \"#utility.yul\":1351:1380   */\n      tag_210\n        /* \"#utility.yul\":1370:1379   */\n      dup4\n        /* \"#utility.yul\":1351:1380   */\n      tag_192\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1341:1380   */\n      swap2\n      pop\n        /* \"#utility.yul\":1399:1436   */\n      tag_211\n        /* \"#utility.yul\":1432:1434   */\n      0x20\n        /* \"#utility.yul\":1421:1430   */\n      dup5\n        /* \"#utility.yul\":1417:1435   */\n      add\n        /* \"#utility.yul\":1399:1436   */\n      tag_191\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1389:1436   */\n      swap1\n      pop\n        /* \"#utility.yul\":1184:1442   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1447:1631   */\n    tag_193:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":1496:1497   */\n      0x00\n        /* \"#utility.yul\":1489:1577   */\n      mstore\n        /* \"#utility.yul\":1596:1600   */\n      0x11\n        /* \"#utility.yul\":1593:1594   */\n      0x04\n        /* \"#utility.yul\":1586:1601   */\n      mstore\n        /* \"#utility.yul\":1620:1624   */\n      0x24\n        /* \"#utility.yul\":1617:1618   */\n      0x00\n        /* \"#utility.yul\":1610:1625   */\n      revert\n        /* \"#utility.yul\":1636:1764   */\n    tag_75:\n        /* \"#utility.yul\":1676:1679   */\n      0x00\n        /* \"#utility.yul\":1707:1708   */\n      dup3\n        /* \"#utility.yul\":1703:1709   */\n      not\n        /* \"#utility.yul\":1700:1701   */\n      dup3\n        /* \"#utility.yul\":1697:1710   */\n      gt\n        /* \"#utility.yul\":1694:1733   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":1713:1731   */\n      tag_215\n      tag_193\n      jump\t// in\n    tag_215:\n      pop\n        /* \"#utility.yul\":1749:1758   */\n      add\n      swap1\n        /* \"#utility.yul\":1636:1764   */\n      jump\t// out\n        /* \"#utility.yul\":1769:1953   */\n    tag_97:\n        /* \"#utility.yul\":1839:1845   */\n      0x00\n        /* \"#utility.yul\":1892:1894   */\n      0x20\n        /* \"#utility.yul\":1880:1889   */\n      dup3\n        /* \"#utility.yul\":1871:1878   */\n      dup5\n        /* \"#utility.yul\":1867:1890   */\n      sub\n        /* \"#utility.yul\":1863:1895   */\n      slt\n        /* \"#utility.yul\":1860:1912   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":1908:1909   */\n      0x00\n        /* \"#utility.yul\":1905:1906   */\n      dup1\n        /* \"#utility.yul\":1898:1910   */\n      revert\n        /* \"#utility.yul\":1860:1912   */\n    tag_217:\n      pop\n        /* \"#utility.yul\":1931:1947   */\n      mload\n      swap2\n        /* \"#utility.yul\":1769:1953   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1958:2083   */\n    tag_112:\n        /* \"#utility.yul\":1998:2002   */\n      0x00\n        /* \"#utility.yul\":2026:2027   */\n      dup3\n        /* \"#utility.yul\":2023:2024   */\n      dup3\n        /* \"#utility.yul\":2020:2028   */\n      lt\n        /* \"#utility.yul\":2017:2051   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":2031:2049   */\n      tag_220\n      tag_193\n      jump\t// in\n    tag_220:\n      pop\n        /* \"#utility.yul\":2068:2077   */\n      sub\n      swap1\n        /* \"#utility.yul\":1958:2083   */\n      jump\t// out\n        /* \"#utility.yul\":2088:2256   */\n    tag_131:\n        /* \"#utility.yul\":2128:2135   */\n      0x00\n        /* \"#utility.yul\":2194:2195   */\n      dup2\n        /* \"#utility.yul\":2190:2191   */\n      0x00\n        /* \"#utility.yul\":2186:2192   */\n      not\n        /* \"#utility.yul\":2182:2196   */\n      div\n        /* \"#utility.yul\":2179:2180   */\n      dup4\n        /* \"#utility.yul\":2176:2197   */\n      gt\n        /* \"#utility.yul\":2171:2172   */\n      dup3\n        /* \"#utility.yul\":2164:2173   */\n      iszero\n        /* \"#utility.yul\":2157:2174   */\n      iszero\n        /* \"#utility.yul\":2153:2198   */\n      and\n        /* \"#utility.yul\":2150:2221   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":2201:2219   */\n      tag_223\n      tag_193\n      jump\t// in\n    tag_223:\n      pop\n        /* \"#utility.yul\":2241:2250   */\n      mul\n      swap1\n        /* \"#utility.yul\":2088:2256   */\n      jump\t// out\n        /* \"#utility.yul\":2261:2535   */\n    tag_133:\n        /* \"#utility.yul\":2301:2302   */\n      0x00\n        /* \"#utility.yul\":2327:2328   */\n      dup3\n        /* \"#utility.yul\":2317:2506   */\n      tag_225\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":2359:2360   */\n      0x00\n        /* \"#utility.yul\":2352:2440   */\n      mstore\n        /* \"#utility.yul\":2463:2467   */\n      0x12\n        /* \"#utility.yul\":2460:2461   */\n      0x04\n        /* \"#utility.yul\":2453:2468   */\n      mstore\n        /* \"#utility.yul\":2491:2495   */\n      0x24\n        /* \"#utility.yul\":2488:2489   */\n      0x00\n        /* \"#utility.yul\":2481:2496   */\n      revert\n        /* \"#utility.yul\":2317:2506   */\n    tag_225:\n      pop\n        /* \"#utility.yul\":2520:2529   */\n      div\n      swap1\n        /* \"#utility.yul\":2261:2535   */\n      jump\t// out\n        /* \"#utility.yul\":3837:4114   */\n    tag_160:\n        /* \"#utility.yul\":3904:3910   */\n      0x00\n        /* \"#utility.yul\":3957:3959   */\n      0x20\n        /* \"#utility.yul\":3945:3954   */\n      dup3\n        /* \"#utility.yul\":3936:3943   */\n      dup5\n        /* \"#utility.yul\":3932:3955   */\n      sub\n        /* \"#utility.yul\":3928:3960   */\n      slt\n        /* \"#utility.yul\":3925:3977   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":3973:3974   */\n      0x00\n        /* \"#utility.yul\":3970:3971   */\n      dup1\n        /* \"#utility.yul\":3963:3975   */\n      revert\n        /* \"#utility.yul\":3925:3977   */\n    tag_231:\n        /* \"#utility.yul\":4005:4014   */\n      dup2\n        /* \"#utility.yul\":3999:4015   */\n      mload\n        /* \"#utility.yul\":4058:4063   */\n      dup1\n        /* \"#utility.yul\":4051:4064   */\n      iszero\n        /* \"#utility.yul\":4044:4065   */\n      iszero\n        /* \"#utility.yul\":4037:4042   */\n      dup2\n        /* \"#utility.yul\":4034:4066   */\n      eq\n        /* \"#utility.yul\":4024:4084   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":4080:4081   */\n      0x00\n        /* \"#utility.yul\":4077:4078   */\n      dup1\n        /* \"#utility.yul\":4070:4082   */\n      revert\n        /* \"#utility.yul\":5295:5553   */\n    tag_194:\n        /* \"#utility.yul\":5367:5368   */\n      0x00\n        /* \"#utility.yul\":5377:5490   */\n    tag_237:\n        /* \"#utility.yul\":5391:5397   */\n      dup4\n        /* \"#utility.yul\":5388:5389   */\n      dup2\n        /* \"#utility.yul\":5385:5398   */\n      lt\n        /* \"#utility.yul\":5377:5490   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":5467:5478   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5461:5479   */\n      mload\n        /* \"#utility.yul\":5448:5459   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":5441:5480   */\n      mstore\n        /* \"#utility.yul\":5413:5415   */\n      0x20\n        /* \"#utility.yul\":5406:5416   */\n      add\n        /* \"#utility.yul\":5377:5490   */\n      jump(tag_237)\n    tag_239:\n        /* \"#utility.yul\":5508:5514   */\n      dup4\n        /* \"#utility.yul\":5505:5506   */\n      dup2\n        /* \"#utility.yul\":5502:5515   */\n      gt\n        /* \"#utility.yul\":5499:5547   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":5543:5544   */\n      0x00\n        /* \"#utility.yul\":5534:5540   */\n      dup5\n        /* \"#utility.yul\":5529:5532   */\n      dup5\n        /* \"#utility.yul\":5525:5541   */\n      add\n        /* \"#utility.yul\":5518:5545   */\n      mstore\n        /* \"#utility.yul\":5499:5547   */\n    tag_240:\n      pop\n        /* \"#utility.yul\":5295:5553   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5558:5832   */\n    tag_177:\n        /* \"#utility.yul\":5687:5690   */\n      0x00\n        /* \"#utility.yul\":5725:5731   */\n      dup3\n        /* \"#utility.yul\":5719:5732   */\n      mload\n        /* \"#utility.yul\":5741:5794   */\n      tag_242\n        /* \"#utility.yul\":5787:5793   */\n      dup2\n        /* \"#utility.yul\":5782:5785   */\n      dup5\n        /* \"#utility.yul\":5775:5779   */\n      0x20\n        /* \"#utility.yul\":5767:5773   */\n      dup8\n        /* \"#utility.yul\":5763:5780   */\n      add\n        /* \"#utility.yul\":5741:5794   */\n      tag_194\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5810:5826   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":5558:5832   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5837:6220   */\n    tag_190:\n        /* \"#utility.yul\":5986:5988   */\n      0x20\n        /* \"#utility.yul\":5975:5984   */\n      dup2\n        /* \"#utility.yul\":5968:5989   */\n      mstore\n        /* \"#utility.yul\":5949:5953   */\n      0x00\n        /* \"#utility.yul\":6018:6024   */\n      dup3\n        /* \"#utility.yul\":6012:6025   */\n      mload\n        /* \"#utility.yul\":6061:6067   */\n      dup1\n        /* \"#utility.yul\":6056:6058   */\n      0x20\n        /* \"#utility.yul\":6045:6054   */\n      dup5\n        /* \"#utility.yul\":6041:6059   */\n      add\n        /* \"#utility.yul\":6034:6068   */\n      mstore\n        /* \"#utility.yul\":6077:6143   */\n      tag_244\n        /* \"#utility.yul\":6136:6142   */\n      dup2\n        /* \"#utility.yul\":6131:6133   */\n      0x40\n        /* \"#utility.yul\":6120:6129   */\n      dup6\n        /* \"#utility.yul\":6116:6134   */\n      add\n        /* \"#utility.yul\":6111:6113   */\n      0x20\n        /* \"#utility.yul\":6103:6109   */\n      dup8\n        /* \"#utility.yul\":6099:6114   */\n      add\n        /* \"#utility.yul\":6077:6143   */\n      tag_194\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":6204:6206   */\n      0x1f\n        /* \"#utility.yul\":6183:6198   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6179:6208   */\n      and\n        /* \"#utility.yul\":6164:6209   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6211:6213   */\n      0x40\n        /* \"#utility.yul\":6160:6214   */\n      add\n      swap3\n        /* \"#utility.yul\":5837:6220   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122039868e6a418d9d06e380f8131b95bf6be72395171d308c5d2a49cdb0f12829ed64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_683": {
									"entryPoint": null,
									"id": 683,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory": {
									"entryPoint": 208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_uint64_fromMemory": {
									"entryPoint": 180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1063:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "73:116:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "83:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "98:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "92:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "92:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "83:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "127:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "138:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "153:2:5",
																										"type": "",
																										"value": "64"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "149:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "149:10:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "145:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "145:18:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "134:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "134:30:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "124:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "124:41:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "117:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "117:49:5"
															},
															"nodeType": "YulIf",
															"src": "114:69:5"
														}
													]
												},
												"name": "abi_decode_uint64_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "63:5:5",
														"type": ""
													}
												],
												"src": "14:175:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "307:343:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "353:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "362:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "365:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "355:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "355:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "355:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "328:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "337:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "324:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "324:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "349:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "320:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "320:32:5"
															},
															"nodeType": "YulIf",
															"src": "317:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "378:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "397:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "391:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "391:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "382:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "470:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "479:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "482:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "472:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "472:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "472:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "429:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "440:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "455:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "460:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "451:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "451:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "464:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "447:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "447:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "436:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "436:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "426:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "419:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "419:50:5"
															},
															"nodeType": "YulIf",
															"src": "416:70:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "495:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "505:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "519:58:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "562:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "573:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "529:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:48:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "519:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "586:58:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "629:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "640:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "625:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "625:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "596:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "596:48:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "586:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "257:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "268:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "288:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "296:6:5",
														"type": ""
													}
												],
												"src": "194:456:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "829:232:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "846:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "839:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "839:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "839:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "880:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "891:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "876:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "876:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "896:2:5",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "869:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "869:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "919:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "930:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "915:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "915:18:5"
																	},
																	{
																		"hexValue": "56657374696e6757616c6c65743a2062656e6566696369617279206973207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "935:34:5",
																		"type": "",
																		"value": "VestingWallet: beneficiary is ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "908:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "908:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "990:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1001:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "986:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "986:18:5"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1006:12:5",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "979:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:40:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "979:40:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1028:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1040:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1051:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1036:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1028:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "806:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "820:4:5",
														"type": ""
													}
												],
												"src": "655:406:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_uint64_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_uint64_fromMemory(add(headStart, 32))\n        value2 := abi_decode_uint64_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"VestingWallet: beneficiary is ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e0604052604051610e39380380610e39833981016040819052610022916100d0565b6001600160a01b03831661008f5760405162461bcd60e51b815260206004820152602a60248201527f56657374696e6757616c6c65743a2062656e6566696369617279206973207a65604482015269726f206164647265737360b01b606482015260840160405180910390fd5b6001600160a01b039092166080526001600160401b0390811660a0521660c052610121565b80516001600160401b03811681146100cb57600080fd5b919050565b6000806000606084860312156100e557600080fd5b83516001600160a01b03811681146100fc57600080fd5b925061010a602085016100b4565b9150610118604085016100b4565b90509250925092565b60805160a05160c051610cb16101886000396000818161010e0152818161054901526105ac015260008181610251015281816104f90152818161056d015281816105d701526106370152600081816101780152818161035201526104840152610cb16000f3fe6080604052600436106100c05760003560e01c806386d1a69f11610074578063a3f8eace1161004e578063a3f8eace14610222578063be9a655514610242578063fbccedae1461027f57600080fd5b806386d1a69f146101c257806396132521146101d75780639852595c146101ec57600080fd5b806319165587116100a5578063191655871461013c57806338af3eed1461015e578063810ec23b146101a257600080fd5b80630a17b06b146100cc5780630fb5a6b4146100ff57600080fd5b366100c757005b600080fd5b3480156100d857600080fd5b506100ec6100e7366004610abb565b610294565b6040519081526020015b60405180910390f35b34801561010b57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166100ec565b34801561014857600080fd5b5061015c610157366004610aed565b6102b8565b005b34801561016a57600080fd5b506040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681526020016100f6565b3480156101ae57600080fd5b506100ec6101bd366004610b08565b61037b565b3480156101ce57600080fd5b5061015c61042a565b3480156101e357600080fd5b506000546100ec565b3480156101f857600080fd5b506100ec610207366004610aed565b6001600160a01b031660009081526001602052604090205490565b34801561022e57600080fd5b506100ec61023d366004610aed565b6104ac565b34801561024e57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166100ec565b34801561028b57600080fd5b506100ec6104d9565b60006102b26102a260005490565b6102ac9047610b51565b836104f5565b92915050565b60006102c3826104ac565b90506002546102d061062f565b1115610377576102de61062f565b6002556001600160a01b03821660009081526001602052604081208054839290610309908490610b51565b90915550506040518181526001600160a01b038316907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a2610377827f00000000000000000000000000000000000000000000000000000000000000008361067e565b5050565b6001600160a01b038216600090815260016020526040812054610423906040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156103f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104199190610b69565b6102ac9190610b51565b9392505050565b60006104346104d9565b9050806000808282546104479190610b51565b90915550506040518181527fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b9060200160405180910390a16104a97f000000000000000000000000000000000000000000000000000000000000000082610703565b50565b6001600160a01b0381166000908152600160205260408120546104cf834261037b565b6102b29190610b82565b600080546104e642610294565b6104f09190610b82565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff168267ffffffffffffffff16101561053b575060006102b2565b61059267ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116907f000000000000000000000000000000000000000000000000000000000000000016610b51565b8267ffffffffffffffff1611156105aa5750816102b2565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166106149067ffffffffffffffff8516610b82565b61061e9085610b99565b6106289190610bb8565b90506102b2565b600062278d007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166106749067ffffffffffffffff4216610b82565b6104f09190610bb8565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526106fe908490610821565b505050565b804710156107585760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146107a5576040519150601f19603f3d011682016040523d82523d6000602084013e6107aa565b606091505b50509050806106fe5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161074f565b6000610876826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109069092919063ffffffff16565b8051909150156106fe57808060200190518101906108949190610bda565b6106fe5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161074f565b6060610915848460008561091d565b949350505050565b6060824710156109955760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161074f565b6001600160a01b0385163b6109ec5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161074f565b600080866001600160a01b03168587604051610a089190610c2c565b60006040518083038185875af1925050503d8060008114610a45576040519150601f19603f3d011682016040523d82523d6000602084013e610a4a565b606091505b5091509150610a5a828286610a65565b979650505050505050565b60608315610a74575081610423565b825115610a845782518084602001fd5b8160405162461bcd60e51b815260040161074f9190610c48565b803567ffffffffffffffff81168114610ab657600080fd5b919050565b600060208284031215610acd57600080fd5b61042382610a9e565b80356001600160a01b0381168114610ab657600080fd5b600060208284031215610aff57600080fd5b61042382610ad6565b60008060408385031215610b1b57600080fd5b610b2483610ad6565b9150610b3260208401610a9e565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b6457610b64610b3b565b500190565b600060208284031215610b7b57600080fd5b5051919050565b600082821015610b9457610b94610b3b565b500390565b6000816000190483118215151615610bb357610bb3610b3b565b500290565b600082610bd557634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610bec57600080fd5b8151801515811461042357600080fd5b60005b83811015610c17578181015183820152602001610bff565b83811115610c26576000848401525b50505050565b60008251610c3e818460208701610bfc565b9190910192915050565b6020815260008251806020840152610c67816040850160208701610bfc565b601f01601f1916919091016040019291505056fea264697066735822122039868e6a418d9d06e380f8131b95bf6be72395171d308c5d2a49cdb0f12829ed64736f6c634300080b0033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xE39 CODESIZE SUB DUP1 PUSH2 0xE39 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0xD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56657374696E6757616C6C65743A2062656E6566696369617279206973207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x80 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0xA0 MSTORE AND PUSH1 0xC0 MSTORE PUSH2 0x121 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH2 0x10A PUSH1 0x20 DUP6 ADD PUSH2 0xB4 JUMP JUMPDEST SWAP2 POP PUSH2 0x118 PUSH1 0x40 DUP6 ADD PUSH2 0xB4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0xCB1 PUSH2 0x188 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x10E ADD MSTORE DUP2 DUP2 PUSH2 0x549 ADD MSTORE PUSH2 0x5AC ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x251 ADD MSTORE DUP2 DUP2 PUSH2 0x4F9 ADD MSTORE DUP2 DUP2 PUSH2 0x56D ADD MSTORE DUP2 DUP2 PUSH2 0x5D7 ADD MSTORE PUSH2 0x637 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x178 ADD MSTORE DUP2 DUP2 PUSH2 0x352 ADD MSTORE PUSH2 0x484 ADD MSTORE PUSH2 0xCB1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86D1A69F GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xA3F8EACE GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x96132521 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x19165587 GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xC7 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0xE7 CALLDATASIZE PUSH1 0x4 PUSH2 0xABB JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0xEC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0xAED JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0xB08 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0x42A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xEC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0xAED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0xAED JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0xEC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x2A2 PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2AC SWAP1 SELFBALANCE PUSH2 0xB51 JUMP JUMPDEST DUP4 PUSH2 0x4F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C3 DUP3 PUSH2 0x4AC JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH2 0x2D0 PUSH2 0x62F JUMP JUMPDEST GT ISZERO PUSH2 0x377 JUMPI PUSH2 0x2DE PUSH2 0x62F JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x309 SWAP1 DUP5 SWAP1 PUSH2 0xB51 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x377 DUP3 PUSH32 0x0 DUP4 PUSH2 0x67E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x423 SWAP1 PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x419 SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x434 PUSH2 0x4D9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x4A9 PUSH32 0x0 DUP3 PUSH2 0x703 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4CF DUP4 TIMESTAMP PUSH2 0x37B JUMP JUMPDEST PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x4E6 TIMESTAMP PUSH2 0x294 JUMP JUMPDEST PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xB82 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x53B JUMPI POP PUSH1 0x0 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x592 PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND SWAP1 PUSH32 0x0 AND PUSH2 0xB51 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x5AA JUMPI POP DUP2 PUSH2 0x2B2 JUMP JUMPDEST PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x614 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x61E SWAP1 DUP6 PUSH2 0xB99 JUMP JUMPDEST PUSH2 0x628 SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x278D00 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x674 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF TIMESTAMP AND PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x6FE SWAP1 DUP5 SWAP1 PUSH2 0x821 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x876 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x906 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x6FE JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x894 SWAP2 SWAP1 PUSH2 0xBDA JUMP JUMPDEST PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x74F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x915 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x91D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x9EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA08 SWAP2 SWAP1 PUSH2 0xC2C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA45 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xA5A DUP3 DUP3 DUP7 PUSH2 0xA65 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xA74 JUMPI POP DUP2 PUSH2 0x423 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xA84 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74F SWAP2 SWAP1 PUSH2 0xC48 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xAB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xACD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x423 DUP3 PUSH2 0xA9E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x423 DUP3 PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB24 DUP4 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP PUSH2 0xB32 PUSH1 0x20 DUP5 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB64 JUMPI PUSH2 0xB64 PUSH2 0xB3B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xB94 JUMPI PUSH2 0xB94 PUSH2 0xB3B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xBB3 JUMPI PUSH2 0xBB3 PUSH2 0xB3B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xBD5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC17 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBFF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xC26 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xC3E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xBFC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xC67 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY DUP7 DUP15 PUSH11 0x418D9D06E380F8131B95BF PUSH12 0xE72395171D308C5D2A49CDB0 CALL 0x28 0x29 0xED PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "937:5214:4:-:0;;;1448:388;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1610:32:4;;1588:124;;;;-1:-1:-1;;;1588:124:4;;857:2:5;1588:124:4;;;839:21:5;896:2;876:18;;;869:30;935:34;915:18;;;908:62;-1:-1:-1;;;986:18:5;;;979:40;1036:19;;1588:124:4;;;;;;;;-1:-1:-1;;;;;1723:33:4;;;;;-1:-1:-1;;;;;1767:23:4;;;;;1801:27;;;937:5214;;14:175:5;92:13;;-1:-1:-1;;;;;134:30:5;;124:41;;114:69;;179:1;176;169:12;114:69;14:175;;;:::o;194:456::-;280:6;288;296;349:2;337:9;328:7;324:23;320:32;317:52;;;365:1;362;355:12;317:52;391:16;;-1:-1:-1;;;;;436:31:5;;426:42;;416:70;;482:1;479;472:12;416:70;505:5;-1:-1:-1;529:48:5;573:2;558:18;;529:48;:::i;:::-;519:58;;596:48;640:2;629:9;625:18;596:48;:::i;:::-;586:58;;194:456;;;;;:::o;655:406::-;937:5214:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_688": {
									"entryPoint": null,
									"id": 688,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_300": {
									"entryPoint": 2081,
									"id": 300,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_currentMonth_825": {
									"entryPoint": 1583,
									"id": 825,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_vestingSchedule_963": {
									"entryPoint": 1269,
									"id": 963,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@beneficiary_697": {
									"entryPoint": null,
									"id": 697,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@duration_715": {
									"entryPoint": null,
									"id": 715,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionCallWithValue_460": {
									"entryPoint": 2333,
									"id": 460,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_390": {
									"entryPoint": 2310,
									"id": 390,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_319": {
									"entryPoint": null,
									"id": 319,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@releasable_755": {
									"entryPoint": 1241,
									"id": 755,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releasable_777": {
									"entryPoint": 1196,
									"id": 777,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@release_806": {
									"entryPoint": 1066,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@release_871": {
									"entryPoint": 696,
									"id": 871,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@released_724": {
									"entryPoint": null,
									"id": 724,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@released_737": {
									"entryPoint": null,
									"id": 737,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransfer_108": {
									"entryPoint": 1662,
									"id": 108,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@sendValue_353": {
									"entryPoint": 1795,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@start_706": {
									"entryPoint": null,
									"id": 706,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verifyCallResult_595": {
									"entryPoint": 2661,
									"id": 595,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@vestedAmount_892": {
									"entryPoint": 660,
									"id": 892,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@vestedAmount_920": {
									"entryPoint": 891,
									"id": 920,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint64": {
									"entryPoint": 2824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint64": {
									"entryPoint": 2747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint64": {
									"entryPoint": 2718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2875,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6222:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "62:123:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "72:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "94:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "81:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "81:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "72:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "163:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "172:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "175:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "165:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "165:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "165:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "123:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "134:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "141:18:5",
																						"type": "",
																						"value": "0xffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "130:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "130:30:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "120:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "120:41:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:49:5"
															},
															"nodeType": "YulIf",
															"src": "110:69:5"
														}
													]
												},
												"name": "abi_decode_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "41:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "52:5:5",
														"type": ""
													}
												],
												"src": "14:171:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "259:115:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "305:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "314:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "307:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "307:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "280:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "289:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "276:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "276:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "301:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "272:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:32:5"
															},
															"nodeType": "YulIf",
															"src": "269:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "330:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "358:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "340:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "340:28:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "330:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "225:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "236:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "248:6:5",
														"type": ""
													}
												],
												"src": "190:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "480:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "490:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "502:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "513:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "498:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "498:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "490:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "532:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "543:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "525:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "525:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "449:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "460:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "471:4:5",
														"type": ""
													}
												],
												"src": "379:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "610:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "620:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "642:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "629:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "629:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "620:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "671:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "682:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "689:42:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "678:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "678:54:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "668:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:65:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "661:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "661:73:5"
															},
															"nodeType": "YulIf",
															"src": "658:93:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "589:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "600:5:5",
														"type": ""
													}
												],
												"src": "561:196:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:5"
															},
															"nodeType": "YulIf",
															"src": "842:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "798:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "809:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "821:6:5",
														"type": ""
													}
												],
												"src": "762:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1054:125:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1064:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1076:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1087:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1072:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1072:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1064:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1106:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1121:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1129:42:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1117:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1117:55:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1099:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1099:74:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1099:74:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1023:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1034:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1045:4:5",
														"type": ""
													}
												],
												"src": "953:226:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1270:172:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1316:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1325:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1318:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1318:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1318:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1291:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1300:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1287:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1287:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1312:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1283:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1283:32:5"
															},
															"nodeType": "YulIf",
															"src": "1280:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1341:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1370:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1351:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1351:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1389:47:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1421:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1432:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1417:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1417:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "1399:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:37:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1389:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1228:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1239:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1251:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1259:6:5",
														"type": ""
													}
												],
												"src": "1184:258:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1479:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1496:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1499:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1489:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1489:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1593:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1596:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1586:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1586:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1586:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1617:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1610:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1610:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1610:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1447:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1684:80:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1713:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1700:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1707:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1703:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1703:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1697:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1697:13:5"
															},
															"nodeType": "YulIf",
															"src": "1694:39:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1742:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1753:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1756:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1749:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1667:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1670:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1676:3:5",
														"type": ""
													}
												],
												"src": "1636:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1850:103:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1896:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1905:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1908:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1898:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1898:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1898:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1871:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1880:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1867:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1867:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1892:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1863:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:32:5"
															},
															"nodeType": "YulIf",
															"src": "1860:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1921:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1937:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1931:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1931:16:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1921:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1816:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1827:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1839:6:5",
														"type": ""
													}
												],
												"src": "1769:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2007:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2029:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2031:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2031:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2031:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2023:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2026:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2020:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2020:8:5"
															},
															"nodeType": "YulIf",
															"src": "2017:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2060:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2072:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2075:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2068:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2068:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2060:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1989:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1992:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1998:4:5",
														"type": ""
													}
												],
												"src": "1958:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2140:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2199:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2201:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2201:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2171:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2164:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2157:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2157:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2179:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2190:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2186:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2186:6:5"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2194:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2182:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2182:14:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2176:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2176:21:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:45:5"
															},
															"nodeType": "YulIf",
															"src": "2150:71:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2230:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2245:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2248:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2241:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2241:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2230:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2119:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2122:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2128:7:5",
														"type": ""
													}
												],
												"src": "2088:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2307:228:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2338:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2359:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2362:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2352:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2352:88:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2352:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2460:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2463:4:5",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2453:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2453:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2453:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2488:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2491:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2481:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2481:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2481:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2327:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2320:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:9:5"
															},
															"nodeType": "YulIf",
															"src": "2317:189:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2515:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2524:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2527:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2520:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2520:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2515:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2292:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2295:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2301:1:5",
														"type": ""
													}
												],
												"src": "2261:274:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2669:168:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2679:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2691:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2702:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2687:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2679:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2721:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2736:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2744:42:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2732:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2732:55:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2714:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2714:74:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2714:74:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2808:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2819:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2804:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2804:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2824:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2797:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2797:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2797:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2630:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2641:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2649:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2660:4:5",
														"type": ""
													}
												],
												"src": "2540:297:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3016:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3033:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3044:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3026:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3026:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3026:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3067:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3078:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3063:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3063:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3083:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3056:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3056:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3056:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3106:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3117:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3102:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3102:18:5"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3122:31:5",
																		"type": "",
																		"value": "Address: insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3095:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3095:59:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3095:59:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3163:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3175:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3186:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3171:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3163:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2993:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3007:4:5",
														"type": ""
													}
												],
												"src": "2842:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3391:14:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3393:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3400:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3393:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3375:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3383:3:5",
														"type": ""
													}
												],
												"src": "3200:205:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3584:248:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3601:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3612:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3594:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3594:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3594:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3635:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3646:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3631:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3631:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3651:2:5",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3624:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3624:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3674:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3685:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3670:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3670:18:5"
																	},
																	{
																		"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c2072",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3690:34:5",
																		"type": "",
																		"value": "Address: unable to send value, r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3663:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3663:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3663:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3745:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3756:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3741:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3741:18:5"
																	},
																	{
																		"hexValue": "6563697069656e74206d61792068617665207265766572746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3761:28:5",
																		"type": "",
																		"value": "ecipient may have reverted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3734:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3734:56:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3734:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3799:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3811:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3822:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3807:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3807:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3799:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3561:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3575:4:5",
														"type": ""
													}
												],
												"src": "3410:422:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3915:199:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3961:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3970:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3973:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3963:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3963:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3963:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3936:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3945:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3932:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3932:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3957:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3928:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3928:32:5"
															},
															"nodeType": "YulIf",
															"src": "3925:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3986:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4005:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3999:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3990:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4068:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4077:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4080:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4070:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4070:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4070:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4037:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4058:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4051:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4051:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4044:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4044:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4034:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4034:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4027:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4027:40:5"
															},
															"nodeType": "YulIf",
															"src": "4024:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4093:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4103:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4093:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3881:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3892:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3904:6:5",
														"type": ""
													}
												],
												"src": "3837:277:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4293:232:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4310:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4303:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4303:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4303:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4344:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4355:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4340:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4340:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4360:2:5",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4333:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4333:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4333:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4383:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4394:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4379:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4379:18:5"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4399:34:5",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4372:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4372:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4372:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4454:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4465:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4450:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4450:18:5"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4470:12:5",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4443:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4443:40:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4443:40:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4492:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4504:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4515:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4500:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4492:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4270:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4284:4:5",
														"type": ""
													}
												],
												"src": "4119:406:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4704:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4721:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4732:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4714:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4714:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4714:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4755:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4766:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4751:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4751:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4771:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4744:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4744:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4744:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4794:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4805:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4790:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4790:18:5"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4810:34:5",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4783:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4783:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4783:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4865:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4876:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4861:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4861:18:5"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4881:8:5",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4854:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4854:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4854:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4899:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4911:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4922:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4907:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4907:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4899:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4681:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4695:4:5",
														"type": ""
													}
												],
												"src": "4530:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5111:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5128:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5139:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5121:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5121:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5121:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5162:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5173:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5158:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5158:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5151:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5151:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5151:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5201:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5212:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5197:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5197:18:5"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5217:31:5",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5190:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5190:59:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5190:59:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5258:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5270:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5281:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5266:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5266:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5258:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5088:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5102:4:5",
														"type": ""
													}
												],
												"src": "4937:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5348:205:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5358:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5367:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5362:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5427:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5452:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5457:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5448:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5448:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "5471:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5476:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5467:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5467:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5461:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5461:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5441:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5441:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5441:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5388:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5391:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5385:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5385:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5399:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5401:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5410:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5413:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5406:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5406:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5401:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5381:3:5",
																"statements": []
															},
															"src": "5377:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5516:31:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5529:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "5534:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5525:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5525:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5543:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5518:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5518:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5518:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5505:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5508:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5502:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5502:13:5"
															},
															"nodeType": "YulIf",
															"src": "5499:48:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5326:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5331:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5336:6:5",
														"type": ""
													}
												],
												"src": "5295:258:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5695:137:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5705:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5725:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5719:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5719:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5709:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5767:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5775:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5763:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5763:17:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5782:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5787:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5741:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5741:53:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5741:53:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5803:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5814:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5810:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5810:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5803:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5671:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5676:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5687:3:5",
														"type": ""
													}
												],
												"src": "5558:274:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5958:262:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5975:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5986:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5968:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5968:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5968:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5998:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6018:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6012:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6012:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6002:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6045:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6056:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6041:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6041:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6061:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6034:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6034:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6034:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6103:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6111:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6099:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6099:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6120:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6131:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6116:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6116:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6136:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6077:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6077:66:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6077:66:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6152:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6168:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6187:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6195:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6183:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6183:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6204:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6200:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6200:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6179:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6179:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6164:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6164:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6211:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6160:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6160:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6152:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5927:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5938:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5949:4:5",
														"type": ""
													}
												],
												"src": "5837:383:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint64(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint64(add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Address: unable to send value, r\")\n        mstore(add(headStart, 96), \"ecipient may have reverted\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"644": [
									{
										"length": 32,
										"start": 376
									},
									{
										"length": 32,
										"start": 850
									},
									{
										"length": 32,
										"start": 1156
									}
								],
								"646": [
									{
										"length": 32,
										"start": 593
									},
									{
										"length": 32,
										"start": 1273
									},
									{
										"length": 32,
										"start": 1389
									},
									{
										"length": 32,
										"start": 1495
									},
									{
										"length": 32,
										"start": 1591
									}
								],
								"648": [
									{
										"length": 32,
										"start": 270
									},
									{
										"length": 32,
										"start": 1353
									},
									{
										"length": 32,
										"start": 1452
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100c05760003560e01c806386d1a69f11610074578063a3f8eace1161004e578063a3f8eace14610222578063be9a655514610242578063fbccedae1461027f57600080fd5b806386d1a69f146101c257806396132521146101d75780639852595c146101ec57600080fd5b806319165587116100a5578063191655871461013c57806338af3eed1461015e578063810ec23b146101a257600080fd5b80630a17b06b146100cc5780630fb5a6b4146100ff57600080fd5b366100c757005b600080fd5b3480156100d857600080fd5b506100ec6100e7366004610abb565b610294565b6040519081526020015b60405180910390f35b34801561010b57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166100ec565b34801561014857600080fd5b5061015c610157366004610aed565b6102b8565b005b34801561016a57600080fd5b506040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681526020016100f6565b3480156101ae57600080fd5b506100ec6101bd366004610b08565b61037b565b3480156101ce57600080fd5b5061015c61042a565b3480156101e357600080fd5b506000546100ec565b3480156101f857600080fd5b506100ec610207366004610aed565b6001600160a01b031660009081526001602052604090205490565b34801561022e57600080fd5b506100ec61023d366004610aed565b6104ac565b34801561024e57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166100ec565b34801561028b57600080fd5b506100ec6104d9565b60006102b26102a260005490565b6102ac9047610b51565b836104f5565b92915050565b60006102c3826104ac565b90506002546102d061062f565b1115610377576102de61062f565b6002556001600160a01b03821660009081526001602052604081208054839290610309908490610b51565b90915550506040518181526001600160a01b038316907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a2610377827f00000000000000000000000000000000000000000000000000000000000000008361067e565b5050565b6001600160a01b038216600090815260016020526040812054610423906040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156103f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104199190610b69565b6102ac9190610b51565b9392505050565b60006104346104d9565b9050806000808282546104479190610b51565b90915550506040518181527fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b9060200160405180910390a16104a97f000000000000000000000000000000000000000000000000000000000000000082610703565b50565b6001600160a01b0381166000908152600160205260408120546104cf834261037b565b6102b29190610b82565b600080546104e642610294565b6104f09190610b82565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff168267ffffffffffffffff16101561053b575060006102b2565b61059267ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116907f000000000000000000000000000000000000000000000000000000000000000016610b51565b8267ffffffffffffffff1611156105aa5750816102b2565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166106149067ffffffffffffffff8516610b82565b61061e9085610b99565b6106289190610bb8565b90506102b2565b600062278d007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166106749067ffffffffffffffff4216610b82565b6104f09190610bb8565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526106fe908490610821565b505050565b804710156107585760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146107a5576040519150601f19603f3d011682016040523d82523d6000602084013e6107aa565b606091505b50509050806106fe5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161074f565b6000610876826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109069092919063ffffffff16565b8051909150156106fe57808060200190518101906108949190610bda565b6106fe5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161074f565b6060610915848460008561091d565b949350505050565b6060824710156109955760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161074f565b6001600160a01b0385163b6109ec5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161074f565b600080866001600160a01b03168587604051610a089190610c2c565b60006040518083038185875af1925050503d8060008114610a45576040519150601f19603f3d011682016040523d82523d6000602084013e610a4a565b606091505b5091509150610a5a828286610a65565b979650505050505050565b60608315610a74575081610423565b825115610a845782518084602001fd5b8160405162461bcd60e51b815260040161074f9190610c48565b803567ffffffffffffffff81168114610ab657600080fd5b919050565b600060208284031215610acd57600080fd5b61042382610a9e565b80356001600160a01b0381168114610ab657600080fd5b600060208284031215610aff57600080fd5b61042382610ad6565b60008060408385031215610b1b57600080fd5b610b2483610ad6565b9150610b3260208401610a9e565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b6457610b64610b3b565b500190565b600060208284031215610b7b57600080fd5b5051919050565b600082821015610b9457610b94610b3b565b500390565b6000816000190483118215151615610bb357610bb3610b3b565b500290565b600082610bd557634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610bec57600080fd5b8151801515811461042357600080fd5b60005b83811015610c17578181015183820152602001610bff565b83811115610c26576000848401525b50505050565b60008251610c3e818460208701610bfc565b9190910192915050565b6020815260008251806020840152610c67816040850160208701610bfc565b601f01601f1916919091016040019291505056fea264697066735822122039868e6a418d9d06e380f8131b95bf6be72395171d308c5d2a49cdb0f12829ed64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86D1A69F GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xA3F8EACE GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x96132521 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x19165587 GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xC7 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0xE7 CALLDATASIZE PUSH1 0x4 PUSH2 0xABB JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0xEC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0xAED JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0xB08 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0x42A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xEC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0xAED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0xAED JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0xEC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x2A2 PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2AC SWAP1 SELFBALANCE PUSH2 0xB51 JUMP JUMPDEST DUP4 PUSH2 0x4F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C3 DUP3 PUSH2 0x4AC JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH2 0x2D0 PUSH2 0x62F JUMP JUMPDEST GT ISZERO PUSH2 0x377 JUMPI PUSH2 0x2DE PUSH2 0x62F JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x309 SWAP1 DUP5 SWAP1 PUSH2 0xB51 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x377 DUP3 PUSH32 0x0 DUP4 PUSH2 0x67E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x423 SWAP1 PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x419 SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x434 PUSH2 0x4D9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x4A9 PUSH32 0x0 DUP3 PUSH2 0x703 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4CF DUP4 TIMESTAMP PUSH2 0x37B JUMP JUMPDEST PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x4E6 TIMESTAMP PUSH2 0x294 JUMP JUMPDEST PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xB82 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x53B JUMPI POP PUSH1 0x0 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x592 PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND SWAP1 PUSH32 0x0 AND PUSH2 0xB51 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x5AA JUMPI POP DUP2 PUSH2 0x2B2 JUMP JUMPDEST PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x614 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x61E SWAP1 DUP6 PUSH2 0xB99 JUMP JUMPDEST PUSH2 0x628 SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x278D00 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x674 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF TIMESTAMP AND PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x6FE SWAP1 DUP5 SWAP1 PUSH2 0x821 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x876 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x906 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x6FE JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x894 SWAP2 SWAP1 PUSH2 0xBDA JUMP JUMPDEST PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x74F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x915 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x91D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x9EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA08 SWAP2 SWAP1 PUSH2 0xC2C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA45 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xA5A DUP3 DUP3 DUP7 PUSH2 0xA65 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xA74 JUMPI POP DUP2 PUSH2 0x423 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xA84 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74F SWAP2 SWAP1 PUSH2 0xC48 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xAB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xACD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x423 DUP3 PUSH2 0xA9E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x423 DUP3 PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB24 DUP4 PUSH2 0xAD6 JUMP JUMPDEST SWAP2 POP PUSH2 0xB32 PUSH1 0x20 DUP5 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB64 JUMPI PUSH2 0xB64 PUSH2 0xB3B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xB94 JUMPI PUSH2 0xB94 PUSH2 0xB3B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xBB3 JUMPI PUSH2 0xBB3 PUSH2 0xB3B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xBD5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC17 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBFF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xC26 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xC3E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xBFC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xC67 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY DUP7 DUP15 PUSH11 0x418D9D06E380F8131B95BF PUSH12 0xE72395171D308C5D2A49CDB0 CALL 0x28 0x29 0xED PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "937:5214:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4871:208;;;;;;;;;;-1:-1:-1;4871:208:4;;;;;:::i;:::-;;:::i;:::-;;;525:25:5;;;513:2;498:18;4871:208:4;;;;;;;;2360:93;;;;;;;;;;-1:-1:-1;2436:9:4;2429:16;;2360:93;;4050:366;;;;;;;;;;-1:-1:-1;4050:366:4;;;;;:::i;:::-;;:::i;:::-;;2031:99;;;;;;;;;;-1:-1:-1;2031:99:4;;-1:-1:-1;;;;;2110:12:4;1117:55:5;1099:74;;1087:2;1072:18;2031:99:4;953:226:5;5225:307:4;;;;;;;;;;-1:-1:-1;5225:307:4;;;;;:::i;:::-;;:::i;3481:209::-;;;;;;;;;;;;;:::i;2523:93::-;;;;;;;;;;-1:-1:-1;2572:7:4;2599:9;2523:93;;2688:119;;;;;;;;;;-1:-1:-1;2688:119:4;;;;;:::i;:::-;-1:-1:-1;;;;;2778:21:4;2751:7;2778:21;;;:14;:21;;;;;;;2688:119;3175:161;;;;;;;;;;-1:-1:-1;3175:161:4;;;;;:::i;:::-;;:::i;2201:87::-;;;;;;;;;;-1:-1:-1;2274:6:4;2267:13;;2201:87;;2887:136;;;;;;;;;;;;;:::i;4871:208::-;4976:7;5008:63;5049:10;2572:7;2599:9;;2523:93;5049:10;5025:34;;:21;:34;:::i;:::-;5061:9;5008:16;:63::i;:::-;5001:70;4871:208;-1:-1:-1;;4871:208:4:o;4050:366::-;4108:14;4125:17;4136:5;4125:10;:17::i;:::-;4108:34;;4175:9;;4157:15;:13;:15::i;:::-;:27;4153:256;;;4213:15;:13;:15::i;:::-;4201:9;:27;-1:-1:-1;;;;;4243:21:4;;;;;;:14;:21;;;;;:31;;4268:6;;4243:21;:31;;4268:6;;4243:31;:::i;:::-;;;;-1:-1:-1;;4294:28:4;;525:25:5;;;-1:-1:-1;;;;;4294:28:4;;;;;513:2:5;498:18;4294:28:4;;;;;;;4337:60;4367:5;2110:12;4390:6;4337:22;:60::i;:::-;4097:319;4050:366;:::o;5225:307::-;-1:-1:-1;;;;;2778:21:4;;5345:7;2778:21;;;:14;:21;;;;;;5390:134;;5425:38;;;;;5457:4;5425:38;;;1099:74:5;-1:-1:-1;;;;;5425:23:4;;;;;1072:18:5;;5425:38:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;5390:134::-;5370:154;5225:307;-1:-1:-1;;;5225:307:4:o;3481:209::-;3526:14;3543:12;:10;:12::i;:::-;3526:29;;3579:6;3566:9;;:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;3601:21:4;;525:25:5;;;3601:21:4;;513:2:5;498:18;3601:21:4;;;;;;;3633:49;2110:12;3675:6;3633:17;:49::i;:::-;3515:175;3481:209::o;3175:161::-;-1:-1:-1;;;;;2778:21:4;;3239:7;2778:21;;;:14;:21;;;;;;3266:44;3279:5;3293:15;3266:12;:44::i;:::-;:62;;;;:::i;2887:136::-;2938:7;2599:9;;2965:37;2985:15;2965:12;:37::i;:::-;:50;;;;:::i;:::-;2958:57;;2887:136;:::o;5733:415::-;5869:7;2274:6;2267:13;;5898:9;:19;;;5894:247;;;-1:-1:-1;5941:1:4;5934:8;;5894:247;5976:20;2429:16;2436:9;2429:16;;;2274:6;2267:13;5976:20;:::i;:::-;5964:9;:32;;;5960:181;;;-1:-1:-1;6020:15:4;6013:22;;5960:181;2436:9;2429:16;;2274:6;2267:13;;6095:19;;;;;;:::i;:::-;6076:39;;:15;:39;:::i;:::-;6075:54;;;;:::i;:::-;6068:61;;;;3791:128;3839:7;3904;2274:6;2267:13;;3867:33;;;3874:15;3867:33;;:::i;:::-;3866:45;;;;:::i;701:205:1:-;840:58;;;-1:-1:-1;;;;;2732:55:5;;840:58:1;;;2714:74:5;2804:18;;;;2797:34;;;840:58:1;;;;;;;;;;2687:18:5;;;;840:58:1;;;;;;;;;;863:23;840:58;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;2412:312:2:-;2526:6;2501:21;:31;;2493:73;;;;-1:-1:-1;;;2493:73:2;;3044:2:5;2493:73:2;;;3026:21:5;3083:2;3063:18;;;3056:30;3122:31;3102:18;;;3095:59;3171:18;;2493:73:2;;;;;;;;;2578:12;2596:9;-1:-1:-1;;;;;2596:14:2;2618:6;2596:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:52;;;2647:7;2639:78;;;;-1:-1:-1;;;2639:78:2;;3612:2:5;2639:78:2;;;3594:21:5;3651:2;3631:18;;;3624:30;3690:34;3670:18;;;3663:62;3761:28;3741:18;;;3734:56;3807:19;;2639:78:2;3410:422:5;3207:706:1;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:1;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:1;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:1;;4321:2:5;3811:85:1;;;4303:21:5;4360:2;4340:18;;;4333:30;4399:34;4379:18;;;4372:62;4470:12;4450:18;;;4443:40;4500:19;;3811:85:1;4119:406:5;3861:223:2;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:2:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:2;;4732:2:5;5137:81:2;;;4714:21:5;4771:2;4751:18;;;4744:30;4810:34;4790:18;;;4783:62;4881:8;4861:18;;;4854:36;4907:19;;5137:81:2;4530:402:5;5137:81:2;-1:-1:-1;;;;;1465:19:2;;;5228:60;;;;-1:-1:-1;;;5228:60:2;;5139:2:5;5228:60:2;;;5121:21:5;5178:2;5158:18;;;5151:30;5217:31;5197:18;;;5190:59;5266:18;;5228:60:2;4937:353:5;5228:60:2;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:2;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:2:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:2;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:2;;;;;;;;:::i;14:171:5:-;81:20;;141:18;130:30;;120:41;;110:69;;175:1;172;165:12;110:69;14:171;;;:::o;190:184::-;248:6;301:2;289:9;280:7;276:23;272:32;269:52;;;317:1;314;307:12;269:52;340:28;358:9;340:28;:::i;561:196::-;629:20;;-1:-1:-1;;;;;678:54:5;;668:65;;658:93;;747:1;744;737:12;762:186;821:6;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;1184:258::-;1251:6;1259;1312:2;1300:9;1291:7;1287:23;1283:32;1280:52;;;1328:1;1325;1318:12;1280:52;1351:29;1370:9;1351:29;:::i;:::-;1341:39;;1399:37;1432:2;1421:9;1417:18;1399:37;:::i;:::-;1389:47;;1184:258;;;;;:::o;1447:184::-;-1:-1:-1;;;1496:1:5;1489:88;1596:4;1593:1;1586:15;1620:4;1617:1;1610:15;1636:128;1676:3;1707:1;1703:6;1700:1;1697:13;1694:39;;;1713:18;;:::i;:::-;-1:-1:-1;1749:9:5;;1636:128::o;1769:184::-;1839:6;1892:2;1880:9;1871:7;1867:23;1863:32;1860:52;;;1908:1;1905;1898:12;1860:52;-1:-1:-1;1931:16:5;;1769:184;-1:-1:-1;1769:184:5:o;1958:125::-;1998:4;2026:1;2023;2020:8;2017:34;;;2031:18;;:::i;:::-;-1:-1:-1;2068:9:5;;1958:125::o;2088:168::-;2128:7;2194:1;2190;2186:6;2182:14;2179:1;2176:21;2171:1;2164:9;2157:17;2153:45;2150:71;;;2201:18;;:::i;:::-;-1:-1:-1;2241:9:5;;2088:168::o;2261:274::-;2301:1;2327;2317:189;;-1:-1:-1;;;2359:1:5;2352:88;2463:4;2460:1;2453:15;2491:4;2488:1;2481:15;2317:189;-1:-1:-1;2520:9:5;;2261:274::o;3837:277::-;3904:6;3957:2;3945:9;3936:7;3932:23;3928:32;3925:52;;;3973:1;3970;3963:12;3925:52;4005:9;3999:16;4058:5;4051:13;4044:21;4037:5;4034:32;4024:60;;4080:1;4077;4070:12;5295:258;5367:1;5377:113;5391:6;5388:1;5385:13;5377:113;;;5467:11;;;5461:18;5448:11;;;5441:39;5413:2;5406:10;5377:113;;;5508:6;5505:1;5502:13;5499:48;;;5543:1;5534:6;5529:3;5525:16;5518:27;5499:48;;5295:258;;;:::o;5558:274::-;5687:3;5725:6;5719:13;5741:53;5787:6;5782:3;5775:4;5767:6;5763:17;5741:53;:::i;:::-;5810:16;;;;;5558:274;-1:-1:-1;;5558:274:5:o;5837:383::-;5986:2;5975:9;5968:21;5949:4;6018:6;6012:13;6061:6;6056:2;6045:9;6041:18;6034:34;6077:66;6136:6;6131:2;6120:9;6116:18;6111:2;6103:6;6099:15;6077:66;:::i;:::-;6204:2;6183:15;-1:-1:-1;;6179:29:5;6164:45;;;;6211:2;6160:54;;5837:383;-1:-1:-1;;5837:383:5:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "649800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"beneficiary()": "infinite",
								"duration()": "infinite",
								"releasable()": "infinite",
								"releasable(address)": "infinite",
								"release()": "infinite",
								"release(address)": "infinite",
								"released()": "2326",
								"released(address)": "2593",
								"start()": "infinite",
								"vestedAmount(address,uint64)": "infinite",
								"vestedAmount(uint64)": "infinite"
							},
							"internal": {
								"_currentMonth()": "infinite",
								"_vestingSchedule(uint256,uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 937,
									"end": 6151,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1448,
									"end": 1836,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1610,
									"end": 1642,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1610,
									"end": 1642,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 857,
									"end": 859,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 839,
									"end": 860,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 896,
									"end": 898,
									"name": "PUSH",
									"source": 5,
									"value": "2A"
								},
								{
									"begin": 876,
									"end": 894,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 876,
									"end": 894,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 876,
									"end": 894,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 869,
									"end": 899,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 935,
									"end": 969,
									"name": "PUSH",
									"source": 5,
									"value": "56657374696E6757616C6C65743A2062656E6566696369617279206973207A65"
								},
								{
									"begin": 915,
									"end": 933,
									"name": "PUSH",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 915,
									"end": 933,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 915,
									"end": 933,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 908,
									"end": 970,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "726F2061646472657373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 986,
									"end": 1004,
									"name": "PUSH",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 986,
									"end": 1004,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 986,
									"end": 1004,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 979,
									"end": 1019,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1055,
									"name": "PUSH",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 1036,
									"end": 1055,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1588,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1723,
									"end": 1756,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1723,
									"end": 1756,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1723,
									"end": 1756,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1723,
									"end": 1756,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1723,
									"end": 1756,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1767,
									"end": 1790,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1767,
									"end": 1790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1767,
									"end": 1790,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1767,
									"end": 1790,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 1767,
									"end": 1790,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1801,
									"end": 1828,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1801,
									"end": 1828,
									"name": "PUSH",
									"source": 4,
									"value": "C0"
								},
								{
									"begin": 1801,
									"end": 1828,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 189,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 14,
									"end": 189,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 92,
									"end": 105,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 92,
									"end": 105,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 134,
									"end": 164,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 134,
									"end": 164,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 124,
									"end": 165,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 124,
									"end": 165,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 114,
									"end": 183,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 114,
									"end": 183,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 179,
									"end": 180,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 177,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 169,
									"end": 181,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 114,
									"end": 183,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 114,
									"end": 183,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 14,
									"end": 189,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 14,
									"end": 189,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 14,
									"end": 189,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 189,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 194,
									"end": 650,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 194,
									"end": 650,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 280,
									"end": 286,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 294,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 296,
									"end": 302,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 351,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 337,
									"end": 346,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 328,
									"end": 335,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 324,
									"end": 347,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 320,
									"end": 352,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 317,
									"end": 369,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 317,
									"end": 369,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 317,
									"end": 369,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 365,
									"end": 366,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 363,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 355,
									"end": 367,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 317,
									"end": 369,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 317,
									"end": 369,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 391,
									"end": 407,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 391,
									"end": 407,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 436,
									"end": 467,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 436,
									"end": 467,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 426,
									"end": 468,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 426,
									"end": 468,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 416,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 416,
									"end": 486,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 482,
									"end": 483,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 480,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 472,
									"end": 484,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 416,
									"end": 486,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 416,
									"end": 486,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 505,
									"end": 510,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 529,
									"end": 577,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 573,
									"end": 575,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 558,
									"end": 576,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 558,
									"end": 576,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 529,
									"end": 577,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 529,
									"end": 577,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 529,
									"end": 577,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 529,
									"end": 577,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 519,
									"end": 577,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 519,
									"end": 577,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 596,
									"end": 644,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 629,
									"end": 638,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 625,
									"end": 643,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 596,
									"end": 644,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 596,
									"end": 644,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 596,
									"end": 644,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 596,
									"end": 644,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 586,
									"end": 644,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 586,
									"end": 644,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 194,
									"end": 650,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 650,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 194,
									"end": 650,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 650,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 194,
									"end": 650,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 650,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 655,
									"end": 1061,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 655,
									"end": 1061,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "PUSH",
									"source": 4,
									"value": "C0"
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "648"
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "646"
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "644"
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 937,
									"end": 6151,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122039868e6a418d9d06e380f8131b95bf6be72395171d308c5d2a49cdb0f12829ed64736f6c634300080b0033",
									".code": [
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "86D1A69F"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "A3F8EACE"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "A3F8EACE"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "BE9A6555"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "FBCCEDAE"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "86D1A69F"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "96132521"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "9852595C"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "19165587"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "19165587"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "38AF3EED"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "810EC23B"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "A17B06B"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "FB5A6B4"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 937,
											"end": 6151,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 525,
											"end": 550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 525,
											"end": 550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2453,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2360,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2453,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2453,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2453,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2360,
											"end": 2453,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2453,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2453,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2453,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2453,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2360,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2436,
											"end": 2445,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "648"
										},
										{
											"begin": 2429,
											"end": 2445,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2429,
											"end": 2445,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2360,
											"end": 2453,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2031,
											"end": 2130,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2031,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2031,
											"end": 2130,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2031,
											"end": 2130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2031,
											"end": 2130,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2031,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2031,
											"end": 2130,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2031,
											"end": 2130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2031,
											"end": 2130,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2031,
											"end": 2130,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2031,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2031,
											"end": 2130,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2130,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2122,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "644"
										},
										{
											"begin": 1117,
											"end": 1172,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1173,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1173,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1089,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2031,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 953,
											"end": 1179,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2523,
											"end": 2616,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2523,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2616,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2616,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2616,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2523,
											"end": 2616,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2616,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2616,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2616,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2616,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2523,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2572,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2608,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2523,
											"end": 2616,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2201,
											"end": 2288,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2201,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2288,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2288,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2201,
											"end": 2288,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2288,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2288,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2201,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "646"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2201,
											"end": 2288,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4976,
											"end": 4983,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5049,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2572,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2608,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2616,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5049,
											"end": 5059,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5049,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5025,
											"end": 5059,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5046,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5025,
											"end": 5059,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5025,
											"end": 5059,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5025,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5061,
											"end": 5070,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5008,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5008,
											"end": 5071,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5008,
											"end": 5071,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5008,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5001,
											"end": 5071,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 5079,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4136,
											"end": 4141,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4125,
											"end": 4142,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4125,
											"end": 4142,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4125,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4175,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4175,
											"end": 4184,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4157,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4157,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4157,
											"end": 4172,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4157,
											"end": 4172,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4157,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4157,
											"end": 4184,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4409,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4153,
											"end": 4409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4213,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4213,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4213,
											"end": 4228,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4213,
											"end": 4228,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4213,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4210,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4201,
											"end": 4228,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4243,
											"end": 4264,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4264,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4264,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4264,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4264,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4264,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4257,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4243,
											"end": 4264,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4243,
											"end": 4264,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4264,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4243,
											"end": 4264,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4264,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4274,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4274,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4268,
											"end": 4274,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4268,
											"end": 4274,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4264,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4243,
											"end": 4274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4268,
											"end": 4274,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4268,
											"end": 4274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4243,
											"end": 4274,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4243,
											"end": 4274,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4243,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4274,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4274,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 525,
											"end": 550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4322,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4294,
											"end": 4322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4294,
											"end": 4322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4294,
											"end": 4322,
											"name": "PUSH",
											"source": 4,
											"value": "C0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B"
										},
										{
											"begin": 4294,
											"end": 4322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4294,
											"end": 4322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4294,
											"end": 4322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4294,
											"end": 4322,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4294,
											"end": 4322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4294,
											"end": 4322,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4367,
											"end": 4372,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2122,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "644"
										},
										{
											"begin": 4390,
											"end": 4396,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4337,
											"end": 4397,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4337,
											"end": 4397,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4337,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4097,
											"end": 4416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4416,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5345,
											"end": 5352,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5390,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5390,
											"end": 5524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "PUSH",
											"source": 4,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1173,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5425,
											"end": 5448,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5448,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5448,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5448,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 5425,
											"end": 5448,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5425,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5425,
											"end": 5481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5425,
											"end": 5481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5390,
											"end": 5524,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5390,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5370,
											"end": 5524,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5225,
											"end": 5532,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3540,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3543,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3555,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3579,
											"end": 3585,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3575,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3575,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3601,
											"end": 3622,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3601,
											"end": 3622,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 525,
											"end": 550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3622,
											"name": "PUSH",
											"source": 4,
											"value": "DA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B"
										},
										{
											"begin": 3601,
											"end": 3622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3622,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3601,
											"end": 3622,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3622,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3622,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3622,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2110,
											"end": 2122,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "644"
										},
										{
											"begin": 3675,
											"end": 3681,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3633,
											"end": 3682,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3633,
											"end": 3682,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3633,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3690,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3175,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3239,
											"end": 3246,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2799,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3308,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3266,
											"end": 3310,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3266,
											"end": 3310,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3266,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3266,
											"end": 3328,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3328,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3266,
											"end": 3328,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 2945,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2608,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2985,
											"end": 3000,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2965,
											"end": 3002,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2965,
											"end": 3002,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2965,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2965,
											"end": 3015,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2965,
											"end": 3015,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2965,
											"end": 3015,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2965,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 3015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 3015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2887,
											"end": 3023,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5733,
											"end": 6148,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5733,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5869,
											"end": 5876,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "646"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5898,
											"end": 5907,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5898,
											"end": 5917,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5898,
											"end": 5917,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5898,
											"end": 5917,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 6141,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5894,
											"end": 6141,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5941,
											"end": 5942,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5934,
											"end": 5942,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 6141,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5894,
											"end": 6141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2429,
											"end": 2445,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2436,
											"end": 2445,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "648"
										},
										{
											"begin": 2429,
											"end": 2445,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2445,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2445,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "646"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5976,
											"end": 5996,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5976,
											"end": 5996,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5976,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5973,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5996,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5964,
											"end": 5996,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5996,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5960,
											"end": 6141,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5960,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5960,
											"end": 6141,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6020,
											"end": 6035,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6013,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 6013,
											"end": 6035,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5960,
											"end": 6141,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5960,
											"end": 6141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2445,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "648"
										},
										{
											"begin": 2429,
											"end": 2445,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2429,
											"end": 2445,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "646"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6095,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6095,
											"end": 6114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6095,
											"end": 6114,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6095,
											"end": 6114,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6095,
											"end": 6114,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6095,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 6095,
											"end": 6114,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6095,
											"end": 6114,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6095,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6076,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6076,
											"end": 6115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6076,
											"end": 6091,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6076,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 6076,
											"end": 6115,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6076,
											"end": 6115,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6076,
											"end": 6115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6075,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 6075,
											"end": 6129,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6075,
											"end": 6129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6075,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6075,
											"end": 6129,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6075,
											"end": 6129,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 6075,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6068,
											"end": 6129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6068,
											"end": 6129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6068,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 6068,
											"end": 6129,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3919,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3791,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3839,
											"end": 3846,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3911,
											"name": "PUSH",
											"source": 4,
											"value": "278D00"
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "646"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3874,
											"end": 3889,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3866,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 3866,
											"end": 3911,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3866,
											"end": 3911,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3866,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3866,
											"end": 3911,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2732,
											"end": 2787,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2732,
											"end": 2787,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2788,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2822,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2804,
											"end": 2822,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2822,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2822,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2831,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2831,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 863,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 813,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 833,
											"end": 838,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 833,
											"end": 838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 813,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2412,
											"end": 2724,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2412,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2522,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2532,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2532,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3046,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3026,
											"end": 3047,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3086,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3153,
											"name": "PUSH",
											"source": 5,
											"value": "416464726573733A20696E73756666696369656E742062616C616E6365000000"
										},
										{
											"begin": 3102,
											"end": 3120,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3102,
											"end": 3120,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3154,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2493,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2578,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2605,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2596,
											"end": 2610,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2624,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3614,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3594,
											"end": 3615,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3651,
											"end": 3653,
											"name": "PUSH",
											"source": 5,
											"value": "3A"
										},
										{
											"begin": 3631,
											"end": 3649,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3631,
											"end": 3649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3631,
											"end": 3649,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "PUSH",
											"source": 5,
											"value": "416464726573733A20756E61626C6520746F2073656E642076616C75652C2072"
										},
										{
											"begin": 3670,
											"end": 3688,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3670,
											"end": 3688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3670,
											"end": 3688,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3725,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3761,
											"end": 3789,
											"name": "PUSH",
											"source": 5,
											"value": "6563697069656E74206D61792068617665207265766572746564000000000000"
										},
										{
											"begin": 3741,
											"end": 3759,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3741,
											"end": 3759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 3759,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3790,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3807,
											"end": 3826,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3807,
											"end": 3826,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3410,
											"end": 3832,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3626,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 3756,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3830,
											"end": 3840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4324,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4362,
											"name": "PUSH",
											"source": 5,
											"value": "2A"
										},
										{
											"begin": 4340,
											"end": 4358,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4340,
											"end": 4358,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4340,
											"end": 4358,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4333,
											"end": 4363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4433,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 4379,
											"end": 4397,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4379,
											"end": 4397,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4397,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4372,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4470,
											"end": 4482,
											"name": "PUSH",
											"source": 5,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 4450,
											"end": 4468,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4450,
											"end": 4468,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4468,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4443,
											"end": 4483,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4500,
											"end": 4519,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4500,
											"end": 4519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4119,
											"end": 4525,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4732,
											"end": 4734,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4714,
											"end": 4735,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4771,
											"end": 4773,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4744,
											"end": 4774,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4810,
											"end": 4844,
											"name": "PUSH",
											"source": 5,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 4790,
											"end": 4808,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4790,
											"end": 4808,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4808,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4783,
											"end": 4845,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 4889,
											"name": "PUSH",
											"source": 5,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 4890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4907,
											"end": 4926,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4907,
											"end": 4926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4530,
											"end": 4932,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5141,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5142,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 5158,
											"end": 5176,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5158,
											"end": 5176,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5158,
											"end": 5176,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5151,
											"end": 5181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5217,
											"end": 5248,
											"name": "PUSH",
											"source": 5,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 5197,
											"end": 5215,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5197,
											"end": 5215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5197,
											"end": 5215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5190,
											"end": 5249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5266,
											"end": 5284,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5266,
											"end": 5284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4937,
											"end": 5290,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 185,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 14,
											"end": 185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 81,
											"end": 101,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 81,
											"end": 101,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 141,
											"end": 159,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 130,
											"end": 160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 130,
											"end": 160,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 120,
											"end": 161,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 120,
											"end": 161,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 110,
											"end": 179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 110,
											"end": 179,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 176,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 165,
											"end": 177,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 110,
											"end": 179,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 110,
											"end": 179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 185,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14,
											"end": 185,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 185,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 190,
											"end": 374,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 190,
											"end": 374,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 248,
											"end": 254,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 303,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 280,
											"end": 287,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 276,
											"end": 299,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 272,
											"end": 304,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 269,
											"end": 321,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 269,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 269,
											"end": 321,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 269,
											"end": 321,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 269,
											"end": 321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 340,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 358,
											"end": 367,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 340,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 340,
											"end": 368,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 561,
											"end": 757,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 561,
											"end": 757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 629,
											"end": 649,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 629,
											"end": 649,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 678,
											"end": 732,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 678,
											"end": 732,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 668,
											"end": 733,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 668,
											"end": 733,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 658,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 658,
											"end": 751,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 747,
											"end": 748,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 737,
											"end": 749,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 762,
											"end": 948,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 762,
											"end": 948,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 821,
											"end": 827,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1184,
											"end": 1442,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1184,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1312,
											"end": 1314,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1300,
											"end": 1309,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1287,
											"end": 1310,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1280,
											"end": 1332,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1280,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1280,
											"end": 1332,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1326,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1280,
											"end": 1332,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1280,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1370,
											"end": 1379,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1351,
											"end": 1380,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1380,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1351,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1380,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1432,
											"end": 1434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1417,
											"end": 1435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1399,
											"end": 1436,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1399,
											"end": 1436,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1399,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1389,
											"end": 1436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1389,
											"end": 1436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1442,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1442,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1442,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1442,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1442,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1447,
											"end": 1631,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1447,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1496,
											"end": 1497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1577,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1600,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1593,
											"end": 1594,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1586,
											"end": 1601,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1624,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1617,
											"end": 1618,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1610,
											"end": 1625,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1764,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1636,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1679,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1708,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1701,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1710,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1733,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1694,
											"end": 1733,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1713,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1713,
											"end": 1731,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1713,
											"end": 1731,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1713,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1764,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1769,
											"end": 1953,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1769,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1894,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1880,
											"end": 1889,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1871,
											"end": 1878,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1867,
											"end": 1890,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1895,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1860,
											"end": 1912,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1860,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1860,
											"end": 1912,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1906,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1898,
											"end": 1910,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1860,
											"end": 1912,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1860,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1931,
											"end": 1947,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1947,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1953,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1769,
											"end": 1953,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1958,
											"end": 2083,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1958,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2028,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2051,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2017,
											"end": 2051,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2031,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2031,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2031,
											"end": 2049,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2031,
											"end": 2049,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2031,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2068,
											"end": 2077,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 2083,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2088,
											"end": 2256,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2088,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2190,
											"end": 2191,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2196,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2197,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2171,
											"end": 2172,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2164,
											"end": 2173,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2174,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2153,
											"end": 2198,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2221,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 2150,
											"end": 2221,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 2201,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2201,
											"end": 2219,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2201,
											"end": 2219,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 2201,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2241,
											"end": 2250,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2088,
											"end": 2256,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2261,
											"end": 2535,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2261,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2302,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2328,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2317,
											"end": 2506,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2359,
											"end": 2360,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2440,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2463,
											"end": 2467,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2460,
											"end": 2461,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2453,
											"end": 2468,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2495,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2488,
											"end": 2489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2496,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2506,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2317,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2535,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3837,
											"end": 4114,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3837,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3904,
											"end": 3910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 3959,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3936,
											"end": 3943,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 3955,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 3960,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3977,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3925,
											"end": 3977,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 3974,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3970,
											"end": 3971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3963,
											"end": 3975,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3977,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3925,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4005,
											"end": 4014,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4015,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4051,
											"end": 4064,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4065,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 4042,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4034,
											"end": 4066,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4024,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4024,
											"end": 4084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4077,
											"end": 4078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4070,
											"end": 4082,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5295,
											"end": 5553,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5295,
											"end": 5553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5367,
											"end": 5368,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5377,
											"end": 5490,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5377,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5391,
											"end": 5397,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5388,
											"end": 5389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5398,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5377,
											"end": 5490,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5377,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 5377,
											"end": 5490,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5467,
											"end": 5478,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5467,
											"end": 5478,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5467,
											"end": 5478,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5461,
											"end": 5479,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5448,
											"end": 5459,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5448,
											"end": 5459,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5448,
											"end": 5459,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5480,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5406,
											"end": 5416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5377,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5377,
											"end": 5490,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5377,
											"end": 5490,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 5377,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5508,
											"end": 5514,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5505,
											"end": 5506,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5502,
											"end": 5515,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5534,
											"end": 5540,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5529,
											"end": 5532,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5525,
											"end": 5541,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5518,
											"end": 5545,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5295,
											"end": 5553,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5295,
											"end": 5553,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5295,
											"end": 5553,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5295,
											"end": 5553,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5558,
											"end": 5832,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 5558,
											"end": 5832,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5687,
											"end": 5690,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5731,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5719,
											"end": 5732,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 5787,
											"end": 5793,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5782,
											"end": 5785,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5779,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5773,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5763,
											"end": 5780,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5741,
											"end": 5794,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5741,
											"end": 5794,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 5741,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5826,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5826,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5826,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5826,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5826,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5832,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5558,
											"end": 5832,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5837,
											"end": 6220,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 5837,
											"end": 6220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5986,
											"end": 5988,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5975,
											"end": 5984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5968,
											"end": 5989,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5949,
											"end": 5953,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6024,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6025,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6061,
											"end": 6067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6056,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6045,
											"end": 6054,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6041,
											"end": 6059,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6068,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6077,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 6136,
											"end": 6142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6131,
											"end": 6133,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6120,
											"end": 6129,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6116,
											"end": 6134,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6111,
											"end": 6113,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6103,
											"end": 6109,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6099,
											"end": 6114,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6077,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 6077,
											"end": 6143,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6077,
											"end": 6143,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 6077,
											"end": 6143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6206,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6183,
											"end": 6198,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6179,
											"end": 6208,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6164,
											"end": 6209,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6164,
											"end": 6209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6164,
											"end": 6209,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6164,
											"end": 6209,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6213,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6160,
											"end": 6214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6160,
											"end": 6214,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5837,
											"end": 6220,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5837,
											"end": 6220,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"duration()": "0fb5a6b4",
							"releasable()": "fbccedae",
							"releasable(address)": "a3f8eace",
							"release()": "86d1a69f",
							"release(address)": "19165587",
							"released()": "96132521",
							"released(address)": "9852595c",
							"start()": "be9a6555",
							"vestedAmount(address,uint64)": "810ec23b",
							"vestedAmount(uint64)": "0a17b06b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiaryAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReleased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract handles the vesting of Eth and ERC20 tokens for a given beneficiary. Custody of multiple tokens can be given to this contract, which will release the token to the beneficiary following a given vesting schedule. The vesting schedule is customizable through the {vestedAmount} function. Any token transferred to this contract will follow the vesting schedule as if they were locked from the beginning. Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly) be immediately releasable.\",\"kind\":\"dev\",\"methods\":{\"beneficiary()\":{\"details\":\"Getter for the beneficiary address.\"},\"constructor\":{\"details\":\"Set the beneficiary, start timestamp and vesting duration of the vesting wallet.\"},\"duration()\":{\"details\":\"Getter for the vesting duration.\"},\"releasable()\":{\"details\":\"Getter for the amount of releasable eth.\"},\"releasable(address)\":{\"details\":\"Getter for the amount of releasable `token` tokens. `token` should be the address of an IERC20 contract.\"},\"release()\":{\"details\":\"Release the native token (ether) that have already vested. Emits a {EtherReleased} event.\"},\"release(address)\":{\"details\":\"Release the tokens that have already vested. Emits a {ERC20Released} event.\"},\"released()\":{\"details\":\"Amount of eth already released\"},\"released(address)\":{\"details\":\"Amount of token already released\"},\"start()\":{\"details\":\"Getter for the start timestamp.\"},\"vestedAmount(address,uint64)\":{\"details\":\"Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\"},\"vestedAmount(uint64)\":{\"details\":\"Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\"}},\"title\":\"VestingWallet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VestingWallet.sol\":\"VestingWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/VestingWallet.sol\":{\"keccak256\":\"0x8f5c9e0d787d15ef92271fc83aa22d6c200201c4c1853060b152d5e53b95b567\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8739c3f4f4a6188d95660933697990365502fc659a74b55931625ba842ba52a\",\"dweb:/ipfs/QmdQTgzqy1JcFuAeF5DwQbYXjSmAweeGyp5QW8M5yQiWUB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 638,
								"contract": "contracts/VestingWallet.sol:VestingWallet",
								"label": "_released",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 642,
								"contract": "contracts/VestingWallet.sol:VestingWallet",
								"label": "_erc20Released",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 650,
								"contract": "contracts/VestingWallet.sol:VestingWallet",
								"label": "lastMonth",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "342:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:0"
									},
									"scope": 77,
									"src": "296:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "453:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "493:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:0"
									},
									"scope": 77,
									"src": "434:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "733:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "745:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "779:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:0"
									},
									"scope": 77,
									"src": "715:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1079:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1094:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1134:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:0"
									},
									"scope": 77,
									"src": "1060:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1813:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1830:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1864:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:0"
									},
									"scope": 77,
									"src": "1796:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2241:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2280:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:0"
									},
									"scope": 77,
									"src": "2168:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2461:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2470:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2492:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:0"
									},
									"src": "2455:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nameLocation": "2692:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2701:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2724:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2749:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:0"
									},
									"src": "2686:78:0"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							596
						],
						"IERC20": [
							77
						],
						"SafeERC20": [
							301
						]
					},
					"id": 302,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 302,
							"sourceUnit": 78,
							"src": "125:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 302,
							"sourceUnit": 597,
							"src": "149:36:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 82,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:1",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 301,
							"linearizedBaseContracts": [
								301
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 85,
									"libraryName": {
										"id": 83,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 596,
										"src": "675:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:1",
									"typeName": {
										"id": 84,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "803:103:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "833:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 99,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 88,
																			"src": "863:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 26,
																		"src": "863:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 102,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "888:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 103,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "892:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 97,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 95,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "813:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "813:86:1"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "732:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 87,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 86,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "732:6:1"
													},
													"referencedDeclaration": 77,
													"src": "732:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "754:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "774:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:1"
									},
									"scope": 301,
									"src": "701:205:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "1040:113:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 121,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "1070:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 124,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "1100:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 58,
																		"src": "1100:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 127,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "1129:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 128,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 115,
																	"src": "1135:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 129,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 117,
																	"src": "1139:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 122,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 120,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "1050:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:1"
											}
										]
									},
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "947:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 110,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 109,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "947:6:1"
													},
													"referencedDeclaration": 77,
													"src": "947:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "969:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "991:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1011:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:1"
									},
									"scope": 301,
									"src": "912:241:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1519:497:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 146,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 142,
																			"src": "1768:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 154,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$301",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$301",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 152,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 155,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 156,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 140,
																					"src": "1815:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 150,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 138,
																					"src": "1784:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 151,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 36,
																				"src": "1784:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 166,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1939:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 169,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 138,
																			"src": "1969:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "1969:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 172,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "1993:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 173,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "2002:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 167,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 165,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "1919:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:1"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:1",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1443:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 137,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 136,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1443:6:1"
													},
													"referencedDeclaration": 77,
													"src": "1443:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1465:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:1"
									},
									"scope": 301,
									"src": "1413:603:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "2138:194:1",
										"statements": [
											{
												"assignments": [
													189
												],
												"declarations": [
													{
														"constant": false,
														"id": 189,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 213,
														"src": "2148:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 200,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 194,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$301",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$301",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 192,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 196,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2202:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 190,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "2171:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "2171:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 198,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "2213:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 202,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2248:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 205,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "2278:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "2278:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 208,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "2302:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 209,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "2311:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 203,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 201,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2228:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:1"
											}
										]
									},
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "2062:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 180,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 179,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2062:6:1"
													},
													"referencedDeclaration": 77,
													"src": "2062:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "2084:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "2109:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:1"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:1"
									},
									"scope": 301,
									"src": "2022:310:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "2454:370:1",
										"statements": [
											{
												"id": 260,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:1",
												"statements": [
													{
														"assignments": [
															225
														],
														"declarations": [
															{
																"constant": false,
																"id": 225,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:1",
																"nodeType": "VariableDeclaration",
																"scope": 260,
																"src": "2488:20:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 224,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 234,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 230,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$301",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$301",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 228,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 232,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "2542:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 226,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "2511:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "2511:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:1"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 236,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 225,
																		"src": "2572:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 237,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "2588:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 235,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 241,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:1"
													},
													{
														"assignments": [
															243
														],
														"declarations": [
															{
																"constant": false,
																"id": 243,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:1",
																"nodeType": "VariableDeclaration",
																"scope": 260,
																"src": "2653:20:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 242,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 247,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 244,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "2676:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 245,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "2691:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:1"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 249,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "2730:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 252,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 217,
																					"src": "2760:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 46,
																				"src": "2760:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 255,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "2784:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 256,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 243,
																			"src": "2793:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 250,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 248,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "2710:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 259,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:1"
													}
												]
											}
										]
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "2378:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 216,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 215,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2378:6:1"
													},
													"referencedDeclaration": 77,
													"src": "2378:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "2400:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "2425:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:1"
									},
									"scope": 301,
									"src": "2338:486:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "3277:636:1",
										"statements": [
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 299,
														"src": "3626:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 271,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 281,
												"initialValue": {
													"arguments": [
														{
															"id": 278,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "3680:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 275,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "3660:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 273,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 390,
														"src": "3652:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 282,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "3735:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 298,
												"nodeType": "IfStatement",
												"src": "3731:176:1",
												"trueBody": {
													"id": 297,
													"nodeType": "Block",
													"src": "3758:149:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 289,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "3830:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 291,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 290,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:1",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 292,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 287,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 286,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 296,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:1",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3236:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 265,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 264,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3236:6:1"
													},
													"referencedDeclaration": 77,
													"src": "3236:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3250:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:1"
									},
									"scope": 301,
									"src": "3207:706:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 302,
							"src": "645:3270:1",
							"usedErrors": []
						}
					],
					"src": "100:3816:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							596
						]
					},
					"id": 597,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 303,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 304,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 596,
							"linearizedBaseContracts": [
								596
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1241:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 312,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "1465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 311,
												"id": 317,
												"nodeType": "Return",
												"src": "1458:30:2"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:2"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1235:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:2"
									},
									"scope": 596,
									"src": "1175:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "2483:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 330,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$596",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$596",
																				"typeString": "library Address"
																			}
																		],
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 328,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 333,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "2526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:2"
											},
											{
												"assignments": [
													339,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "2578:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 338,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 346,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 340,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "2596:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 342,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "2618:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "2647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2431:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2458:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:2"
									},
									"scope": 596,
									"src": "2412:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "3555:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 364,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "3585:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "3593:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 363,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															370,
															390
														],
														"referencedDeclaration": 390,
														"src": "3572:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 362,
												"id": 368,
												"nodeType": "Return",
												"src": "3565:67:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3488:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3504:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 357,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:2"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3541:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:2"
									},
									"scope": 596,
									"src": "3466:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "4008:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 383,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "4047:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "4055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 386,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "4064:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 382,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															460
														],
														"referencedDeclaration": 460,
														"src": "4025:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 381,
												"id": 388,
												"nodeType": "Return",
												"src": "4018:59:2"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3916:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3943:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3994:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:2"
									},
									"scope": 596,
									"src": "3861:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "4589:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 403,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "4628:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 404,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "4636:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 405,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "4642:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 402,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															460
														],
														"referencedDeclaration": 460,
														"src": "4606:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 401,
												"id": 408,
												"nodeType": "Return",
												"src": "4599:94:2"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4486:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4510:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4575:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:2"
									},
									"scope": 596,
									"src": "4446:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "5127:320:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 427,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$596",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$596",
																				"typeString": "library Address"
																			}
																		],
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 425,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 430,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "5170:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 437,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "5247:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 436,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "5236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:2"
											},
											{
												"assignments": [
													443,
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "5300:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 442,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "5314:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 444,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 452,
												"initialValue": {
													"arguments": [
														{
															"id": 450,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "5367:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 446,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "5341:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 448,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "5360:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "5406:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 455,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "5415:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 456,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "5427:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 453,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "5389:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 423,
												"id": 458,
												"nodeType": "Return",
												"src": "5382:58:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4988:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "5012:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "5039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "5062:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "5113:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:2"
									},
									"scope": 596,
									"src": "4948:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "5724:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5760:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "5768:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 470,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															477,
															512
														],
														"referencedDeclaration": 512,
														"src": "5741:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 475,
												"nodeType": "Return",
												"src": "5734:80:2"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "5652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "5668:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:2"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "5710:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:2"
									},
									"scope": 596,
									"src": "5624:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "6163:228:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 491,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "6192:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 490,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "6181:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:2"
											},
											{
												"assignments": [
													497,
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 497,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "6252:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 496,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 499,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "6266:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 498,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 504,
												"initialValue": {
													"arguments": [
														{
															"id": 502,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "6311:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 500,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "6293:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 506,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "6350:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 507,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "6359:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 508,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "6371:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 505,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "6333:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 510,
												"nodeType": "Return",
												"src": "6326:58:2"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6042:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6066:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6093:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:2"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6149:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:2"
									},
									"scope": 596,
									"src": "6005:386:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "6667:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "6705:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "6713:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 522,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															529,
															564
														],
														"referencedDeclaration": 564,
														"src": "6684:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 521,
												"id": 527,
												"nodeType": "Return",
												"src": "6677:84:2"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "6600:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "6616:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 516,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "6653:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:2"
									},
									"scope": 596,
									"src": "6570:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "7109:232:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 543,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "7138:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 542,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "7127:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:2"
											},
											{
												"assignments": [
													549,
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "7200:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 548,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "7214:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 550,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [
														{
															"id": 554,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7261:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 552,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7241:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 558,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "7300:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 559,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "7309:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 560,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7321:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 557,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "7283:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 540,
												"id": 562,
												"nodeType": "Return",
												"src": "7276:58:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "6993:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "7017:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "7044:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 535,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "7095:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 538,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:2"
									},
									"scope": 596,
									"src": "6954:387:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "7721:532:2",
										"statements": [
											{
												"condition": {
													"id": 576,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 567,
													"src": "7735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 592,
													"nodeType": "Block",
													"src": "7792:455:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 580,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "7876:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 590,
																"nodeType": "Block",
																"src": "8184:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 587,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 571,
																					"src": "8209:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 586,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 589,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:2"
																	}
																]
															},
															"id": 591,
															"nodeType": "IfStatement",
															"src": "7872:365:2",
															"trueBody": {
																"id": 585,
																"nodeType": "Block",
																"src": "7899:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:2"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 569,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 569,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 584,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 593,
												"nodeType": "IfStatement",
												"src": "7731:516:2",
												"trueBody": {
													"id": 579,
													"nodeType": "Block",
													"src": "7744:42:2",
													"statements": [
														{
															"expression": {
																"id": 577,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "7765:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 575,
															"id": 578,
															"nodeType": "Return",
															"src": "7758:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:2",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "7596:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 566,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "7618:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 568,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "7651:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:2"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "7707:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:2"
									},
									"scope": 596,
									"src": "7561:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 597,
							"src": "194:8061:2",
							"usedErrors": []
						}
					],
					"src": "101:8155:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							618
						]
					},
					"id": 619,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 598,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 599,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 618,
							"linearizedBaseContracts": [
								618
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 604,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 603,
												"id": 606,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 618,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 613,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 612,
												"id": 615,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 610,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 618,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 619,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"contracts/VestingWallet.sol": {
				"ast": {
					"absolutePath": "contracts/VestingWallet.sol",
					"exportedSymbols": {
						"Address": [
							596
						],
						"Context": [
							618
						],
						"IERC20": [
							77
						],
						"SafeERC20": [
							301
						],
						"VestingWallet": [
							964
						]
					},
					"id": 965,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 620,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 621,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 965,
							"sourceUnit": 302,
							"src": "137:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 622,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 965,
							"sourceUnit": 597,
							"src": "204:51:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 623,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 965,
							"sourceUnit": 619,
							"src": "257:51:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 625,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 618,
										"src": "963:7:4"
									},
									"id": 626,
									"nodeType": "InheritanceSpecifier",
									"src": "963:7:4"
								}
							],
							"canonicalName": "VestingWallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 624,
								"nodeType": "StructuredDocumentation",
								"src": "312:623:4",
								"text": " @title VestingWallet\n @dev This contract handles the vesting of Eth and ERC20 tokens for a given beneficiary. Custody of multiple tokens\n can be given to this contract, which will release the token to the beneficiary following a given vesting schedule.\n The vesting schedule is customizable through the {vestedAmount} function.\n Any token transferred to this contract will follow the vesting schedule as if they were locked from the beginning.\n Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly)\n be immediately releasable."
							},
							"fullyImplemented": true,
							"id": 964,
							"linearizedBaseContracts": [
								964,
								618
							],
							"name": "VestingWallet",
							"nameLocation": "946:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 630,
									"name": "EtherReleased",
									"nameLocation": "984:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1006:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "998:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "998:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:16:4"
									},
									"src": "978:36:4"
								},
								{
									"anonymous": false,
									"id": 636,
									"name": "ERC20Released",
									"nameLocation": "1026:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1056:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "1040:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1071:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "1063:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:39:4"
									},
									"src": "1020:59:4"
								},
								{
									"constant": false,
									"id": 638,
									"mutability": "mutable",
									"name": "_released",
									"nameLocation": "1103:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 964,
									"src": "1087:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 637,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1087:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 642,
									"mutability": "mutable",
									"name": "_erc20Released",
									"nameLocation": "1155:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 964,
									"src": "1119:50:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 641,
										"keyType": {
											"id": 639,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1127:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1119:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 640,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1138:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 644,
									"mutability": "immutable",
									"name": "_beneficiary",
									"nameLocation": "1202:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 964,
									"src": "1176:38:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 643,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1176:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 646,
									"mutability": "immutable",
									"name": "_start",
									"nameLocation": "1246:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 964,
									"src": "1221:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 645,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "1221:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 648,
									"mutability": "immutable",
									"name": "_duration",
									"nameLocation": "1284:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 964,
									"src": "1259:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 647,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "1259:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 650,
									"mutability": "mutable",
									"name": "lastMonth",
									"nameLocation": "1318:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 964,
									"src": "1302:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 649,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1302:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "1577:259:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 661,
																"name": "beneficiaryAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "1610:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1640:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1632:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 662,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1632:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1632:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1610:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e6757616c6c65743a2062656e6566696369617279206973207a65726f2061646472657373",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1657:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918",
																"typeString": "literal_string \"VestingWallet: beneficiary is zero address\""
															},
															"value": "VestingWallet: beneficiary is zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_929adb52ede496b5ca2e6f2928d5ba886a15ec00481cf62dcfd83df2cff45918",
																"typeString": "literal_string \"VestingWallet: beneficiary is zero address\""
															}
														],
														"id": 660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1588:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1588:124:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "1588:124:4"
											},
											{
												"expression": {
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 670,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "1723:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 671,
														"name": "beneficiaryAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "1738:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1723:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "1723:33:4"
											},
											{
												"expression": {
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 674,
														"name": "_start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "1767:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 675,
														"name": "startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "1776:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1767:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "1767:23:4"
											},
											{
												"expression": {
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 678,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "1801:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 679,
														"name": "durationSeconds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "1813:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1801:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "1801:27:4"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "1336:106:4",
										"text": " @dev Set the beneficiary, start timestamp and vesting duration of the vesting wallet."
									},
									"id": 683,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "beneficiaryAddress",
												"nameLocation": "1478:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1470:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "startTimestamp",
												"nameLocation": "1514:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1507:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 654,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1507:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "durationSeconds",
												"nameLocation": "1546:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1539:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 656,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:109:4"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1577:0:4"
									},
									"scope": 964,
									"src": "1448:388:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "1954:2:4",
										"statements": []
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "1844:69:4",
										"text": " @dev The contract should be able to receive Eth."
									},
									"id": 688,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1926:2:4"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1954:0:4"
									},
									"scope": 964,
									"src": "1919:37:4",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "2092:38:4",
										"statements": [
											{
												"expression": {
													"id": 694,
													"name": "_beneficiary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 644,
													"src": "2110:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 693,
												"id": 695,
												"nodeType": "Return",
												"src": "2103:19:4"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "1964:61:4",
										"text": " @dev Getter for the beneficiary address."
									},
									"functionSelector": "38af3eed",
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nameLocation": "2040:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:2:4"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2083:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2083:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2082:9:4"
									},
									"scope": 964,
									"src": "2031:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "2256:32:4",
										"statements": [
											{
												"expression": {
													"id": 703,
													"name": "_start",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 646,
													"src": "2274:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 702,
												"id": 704,
												"nodeType": "Return",
												"src": "2267:13:4"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "2138:57:4",
										"text": " @dev Getter for the start timestamp."
									},
									"functionSelector": "be9a6555",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "start",
									"nameLocation": "2210:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2215:2:4"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "2247:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2246:9:4"
									},
									"scope": 964,
									"src": "2201:87:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "2418:35:4",
										"statements": [
											{
												"expression": {
													"id": 712,
													"name": "_duration",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 648,
													"src": "2436:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 711,
												"id": 713,
												"nodeType": "Return",
												"src": "2429:16:4"
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "2296:58:4",
										"text": " @dev Getter for the vesting duration."
									},
									"functionSelector": "0fb5a6b4",
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "duration",
									"nameLocation": "2369:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2377:2:4"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "2409:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2408:9:4"
									},
									"scope": 964,
									"src": "2360:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "2581:35:4",
										"statements": [
											{
												"expression": {
													"id": 721,
													"name": "_released",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 638,
													"src": "2599:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 720,
												"id": 722,
												"nodeType": "Return",
												"src": "2592:16:4"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "2461:56:4",
										"text": " @dev Amount of eth already released"
									},
									"functionSelector": "96132521",
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "released",
									"nameLocation": "2532:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2540:2:4"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "2572:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:9:4"
									},
									"scope": 964,
									"src": "2523:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "2760:47:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 732,
														"name": "_erc20Released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "2778:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 734,
													"indexExpression": {
														"id": 733,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "2793:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2778:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 731,
												"id": 735,
												"nodeType": "Return",
												"src": "2771:28:4"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "2624:58:4",
										"text": " @dev Amount of token already released"
									},
									"functionSelector": "9852595c",
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "released",
									"nameLocation": "2697:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2714:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "2706:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2706:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2705:15:4"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "2751:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2750:9:4"
									},
									"scope": 964,
									"src": "2688:119:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "2947:76:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 746,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "2985:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "2985:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2978:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 744,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "2978:6:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2978:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 743,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																892,
																920
															],
															"referencedDeclaration": 892,
															"src": "2965:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint64_$returns$_t_uint256_$",
																"typeString": "function (uint64) view returns (uint256)"
															}
														},
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2965:37:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 750,
															"name": "released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																724,
																737
															],
															"referencedDeclaration": 724,
															"src": "3005:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3005:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2965:50:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 742,
												"id": 753,
												"nodeType": "Return",
												"src": "2958:57:4"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "2815:66:4",
										"text": " @dev Getter for the amount of releasable eth."
									},
									"functionSelector": "fbccedae",
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releasable",
									"nameLocation": "2896:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2906:2:4"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "2938:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2938:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2937:9:4"
									},
									"scope": 964,
									"src": "2887:136:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "3248:88:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 764,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "3279:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 767,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3293:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3293:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3286:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "3286:6:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3286:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 763,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																892,
																920
															],
															"referencedDeclaration": 920,
															"src": "3266:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint64_$returns$_t_uint256_$",
																"typeString": "function (address,uint64) view returns (uint256)"
															}
														},
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3266:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [
															{
																"id": 772,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "3322:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 771,
															"name": "released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																724,
																737
															],
															"referencedDeclaration": 737,
															"src": "3313:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3313:15:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3266:62:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 762,
												"id": 775,
												"nodeType": "Return",
												"src": "3259:69:4"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "3031:138:4",
										"text": " @dev Getter for the amount of releasable `token` tokens. `token` should be the address of an\n IERC20 contract."
									},
									"functionSelector": "a3f8eace",
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releasable",
									"nameLocation": "3184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3203:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "3195:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:15:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "3239:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3239:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3238:9:4"
									},
									"scope": 964,
									"src": "3175:161:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "3515:175:4",
										"statements": [
											{
												"assignments": [
													782
												],
												"declarations": [
													{
														"constant": false,
														"id": 782,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3534:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 805,
														"src": "3526:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 781,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3526:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 785,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 783,
														"name": "releasable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															777
														],
														"referencedDeclaration": 755,
														"src": "3543:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3543:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3526:29:4"
											},
											{
												"expression": {
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 786,
														"name": "_released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "3566:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 787,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "3579:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3566:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "3566:19:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 791,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "3615:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 790,
														"name": "EtherReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "3601:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3601:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "EmitStatement",
												"src": "3596:26:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 799,
																		"name": "beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "3659:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3659:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3651:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 797,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3651:8:4",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3651:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 802,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "3675:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 794,
															"name": "Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "3633:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Address_$596_$",
																"typeString": "type(library Address)"
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sendValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 353,
														"src": "3633:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,uint256)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3633:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "3633:49:4"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "3344:131:4",
										"text": " @dev Release the native token (ether) that have already vested.\n Emits a {EtherReleased} event."
									},
									"functionSelector": "86d1a69f",
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "3490:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3497:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3515:0:4"
									},
									"scope": 964,
									"src": "3481:209:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "3848:71:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 814,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "3874:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "3874:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3867:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 812,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "3867:6:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3867:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 817,
																		"name": "start",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 706,
																		"src": "3893:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3893:7:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3867:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 820,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3866:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3330",
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3904:7:4",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2592000_by_1",
															"typeString": "int_const 2592000"
														},
														"value": "30"
													},
													"src": "3866:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 811,
												"id": 823,
												"nodeType": "Return",
												"src": "3859:52:4"
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "3698:85:4",
										"text": " @dev Getter for the current running month of the vesting process"
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_currentMonth",
									"nameLocation": "3800:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3813:2:4"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "3839:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3839:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3838:9:4"
									},
									"scope": 964,
									"src": "3791:128:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "4097:319:4",
										"statements": [
											{
												"assignments": [
													832
												],
												"declarations": [
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "4116:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 870,
														"src": "4108:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 831,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4108:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 836,
												"initialValue": {
													"arguments": [
														{
															"id": 834,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "4136:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 833,
														"name": "releasable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															777
														],
														"referencedDeclaration": 777,
														"src": "4125:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4108:34:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 837,
															"name": "_currentMonth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "4157:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4157:15:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 839,
														"name": "lastMonth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4175:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4157:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"nodeType": "IfStatement",
												"src": "4153:256:4",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "4186:223:4",
													"statements": [
														{
															"expression": {
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 841,
																	"name": "lastMonth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "4201:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 842,
																		"name": "_currentMonth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 825,
																		"src": "4213:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4213:15:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4201:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 845,
															"nodeType": "ExpressionStatement",
															"src": "4201:27:4"
														},
														{
															"expression": {
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 846,
																		"name": "_erc20Released",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 642,
																		"src": "4243:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 848,
																	"indexExpression": {
																		"id": 847,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "4258:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4243:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 849,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "4268:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4243:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 851,
															"nodeType": "ExpressionStatement",
															"src": "4243:31:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 853,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "4308:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 854,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 832,
																		"src": "4315:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 852,
																	"name": "ERC20Released",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "4294:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4294:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 856,
															"nodeType": "EmitStatement",
															"src": "4289:33:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 861,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 828,
																				"src": "4367:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 860,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "4360:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4360:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 863,
																			"name": "beneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 697,
																			"src": "4375:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4375:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 865,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 832,
																		"src": "4390:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 857,
																		"name": "SafeERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 301,
																		"src": "4337:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeERC20_$301_$",
																			"typeString": "type(library SafeERC20)"
																		}
																	},
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 108,
																	"src": "4337:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4337:60:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 867,
															"nodeType": "ExpressionStatement",
															"src": "4337:60:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "3927:117:4",
										"text": " @dev Release the tokens that have already vested.\n Emits a {ERC20Released} event."
									},
									"functionSelector": "19165587",
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "4059:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4075:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "4067:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4067:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4066:15:4"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4097:0:4"
									},
									"scope": 964,
									"src": "4050:366:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "4990:89:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 882,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5033:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_VestingWallet_$964",
																				"typeString": "contract VestingWallet"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_VestingWallet_$964",
																				"typeString": "contract VestingWallet"
																			}
																		],
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5025:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 880,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5025:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5025:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5025:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 885,
																	"name": "released",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		724,
																		737
																	],
																	"referencedDeclaration": 724,
																	"src": "5049:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5049:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5025:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 888,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "5061:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 879,
														"name": "_vestingSchedule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "5008:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint64) view returns (uint256)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5008:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 878,
												"id": 890,
												"nodeType": "Return",
												"src": "5001:70:4"
											}
										]
									},
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "4734:131:4",
										"text": " @dev Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve."
									},
									"functionSelector": "0a17b06b",
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vestedAmount",
									"nameLocation": "4880:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4900:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "4893:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 873,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4893:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:18:4"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "4976:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4975:9:4"
									},
									"scope": 964,
									"src": "4871:208:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "5359:173:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 909,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5457:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_VestingWallet_$964",
																					"typeString": "contract VestingWallet"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_VestingWallet_$964",
																					"typeString": "contract VestingWallet"
																				}
																			],
																			"id": 908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5449:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 907,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5449:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5449:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 904,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 895,
																				"src": "5432:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 903,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "5425:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5425:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "5425:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5425:38:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 913,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "5475:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 912,
																	"name": "released",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		724,
																		737
																	],
																	"referencedDeclaration": 737,
																	"src": "5466:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5466:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5425:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 916,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "5500:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 902,
														"name": "_vestingSchedule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "5390:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint64) view returns (uint256)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5390:134:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 901,
												"id": 918,
												"nodeType": "Return",
												"src": "5370:154:4"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "5087:132:4",
										"text": " @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."
									},
									"functionSelector": "810ec23b",
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vestedAmount",
									"nameLocation": "5234:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5255:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "5247:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5247:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "5269:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "5262:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 896,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5262:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:33:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "5345:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5345:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5344:9:4"
									},
									"scope": 964,
									"src": "5225:307:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "5883:265:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 930,
														"name": "timestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "5898:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 931,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "5910:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5910:7:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5898:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 937,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "5964:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 938,
																	"name": "start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "5976:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5976:7:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 940,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "5986:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5986:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5976:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5964:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 959,
														"nodeType": "Block",
														"src": "6053:88:4",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 953,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 947,
																					"name": "totalAllocation",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 923,
																					"src": "6076:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 951,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 948,
																								"name": "timestamp",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 925,
																								"src": "6095:9:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint64",
																									"typeString": "uint64"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 949,
																									"name": "start",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 706,
																									"src": "6107:5:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																										"typeString": "function () view returns (uint256)"
																									}
																								},
																								"id": 950,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "6107:7:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "6095:19:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 952,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "6094:21:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6076:39:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 954,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6075:41:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 955,
																			"name": "duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 715,
																			"src": "6119:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6119:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6075:54:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 929,
																"id": 958,
																"nodeType": "Return",
																"src": "6068:61:4"
															}
														]
													},
													"id": 960,
													"nodeType": "IfStatement",
													"src": "5960:181:4",
													"trueBody": {
														"id": 946,
														"nodeType": "Block",
														"src": "5998:49:4",
														"statements": [
															{
																"expression": {
																	"id": 944,
																	"name": "totalAllocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "6020:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 929,
																"id": 945,
																"nodeType": "Return",
																"src": "6013:22:4"
															}
														]
													}
												},
												"id": 961,
												"nodeType": "IfStatement",
												"src": "5894:247:4",
												"trueBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "5919:35:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5941:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 929,
															"id": 935,
															"nodeType": "Return",
															"src": "5934:8:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "5540:187:4",
										"text": " @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\n an asset given its total historical allocation."
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_vestingSchedule",
									"nameLocation": "5742:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "totalAllocation",
												"nameLocation": "5767:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "5759:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5759:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "5791:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "5784:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 924,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5784:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5758:43:4"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "5869:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5869:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5868:9:4"
									},
									"scope": 964,
									"src": "5733:415:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 965,
							"src": "937:5214:4",
							"usedErrors": []
						}
					],
					"src": "110:6043:4"
				},
				"id": 4
			}
		}
	}
}