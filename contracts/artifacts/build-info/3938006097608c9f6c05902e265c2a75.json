{
	"id": "3938006097608c9f6c05902e265c2a75",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Lockedwallet.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.11;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"./Interfaces.sol\";\n\n// 700000000000000000000000000\n\ncontract LockedWallet is ILockable {\n    uint256 internal _amount;\n\n    address internal _owner;\n    // beneficiary of tokens after they are released\n    address public immutable beneficiary;\n\n    uint256 public startLockedWallet;\n\n    uint256 internal _latestClaimMonth;\n\n    constructor(uint256 amount_, address beneficiary_) {\n        _amount = amount_;\n        beneficiary = beneficiary_;\n        _owner = msg.sender;\n    }\n\n    /* ------------------------------------------ Modifier ------------------------------------------ */\n\n    function _onlyTalax() internal view {\n        require(msg.sender == _owner, \"Not _owner\");\n    }\n\n    function getOwner() public view returns (address) {\n        return _owner;\n    }\n\n    modifier onlyTalax() {\n        _onlyTalax();\n        _;\n    }\n\n    /* ---------------------------------------------- - --------------------------------------------- */\n\n    function changeTalaxAddress(address talax) external onlyTalax {\n        _owner = talax;\n    }\n\n    /**\n     * @notice Initiate Locked Wallet\n     */\n\n    function initiateLockedWallet() external override onlyTalax {\n        startLockedWallet = block.timestamp;\n    }\n\n    function _unsafeInc(uint256 x) internal pure returns (uint256) {\n        unchecked {\n            return x + 1;\n        }\n    }\n\n    /**\n     *  @dev \t\tMain Functions\n     *  @return \tClaimable amount from Locked Wallet\n     */\n    function _calculateClaimableAmount(uint256[51] memory amount_)\n        internal\n        returns (uint256)\n    {\n        uint256 months = (block.timestamp - startLockedWallet) / 30 days;\n        uint256 claimable;\n\n        for (uint256 i = _latestClaimMonth; i <= months; i = _unsafeInc(i)) {\n            if (_latestClaimMonth <= 51) {\n                claimable += amount_[i];\n            }\n        }\n\n        _latestClaimMonth = months + 1;\n\n        require(claimable != 0, \"Nothing to claim yet\");\n        return claimable;\n    }\n\n    /**\n     * @notice Transfers tokens held by timelock to beneficiary.\n     */\n    function releaseClaimable(uint256[51] memory amount)\n        external\n        override\n        onlyTalax\n        returns (uint256)\n    {\n        uint256 claimableLockedAmount = _calculateClaimableAmount(amount);\n\n        // require(claimableLockedAmount > 0, \"Lockable: no tokens to release\");\n\n        _amount = SafeMath.sub(\n            _amount,\n            claimableLockedAmount,\n            \"Lockedwallet: Cannot substract total amount with claimable\"\n        );\n\n        return claimableLockedAmount;\n    }\n}\n"
			},
			"contracts/Interfaces.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.11;\n\nstruct WhitelistStruct {\n    uint256 lockedAmount;\n    uint256 amount;\n    bool isPhase1Claimed;\n    uint256 latestClaimDay;\n}\n\nstruct Beneficiary {\n    address user;\n    uint256 amount;\n}\n\ninterface IStakable {\n    function stakingPenaltyRate() external view returns (uint256);\n\n    function airdropRate() external view returns (uint256);\n\n    function airdropSince() external view returns (uint256);\n\n    function totalVoters() external view returns (uint256);\n\n    function getVoters(address user) external view returns (bool, bool); // votingRight and voted\n\n    function votedUsers(uint256 id) external view returns (uint256);\n\n    function startAirdrop() external;\n\n    function changeTalaxAddress(address talax) external;\n\n    function stake(\n        address user,\n        uint256 amount,\n        uint256 stakePeriod,\n        uint256 rewardRate\n    ) external;\n\n    function changePenaltyFee(uint256 amount) external;\n\n    function changeAirdropPercentage(uint256 amount) external;\n\n    function withdrawStake(address user) external returns (uint256, uint256);\n\n    function claimAirdrop(address user) external returns (uint256);\n\n    function startVoting() external;\n\n    function getVotingResult() external view returns (bool);\n\n    function stopVoting() external;\n}\n\ninterface IWhitelist {\n    function privateSaleUsers() external view returns (uint256);\n\n    function privateSaleAmount() external view returns (uint256);\n\n    function startPrivateSale() external view returns (uint256);\n\n    function changeTalaxAddress(address talax) external;\n\n    function beneficiary(address user)\n        external\n        view\n        returns (\n            uint256,\n            uint256,\n            bool,\n            uint256\n        ); // lockedAmount, amount, isPhase1Claimed, latestClaimDay\n\n    function initiateWhitelist() external;\n\n    function addBeneficiary(address user, uint256 amount) external;\n\n    function deleteBeneficiary(address user) external returns (uint256);\n\n    function releaseClaimable(address user) external returns (uint256);\n}\n\ninterface ILockable {\n    function beneficiary() external view returns (address);\n\n    function changeTalaxAddress(address talax) external;\n\n    function startLockedWallet() external view returns (uint256);\n\n    function initiateLockedWallet() external;\n\n    function releaseClaimable(uint256[51] memory amount)\n        external\n        returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fd04830778f7e44e9648e7a1e743f996041ee587daa54484479e0358db132f7064736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd04830778f7e44e9648e7a1e743f996041ee587daa54484479e0358db132f7064736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT DIV DUP4 SMOD PUSH25 0xF7E44E9648E7A1E743F996041EE587DAA54484479E0358DB13 0x2F PUSH17 0x64736F6C634300080B0033000000000000 ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd04830778f7e44e9648e7a1e743f996041ee587daa54484479e0358db132f7064736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT DIV DUP4 SMOD PUSH25 0xF7E44E9648E7A1E743F996041EE587DAA54484479E0358DB13 0x2F PUSH17 0x64736F6C634300080B0033000000000000 ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fd04830778f7e44e9648e7a1e743f996041ee587daa54484479e0358db132f7064736f6c634300080b0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Interfaces.sol": {
				"ILockable": {
					"abi": [
						{
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initiateLockedWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[51]",
									"name": "amount",
									"type": "uint256[51]"
								}
							],
							"name": "releaseClaimable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startLockedWallet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"changeTalaxAddress(address)": "1d77b00b",
							"initiateLockedWallet()": "c8cca41e",
							"releaseClaimable(uint256[51])": "0a95606e",
							"startLockedWallet()": "b580aa9e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateLockedWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[51]\",\"name\":\"amount\",\"type\":\"uint256[51]\"}],\"name\":\"releaseClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startLockedWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces.sol\":\"ILockable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Interfaces.sol\":{\"keccak256\":\"0x43e967de7a19c9271e351e91cc2d49831947ab238942a097122799a7b1b21ea2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://555a1f6667d327504a50e1880db254d0c62e239942abf495e0e7ef5ee7af06e4\",\"dweb:/ipfs/QmbqGVTBbkHcoJukQtcLKRCL8J1YAQMjmiLANG6Sztx9y6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IStakable": {
					"abi": [
						{
							"inputs": [],
							"name": "airdropRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropSince",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changeAirdropPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changePenaltyFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "claimAirdrop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getVoters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVotingResult",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakePeriod",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingPenaltyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startAirdrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startVoting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopVoting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVoters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "votedUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "withdrawStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"airdropRate()": "8891cf0d",
							"airdropSince()": "b87da76d",
							"changeAirdropPercentage(uint256)": "d5dbdf1b",
							"changePenaltyFee(uint256)": "8c63f97f",
							"changeTalaxAddress(address)": "1d77b00b",
							"claimAirdrop(address)": "65f8c6c5",
							"getVoters(address)": "2d15cc04",
							"getVotingResult()": "671d2b75",
							"stake(address,uint256,uint256,uint256)": "f93d4f8a",
							"stakingPenaltyRate()": "cb79c2e1",
							"startAirdrop()": "d2a569c3",
							"startVoting()": "1ec6b60a",
							"stopVoting()": "fab2f86b",
							"totalVoters()": "5f5300ff",
							"votedUsers(uint256)": "a143a5f2",
							"withdrawStake(address)": "c23a5cea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"airdropRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropSince\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeAirdropPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changePenaltyFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimAirdrop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVoters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotingResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakePeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPenaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVoters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"votedUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces.sol\":\"IStakable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Interfaces.sol\":{\"keccak256\":\"0x43e967de7a19c9271e351e91cc2d49831947ab238942a097122799a7b1b21ea2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://555a1f6667d327504a50e1880db254d0c62e239942abf495e0e7ef5ee7af06e4\",\"dweb:/ipfs/QmbqGVTBbkHcoJukQtcLKRCL8J1YAQMjmiLANG6Sztx9y6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IWhitelist": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addBeneficiary",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "deleteBeneficiary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initiateWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "releaseClaimable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPrivateSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addBeneficiary(address,uint256)": "96074e70",
							"beneficiary(address)": "81008568",
							"changeTalaxAddress(address)": "1d77b00b",
							"deleteBeneficiary(address)": "7d3bca76",
							"initiateWhitelist()": "efdd8796",
							"privateSaleAmount()": "8b2b423a",
							"privateSaleUsers()": "549dee0b",
							"releaseClaimable(address)": "005171f4",
							"startPrivateSale()": "338dbf59"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"deleteBeneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"releaseClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPrivateSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces.sol\":\"IWhitelist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Interfaces.sol\":{\"keccak256\":\"0x43e967de7a19c9271e351e91cc2d49831947ab238942a097122799a7b1b21ea2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://555a1f6667d327504a50e1880db254d0c62e239942abf495e0e7ef5ee7af06e4\",\"dweb:/ipfs/QmbqGVTBbkHcoJukQtcLKRCL8J1YAQMjmiLANG6Sztx9y6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Lockedwallet.sol": {
				"LockedWallet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "beneficiary_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initiateLockedWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[51]",
									"name": "amount",
									"type": "uint256[51]"
								}
							],
							"name": "releaseClaimable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startLockedWallet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Lockedwallet.sol\":182:2715  contract LockedWallet is ILockable {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Lockedwallet.sol\":459:609  constructor(uint256 amount_, address beneficiary_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Lockedwallet.sol\":520:527  _amount */\n  0x00\n    /* \"contracts/Lockedwallet.sol\":520:537  _amount = amount_ */\n  swap2\n  swap1\n  swap2\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Lockedwallet.sol\":547:573  beneficiary = beneficiary_ */\n  and\n  0x80\n  mstore\n    /* \"contracts/Lockedwallet.sol\":583:589  _owner */\n  0x01\n    /* \"contracts/Lockedwallet.sol\":583:602  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Lockedwallet.sol\":592:602  msg.sender */\n  caller\n    /* \"contracts/Lockedwallet.sol\":583:602  _owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Lockedwallet.sol\":182:2715  contract LockedWallet is ILockable {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:365   */\ntag_3:\n    /* \"#utility.yul\":93:99   */\n  0x00\n    /* \"#utility.yul\":101:107   */\n  dup1\n    /* \"#utility.yul\":154:156   */\n  0x40\n    /* \"#utility.yul\":142:151   */\n  dup4\n    /* \"#utility.yul\":133:140   */\n  dup6\n    /* \"#utility.yul\":129:152   */\n  sub\n    /* \"#utility.yul\":125:157   */\n  slt\n    /* \"#utility.yul\":122:174   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":170:171   */\n  0x00\n    /* \"#utility.yul\":167:168   */\n  dup1\n    /* \"#utility.yul\":160:172   */\n  revert\n    /* \"#utility.yul\":122:174   */\ntag_9:\n    /* \"#utility.yul\":193:209   */\n  dup3\n  mload\n    /* \"#utility.yul\":252:254   */\n  0x20\n    /* \"#utility.yul\":237:255   */\n  dup5\n  add\n    /* \"#utility.yul\":231:256   */\n  mload\n    /* \"#utility.yul\":193:209   */\n  swap1\n  swap3\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":285:316   */\n  dup2\n  and\n    /* \"#utility.yul\":275:317   */\n  dup2\n  eq\n    /* \"#utility.yul\":265:335   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":331:332   */\n  0x00\n    /* \"#utility.yul\":328:329   */\n  dup1\n    /* \"#utility.yul\":321:333   */\n  revert\n    /* \"#utility.yul\":265:335   */\ntag_10:\n    /* \"#utility.yul\":354:359   */\n  dup1\n    /* \"#utility.yul\":344:359   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":14:365   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_7:\n    /* \"contracts/Lockedwallet.sol\":182:2715  contract LockedWallet is ILockable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x62d593b3f307276e88778a5c8844a236ff823a094bc36579219d0f8aab42d991\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Lockedwallet.sol\":182:2715  contract LockedWallet is ILockable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0a95606e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1d77b00b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x38af3eed\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb580aa9e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc8cca41e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Lockedwallet.sol\":2202:2713  function releaseClaimable(uint256[51] memory amount)... */\n    tag_3:\n      tag_9\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n        /* \"#utility.yul\":1044:1069   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1032:1034   */\n      0x20\n        /* \"#utility.yul\":1017:1035   */\n      add\n        /* \"contracts/Lockedwallet.sol\":2202:2713  function releaseClaimable(uint256[51] memory amount)... */\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Lockedwallet.sol\":1082:1175  function changeTalaxAddress(address talax) external onlyTalax {... */\n    tag_4:\n      tag_15\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/Lockedwallet.sol\":336:372  address public immutable beneficiary */\n    tag_5:\n      tag_19\n      immutable(\"0x62d593b3f307276e88778a5c8844a236ff823a094bc36579219d0f8aab42d991\")\n      dup2\n      jump\n    tag_19:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1535:1567   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1517:1568   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1505:1507   */\n      0x20\n        /* \"#utility.yul\":1490:1508   */\n      add\n        /* \"contracts/Lockedwallet.sol\":336:372  address public immutable beneficiary */\n      tag_13\n        /* \"#utility.yul\":1371:1574   */\n      jump\n        /* \"contracts/Lockedwallet.sol\":823:903  function getOwner() public view returns (address) {... */\n    tag_6:\n        /* \"contracts/Lockedwallet.sol\":890:896  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Lockedwallet.sol\":823:903  function getOwner() public view returns (address) {... */\n      jump(tag_19)\n        /* \"contracts/Lockedwallet.sol\":379:411  uint256 public startLockedWallet */\n    tag_7:\n      tag_9\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/Lockedwallet.sol\":1236:1348  function initiateLockedWallet() external override onlyTalax {... */\n    tag_8:\n      tag_15\n      tag_30\n      jump\t// in\n        /* \"contracts/Lockedwallet.sol\":2202:2713  function releaseClaimable(uint256[51] memory amount)... */\n    tag_12:\n        /* \"contracts/Lockedwallet.sol\":2324:2331  uint256 */\n      0x00\n        /* \"contracts/Lockedwallet.sol\":940:952  _onlyTalax() */\n      tag_32\n        /* \"contracts/Lockedwallet.sol\":940:950  _onlyTalax */\n      tag_33\n        /* \"contracts/Lockedwallet.sol\":940:952  _onlyTalax() */\n      jump\t// in\n    tag_32:\n        /* \"contracts/Lockedwallet.sol\":2347:2376  uint256 claimableLockedAmount */\n      0x00\n        /* \"contracts/Lockedwallet.sol\":2379:2412  _calculateClaimableAmount(amount) */\n      tag_35\n        /* \"contracts/Lockedwallet.sol\":2405:2411  amount */\n      dup4\n        /* \"contracts/Lockedwallet.sol\":2379:2404  _calculateClaimableAmount */\n      tag_36\n        /* \"contracts/Lockedwallet.sol\":2379:2412  _calculateClaimableAmount(amount) */\n      jump\t// in\n    tag_35:\n        /* \"contracts/Lockedwallet.sol\":2347:2412  uint256 claimableLockedAmount = _calculateClaimableAmount(amount) */\n      swap1\n      pop\n        /* \"contracts/Lockedwallet.sol\":2515:2667  SafeMath.sub(... */\n      tag_37\n        /* \"contracts/Lockedwallet.sol\":2541:2548  _amount */\n      sload(0x00)\n        /* \"contracts/Lockedwallet.sol\":2562:2583  claimableLockedAmount */\n      dup3\n        /* \"contracts/Lockedwallet.sol\":2515:2667  SafeMath.sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x3a\n      dup2\n      mstore\n      0x20\n      add\n      data_bc7335ef5a2766e252b0d20841b8a31e77013ede9c2a48b3b61a9c597162b79a\n      0x3a\n      swap2\n      codecopy\n        /* \"contracts/Lockedwallet.sol\":2515:2527  SafeMath.sub */\n      tag_38\n        /* \"contracts/Lockedwallet.sol\":2515:2667  SafeMath.sub(... */\n      jump\t// in\n    tag_37:\n        /* \"contracts/Lockedwallet.sol\":2505:2512  _amount */\n      0x00\n        /* \"contracts/Lockedwallet.sol\":2505:2667  _amount = SafeMath.sub(... */\n      sstore\n        /* \"contracts/Lockedwallet.sol\":2685:2706  claimableLockedAmount */\n      swap3\n        /* \"contracts/Lockedwallet.sol\":2202:2713  function releaseClaimable(uint256[51] memory amount)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Lockedwallet.sol\":1082:1175  function changeTalaxAddress(address talax) external onlyTalax {... */\n    tag_18:\n        /* \"contracts/Lockedwallet.sol\":940:952  _onlyTalax() */\n      tag_40\n        /* \"contracts/Lockedwallet.sol\":940:950  _onlyTalax */\n      tag_33\n        /* \"contracts/Lockedwallet.sol\":940:952  _onlyTalax() */\n      jump\t// in\n    tag_40:\n        /* \"contracts/Lockedwallet.sol\":1154:1160  _owner */\n      0x01\n        /* \"contracts/Lockedwallet.sol\":1154:1168  _owner = talax */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Lockedwallet.sol\":1082:1175  function changeTalaxAddress(address talax) external onlyTalax {... */\n      jump\t// out\n        /* \"contracts/Lockedwallet.sol\":1236:1348  function initiateLockedWallet() external override onlyTalax {... */\n    tag_30:\n        /* \"contracts/Lockedwallet.sol\":940:952  _onlyTalax() */\n      tag_44\n        /* \"contracts/Lockedwallet.sol\":940:950  _onlyTalax */\n      tag_33\n        /* \"contracts/Lockedwallet.sol\":940:952  _onlyTalax() */\n      jump\t// in\n    tag_44:\n        /* \"contracts/Lockedwallet.sol\":1326:1341  block.timestamp */\n      timestamp\n        /* \"contracts/Lockedwallet.sol\":1306:1323  startLockedWallet */\n      0x02\n        /* \"contracts/Lockedwallet.sol\":1306:1341  startLockedWallet = block.timestamp */\n      sstore\n        /* \"contracts/Lockedwallet.sol\":1236:1348  function initiateLockedWallet() external override onlyTalax {... */\n      jump\t// out\n        /* \"contracts/Lockedwallet.sol\":721:817  function _onlyTalax() internal view {... */\n    tag_33:\n        /* \"contracts/Lockedwallet.sol\":789:795  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Lockedwallet.sol\":775:785  msg.sender */\n      caller\n        /* \"contracts/Lockedwallet.sol\":775:795  msg.sender == _owner */\n      eq\n        /* \"contracts/Lockedwallet.sol\":767:810  require(msg.sender == _owner, \"Not _owner\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1781:1783   */\n      0x20\n        /* \"contracts/Lockedwallet.sol\":767:810  require(msg.sender == _owner, \"Not _owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1763:1784   */\n      mstore\n        /* \"#utility.yul\":1820:1822   */\n      0x0a\n        /* \"#utility.yul\":1800:1818   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1793:1823   */\n      mstore\n      shl(0xb1, 0x2737ba102fb7bbb732b9)\n        /* \"#utility.yul\":1839:1857   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1832:1872   */\n      mstore\n        /* \"#utility.yul\":1889:1907   */\n      0x64\n      add\n        /* \"contracts/Lockedwallet.sol\":767:810  require(msg.sender == _owner, \"Not _owner\") */\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"contracts/Lockedwallet.sol\":721:817  function _onlyTalax() internal view {... */\n      jump\t// out\n        /* \"contracts/Lockedwallet.sol\":1585:2115  function _calculateClaimableAmount(uint256[51] memory amount_)... */\n    tag_36:\n        /* \"contracts/Lockedwallet.sol\":1682:1689  uint256 */\n      0x00\n        /* \"contracts/Lockedwallet.sol\":1705:1719  uint256 months */\n      dup1\n        /* \"contracts/Lockedwallet.sol\":1762:1769  30 days */\n      0x278d00\n        /* \"contracts/Lockedwallet.sol\":1741:1758  startLockedWallet */\n      sload(0x02)\n        /* \"contracts/Lockedwallet.sol\":1723:1738  block.timestamp */\n      timestamp\n        /* \"contracts/Lockedwallet.sol\":1723:1758  block.timestamp - startLockedWallet */\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"contracts/Lockedwallet.sol\":1722:1769  (block.timestamp - startLockedWallet) / 30 days */\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"contracts/Lockedwallet.sol\":1824:1841  _latestClaimMonth */\n      sload(0x03)\n        /* \"contracts/Lockedwallet.sol\":1705:1769  uint256 months = (block.timestamp - startLockedWallet) / 30 days */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Lockedwallet.sol\":1779:1796  uint256 claimable */\n      0x00\n      swap1\n        /* \"contracts/Lockedwallet.sol\":1807:1984  for (uint256 i = _latestClaimMonth; i <= months; i = _unsafeInc(i)) {... */\n    tag_55:\n        /* \"contracts/Lockedwallet.sol\":1848:1854  months */\n      dup3\n        /* \"contracts/Lockedwallet.sol\":1843:1844  i */\n      dup2\n        /* \"contracts/Lockedwallet.sol\":1843:1854  i <= months */\n      gt\n        /* \"contracts/Lockedwallet.sol\":1807:1984  for (uint256 i = _latestClaimMonth; i <= months; i = _unsafeInc(i)) {... */\n      tag_56\n      jumpi\n        /* \"contracts/Lockedwallet.sol\":1914:1916  51 */\n      0x33\n        /* \"contracts/Lockedwallet.sol\":1893:1910  _latestClaimMonth */\n      sload(0x03)\n        /* \"contracts/Lockedwallet.sol\":1893:1916  _latestClaimMonth <= 51 */\n      gt\n        /* \"contracts/Lockedwallet.sol\":1889:1974  if (_latestClaimMonth <= 51) {... */\n      tag_58\n      jumpi\n        /* \"contracts/Lockedwallet.sol\":1949:1956  amount_ */\n      dup5\n        /* \"contracts/Lockedwallet.sol\":1957:1958  i */\n      dup2\n        /* \"contracts/Lockedwallet.sol\":1949:1959  amount_[i] */\n      0x33\n      dup2\n      lt\n      tag_60\n      jumpi\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/Lockedwallet.sol\":1936:1959  claimable += amount_[i] */\n      tag_62\n      swap1\n      dup4\n      tag_63\n      jump\t// in\n    tag_62:\n      swap2\n      pop\n        /* \"contracts/Lockedwallet.sol\":1889:1974  if (_latestClaimMonth <= 51) {... */\n    tag_58:\n        /* \"contracts/Lockedwallet.sol\":1462:1463  1 */\n      0x01\n        /* \"contracts/Lockedwallet.sol\":1458:1463  x + 1 */\n      add\n        /* \"contracts/Lockedwallet.sol\":1807:1984  for (uint256 i = _latestClaimMonth; i <= months; i = _unsafeInc(i)) {... */\n      jump(tag_55)\n    tag_56:\n      pop\n        /* \"contracts/Lockedwallet.sol\":2014:2024  months + 1 */\n      tag_66\n        /* \"contracts/Lockedwallet.sol\":2014:2020  months */\n      dup3\n        /* \"contracts/Lockedwallet.sol\":2023:2024  1 */\n      0x01\n        /* \"contracts/Lockedwallet.sol\":2014:2024  months + 1 */\n      tag_63\n      jump\t// in\n    tag_66:\n        /* \"contracts/Lockedwallet.sol\":1994:2011  _latestClaimMonth */\n      0x03\n        /* \"contracts/Lockedwallet.sol\":1994:2024  _latestClaimMonth = months + 1 */\n      sstore\n        /* \"contracts/Lockedwallet.sol\":2043:2057  claimable != 0 */\n      dup1\n        /* \"contracts/Lockedwallet.sol\":2035:2082  require(claimable != 0, \"Nothing to claim yet\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2869:2871   */\n      0x20\n        /* \"contracts/Lockedwallet.sol\":2035:2082  require(claimable != 0, \"Nothing to claim yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2851:2872   */\n      mstore\n        /* \"#utility.yul\":2908:2910   */\n      0x14\n        /* \"#utility.yul\":2888:2906   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2881:2911   */\n      mstore\n      shl(0x62, 0x139bdd1a1a5b99c81d1bc818db185a5b481e595d)\n        /* \"#utility.yul\":2927:2945   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2920:2970   */\n      mstore\n        /* \"#utility.yul\":2987:3005   */\n      0x64\n      add\n        /* \"contracts/Lockedwallet.sol\":2035:2082  require(claimable != 0, \"Nothing to claim yet\") */\n      tag_48\n        /* \"#utility.yul\":2667:3011   */\n      jump\n        /* \"contracts/Lockedwallet.sol\":2035:2082  require(claimable != 0, \"Nothing to claim yet\") */\n    tag_67:\n        /* \"contracts/Lockedwallet.sol\":2099:2108  claimable */\n      swap4\n        /* \"contracts/Lockedwallet.sol\":1585:2115  function _calculateClaimableAmount(uint256[51] memory amount_)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4945:5176  function sub(... */\n    tag_38:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5061:5068  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5120:5132  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5112:5118  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5104:5133  require(b <= a, errorMessage) */\n      tag_71\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_71:\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5154:5159  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4945:5176  function sub(... */\n      jump\t// out\n        /* \"#utility.yul\":14:893   */\n    tag_11:\n        /* \"#utility.yul\":97:103   */\n      0x00\n        /* \"#utility.yul\":128:132   */\n      0x0660\n        /* \"#utility.yul\":173:175   */\n      dup1\n        /* \"#utility.yul\":161:170   */\n      dup4\n        /* \"#utility.yul\":152:159   */\n      dup6\n        /* \"#utility.yul\":148:171   */\n      sub\n        /* \"#utility.yul\":144:176   */\n      slt\n        /* \"#utility.yul\":141:193   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":189:190   */\n      0x00\n        /* \"#utility.yul\":186:187   */\n      dup1\n        /* \"#utility.yul\":179:191   */\n      revert\n        /* \"#utility.yul\":141:193   */\n    tag_78:\n        /* \"#utility.yul\":238:245   */\n      dup4\n        /* \"#utility.yul\":231:235   */\n      0x1f\n        /* \"#utility.yul\":220:229   */\n      dup5\n        /* \"#utility.yul\":216:236   */\n      add\n        /* \"#utility.yul\":212:246   */\n      slt\n        /* \"#utility.yul\":202:264   */\n      tag_79\n      jumpi\n        /* \"#utility.yul\":260:261   */\n      0x00\n        /* \"#utility.yul\":257:258   */\n      dup1\n        /* \"#utility.yul\":250:262   */\n      revert\n        /* \"#utility.yul\":202:264   */\n    tag_79:\n        /* \"#utility.yul\":293:295   */\n      0x40\n        /* \"#utility.yul\":287:296   */\n      mload\n        /* \"#utility.yul\":335:337   */\n      dup2\n        /* \"#utility.yul\":327:333   */\n      dup2\n        /* \"#utility.yul\":323:338   */\n      add\n        /* \"#utility.yul\":404:410   */\n      dup2\n        /* \"#utility.yul\":392:402   */\n      dup2\n        /* \"#utility.yul\":389:411   */\n      lt\n        /* \"#utility.yul\":368:386   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":356:366   */\n      dup3\n        /* \"#utility.yul\":353:387   */\n      gt\n        /* \"#utility.yul\":350:412   */\n      or\n        /* \"#utility.yul\":347:532   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":454:464   */\n      0x4e487b71\n        /* \"#utility.yul\":449:452   */\n      0xe0\n        /* \"#utility.yul\":445:465   */\n      shl\n        /* \"#utility.yul\":442:443   */\n      0x00\n        /* \"#utility.yul\":435:466   */\n      mstore\n        /* \"#utility.yul\":489:493   */\n      0x41\n        /* \"#utility.yul\":486:487   */\n      0x04\n        /* \"#utility.yul\":479:494   */\n      mstore\n        /* \"#utility.yul\":517:521   */\n      0x24\n        /* \"#utility.yul\":514:515   */\n      0x00\n        /* \"#utility.yul\":507:522   */\n      revert\n        /* \"#utility.yul\":347:532   */\n    tag_80:\n        /* \"#utility.yul\":548:550   */\n      0x40\n        /* \"#utility.yul\":541:563   */\n      mstore\n        /* \"#utility.yul\":612:630   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":583:589   */\n      dup1\n        /* \"#utility.yul\":642:661   */\n      dup6\n      dup4\n      gt\n        /* \"#utility.yul\":639:678   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":674:675   */\n      0x00\n        /* \"#utility.yul\":671:672   */\n      dup1\n        /* \"#utility.yul\":664:676   */\n      revert\n        /* \"#utility.yul\":639:678   */\n    tag_81:\n        /* \"#utility.yul\":698:707   */\n      dup5\n        /* \"#utility.yul\":716:862   */\n    tag_82:\n        /* \"#utility.yul\":732:738   */\n      dup4\n        /* \"#utility.yul\":727:730   */\n      dup2\n        /* \"#utility.yul\":724:739   */\n      lt\n        /* \"#utility.yul\":716:862   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":800:817   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":788:818   */\n      dup3\n      mstore\n        /* \"#utility.yul\":847:851   */\n      0x20\n        /* \"#utility.yul\":838:852   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"#utility.yul\":749:763   */\n      add\n        /* \"#utility.yul\":716:862   */\n      jump(tag_82)\n    tag_84:\n      pop\n        /* \"#utility.yul\":881:887   */\n      swap1\n      swap6\n        /* \"#utility.yul\":14:893   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1080:1366   */\n    tag_17:\n        /* \"#utility.yul\":1139:1145   */\n      0x00\n        /* \"#utility.yul\":1192:1194   */\n      0x20\n        /* \"#utility.yul\":1180:1189   */\n      dup3\n        /* \"#utility.yul\":1171:1178   */\n      dup5\n        /* \"#utility.yul\":1167:1190   */\n      sub\n        /* \"#utility.yul\":1163:1195   */\n      slt\n        /* \"#utility.yul\":1160:1212   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":1208:1209   */\n      0x00\n        /* \"#utility.yul\":1205:1206   */\n      dup1\n        /* \"#utility.yul\":1198:1210   */\n      revert\n        /* \"#utility.yul\":1160:1212   */\n    tag_87:\n        /* \"#utility.yul\":1234:1257   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1286:1317   */\n      dup2\n      and\n        /* \"#utility.yul\":1276:1318   */\n      dup2\n      eq\n        /* \"#utility.yul\":1266:1336   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1332:1333   */\n      0x00\n        /* \"#utility.yul\":1329:1330   */\n      dup1\n        /* \"#utility.yul\":1322:1334   */\n      revert\n        /* \"#utility.yul\":1918:2045   */\n    tag_75:\n        /* \"#utility.yul\":1979:1989   */\n      0x4e487b71\n        /* \"#utility.yul\":1974:1977   */\n      0xe0\n        /* \"#utility.yul\":1970:1990   */\n      shl\n        /* \"#utility.yul\":1967:1968   */\n      0x00\n        /* \"#utility.yul\":1960:1991   */\n      mstore\n        /* \"#utility.yul\":2010:2014   */\n      0x11\n        /* \"#utility.yul\":2007:2008   */\n      0x04\n        /* \"#utility.yul\":2000:2015   */\n      mstore\n        /* \"#utility.yul\":2034:2038   */\n      0x24\n        /* \"#utility.yul\":2031:2032   */\n      0x00\n        /* \"#utility.yul\":2024:2039   */\n      revert\n        /* \"#utility.yul\":2050:2175   */\n    tag_52:\n        /* \"#utility.yul\":2090:2094   */\n      0x00\n        /* \"#utility.yul\":2118:2119   */\n      dup3\n        /* \"#utility.yul\":2115:2116   */\n      dup3\n        /* \"#utility.yul\":2112:2120   */\n      lt\n        /* \"#utility.yul\":2109:2143   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":2123:2141   */\n      tag_94\n      tag_75\n      jump\t// in\n    tag_94:\n      pop\n        /* \"#utility.yul\":2160:2169   */\n      sub\n      swap1\n        /* \"#utility.yul\":2050:2175   */\n      jump\t// out\n        /* \"#utility.yul\":2180:2397   */\n    tag_54:\n        /* \"#utility.yul\":2220:2221   */\n      0x00\n        /* \"#utility.yul\":2246:2247   */\n      dup3\n        /* \"#utility.yul\":2236:2368   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":2290:2300   */\n      0x4e487b71\n        /* \"#utility.yul\":2285:2288   */\n      0xe0\n        /* \"#utility.yul\":2281:2301   */\n      shl\n        /* \"#utility.yul\":2278:2279   */\n      0x00\n        /* \"#utility.yul\":2271:2302   */\n      mstore\n        /* \"#utility.yul\":2325:2329   */\n      0x12\n        /* \"#utility.yul\":2322:2323   */\n      0x04\n        /* \"#utility.yul\":2315:2330   */\n      mstore\n        /* \"#utility.yul\":2353:2357   */\n      0x24\n        /* \"#utility.yul\":2350:2351   */\n      0x00\n        /* \"#utility.yul\":2343:2358   */\n      revert\n        /* \"#utility.yul\":2236:2368   */\n    tag_96:\n      pop\n        /* \"#utility.yul\":2382:2391   */\n      div\n      swap1\n        /* \"#utility.yul\":2180:2397   */\n      jump\t// out\n        /* \"#utility.yul\":2402:2529   */\n    tag_61:\n        /* \"#utility.yul\":2463:2473   */\n      0x4e487b71\n        /* \"#utility.yul\":2458:2461   */\n      0xe0\n        /* \"#utility.yul\":2454:2474   */\n      shl\n        /* \"#utility.yul\":2451:2452   */\n      0x00\n        /* \"#utility.yul\":2444:2475   */\n      mstore\n        /* \"#utility.yul\":2494:2498   */\n      0x32\n        /* \"#utility.yul\":2491:2492   */\n      0x04\n        /* \"#utility.yul\":2484:2499   */\n      mstore\n        /* \"#utility.yul\":2518:2522   */\n      0x24\n        /* \"#utility.yul\":2515:2516   */\n      0x00\n        /* \"#utility.yul\":2508:2523   */\n      revert\n        /* \"#utility.yul\":2534:2662   */\n    tag_63:\n        /* \"#utility.yul\":2574:2577   */\n      0x00\n        /* \"#utility.yul\":2605:2606   */\n      dup3\n        /* \"#utility.yul\":2601:2607   */\n      not\n        /* \"#utility.yul\":2598:2599   */\n      dup3\n        /* \"#utility.yul\":2595:2608   */\n      gt\n        /* \"#utility.yul\":2592:2631   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":2611:2629   */\n      tag_100\n      tag_75\n      jump\t// in\n    tag_100:\n      pop\n        /* \"#utility.yul\":2647:2656   */\n      add\n      swap1\n        /* \"#utility.yul\":2534:2662   */\n      jump\t// out\n        /* \"#utility.yul\":3016:3613   */\n    tag_73:\n        /* \"#utility.yul\":3128:3132   */\n      0x00\n        /* \"#utility.yul\":3157:3159   */\n      0x20\n        /* \"#utility.yul\":3186:3188   */\n      dup1\n        /* \"#utility.yul\":3175:3184   */\n      dup4\n        /* \"#utility.yul\":3168:3189   */\n      mstore\n        /* \"#utility.yul\":3218:3224   */\n      dup4\n        /* \"#utility.yul\":3212:3225   */\n      mload\n        /* \"#utility.yul\":3261:3267   */\n      dup1\n        /* \"#utility.yul\":3256:3258   */\n      dup3\n        /* \"#utility.yul\":3245:3254   */\n      dup6\n        /* \"#utility.yul\":3241:3259   */\n      add\n        /* \"#utility.yul\":3234:3268   */\n      mstore\n        /* \"#utility.yul\":3286:3287   */\n      0x00\n        /* \"#utility.yul\":3296:3436   */\n    tag_103:\n        /* \"#utility.yul\":3310:3316   */\n      dup2\n        /* \"#utility.yul\":3307:3308   */\n      dup2\n        /* \"#utility.yul\":3304:3317   */\n      lt\n        /* \"#utility.yul\":3296:3436   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":3405:3419   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":3401:3424   */\n      dup4\n      add\n        /* \"#utility.yul\":3395:3425   */\n      mload\n        /* \"#utility.yul\":3371:3388   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":3390:3392   */\n      0x40\n        /* \"#utility.yul\":3367:3393   */\n      add\n        /* \"#utility.yul\":3360:3426   */\n      mstore\n        /* \"#utility.yul\":3325:3335   */\n      dup3\n      add\n        /* \"#utility.yul\":3296:3436   */\n      jump(tag_103)\n    tag_105:\n        /* \"#utility.yul\":3454:3460   */\n      dup2\n        /* \"#utility.yul\":3451:3452   */\n      dup2\n        /* \"#utility.yul\":3448:3461   */\n      gt\n        /* \"#utility.yul\":3445:3536   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":3524:3525   */\n      0x00\n        /* \"#utility.yul\":3519:3521   */\n      0x40\n        /* \"#utility.yul\":3510:3516   */\n      dup4\n        /* \"#utility.yul\":3499:3508   */\n      dup8\n        /* \"#utility.yul\":3495:3517   */\n      add\n        /* \"#utility.yul\":3491:3522   */\n      add\n        /* \"#utility.yul\":3484:3526   */\n      mstore\n        /* \"#utility.yul\":3445:3536   */\n    tag_106:\n      pop\n        /* \"#utility.yul\":3597:3599   */\n      0x1f\n        /* \"#utility.yul\":3576:3591   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3572:3601   */\n      and\n        /* \"#utility.yul\":3557:3602   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3604:3606   */\n      0x40\n        /* \"#utility.yul\":3553:3607   */\n      add\n      swap4\n        /* \"#utility.yul\":3016:3613   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_bc7335ef5a2766e252b0d20841b8a31e77013ede9c2a48b3b61a9c597162b79a 4c6f636b656477616c6c65743a2043616e6e6f742073756273747261637420746f74616c20616d6f756e74207769746820636c61696d61626c65\n\n    auxdata: 0xa2646970667358221220352006458bdb5b5dc9995f6d85dec8d14a35e6c84432105659f7f801813b96dc64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_543": {
									"entryPoint": null,
									"id": 543,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256t_address_fromMemory": {
									"entryPoint": 88,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:367:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "112:253:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "158:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "167:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "170:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "160:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "160:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "160:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "133:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "142:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "129:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "129:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "154:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "125:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "125:32:3"
															},
															"nodeType": "YulIf",
															"src": "122:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "183:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "199:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "193:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "193:16:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "218:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "241:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "252:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "237:18:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:25:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "222:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "328:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "331:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "321:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "321:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "278:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "289:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "304:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "309:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "300:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "300:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "313:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "296:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "296:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "285:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "285:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "275:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "268:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:50:3"
															},
															"nodeType": "YulIf",
															"src": "265:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "344:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "354:5:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "344:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "70:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "81:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "93:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "101:6:3",
														"type": ""
													}
												],
												"src": "14:351:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b5060405161056138038061056183398101604081905261002f91610058565b6000919091556001600160a01b0316608052600180546001600160a01b03191633179055610095565b6000806040838503121561006b57600080fd5b825160208401519092506001600160a01b038116811461008a57600080fd5b809150509250929050565b6080516104b26100af600039600060a701526104b26000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630a95606e146100675780631d77b00b1461008d57806338af3eed146100a2578063893d20e8146100e1578063b580aa9e146100f2578063c8cca41e146100fb575b600080fd5b61007a6100753660046102ba565b610103565b6040519081526020015b60405180910390f35b6100a061009b366004610347565b610148565b005b6100c97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610084565b6001546001600160a01b03166100c9565b61007a60025481565b6100a0610172565b600061010d610180565b6000610118836101ce565b905061013f600054826040518060600160405280603a8152602001610443603a913961028e565b60005592915050565b610150610180565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61017a610180565b42600255565b6001546001600160a01b031633146101cc5760405162461bcd60e51b815260206004820152600a6024820152692737ba102fb7bbb732b960b11b60448201526064015b60405180910390fd5b565b60008062278d00600254426101e39190610386565b6101ed919061039d565b6003549091506000905b8281116102345760336003541161022c5784816033811061021a5761021a6103bf565b602002015161022990836103d5565b91505b6001016101f7565b506102408260016103d5565b600355806102875760405162461bcd60e51b8152602060048201526014602482015273139bdd1a1a5b99c81d1bc818db185a5b481e595d60621b60448201526064016101c3565b9392505050565b600081848411156102b25760405162461bcd60e51b81526004016101c391906103ed565b505050900390565b60006106608083850312156102ce57600080fd5b83601f8401126102dd57600080fd5b60405181810181811067ffffffffffffffff8211171561030d57634e487b7160e01b600052604160045260246000fd5b60405290830190808583111561032257600080fd5b845b8381101561033c578035825260209182019101610324565b509095945050505050565b60006020828403121561035957600080fd5b81356001600160a01b038116811461028757600080fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561039857610398610370565b500390565b6000826103ba57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600082198211156103e8576103e8610370565b500190565b600060208083528351808285015260005b8181101561041a578581018301518582016040015282016103fe565b8181111561042c576000604083870101525b50601f01601f191692909201604001939250505056fe4c6f636b656477616c6c65743a2043616e6e6f742073756273747261637420746f74616c20616d6f756e74207769746820636c61696d61626c65a2646970667358221220352006458bdb5b5dc9995f6d85dec8d14a35e6c84432105659f7f801813b96dc64736f6c634300080b0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x561 CODESIZE SUB DUP1 PUSH2 0x561 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x58 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x95 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x4B2 PUSH2 0xAF PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0xA7 ADD MSTORE PUSH2 0x4B2 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA95606E EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0xB580AA9E EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xC8CCA41E EQ PUSH2 0xFB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x347 JUMP JUMPDEST PUSH2 0x148 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC9 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x84 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC9 JUMP JUMPDEST PUSH2 0x7A PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D PUSH2 0x180 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP4 PUSH2 0x1CE JUMP JUMPDEST SWAP1 POP PUSH2 0x13F PUSH1 0x0 SLOAD DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x443 PUSH1 0x3A SWAP2 CODECOPY PUSH2 0x28E JUMP JUMPDEST PUSH1 0x0 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x150 PUSH2 0x180 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x17A PUSH2 0x180 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x2737BA102FB7BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x278D00 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x386 JUMP JUMPDEST PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x39D JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP2 GT PUSH2 0x234 JUMPI PUSH1 0x33 PUSH1 0x3 SLOAD GT PUSH2 0x22C JUMPI DUP5 DUP2 PUSH1 0x33 DUP2 LT PUSH2 0x21A JUMPI PUSH2 0x21A PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x229 SWAP1 DUP4 PUSH2 0x3D5 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1F7 JUMP JUMPDEST POP PUSH2 0x240 DUP3 PUSH1 0x1 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x3 SSTORE DUP1 PUSH2 0x287 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x139BDD1A1A5B99C81D1BC818DB185A5B481E595D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x3ED JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x660 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x30D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 DUP4 ADD SWAP1 DUP1 DUP6 DUP4 GT ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x33C JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x324 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x398 JUMPI PUSH2 0x398 PUSH2 0x370 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3BA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3E8 JUMPI PUSH2 0x3E8 PUSH2 0x370 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x41A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3FE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4C PUSH16 0x636B656477616C6C65743A2043616E6E PUSH16 0x742073756273747261637420746F7461 PUSH13 0x20616D6F756E74207769746820 PUSH4 0x6C61696D PUSH2 0x626C PUSH6 0xA26469706673 PC 0x22 SLT KECCAK256 CALLDATALOAD KECCAK256 MOD GASLIMIT DUP12 0xDB JUMPDEST 0x5D 0xC9 SWAP10 0x5F PUSH14 0x85DEC8D14A35E6C84432105659F7 0xF8 ADD DUP2 EXTCODESIZE SWAP7 0xDC PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "182:2533:2:-:0;;;459:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;520:7;:17;;;;-1:-1:-1;;;;;547:26:2;;;583:6;:19;;-1:-1:-1;;;;;;583:19:2;592:10;583:19;;;182:2533;;14:351:3;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;193:16;;252:2;237:18;;231:25;193:16;;-1:-1:-1;;;;;;285:31:3;;275:42;;265:70;;331:1;328;321:12;265:70;354:5;344:15;;;14:351;;;;;:::o;:::-;182:2533:2;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateClaimableAmount_673": {
									"entryPoint": 462,
									"id": 673,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_onlyTalax_555": {
									"entryPoint": 384,
									"id": 555,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_unsafeInc_608": {
									"entryPoint": null,
									"id": 608,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@beneficiary_518": {
									"entryPoint": null,
									"id": 518,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@changeTalaxAddress_582": {
									"entryPoint": 328,
									"id": 582,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getOwner_563": {
									"entryPoint": null,
									"id": 563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initiateLockedWallet_595": {
									"entryPoint": 370,
									"id": 595,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@releaseClaimable_704": {
									"entryPoint": 259,
									"id": 704,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@startLockedWallet_520": {
									"entryPoint": null,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_260": {
									"entryPoint": 654,
									"id": 260,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$51_memory_ptr": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ee508ea70425a29c7610cd2f9910c217a86b66d8c07f515ad19475c1d71b59f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3615:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "108:785:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "118:14:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "128:4:3",
																"type": "",
																"value": "1632"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "122:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "177:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "186:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "189:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "179:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "179:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "152:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "161:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "148:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "148:23:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "173:2:3"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "144:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "144:32:3"
															},
															"nodeType": "YulIf",
															"src": "141:52:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "248:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "257:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "260:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "250:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "250:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "250:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "220:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "231:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "216:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "216:20:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "238:7:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "212:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "212:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "205:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:42:3"
															},
															"nodeType": "YulIf",
															"src": "202:62:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "273:23:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "293:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "287:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "287:9:3"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "277:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "305:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "327:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "335:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "323:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "323:15:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "309:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "421:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "442:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "449:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "454:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "445:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "445:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "435:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "435:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "435:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "486:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "489:4:3",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "479:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "479:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "479:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "514:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "517:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "507:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "507:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "507:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "356:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "368:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "353:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "353:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "392:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "404:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "389:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "389:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "350:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "350:62:3"
															},
															"nodeType": "YulIf",
															"src": "347:185:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "552:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "541:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "541:22:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "572:17:3",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "583:6:3"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "576:3:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "598:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "616:9:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "627:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "612:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "612:18:3"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "602:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "662:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "671:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "674:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "664:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "664:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "664:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "645:6:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "653:7:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "642:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "642:19:3"
															},
															"nodeType": "YulIf",
															"src": "639:39:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "687:20:3",
															"value": {
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "698:9:3"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "691:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "774:88:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "795:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "813:3:3"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "800:12:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "800:17:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "788:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "788:30:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "788:30:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "831:21:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "842:3:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "847:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "838:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "838:14:3"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "831:3:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "727:3:3"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "732:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "724:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "724:15:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "740:25:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "742:21:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "753:3:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "758:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "749:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "749:14:3"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "742:3:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "720:3:3",
																"statements": []
															},
															"src": "716:146:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:16:3",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "881:6:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$51_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "74:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "85:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "97:6:3",
														"type": ""
													}
												],
												"src": "14:879:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "999:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1009:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1021:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1032:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1017:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1009:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1051:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1062:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1044:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1044:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1044:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "979:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "990:4:3",
														"type": ""
													}
												],
												"src": "898:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1150:216:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1196:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1205:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1208:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1198:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1198:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1198:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1180:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1167:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1167:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1192:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1163:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1163:32:3"
															},
															"nodeType": "YulIf",
															"src": "1160:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1221:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1247:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1234:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1225:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1320:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1329:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1332:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1322:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1322:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1322:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1279:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1290:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1305:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1310:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1301:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1301:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1314:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1297:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1297:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1286:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1286:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1276:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1269:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1269:50:3"
															},
															"nodeType": "YulIf",
															"src": "1266:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1345:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1355:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1116:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1127:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1139:6:3",
														"type": ""
													}
												],
												"src": "1080:286:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1472:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1482:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1494:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1505:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1490:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1490:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1482:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1524:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1539:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1555:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1560:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1551:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1551:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1564:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1547:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1547:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1535:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1535:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1517:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1441:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1452:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1463:4:3",
														"type": ""
													}
												],
												"src": "1371:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1753:160:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1770:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1763:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1763:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1804:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1815:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1800:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1800:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1820:2:3",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1793:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1793:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1793:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1843:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1854:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1839:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1839:18:3"
																	},
																	{
																		"hexValue": "4e6f74205f6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1859:12:3",
																		"type": "",
																		"value": "Not _owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1832:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1832:40:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1832:40:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1881:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1893:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1904:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1889:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1881:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ee508ea70425a29c7610cd2f9910c217a86b66d8c07f515ad19475c1d71b59f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1730:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1744:4:3",
														"type": ""
													}
												],
												"src": "1579:334:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1950:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1967:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1974:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1979:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1970:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1970:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1960:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1960:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1960:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2007:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2010:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2000:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2000:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2031:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2034:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2024:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2024:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2024:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1918:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2099:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2121:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2123:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2123:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2123:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2115:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2118:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2112:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:8:3"
															},
															"nodeType": "YulIf",
															"src": "2109:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2152:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2164:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2167:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2160:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2160:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2152:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2081:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2084:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2090:4:3",
														"type": ""
													}
												],
												"src": "2050:125:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2226:171:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2257:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2278:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2285:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2290:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2281:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2281:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2271:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2271:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2271:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2322:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2325:4:3",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2315:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2315:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2315:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2350:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2353:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2343:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2343:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2343:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2246:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:9:3"
															},
															"nodeType": "YulIf",
															"src": "2236:132:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2377:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2386:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2389:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2382:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2382:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2377:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2211:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2214:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2220:1:3",
														"type": ""
													}
												],
												"src": "2180:217:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2434:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2451:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2458:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2463:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2454:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2454:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2444:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2444:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2491:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2494:4:3",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2484:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2484:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2484:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2515:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2518:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2508:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2508:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2508:15:3"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2402:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2582:80:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2609:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2611:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2611:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2611:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2598:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2605:1:3"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2601:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2601:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2595:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2595:13:3"
															},
															"nodeType": "YulIf",
															"src": "2592:39:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2640:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2651:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2654:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2647:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2647:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2640:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2565:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2568:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2574:3:3",
														"type": ""
													}
												],
												"src": "2534:128:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2841:170:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2858:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2869:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2851:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2892:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2903:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2888:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2888:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2908:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2881:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2881:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2881:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2931:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2942:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2927:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2927:18:3"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d20796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2947:22:3",
																		"type": "",
																		"value": "Nothing to claim yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2920:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:50:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2920:50:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2979:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2991:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3002:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2987:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2987:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2979:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2818:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2832:4:3",
														"type": ""
													}
												],
												"src": "2667:344:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3137:476:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3147:12:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3157:2:3",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3151:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3175:9:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3186:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3168:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3168:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3198:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3218:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3212:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3212:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3202:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3256:2:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3261:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:34:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3277:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3286:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3281:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3346:90:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "3375:9:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3386:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3371:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3371:17:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3390:2:3",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3367:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3367:26:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "3409:6:3"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "3417:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3405:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3405:14:3"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "3421:2:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3401:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3401:23:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3395:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3395:30:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3360:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3360:66:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3360:66:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3307:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3310:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3304:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3304:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3318:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3320:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3329:1:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3332:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3325:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3325:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3320:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3300:3:3",
																"statements": []
															},
															"src": "3296:140:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3470:66:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "3499:9:3"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "3510:6:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3495:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3495:22:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3519:2:3",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3491:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3491:31:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3524:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3484:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3484:42:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3484:42:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3451:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3454:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3448:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3448:13:3"
															},
															"nodeType": "YulIf",
															"src": "3445:91:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3545:62:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3561:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3580:6:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3588:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3576:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3576:15:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3597:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3593:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3593:7:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3572:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3572:29:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:45:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3604:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3553:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3553:54:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3545:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3106:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3117:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3128:4:3",
														"type": ""
													}
												],
												"src": "3016:597:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_array$_t_uint256_$51_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 1632\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        if iszero(slt(add(headStart, 0x1f), dataEnd)) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, _1)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        let srcEnd := add(headStart, _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := headStart\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, 0x20)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_8ee508ea70425a29c7610cd2f9910c217a86b66d8c07f515ad19475c1d71b59f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Not _owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Nothing to claim yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"518": [
									{
										"length": 32,
										"start": 167
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80630a95606e146100675780631d77b00b1461008d57806338af3eed146100a2578063893d20e8146100e1578063b580aa9e146100f2578063c8cca41e146100fb575b600080fd5b61007a6100753660046102ba565b610103565b6040519081526020015b60405180910390f35b6100a061009b366004610347565b610148565b005b6100c97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610084565b6001546001600160a01b03166100c9565b61007a60025481565b6100a0610172565b600061010d610180565b6000610118836101ce565b905061013f600054826040518060600160405280603a8152602001610443603a913961028e565b60005592915050565b610150610180565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61017a610180565b42600255565b6001546001600160a01b031633146101cc5760405162461bcd60e51b815260206004820152600a6024820152692737ba102fb7bbb732b960b11b60448201526064015b60405180910390fd5b565b60008062278d00600254426101e39190610386565b6101ed919061039d565b6003549091506000905b8281116102345760336003541161022c5784816033811061021a5761021a6103bf565b602002015161022990836103d5565b91505b6001016101f7565b506102408260016103d5565b600355806102875760405162461bcd60e51b8152602060048201526014602482015273139bdd1a1a5b99c81d1bc818db185a5b481e595d60621b60448201526064016101c3565b9392505050565b600081848411156102b25760405162461bcd60e51b81526004016101c391906103ed565b505050900390565b60006106608083850312156102ce57600080fd5b83601f8401126102dd57600080fd5b60405181810181811067ffffffffffffffff8211171561030d57634e487b7160e01b600052604160045260246000fd5b60405290830190808583111561032257600080fd5b845b8381101561033c578035825260209182019101610324565b509095945050505050565b60006020828403121561035957600080fd5b81356001600160a01b038116811461028757600080fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561039857610398610370565b500390565b6000826103ba57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600082198211156103e8576103e8610370565b500190565b600060208083528351808285015260005b8181101561041a578581018301518582016040015282016103fe565b8181111561042c576000604083870101525b50601f01601f191692909201604001939250505056fe4c6f636b656477616c6c65743a2043616e6e6f742073756273747261637420746f74616c20616d6f756e74207769746820636c61696d61626c65a2646970667358221220352006458bdb5b5dc9995f6d85dec8d14a35e6c84432105659f7f801813b96dc64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA95606E EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0xB580AA9E EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xC8CCA41E EQ PUSH2 0xFB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x347 JUMP JUMPDEST PUSH2 0x148 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC9 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x84 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC9 JUMP JUMPDEST PUSH2 0x7A PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D PUSH2 0x180 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP4 PUSH2 0x1CE JUMP JUMPDEST SWAP1 POP PUSH2 0x13F PUSH1 0x0 SLOAD DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x443 PUSH1 0x3A SWAP2 CODECOPY PUSH2 0x28E JUMP JUMPDEST PUSH1 0x0 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x150 PUSH2 0x180 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x17A PUSH2 0x180 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x2737BA102FB7BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x278D00 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x386 JUMP JUMPDEST PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x39D JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP2 GT PUSH2 0x234 JUMPI PUSH1 0x33 PUSH1 0x3 SLOAD GT PUSH2 0x22C JUMPI DUP5 DUP2 PUSH1 0x33 DUP2 LT PUSH2 0x21A JUMPI PUSH2 0x21A PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x229 SWAP1 DUP4 PUSH2 0x3D5 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1F7 JUMP JUMPDEST POP PUSH2 0x240 DUP3 PUSH1 0x1 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x3 SSTORE DUP1 PUSH2 0x287 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x139BDD1A1A5B99C81D1BC818DB185A5B481E595D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x3ED JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x660 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x30D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 DUP4 ADD SWAP1 DUP1 DUP6 DUP4 GT ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x33C JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x324 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x398 JUMPI PUSH2 0x398 PUSH2 0x370 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3BA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3E8 JUMPI PUSH2 0x3E8 PUSH2 0x370 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x41A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3FE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4C PUSH16 0x636B656477616C6C65743A2043616E6E PUSH16 0x742073756273747261637420746F7461 PUSH13 0x20616D6F756E74207769746820 PUSH4 0x6C61696D PUSH2 0x626C PUSH6 0xA26469706673 PC 0x22 SLT KECCAK256 CALLDATALOAD KECCAK256 MOD GASLIMIT DUP12 0xDB JUMPDEST 0x5D 0xC9 SWAP10 0x5F PUSH14 0x85DEC8D14A35E6C84432105659F7 0xF8 ADD DUP2 EXTCODESIZE SWAP7 0xDC PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "182:2533:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2202:511;;;;;;:::i;:::-;;:::i;:::-;;;1044:25:3;;;1032:2;1017:18;2202:511:2;;;;;;;;1082:93;;;;;;:::i;:::-;;:::i;:::-;;336:36;;;;;;;;-1:-1:-1;;;;;1535:32:3;;;1517:51;;1505:2;1490:18;336:36:2;1371:203:3;823:80:2;890:6;;-1:-1:-1;;;;;890:6:2;823:80;;379:32;;;;;;1236:112;;;:::i;2202:511::-;2324:7;940:12;:10;:12::i;:::-;2347:29:::1;2379:33;2405:6;2379:25;:33::i;:::-;2347:65;;2515:152;2541:7;;2562:21;2515:152;;;;;;;;;;;;;;;;;:12;:152::i;:::-;2505:7;:162:::0;2685:21;2202:511;-1:-1:-1;;2202:511:2:o;1082:93::-;940:12;:10;:12::i;:::-;1154:6:::1;:14:::0;;-1:-1:-1;;;;;;1154:14:2::1;-1:-1:-1::0;;;;;1154:14:2;;;::::1;::::0;;;::::1;::::0;;1082:93::o;1236:112::-;940:12;:10;:12::i;:::-;1326:15:::1;1306:17;:35:::0;1236:112::o;721:96::-;789:6;;-1:-1:-1;;;;;789:6:2;775:10;:20;767:43;;;;-1:-1:-1;;;767:43:2;;1781:2:3;767:43:2;;;1763:21:3;1820:2;1800:18;;;1793:30;-1:-1:-1;;;1839:18:3;;;1832:40;1889:18;;767:43:2;;;;;;;;;721:96::o;1585:530::-;1682:7;1705:14;1762:7;1741:17;;1723:15;:35;;;;:::i;:::-;1722:47;;;;:::i;:::-;1824:17;;1705:64;;-1:-1:-1;1779:17:2;;1807:177;1848:6;1843:1;:11;1807:177;;1914:2;1893:17;;:23;1889:85;;1949:7;1957:1;1949:10;;;;;;;:::i;:::-;;;;;1936:23;;;;:::i;:::-;;;1889:85;1462:1;1458:5;1807:177;;;-1:-1:-1;2014:10:2;:6;2023:1;2014:10;:::i;:::-;1994:17;:30;2043:14;2035:47;;;;-1:-1:-1;;;2035:47:2;;2869:2:3;2035:47:2;;;2851:21:3;2908:2;2888:18;;;2881:30;-1:-1:-1;;;2927:18:3;;;2920:50;2987:18;;2035:47:2;2667:344:3;2035:47:2;2099:9;1585:530;-1:-1:-1;;;1585:530:2:o;4945:231:0:-;5061:7;5120:12;5112:6;;;;5104:29;;;;-1:-1:-1;;;5104:29:0;;;;;;;;:::i;:::-;-1:-1:-1;;;5154:5:0;;;4945:231::o;14:879:3:-;97:6;128:4;173:2;161:9;152:7;148:23;144:32;141:52;;;189:1;186;179:12;141:52;238:7;231:4;220:9;216:20;212:34;202:62;;260:1;257;250:12;202:62;293:2;287:9;335:2;327:6;323:15;404:6;392:10;389:22;368:18;356:10;353:34;350:62;347:185;;;454:10;449:3;445:20;442:1;435:31;489:4;486:1;479:15;517:4;514:1;507:15;347:185;548:2;541:22;612:18;;;;583:6;642:19;;;639:39;;;674:1;671;664:12;639:39;698:9;716:146;732:6;727:3;724:15;716:146;;;800:17;;788:30;;847:4;838:14;;;;749;716:146;;;-1:-1:-1;881:6:3;;14:879;-1:-1:-1;;;;;14:879:3:o;1080:286::-;1139:6;1192:2;1180:9;1171:7;1167:23;1163:32;1160:52;;;1208:1;1205;1198:12;1160:52;1234:23;;-1:-1:-1;;;;;1286:31:3;;1276:42;;1266:70;;1332:1;1329;1322:12;1918:127;1979:10;1974:3;1970:20;1967:1;1960:31;2010:4;2007:1;2000:15;2034:4;2031:1;2024:15;2050:125;2090:4;2118:1;2115;2112:8;2109:34;;;2123:18;;:::i;:::-;-1:-1:-1;2160:9:3;;2050:125::o;2180:217::-;2220:1;2246;2236:132;;2290:10;2285:3;2281:20;2278:1;2271:31;2325:4;2322:1;2315:15;2353:4;2350:1;2343:15;2236:132;-1:-1:-1;2382:9:3;;2180:217::o;2402:127::-;2463:10;2458:3;2454:20;2451:1;2444:31;2494:4;2491:1;2484:15;2518:4;2515:1;2508:15;2534:128;2574:3;2605:1;2601:6;2598:1;2595:13;2592:39;;;2611:18;;:::i;:::-;-1:-1:-1;2647:9:3;;2534:128::o;3016:597::-;3128:4;3157:2;3186;3175:9;3168:21;3218:6;3212:13;3261:6;3256:2;3245:9;3241:18;3234:34;3286:1;3296:140;3310:6;3307:1;3304:13;3296:140;;;3405:14;;;3401:23;;3395:30;3371:17;;;3390:2;3367:26;3360:66;3325:10;;3296:140;;;3454:6;3451:1;3448:13;3445:91;;;3524:1;3519:2;3510:6;3499:9;3495:22;3491:31;3484:42;3445:91;-1:-1:-1;3597:2:3;3576:15;-1:-1:-1;;3572:29:3;3557:45;;;;3604:2;3553:54;;3016:597;-1:-1:-1;;;3016:597:3:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "240400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"beneficiary()": "infinite",
								"changeTalaxAddress(address)": "26700",
								"getOwner()": "2375",
								"initiateLockedWallet()": "24501",
								"releaseClaimable(uint256[51])": "infinite",
								"startLockedWallet()": "2350"
							},
							"internal": {
								"_calculateClaimableAmount(uint256[51] memory)": "infinite",
								"_onlyTalax()": "infinite",
								"_unsafeInc(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 182,
									"end": 2715,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 182,
									"end": 2715,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 182,
									"end": 2715,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 459,
									"end": 609,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 459,
									"end": 609,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 459,
									"end": 609,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 459,
									"end": 609,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 459,
									"end": 609,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 459,
									"end": 609,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 459,
									"end": 609,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 459,
									"end": 609,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 459,
									"end": 609,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 459,
									"end": 609,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 520,
									"end": 527,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 520,
									"end": 537,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 520,
									"end": 537,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 520,
									"end": 537,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 520,
									"end": 537,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 547,
									"end": 573,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 547,
									"end": 573,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 547,
									"end": 573,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 583,
									"end": 589,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 583,
									"end": 602,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 583,
									"end": 602,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 583,
									"end": 602,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 592,
									"end": 602,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 583,
									"end": 602,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 583,
									"end": 602,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 583,
									"end": 602,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 182,
									"end": 2715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 182,
									"end": 2715,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 365,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 365,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 93,
									"end": 99,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 101,
									"end": 107,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 154,
									"end": 156,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 142,
									"end": 151,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 133,
									"end": 140,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 129,
									"end": 152,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 125,
									"end": 157,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 122,
									"end": 174,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 122,
									"end": 174,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 170,
									"end": 171,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 168,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 160,
									"end": 172,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 122,
									"end": 174,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 193,
									"end": 209,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 193,
									"end": 209,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 252,
									"end": 254,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 237,
									"end": 255,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 231,
									"end": 256,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 193,
									"end": 209,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 193,
									"end": 209,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 285,
									"end": 316,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 285,
									"end": 316,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 275,
									"end": 317,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 275,
									"end": 317,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 265,
									"end": 335,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 265,
									"end": 335,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 331,
									"end": 332,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 328,
									"end": 329,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 321,
									"end": 333,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 265,
									"end": 335,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 265,
									"end": 335,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 354,
									"end": 359,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 344,
									"end": 359,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 344,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 344,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 365,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 14,
									"end": 365,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 365,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 14,
									"end": 365,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 14,
									"end": 365,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 365,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 365,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 365,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 182,
									"end": 2715,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 182,
									"end": 2715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 182,
									"end": 2715,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 182,
									"end": 2715,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 182,
									"end": 2715,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 182,
									"end": 2715,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 182,
									"end": 2715,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 182,
									"end": 2715,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "518"
								},
								{
									"begin": 182,
									"end": 2715,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 182,
									"end": 2715,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 182,
									"end": 2715,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220352006458bdb5b5dc9995f6d85dec8d14a35e6c84432105659f7f801813b96dc64736f6c634300080b0033",
									".code": [
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH",
											"source": 2,
											"value": "A95606E"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH",
											"source": 2,
											"value": "1D77B00B"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH",
											"source": 2,
											"value": "38AF3EED"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH",
											"source": 2,
											"value": "893D20E8"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH",
											"source": 2,
											"value": "B580AA9E"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH",
											"source": 2,
											"value": "C8CCA41E"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2715,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1069,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1069,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1069,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1017,
											"end": 1035,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 336,
											"end": 372,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 336,
											"end": 372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 336,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 336,
											"end": 372,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "518"
										},
										{
											"begin": 336,
											"end": 372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 336,
											"end": 372,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 336,
											"end": 372,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 336,
											"end": 372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 336,
											"end": 372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1535,
											"end": 1567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1535,
											"end": 1567,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1535,
											"end": 1567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1568,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1568,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1507,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1490,
											"end": 1508,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 336,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1371,
											"end": 1574,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 823,
											"end": 903,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 823,
											"end": 903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 890,
											"end": 896,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 890,
											"end": 896,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 890,
											"end": 896,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 823,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 823,
											"end": 903,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 379,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 379,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 379,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 379,
											"end": 411,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 411,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 379,
											"end": 411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 379,
											"end": 411,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1348,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1236,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1236,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1236,
											"end": 1348,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 940,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 940,
											"end": 952,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 940,
											"end": 952,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 940,
											"end": 952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2347,
											"end": 2376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2405,
											"end": 2411,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2379,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2379,
											"end": 2412,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2379,
											"end": 2412,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2379,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2347,
											"end": 2412,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2347,
											"end": 2412,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2583,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "PUSH",
											"source": 2,
											"value": "3A"
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "PUSH data",
											"source": 2,
											"value": "BC7335EF5A2766E252B0D20841B8A31E77013EDE9C2A48B3B61A9C597162B79A"
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "PUSH",
											"source": 2,
											"value": "3A"
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2515,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2505,
											"end": 2512,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2667,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2706,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2202,
											"end": 2713,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 940,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 940,
											"end": 952,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 940,
											"end": 952,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1160,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1154,
											"end": 1168,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1168,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1154,
											"end": 1168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1154,
											"end": 1168,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1168,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1168,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1168,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1236,
											"end": 1348,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1236,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 940,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 940,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 940,
											"end": 952,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 940,
											"end": 952,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 940,
											"end": 952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1341,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1306,
											"end": 1341,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1348,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 721,
											"end": 817,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 721,
											"end": 817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 789,
											"end": 795,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 789,
											"end": 795,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 789,
											"end": 795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 775,
											"end": 785,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 775,
											"end": 795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 767,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 767,
											"end": 810,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 767,
											"end": 810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 767,
											"end": 810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 767,
											"end": 810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1783,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 767,
											"end": 810,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 767,
											"end": 810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1784,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1823,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA102FB7BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1839,
											"end": 1857,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1839,
											"end": 1857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1872,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1889,
											"end": 1907,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1889,
											"end": 1907,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 767,
											"end": 810,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 767,
											"end": 810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 767,
											"end": 810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 767,
											"end": 810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 767,
											"end": 810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 767,
											"end": 810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 767,
											"end": 810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 767,
											"end": 810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 767,
											"end": 810,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 767,
											"end": 810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 721,
											"end": 817,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1585,
											"end": 2115,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1585,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 1689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1769,
											"name": "PUSH",
											"source": 2,
											"value": "278D00"
										},
										{
											"begin": 1741,
											"end": 1758,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1741,
											"end": 1758,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1738,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1723,
											"end": 1758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1723,
											"end": 1758,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1723,
											"end": 1758,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1723,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1722,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1722,
											"end": 1769,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1722,
											"end": 1769,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1722,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1722,
											"end": 1769,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1722,
											"end": 1769,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1722,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1841,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1824,
											"end": 1841,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1769,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1769,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1779,
											"end": 1796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1984,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1807,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1854,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1854,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1807,
											"end": 1984,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 1916,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1893,
											"end": 1910,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1893,
											"end": 1910,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1916,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1889,
											"end": 1974,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1958,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 1974,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1889,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1458,
											"end": 1463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1807,
											"end": 1984,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1984,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1807,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2014,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2014,
											"end": 2020,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2014,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2014,
											"end": 2024,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2014,
											"end": 2024,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2014,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2011,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1994,
											"end": 2024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2869,
											"end": 2871,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2872,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2910,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2888,
											"end": 2906,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2888,
											"end": 2906,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2888,
											"end": 2906,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2911,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD1A1A5B99C81D1BC818DB185A5B481E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2927,
											"end": 2945,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2927,
											"end": 2945,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2927,
											"end": 2945,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2667,
											"end": 3011,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2108,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1585,
											"end": 2115,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1585,
											"end": 2115,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5061,
											"end": 5068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5154,
											"end": 5159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 893,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 14,
											"end": 893,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 97,
											"end": 103,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 132,
											"name": "PUSH",
											"source": 3,
											"value": "660"
										},
										{
											"begin": 173,
											"end": 175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 161,
											"end": 170,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 152,
											"end": 159,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 148,
											"end": 171,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 144,
											"end": 176,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 141,
											"end": 193,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 141,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 141,
											"end": 193,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 189,
											"end": 190,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 187,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 179,
											"end": 191,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 141,
											"end": 193,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 141,
											"end": 193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 238,
											"end": 245,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 231,
											"end": 235,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 220,
											"end": 229,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 216,
											"end": 236,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 212,
											"end": 246,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 202,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 202,
											"end": 264,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 260,
											"end": 261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 258,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 250,
											"end": 262,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 202,
											"end": 264,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 202,
											"end": 264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 296,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 335,
											"end": 337,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 323,
											"end": 338,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 392,
											"end": 402,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 411,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 368,
											"end": 386,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 356,
											"end": 366,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 353,
											"end": 387,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 350,
											"end": 412,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 347,
											"end": 532,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 347,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 347,
											"end": 532,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 454,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 449,
											"end": 452,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 445,
											"end": 465,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 442,
											"end": 443,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 466,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 486,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 479,
											"end": 494,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 517,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 514,
											"end": 515,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 522,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 347,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 347,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 548,
											"end": 550,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 563,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 612,
											"end": 630,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 612,
											"end": 630,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 583,
											"end": 589,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 642,
											"end": 661,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 642,
											"end": 661,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 642,
											"end": 661,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 639,
											"end": 678,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 639,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 639,
											"end": 678,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 664,
											"end": 676,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 639,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 639,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 698,
											"end": 707,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 716,
											"end": 862,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 716,
											"end": 862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 732,
											"end": 738,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 727,
											"end": 730,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 724,
											"end": 739,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 716,
											"end": 862,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 716,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 716,
											"end": 862,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 800,
											"end": 817,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 800,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 788,
											"end": 818,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 788,
											"end": 818,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 847,
											"end": 851,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 838,
											"end": 852,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 838,
											"end": 852,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 838,
											"end": 852,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 838,
											"end": 852,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 749,
											"end": 763,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 716,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 716,
											"end": 862,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 716,
											"end": 862,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 716,
											"end": 862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 881,
											"end": 887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 881,
											"end": 887,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 14,
											"end": 893,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 893,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1080,
											"end": 1366,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1080,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1180,
											"end": 1189,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1178,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1190,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1163,
											"end": 1195,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1212,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1160,
											"end": 1212,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1208,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1206,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1198,
											"end": 1210,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1212,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1160,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1234,
											"end": 1257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1234,
											"end": 1257,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1318,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1266,
											"end": 1336,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1333,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1330,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 2045,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1918,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1979,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1974,
											"end": 1977,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1970,
											"end": 1990,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1991,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2014,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2007,
											"end": 2008,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2038,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2031,
											"end": 2032,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2039,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2175,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2050,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2090,
											"end": 2094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2115,
											"end": 2116,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2112,
											"end": 2120,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2143,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2109,
											"end": 2143,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2160,
											"end": 2169,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2169,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2175,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2180,
											"end": 2397,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2180,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2220,
											"end": 2221,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2247,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2236,
											"end": 2368,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2290,
											"end": 2300,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 2285,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2279,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2302,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2329,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2322,
											"end": 2323,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2315,
											"end": 2330,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2353,
											"end": 2357,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2358,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2368,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2236,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2382,
											"end": 2391,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2382,
											"end": 2391,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2397,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2402,
											"end": 2529,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2402,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2473,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 2458,
											"end": 2461,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2454,
											"end": 2474,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2452,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2475,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2491,
											"end": 2492,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2484,
											"end": 2499,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2522,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2515,
											"end": 2516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2523,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2534,
											"end": 2662,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2534,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2574,
											"end": 2577,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2606,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2601,
											"end": 2607,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2608,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2647,
											"end": 2656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2534,
											"end": 2662,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3016,
											"end": 3613,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3016,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3128,
											"end": 3132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3159,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3184,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3168,
											"end": 3189,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3218,
											"end": 3224,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3225,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3261,
											"end": 3267,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3256,
											"end": 3258,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3245,
											"end": 3254,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3234,
											"end": 3268,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3287,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3296,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3310,
											"end": 3316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3304,
											"end": 3317,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3436,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3296,
											"end": 3436,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3419,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3424,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3395,
											"end": 3425,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3388,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3388,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3392,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3393,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3325,
											"end": 3335,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3325,
											"end": 3335,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3296,
											"end": 3436,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3296,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3448,
											"end": 3461,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3445,
											"end": 3536,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3445,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3445,
											"end": 3536,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3525,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3521,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3491,
											"end": 3522,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3526,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3445,
											"end": 3536,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3445,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3597,
											"end": 3599,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3576,
											"end": 3591,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3572,
											"end": 3601,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3602,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3602,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3602,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3602,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3606,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3553,
											"end": 3607,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3613,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3016,
											"end": 3613,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"BC7335EF5A2766E252B0D20841B8A31E77013EDE9C2A48B3B61A9C597162B79A": "4c6f636b656477616c6c65743a2043616e6e6f742073756273747261637420746f74616c20616d6f756e74207769746820636c61696d61626c65"
									}
								}
							}
						},
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"changeTalaxAddress(address)": "1d77b00b",
							"getOwner()": "893d20e8",
							"initiateLockedWallet()": "c8cca41e",
							"releaseClaimable(uint256[51])": "0a95606e",
							"startLockedWallet()": "b580aa9e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"beneficiary_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateLockedWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[51]\",\"name\":\"amount\",\"type\":\"uint256[51]\"}],\"name\":\"releaseClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startLockedWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initiateLockedWallet()\":{\"notice\":\"Initiate Locked Wallet\"},\"releaseClaimable(uint256[51])\":{\"notice\":\"Transfers tokens held by timelock to beneficiary.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lockedwallet.sol\":\"LockedWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/Interfaces.sol\":{\"keccak256\":\"0x43e967de7a19c9271e351e91cc2d49831947ab238942a097122799a7b1b21ea2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://555a1f6667d327504a50e1880db254d0c62e239942abf495e0e7ef5ee7af06e4\",\"dweb:/ipfs/QmbqGVTBbkHcoJukQtcLKRCL8J1YAQMjmiLANG6Sztx9y6\"]},\"contracts/Lockedwallet.sol\":{\"keccak256\":\"0x0dcd6d540edc99aab8ca8ca6bb5289d3d1109b76c7f90bb3a13690bd69d3ae89\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://35193897712372b0e2849cc0c57277bbf1a973348801c21513689ab3e4fb2986\",\"dweb:/ipfs/QmTmHE4PwKXSXatcEre99qy75qBowYLg1vT2ktUY4mcEaH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 514,
								"contract": "contracts/Lockedwallet.sol:LockedWallet",
								"label": "_amount",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 516,
								"contract": "contracts/Lockedwallet.sol:LockedWallet",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 520,
								"contract": "contracts/Lockedwallet.sol:LockedWallet",
								"label": "startLockedWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 522,
								"contract": "contracts/Lockedwallet.sol:LockedWallet",
								"label": "_latestClaimMonth",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"initiateLockedWallet()": {
								"notice": "Initiate Locked Wallet"
							},
							"releaseClaimable(uint256[51])": {
								"notice": "Transfers tokens held by timelock to beneficiary."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "475:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "702:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "712:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "736:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "767:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "778:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "823:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "809:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:0"
									},
									"scope": 311,
									"src": "626:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1064:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1102:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1106:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1098:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1109:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1158:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1140:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:0"
									},
									"scope": 311,
									"src": "988:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1401:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1665:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1677:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1707:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1742:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1738:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1754:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1785:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:0"
									},
									"scope": 311,
									"src": "1325:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2043:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2077:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2089:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2120:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:0"
									},
									"scope": 311,
									"src": "1967:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2392:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2426:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2438:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2483:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2487:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2469:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:0"
									},
									"scope": 311,
									"src": "2316:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2808:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2818:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:0"
									},
									"scope": 311,
									"src": "2741:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3175:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3185:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:0"
									},
									"scope": 311,
									"src": "3108:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3518:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3528:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:0"
									},
									"scope": 311,
									"src": "3451:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3903:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3913:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3849:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:0"
									},
									"scope": 311,
									"src": "3836:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4452:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4462:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:0"
									},
									"scope": 311,
									"src": "4385:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5070:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5120:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5147:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:0"
									},
									"scope": 311,
									"src": "4945:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5785:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5834:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5861:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5701:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5720:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5776:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:0"
									},
									"scope": 311,
									"src": "5660:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6661:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6710:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6737:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:0"
									},
									"scope": 311,
									"src": "6536:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "467:6301:0",
							"usedErrors": []
						}
					],
					"src": "92:6677:0"
				},
				"id": 0
			},
			"contracts/Interfaces.sol": {
				"ast": {
					"absolutePath": "contracts/Interfaces.sol",
					"exportedSymbols": {
						"Beneficiary": [
							327
						],
						"ILockable": [
							506
						],
						"IStakable": [
							420
						],
						"IWhitelist": [
							478
						],
						"WhitelistStruct": [
							322
						]
					},
					"id": 507,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"canonicalName": "WhitelistStruct",
							"id": 322,
							"members": [
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "lockedAmount",
									"nameLocation": "101:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "93:20:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "93:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "127:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "119:14:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 316,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "119:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "isPhase1Claimed",
									"nameLocation": "144:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "139:20:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 318,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "139:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 321,
									"mutability": "mutable",
									"name": "latestClaimDay",
									"nameLocation": "173:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "165:22:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 320,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "165:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "WhitelistStruct",
							"nameLocation": "71:15:1",
							"nodeType": "StructDefinition",
							"scope": 507,
							"src": "64:126:1",
							"visibility": "public"
						},
						{
							"canonicalName": "Beneficiary",
							"id": 327,
							"members": [
								{
									"constant": false,
									"id": 324,
									"mutability": "mutable",
									"name": "user",
									"nameLocation": "225:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 327,
									"src": "217:12:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 323,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "217:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 326,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "243:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 327,
									"src": "235:14:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 325,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "235:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Beneficiary",
							"nameLocation": "199:11:1",
							"nodeType": "StructDefinition",
							"scope": 507,
							"src": "192:60:1",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStakable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IStakable",
							"nameLocation": "264:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cb79c2e1",
									"id": 332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakingPenaltyRate",
									"nameLocation": "289:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "307:2:1"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "333:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:9:1"
									},
									"scope": 420,
									"src": "280:62:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8891cf0d",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "airdropRate",
									"nameLocation": "357:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "368:2:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "394:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:9:1"
									},
									"scope": 420,
									"src": "348:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b87da76d",
									"id": 342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "airdropSince",
									"nameLocation": "418:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "430:2:1"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "456:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:9:1"
									},
									"scope": 420,
									"src": "409:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5f5300ff",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalVoters",
									"nameLocation": "480:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "491:2:1"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "517:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:9:1"
									},
									"scope": 420,
									"src": "471:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2d15cc04",
									"id": 356,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVoters",
									"nameLocation": "541:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "559:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "551:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "550:14:1"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "588:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "588:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "594:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "594:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:12:1"
									},
									"scope": 420,
									"src": "532:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a143a5f2",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votedUsers",
									"nameLocation": "640:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "659:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "651:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:12:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "686:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:9:1"
									},
									"scope": 420,
									"src": "631:64:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d2a569c3",
									"id": 366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startAirdrop",
									"nameLocation": "710:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "722:2:1"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:0:1"
									},
									"scope": 420,
									"src": "701:33:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d77b00b",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeTalaxAddress",
									"nameLocation": "749:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "776:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "768:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:15:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:0:1"
									},
									"scope": 420,
									"src": "740:52:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f93d4f8a",
									"id": 382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "807:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "830:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "822:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "852:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "844:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "stakePeriod",
												"nameLocation": "876:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "868:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "905:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "897:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:109:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "930:0:1"
									},
									"scope": 420,
									"src": "798:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8c63f97f",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changePenaltyFee",
									"nameLocation": "946:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "971:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "963:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:16:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:0:1"
									},
									"scope": 420,
									"src": "937:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5dbdf1b",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeAirdropPercentage",
									"nameLocation": "1003:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1035:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1027:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:16:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1051:0:1"
									},
									"scope": 420,
									"src": "994:58:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c23a5cea",
									"id": 401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStake",
									"nameLocation": "1067:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1089:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1081:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1080:14:1"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1113:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1122:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:18:1"
									},
									"scope": 420,
									"src": "1058:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "65f8c6c5",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimAirdrop",
									"nameLocation": "1146:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1167:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1159:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1159:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1158:14:1"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1191:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1190:9:1"
									},
									"scope": 420,
									"src": "1137:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1ec6b60a",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startVoting",
									"nameLocation": "1215:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1237:0:1"
									},
									"scope": 420,
									"src": "1206:32:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "671d2b75",
									"id": 416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVotingResult",
									"nameLocation": "1253:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1268:2:1"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "1294:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1294:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:6:1"
									},
									"scope": 420,
									"src": "1244:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fab2f86b",
									"id": 419,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stopVoting",
									"nameLocation": "1315:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1325:2:1"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1336:0:1"
									},
									"scope": 420,
									"src": "1306:31:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 507,
							"src": "254:1085:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWhitelist",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 478,
							"linearizedBaseContracts": [
								478
							],
							"name": "IWhitelist",
							"nameLocation": "1351:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "549dee0b",
									"id": 425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "privateSaleUsers",
									"nameLocation": "1377:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1393:2:1"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1419:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1418:9:1"
									},
									"scope": 478,
									"src": "1368:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8b2b423a",
									"id": 430,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "privateSaleAmount",
									"nameLocation": "1443:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1460:2:1"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "1486:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:9:1"
									},
									"scope": 478,
									"src": "1434:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "338dbf59",
									"id": 435,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startPrivateSale",
									"nameLocation": "1510:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1526:2:1"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "1552:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1551:9:1"
									},
									"scope": 478,
									"src": "1501:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d77b00b",
									"id": 440,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeTalaxAddress",
									"nameLocation": "1576:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "1603:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "1595:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1595:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1594:15:1"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1618:0:1"
									},
									"scope": 478,
									"src": "1567:52:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "81008568",
									"id": 453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nameLocation": "1634:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1654:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1646:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1646:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1645:14:1"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1720:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1741:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1741:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1762:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1762:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1780:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1706:91:1"
									},
									"scope": 478,
									"src": "1625:173:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "efdd8796",
									"id": 456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initiateWhitelist",
									"nameLocation": "1870:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1887:2:1"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1898:0:1"
									},
									"scope": 478,
									"src": "1861:38:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "96074e70",
									"id": 463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addBeneficiary",
									"nameLocation": "1914:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1937:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1929:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1929:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1943:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1943:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1928:30:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1967:0:1"
									},
									"scope": 478,
									"src": "1905:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7d3bca76",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteBeneficiary",
									"nameLocation": "1983:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2009:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2001:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:14:1"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2033:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2033:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:9:1"
									},
									"scope": 478,
									"src": "1974:68:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "005171f4",
									"id": 477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "releaseClaimable",
									"nameLocation": "2057:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2082:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2074:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2073:14:1"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2106:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2106:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2105:9:1"
									},
									"scope": 478,
									"src": "2048:67:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 507,
							"src": "1341:776:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILockable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 506,
							"linearizedBaseContracts": [
								506
							],
							"name": "ILockable",
							"nameLocation": "2129:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "38af3eed",
									"id": 483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nameLocation": "2154:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2165:2:1"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2191:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:9:1"
									},
									"scope": 506,
									"src": "2145:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d77b00b",
									"id": 488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeTalaxAddress",
									"nameLocation": "2215:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "2242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2234:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2233:15:1"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:1"
									},
									"scope": 506,
									"src": "2206:52:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b580aa9e",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startLockedWallet",
									"nameLocation": "2273:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2290:2:1"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "2316:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2315:9:1"
									},
									"scope": 506,
									"src": "2264:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c8cca41e",
									"id": 496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initiateLockedWallet",
									"nameLocation": "2340:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2360:2:1"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2371:0:1"
									},
									"scope": 506,
									"src": "2331:41:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0a95606e",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "releaseClaimable",
									"nameLocation": "2387:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2423:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "2404:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$51_memory_ptr",
													"typeString": "uint256[51]"
												},
												"typeName": {
													"baseType": {
														"id": 497,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2404:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 499,
													"length": {
														"hexValue": "3531",
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2412:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_51_by_1",
															"typeString": "int_const 51"
														},
														"value": "51"
													},
													"nodeType": "ArrayTypeName",
													"src": "2404:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$51_storage_ptr",
														"typeString": "uint256[51]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:27:1"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "2465:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:9:1"
									},
									"scope": 506,
									"src": "2378:96:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 507,
							"src": "2119:357:1",
							"usedErrors": []
						}
					],
					"src": "39:2438:1"
				},
				"id": 1
			},
			"contracts/Lockedwallet.sol": {
				"ast": {
					"absolutePath": "contracts/Lockedwallet.sol",
					"exportedSymbols": {
						"Beneficiary": [
							327
						],
						"ILockable": [
							506
						],
						"IStakable": [
							420
						],
						"IWhitelist": [
							478
						],
						"LockedWallet": [
							705
						],
						"SafeMath": [
							311
						],
						"WhitelistStruct": [
							322
						]
					},
					"id": 706,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 508,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 509,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 706,
							"sourceUnit": 312,
							"src": "64:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Interfaces.sol",
							"file": "./Interfaces.sol",
							"id": 510,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 706,
							"sourceUnit": 507,
							"src": "122:26:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 511,
										"name": "ILockable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 506,
										"src": "207:9:2"
									},
									"id": 512,
									"nodeType": "InheritanceSpecifier",
									"src": "207:9:2"
								}
							],
							"canonicalName": "LockedWallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 705,
							"linearizedBaseContracts": [
								705,
								506
							],
							"name": "LockedWallet",
							"nameLocation": "191:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 514,
									"mutability": "mutable",
									"name": "_amount",
									"nameLocation": "240:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 705,
									"src": "223:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 513,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "223:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 516,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "271:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 705,
									"src": "254:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 515,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "254:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										483
									],
									"constant": false,
									"functionSelector": "38af3eed",
									"id": 518,
									"mutability": "immutable",
									"name": "beneficiary",
									"nameLocation": "361:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 705,
									"src": "336:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 517,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "336:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										493
									],
									"constant": false,
									"functionSelector": "b580aa9e",
									"id": 520,
									"mutability": "mutable",
									"name": "startLockedWallet",
									"nameLocation": "394:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 705,
									"src": "379:32:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 519,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "379:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 522,
									"mutability": "mutable",
									"name": "_latestClaimMonth",
									"nameLocation": "435:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 705,
									"src": "418:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 521,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "418:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "510:99:2",
										"statements": [
											{
												"expression": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 529,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "520:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 530,
														"name": "amount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "530:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "520:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "520:17:2"
											},
											{
												"expression": {
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 533,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "547:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 534,
														"name": "beneficiary_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "561:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "547:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "547:26:2"
											},
											{
												"expression": {
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 537,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "583:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 538,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "592:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "592:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "583:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "583:19:2"
											}
										]
									},
									"id": 543,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "479:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "471:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "beneficiary_",
												"nameLocation": "496:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "488:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:39:2"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "510:0:2"
									},
									"scope": 705,
									"src": "459:150:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "757:60:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 547,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "775:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 549,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "789:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "775:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74205f6f776e6572",
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "797:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ee508ea70425a29c7610cd2f9910c217a86b66d8c07f515ad19475c1d71b59f",
																"typeString": "literal_string \"Not _owner\""
															},
															"value": "Not _owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ee508ea70425a29c7610cd2f9910c217a86b66d8c07f515ad19475c1d71b59f",
																"typeString": "literal_string \"Not _owner\""
															}
														],
														"id": 546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "767:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "767:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "767:43:2"
											}
										]
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_onlyTalax",
									"nameLocation": "730:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "740:2:2"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "757:0:2"
									},
									"scope": 705,
									"src": "721:96:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "873:30:2",
										"statements": [
											{
												"expression": {
													"id": 560,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 516,
													"src": "890:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 559,
												"id": 561,
												"nodeType": "Return",
												"src": "883:13:2"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "832:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "840:2:2"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "864:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "863:9:2"
									},
									"scope": 705,
									"src": "823:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "930:40:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 565,
														"name": "_onlyTalax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "940:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "940:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "940:12:2"
											},
											{
												"id": 568,
												"nodeType": "PlaceholderStatement",
												"src": "962:1:2"
											}
										]
									},
									"id": 570,
									"name": "onlyTalax",
									"nameLocation": "918:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "927:2:2"
									},
									"src": "909:61:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										488
									],
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "1144:31:2",
										"statements": [
											{
												"expression": {
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 577,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "1154:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 578,
														"name": "talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "1163:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1154:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "1154:14:2"
											}
										]
									},
									"functionSelector": "1d77b00b",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 575,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 574,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 570,
												"src": "1134:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1134:9:2"
										}
									],
									"name": "changeTalaxAddress",
									"nameLocation": "1091:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "1118:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "1110:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:15:2"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1144:0:2"
									},
									"scope": 705,
									"src": "1082:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										496
									],
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "1296:52:2",
										"statements": [
											{
												"expression": {
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 589,
														"name": "startLockedWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "1306:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 590,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1326:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1326:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1306:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "1306:35:2"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "1181:49:2",
										"text": " @notice Initiate Locked Wallet"
									},
									"functionSelector": "c8cca41e",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 587,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 586,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 570,
												"src": "1286:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1286:9:2"
										}
									],
									"name": "initiateLockedWallet",
									"nameLocation": "1245:20:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 585,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1277:8:2"
									},
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1265:2:2"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1296:0:2"
									},
									"scope": 705,
									"src": "1236:112:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "1417:63:2",
										"statements": [
											{
												"id": 606,
												"nodeType": "UncheckedBlock",
												"src": "1427:47:2",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 602,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "1458:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1462:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1458:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 601,
														"id": 605,
														"nodeType": "Return",
														"src": "1451:12:2"
													}
												]
											}
										]
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unsafeInc",
									"nameLocation": "1363:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1382:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1374:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1374:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:11:2"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1408:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1407:9:2"
									},
									"scope": 705,
									"src": "1354:126:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "1695:420:2",
										"statements": [
											{
												"assignments": [
													619
												],
												"declarations": [
													{
														"constant": false,
														"id": 619,
														"mutability": "mutable",
														"name": "months",
														"nameLocation": "1713:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "1705:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 618,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1705:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 627,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 620,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1723:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1723:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 622,
																	"name": "startLockedWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "1741:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1723:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 624,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1722:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3330",
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1762:7:2",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2592000_by_1",
															"typeString": "int_const 2592000"
														},
														"value": "30"
													},
													"src": "1722:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1705:64:2"
											},
											{
												"assignments": [
													629
												],
												"declarations": [
													{
														"constant": false,
														"id": 629,
														"mutability": "mutable",
														"name": "claimable",
														"nameLocation": "1787:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "1779:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 628,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1779:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"nodeType": "VariableDeclarationStatement",
												"src": "1779:17:2"
											},
											{
												"body": {
													"id": 655,
													"nodeType": "Block",
													"src": "1875:109:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 644,
																	"name": "_latestClaimMonth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "1893:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3531",
																	"id": 645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1914:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_51_by_1",
																		"typeString": "int_const 51"
																	},
																	"value": "51"
																},
																"src": "1893:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 654,
															"nodeType": "IfStatement",
															"src": "1889:85:2",
															"trueBody": {
																"id": 653,
																"nodeType": "Block",
																"src": "1918:56:2",
																"statements": [
																	{
																		"expression": {
																			"id": 651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 647,
																				"name": "claimable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 629,
																				"src": "1936:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 648,
																					"name": "amount_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "1949:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$51_memory_ptr",
																						"typeString": "uint256[51] memory"
																					}
																				},
																				"id": 650,
																				"indexExpression": {
																					"id": 649,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "1957:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1949:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1936:23:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 652,
																		"nodeType": "ExpressionStatement",
																		"src": "1936:23:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 635,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "1843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 636,
														"name": "months",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "1848:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1843:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 656,
												"initializationExpression": {
													"assignments": [
														632
													],
													"declarations": [
														{
															"constant": false,
															"id": 632,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1820:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 656,
															"src": "1812:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 631,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1812:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 634,
													"initialValue": {
														"id": 633,
														"name": "_latestClaimMonth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "1824:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1812:29:2"
												},
												"loopExpression": {
													"expression": {
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 638,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "1856:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"id": 640,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "1871:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 639,
																"name": "_unsafeInc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "1860:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1860:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1856:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 643,
													"nodeType": "ExpressionStatement",
													"src": "1856:17:2"
												},
												"nodeType": "ForStatement",
												"src": "1807:177:2"
											},
											{
												"expression": {
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 657,
														"name": "_latestClaimMonth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "1994:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 658,
															"name": "months",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "2014:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2023:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2014:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1994:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "1994:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 664,
																"name": "claimable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "2043:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2056:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2043:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d20796574",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2059:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9",
																"typeString": "literal_string \"Nothing to claim yet\""
															},
															"value": "Nothing to claim yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9",
																"typeString": "literal_string \"Nothing to claim yet\""
															}
														],
														"id": 663,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2035:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "2035:47:2"
											},
											{
												"expression": {
													"id": 670,
													"name": "claimable",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 629,
													"src": "2099:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 617,
												"id": 671,
												"nodeType": "Return",
												"src": "2092:16:2"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "1486:94:2",
										"text": "  @dev \t\tMain Functions\n  @return \tClaimable amount from Locked Wallet"
									},
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateClaimableAmount",
									"nameLocation": "1594:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "1639:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "1620:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$51_memory_ptr",
													"typeString": "uint256[51]"
												},
												"typeName": {
													"baseType": {
														"id": 610,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1620:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 612,
													"length": {
														"hexValue": "3531",
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_51_by_1",
															"typeString": "int_const 51"
														},
														"value": "51"
													},
													"nodeType": "ArrayTypeName",
													"src": "1620:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$51_storage_ptr",
														"typeString": "uint256[51]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1619:28:2"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "1682:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1681:9:2"
									},
									"scope": 705,
									"src": "1585:530:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										505
									],
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "2337:376:2",
										"statements": [
											{
												"assignments": [
													687
												],
												"declarations": [
													{
														"constant": false,
														"id": 687,
														"mutability": "mutable",
														"name": "claimableLockedAmount",
														"nameLocation": "2355:21:2",
														"nodeType": "VariableDeclaration",
														"scope": 703,
														"src": "2347:29:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 686,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2347:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 691,
												"initialValue": {
													"arguments": [
														{
															"id": 689,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "2405:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$51_memory_ptr",
																"typeString": "uint256[51] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$51_memory_ptr",
																"typeString": "uint256[51] memory"
															}
														],
														"id": 688,
														"name": "_calculateClaimableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "2379:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$51_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256[51] memory) returns (uint256)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2379:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2347:65:2"
											},
											{
												"expression": {
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 692,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "2505:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 695,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "2541:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 696,
																"name": "claimableLockedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "2562:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "4c6f636b656477616c6c65743a2043616e6e6f742073756273747261637420746f74616c20616d6f756e74207769746820636c61696d61626c65",
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2597:60:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_bc7335ef5a2766e252b0d20841b8a31e77013ede9c2a48b3b61a9c597162b79a",
																	"typeString": "literal_string \"Lockedwallet: Cannot substract total amount with claimable\""
																},
																"value": "Lockedwallet: Cannot substract total amount with claimable"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_bc7335ef5a2766e252b0d20841b8a31e77013ede9c2a48b3b61a9c597162b79a",
																	"typeString": "literal_string \"Lockedwallet: Cannot substract total amount with claimable\""
																}
															],
															"expression": {
																"id": 693,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2515:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 260,
															"src": "2515:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2515:152:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2505:162:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "2505:162:2"
											},
											{
												"expression": {
													"id": 701,
													"name": "claimableLockedAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 687,
													"src": "2685:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 685,
												"id": 702,
												"nodeType": "Return",
												"src": "2678:28:2"
											}
										]
									},
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "2121:76:2",
										"text": " @notice Transfers tokens held by timelock to beneficiary."
									},
									"functionSelector": "0a95606e",
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 682,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 681,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 570,
												"src": "2297:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2297:9:2"
										}
									],
									"name": "releaseClaimable",
									"nameLocation": "2211:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 680,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2280:8:2"
									},
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2247:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "2228:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$51_memory_ptr",
													"typeString": "uint256[51]"
												},
												"typeName": {
													"baseType": {
														"id": 675,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2228:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 677,
													"length": {
														"hexValue": "3531",
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2236:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_51_by_1",
															"typeString": "int_const 51"
														},
														"value": "51"
													},
													"nodeType": "ArrayTypeName",
													"src": "2228:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$51_storage_ptr",
														"typeString": "uint256[51]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:27:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "2324:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:2"
									},
									"scope": 705,
									"src": "2202:511:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 706,
							"src": "182:2533:2",
							"usedErrors": []
						}
					],
					"src": "39:2677:2"
				},
				"id": 2
			}
		}
	}
}