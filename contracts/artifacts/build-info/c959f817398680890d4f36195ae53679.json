{
	"id": "c959f817398680890d4f36195ae53679",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Stakable.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.11;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\nerror Voting___votingStatus();\n\ncontract Stakable {\n    using SafeMath for uint256;\n    /**\n     * @notice Constructor since this contract is not ment to be used without inheritance\n     * push once to stakeholders for it to work proplerly\n     */\n\n    struct Voter {\n        bool votingRight;\n        mapping(uint256 => bool) voted;\n    }\n\n    uint256 public stakingPenaltyRate;\n    uint256 public airdropRate;\n    uint256 public airdropSince;\n\n    bool private _votingStatus;\n    uint256 private _votingId;\n    uint256 public totalVoters;\n    mapping(address => Voter) public voters;\n    mapping(uint256 => uint256) public votedUsers;\n\n    constructor() {\n        //Staking penalty and Airdrop in 0.1 times percentage\n        stakingPenaltyRate = 15;\n        airdropRate = 80;\n    }\n\n    /* ------------------------------------------ Modifier ------------------------------------------ */\n    function _check_votingStatus() internal view {\n        require(_votingStatus, \"Voting is not available\");\n    }\n\n    modifier _votingStatusTrue() {\n        _check_votingStatus();\n        _;\n    }\n\n    /**\n     * @notice\n     * A stake struct is used to represent the way we store stakes,\n     * A Stake will contain the users address, the amount staked and a timestamp,\n     * Since which is when the stake was made\n     */\n    struct Stake {\n        address user;\n        uint256 amount;\n        uint256 since;\n        // This claimable field is new and used to tell how big of a reward is currently available\n        uint256 claimable;\n        uint256 claimable_airdrop;\n        uint256 rewardAPY;\n        uint256 releaseTime;\n    }\n    /**\n     * @notice Stakeholder is a staker that has active stakes\n     */\n    struct Stakeholder {\n        Stake stake;\n        address user;\n        uint256 latestClaimDrop;\n    }\n\n    /**\n     * @notice\n     * StakingSummary is a struct that is used to contain all stakes performed by a certain account\n     */\n    struct StakingSummary {\n        uint256 total_amount;\n        uint256 penalty;\n        Stake stake;\n    }\n\n    /**\n     * @notice\n     * stakes is used to keep track of the INDEX for the stakers in the stakes array\n     */\n    mapping(address => Stakeholder) internal stakeholders;\n\n    /**\n     * @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\n     */\n    event Staked(\n        address indexed user,\n        uint256 amount,\n        uint256 timestamp,\n        uint256 releaseTime\n    );\n\n    event PenaltyChanged(uint256 amount);\n    event AirdropChanged(uint256 amount);\n\n    function _startAirdropSince() internal {\n        airdropSince = block.timestamp;\n    }\n\n    function _calculateWeek(uint256 input) internal view returns (uint256) {\n        return (block.timestamp - input).div(7 days);\n    }\n\n    /**\n     * @notice\n     * _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n     * StakeID\n     */\n    function _stake(\n        address _user,\n        uint256 _amount,\n        uint256 _stakePeriod,\n        uint256 _rewardRate\n    ) internal {\n        // Simple check so that user does not stake 0\n        require(_amount > 0, \"Cannot stake nothing\");\n        require(stakeholders[_user].stake.amount == 0, \"User is a staker\");\n\n        totalVoters += 1;\n        voters[_user].votingRight = true;\n\n        // block.timestamp = timestamp of the current block in seconds since the epoch\n        uint256 timestamp = block.timestamp;\n\n        // Use the index to push a new Stake\n        // push a newly created Stake with the current block timestamp.\n        stakeholders[_user].stake = Stake(\n            _user,\n            _amount,\n            timestamp,\n            0,\n            0,\n            _rewardRate,\n            (_stakePeriod + timestamp)\n        );\n        // Emit an event that the stake has occured\n        emit Staked(_user, _amount, timestamp, (_stakePeriod + timestamp));\n    }\n\n    function _changePenaltyFee(uint256 amount_) internal {\n        require(amount_ <= 30, \"Penalty fee cannot exceed 3 percent.\");\n        stakingPenaltyRate = amount_;\n        emit PenaltyChanged(amount_);\n    }\n\n    function _changeAirdropPercentage(uint256 amount_) internal {\n        require(amount_ <= 200, \"Airdrop Percentage cannot exceed 20 percent.\");\n        airdropRate = amount_;\n        emit AirdropChanged(amount_);\n    }\n\n    function calculateStakingDuration(uint256 since_)\n        internal\n        view\n        returns (uint256)\n    {\n        require(since_ > 0, \"Error timestamp 0\");\n        return\n            SafeMath.div(\n                (block.timestamp - since_) * 1e24,\n                365 days,\n                \"Error cannot divide timestamp\"\n            );\n    }\n\n    function calculateStakeReward(Stake memory user_stake)\n        internal\n        view\n        returns (uint256)\n    {\n        if (user_stake.amount == 0) {\n            return 0;\n        }\n\n        return\n            (user_stake.amount *\n                user_stake.rewardAPY *\n                calculateStakingDuration(user_stake.since)) / 1e26;\n    }\n\n    function calculatePenalty(uint256 amount, uint256 reward)\n        internal\n        view\n        returns (uint256, uint256)\n    {\n        return (\n            SafeMath.div(SafeMath.mul(amount, stakingPenaltyRate), 1000),\n            SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000)\n        );\n    }\n\n    function calculateStakingWithPenalty(uint256 amount, uint256 reward)\n        internal\n        view\n        returns (uint256, uint256)\n    {\n        if (amount == 0) {\n            return (0, 0);\n        }\n\n        (uint256 amount_penalty, uint256 reward_penalty) = calculatePenalty(\n            amount,\n            reward\n        );\n        return (\n            SafeMath.sub(amount, amount_penalty),\n            SafeMath.sub(reward, reward_penalty)\n        );\n    }\n\n    /**\n     * @notice\n     * withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n     * Notice index of the stake is the users stake counter, starting at 0 for the first stake\n     * Will return the amount to MINT onto the acount\n     * Will also calculateStakeReward and reset timer\n     */\n    function _withdrawStake(address _user) internal returns (uint256, uint256) {\n        // Grab user_index which is the index to use to grab the Stake[]\n        Stake memory stake = stakeholders[_user].stake;\n\n        uint256 reward = calculateStakeReward(stake);\n\n        delete stakeholders[_user];\n\n        if (stake.releaseTime > block.timestamp) {\n            totalVoters -= 1;\n            delete voters[_user].voted[_votingId];\n            return calculateStakingWithPenalty(stake.amount, reward);\n        }\n\n        totalVoters -= 1;\n        delete voters[_user].voted[_votingId];\n        return (stake.amount, reward);\n    }\n\n    function hasStake(address _staker)\n        external\n        view\n        returns (StakingSummary memory)\n    {\n        Stakeholder memory data = stakeholders[_staker];\n        StakingSummary memory summary = StakingSummary(0, 0, data.stake);\n        require(summary.stake.amount != 0, \"No stake found\");\n\n        uint256 availableReward = calculateStakeReward(summary.stake);\n        uint256 penalty;\n\n        if (summary.stake.releaseTime > block.timestamp) {\n            (uint256 amount_penalty, uint256 reward_penalty) = calculatePenalty(\n                summary.stake.amount,\n                availableReward\n            );\n            penalty = amount_penalty + reward_penalty;\n        }\n\n        if (_calculateWeek(data.latestClaimDrop) > 0) {\n            uint256 airdrop = _calculateAirdrop(summary.stake.amount);\n            summary.stake.claimable_airdrop = airdrop;\n        } else {\n            summary.stake.claimable_airdrop = 0;\n        }\n\n        summary.stake.claimable = availableReward;\n        summary.penalty = penalty;\n        summary.total_amount = summary.stake.amount;\n\n        return summary;\n    }\n\n    /* -------------------------------------- Airdrop functions ------------------------------------- */\n    function _calculateAirdrop(uint256 stakeAmount)\n        internal\n        view\n        returns (uint256)\n    {\n        return ((stakeAmount * airdropRate) / 1000) / 52 weeks;\n    }\n\n    function _claimAirdrop(address _staker) internal view returns (uint256) {\n        Stakeholder memory stakeholder = stakeholders[_staker];\n\n        require(stakeholder.stake.amount > 0, \"No stake found\");\n\n        require(\n            _calculateWeek(stakeholder.latestClaimDrop) > 0,\n            \"Claimable once a week\"\n        );\n\n        stakeholder.stake.claimable_airdrop = 0;\n        stakeholder.latestClaimDrop = block.timestamp;\n\n        return _calculateAirdrop(stakeholder.stake.amount);\n    }\n\n    function airdropWeek() public view returns (uint256) {\n        if (airdropSince != 0) {\n            return (block.timestamp - airdropSince) / 7 days;\n        } else {\n            return 0;\n        }\n    }\n\n    /* -------------------------------------- Voting functions -------------------------------------- */\n    function _startVoting() internal {\n        require(_votingStatus == false, \"Voting is already running\");\n        _votingStatus = true;\n        _votingId += 1;\n    }\n\n    function isVoter(address _staker) public view returns (bool) {\n        require(_staker != address(0), \"Invalid address\");\n\n        return voters[_staker].votingRight;\n    }\n\n    function vote() public _votingStatusTrue {\n        require(voters[msg.sender].votingRight == true, \"You are not a voter\");\n        require(\n            voters[msg.sender].voted[_votingId] == false,\n            \"You have voted before\"\n        );\n\n        voters[msg.sender].voted[_votingId] = true;\n        votedUsers[_votingId] += 1;\n    }\n\n    function retractVote() public _votingStatusTrue {\n        require(voters[msg.sender].votingRight == true, \"You are not a voter\");\n        require(\n            voters[msg.sender].voted[_votingId] == true,\n            \"You have not voted yet\"\n        );\n\n        voters[msg.sender].voted[_votingId] == false;\n        votedUsers[_votingId] -= 1;\n    }\n\n    function _getVotingResult() internal view _votingStatusTrue returns (bool) {\n        require(totalVoters > 1, \"Not enough voters\");\n        uint256 half_voters = SafeMath.div(SafeMath.mul(totalVoters, 5), 10);\n\n        if (votedUsers[_votingId] > half_voters) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function _stopVoting() internal _votingStatusTrue {\n        _votingStatus = false;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xF7F CALLDATACOPY GASLIMIT ISZERO 0x27 PUSH29 0x40DC0699C995F2B4C7F397D9F3BFD9AE759628B3F81D334D64736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xF7F CALLDATACOPY GASLIMIT ISZERO 0x27 PUSH29 0x40DC0699C995F2B4C7F397D9F3BFD9AE759628B3F81D334D64736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Stakable.sol": {
				"Stakable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AirdropChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PenaltyChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "airdropRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropSince",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropWeek",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "hasStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "total_amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "penalty",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "user",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "since",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable_airdrop",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "rewardAPY",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "releaseTime",
													"type": "uint256"
												}
											],
											"internalType": "struct Stakable.Stake",
											"name": "stake",
											"type": "tuple"
										}
									],
									"internalType": "struct Stakable.StakingSummary",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "isVoter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "retractVote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingPenaltyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVoters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "votedUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "votingRight",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Stakable.sol\":155:10769  contract Stakable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Stakable.sol\":765:907  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Stakable.sol\":872:874  15 */\n  0x0f\n    /* \"contracts/Stakable.sol\":851:869  stakingPenaltyRate */\n  0x00\n    /* \"contracts/Stakable.sol\":851:874  stakingPenaltyRate = 15 */\n  sstore\n    /* \"contracts/Stakable.sol\":898:900  80 */\n  0x50\n    /* \"contracts/Stakable.sol\":884:895  airdropRate */\n  0x01\n    /* \"contracts/Stakable.sol\":884:900  airdropRate = 80 */\n  sstore\n    /* \"contracts/Stakable.sol\":155:10769  contract Stakable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Stakable.sol\":155:10769  contract Stakable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa3ec138d\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xcb79c2e1\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xcb79c2e1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xcbb3e152\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe73e14bf\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0xa3ec138d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa7771ee3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb87da76d\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x632a9a52\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x632a9a52\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8891cf0d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa143a5f2\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x070c8b74\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5f5300ff\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Stakable.sol\":9974:10322  function retractVote() public _votingStatusTrue {... */\n    tag_3:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/Stakable.sol\":636:662  uint256 public totalVoters */\n    tag_4:\n      tag_19\n      sload(0x05)\n      dup2\n      jump\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Stakable.sol\":636:662  uint256 public totalVoters */\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":9629:9968  function vote() public _votingStatusTrue {... */\n    tag_5:\n      tag_17\n      tag_24\n      jump\t// in\n        /* \"contracts/Stakable.sol\":507:533  uint256 public airdropRate */\n    tag_6:\n      tag_19\n      sload(0x01)\n      dup2\n      jump\n        /* \"contracts/Stakable.sol\":713:758  mapping(uint256 => uint256) public votedUsers */\n    tag_7:\n      tag_19\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Stakable.sol\":668:707  mapping(address => Voter) public voters */\n    tag_8:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":860:874   */\n      swap1\n      iszero\n        /* \"#utility.yul\":853:875   */\n      iszero\n        /* \"#utility.yul\":835:876   */\n      dup2\n      mstore\n        /* \"#utility.yul\":823:825   */\n      0x20\n        /* \"#utility.yul\":808:826   */\n      add\n        /* \"contracts/Stakable.sol\":668:707  mapping(address => Voter) public voters */\n      tag_21\n        /* \"#utility.yul\":695:882   */\n      jump\n        /* \"contracts/Stakable.sol\":9451:9623  function isVoter(address _staker) public view returns (bool) {... */\n    tag_9:\n      tag_33\n      tag_40\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"contracts/Stakable.sol\":539:566  uint256 public airdropSince */\n    tag_10:\n      tag_19\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/Stakable.sol\":468:501  uint256 public stakingPenaltyRate */\n    tag_11:\n      tag_19\n      sload(0x00)\n      dup2\n      jump\n        /* \"contracts/Stakable.sol\":8966:9170  function airdropWeek() public view returns (uint256) {... */\n    tag_12:\n      tag_19\n      tag_50\n      jump\t// in\n        /* \"contracts/Stakable.sol\":7042:8163  function hasStake(address _staker)... */\n    tag_13:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n        /* \"#utility.yul\":1041:1045   */\n      0x00\n        /* \"#utility.yul\":1083:1086   */\n      0x0120\n        /* \"#utility.yul\":1072:1081   */\n      dup3\n        /* \"#utility.yul\":1068:1087   */\n      add\n        /* \"#utility.yul\":1060:1087   */\n      swap1\n      pop\n        /* \"#utility.yul\":1120:1126   */\n      dup3\n        /* \"#utility.yul\":1114:1127   */\n      mload\n        /* \"#utility.yul\":1103:1112   */\n      dup3\n        /* \"#utility.yul\":1096:1128   */\n      mstore\n        /* \"#utility.yul\":1184:1188   */\n      0x20\n        /* \"#utility.yul\":1176:1182   */\n      dup4\n        /* \"#utility.yul\":1172:1189   */\n      add\n        /* \"#utility.yul\":1166:1190   */\n      mload\n        /* \"#utility.yul\":1159:1163   */\n      0x20\n        /* \"#utility.yul\":1148:1157   */\n      dup4\n        /* \"#utility.yul\":1144:1164   */\n      add\n        /* \"#utility.yul\":1137:1191   */\n      mstore\n        /* \"#utility.yul\":1238:1242   */\n      0x40\n        /* \"#utility.yul\":1230:1236   */\n      dup4\n        /* \"#utility.yul\":1226:1243   */\n      add\n        /* \"#utility.yul\":1220:1244   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1292:1304   */\n      dup2\n        /* \"#utility.yul\":1286:1305   */\n      mload\n        /* \"#utility.yul\":1282:1350   */\n      and\n        /* \"#utility.yul\":1275:1279   */\n      0x40\n        /* \"#utility.yul\":1264:1273   */\n      dup5\n        /* \"#utility.yul\":1260:1280   */\n      add\n        /* \"#utility.yul\":1253:1351   */\n      mstore\n        /* \"#utility.yul\":1411:1415   */\n      0x20\n        /* \"#utility.yul\":1397:1409   */\n      dup2\n        /* \"#utility.yul\":1393:1416   */\n      add\n        /* \"#utility.yul\":1387:1417   */\n      mload\n        /* \"#utility.yul\":1382:1384   */\n      0x60\n        /* \"#utility.yul\":1371:1380   */\n      dup5\n        /* \"#utility.yul\":1367:1385   */\n      add\n        /* \"#utility.yul\":1360:1418   */\n      mstore\n        /* \"#utility.yul\":1479:1483   */\n      0x40\n        /* \"#utility.yul\":1465:1477   */\n      dup2\n        /* \"#utility.yul\":1461:1484   */\n      add\n        /* \"#utility.yul\":1455:1485   */\n      mload\n        /* \"#utility.yul\":1449:1452   */\n      0x80\n        /* \"#utility.yul\":1438:1447   */\n      dup5\n        /* \"#utility.yul\":1434:1453   */\n      add\n        /* \"#utility.yul\":1427:1486   */\n      mstore\n        /* \"#utility.yul\":1547:1549   */\n      0x60\n        /* \"#utility.yul\":1533:1545   */\n      dup2\n        /* \"#utility.yul\":1529:1550   */\n      add\n        /* \"#utility.yul\":1523:1551   */\n      mload\n        /* \"#utility.yul\":1517:1520   */\n      0xa0\n        /* \"#utility.yul\":1506:1515   */\n      dup5\n        /* \"#utility.yul\":1502:1521   */\n      add\n        /* \"#utility.yul\":1495:1552   */\n      mstore\n        /* \"#utility.yul\":1613:1616   */\n      0x80\n        /* \"#utility.yul\":1599:1611   */\n      dup2\n        /* \"#utility.yul\":1595:1617   */\n      add\n        /* \"#utility.yul\":1589:1618   */\n      mload\n        /* \"#utility.yul\":1583:1586   */\n      0xc0\n        /* \"#utility.yul\":1572:1581   */\n      dup5\n        /* \"#utility.yul\":1568:1587   */\n      add\n        /* \"#utility.yul\":1561:1619   */\n      mstore\n        /* \"#utility.yul\":1680:1683   */\n      0xa0\n        /* \"#utility.yul\":1666:1678   */\n      dup2\n        /* \"#utility.yul\":1662:1684   */\n      add\n        /* \"#utility.yul\":1656:1685   */\n      mload\n        /* \"#utility.yul\":1650:1653   */\n      0xe0\n        /* \"#utility.yul\":1639:1648   */\n      dup5\n        /* \"#utility.yul\":1635:1654   */\n      add\n        /* \"#utility.yul\":1628:1686   */\n      mstore\n        /* \"#utility.yul\":1747:1750   */\n      0xc0\n        /* \"#utility.yul\":1733:1745   */\n      dup2\n        /* \"#utility.yul\":1729:1751   */\n      add\n        /* \"#utility.yul\":1723:1752   */\n      mload\n        /* \"#utility.yul\":1717:1720   */\n      0x0100\n        /* \"#utility.yul\":1706:1715   */\n      dup5\n        /* \"#utility.yul\":1702:1721   */\n      add\n        /* \"#utility.yul\":1695:1753   */\n      mstore\n      pop\n        /* \"#utility.yul\":887:1759   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"contracts/Stakable.sol\":9974:10322  function retractVote() public _votingStatusTrue {... */\n    tag_18:\n        /* \"contracts/Stakable.sol\":1174:1195  _check_votingStatus() */\n      tag_58\n        /* \"contracts/Stakable.sol\":1174:1193  _check_votingStatus */\n      tag_59\n        /* \"contracts/Stakable.sol\":1174:1195  _check_votingStatus() */\n      jump\t// in\n    tag_58:\n        /* \"contracts/Stakable.sol\":10047:10057  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":10040:10058  voters[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":10040:10046  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":10040:10058  voters[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":10040:10070  voters[msg.sender].votingRight */\n      sload\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":10040:10078  voters[msg.sender].votingRight == true */\n      iszero\n      iszero\n        /* \"contracts/Stakable.sol\":10040:10070  voters[msg.sender].votingRight */\n      0x01\n        /* \"contracts/Stakable.sol\":10040:10078  voters[msg.sender].votingRight == true */\n      eq\n        /* \"contracts/Stakable.sol\":10032:10102  require(voters[msg.sender].votingRight == true, \"You are not a voter\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1966:1968   */\n      0x20\n        /* \"contracts/Stakable.sol\":10032:10102  require(voters[msg.sender].votingRight == true, \"You are not a voter\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1948:1969   */\n      mstore\n        /* \"#utility.yul\":2005:2007   */\n      0x13\n        /* \"#utility.yul\":1985:2003   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1978:2008   */\n      mstore\n        /* \"#utility.yul\":2044:2065   */\n      0x596f7520617265206e6f74206120766f74657200000000000000000000000000\n        /* \"#utility.yul\":2024:2042   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2017:2066   */\n      mstore\n        /* \"#utility.yul\":2083:2101   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":10032:10102  require(voters[msg.sender].votingRight == true, \"You are not a voter\") */\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"contracts/Stakable.sol\":10140:10150  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":10133:10151  voters[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":10133:10139  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":10133:10151  voters[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":10158:10167  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":10133:10168  voters[msg.sender].voted[_votingId] */\n      dup5\n      mstore\n        /* \"contracts/Stakable.sol\":10133:10157  voters[msg.sender].voted */\n      0x01\n      swap1\n      dup2\n      add\n        /* \"contracts/Stakable.sol\":10133:10168  voters[msg.sender].voted[_votingId] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":10133:10176  voters[msg.sender].voted[_votingId] == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Stakable.sol\":10112:10224  require(... */\n      tag_64\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2314:2316   */\n      0x20\n        /* \"contracts/Stakable.sol\":10112:10224  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2296:2317   */\n      mstore\n        /* \"#utility.yul\":2353:2355   */\n      0x16\n        /* \"#utility.yul\":2333:2351   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2326:2356   */\n      mstore\n        /* \"#utility.yul\":2392:2416   */\n      0x596f752068617665206e6f7420766f7465642079657400000000000000000000\n        /* \"#utility.yul\":2372:2390   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2365:2417   */\n      mstore\n        /* \"#utility.yul\":2434:2452   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":10112:10224  require(... */\n      tag_62\n        /* \"#utility.yul\":2112:2458   */\n      jump\n        /* \"contracts/Stakable.sol\":10112:10224  require(... */\n    tag_64:\n        /* \"contracts/Stakable.sol\":10260:10269  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":10235:10253  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable.sol\":10235:10270  voters[msg.sender].voted[_votingId] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":10289:10299  votedUsers */\n      0x07\n        /* \"contracts/Stakable.sol\":10235:10253  voters[msg.sender] */\n      0x20\n        /* \"contracts/Stakable.sol\":10289:10310  votedUsers[_votingId] */\n      mstore\n        /* \"contracts/Stakable.sol\":10235:10253  voters[msg.sender] */\n      0x40\n        /* \"contracts/Stakable.sol\":10289:10310  votedUsers[_votingId] */\n      dup2\n      keccak256\n        /* \"contracts/Stakable.sol\":10289:10315  votedUsers[_votingId] -= 1 */\n      dup1\n      sload\n        /* \"contracts/Stakable.sol\":10235:10259  voters[msg.sender].voted */\n      0x01\n      swap3\n        /* \"contracts/Stakable.sol\":10235:10253  voters[msg.sender] */\n      swap1\n        /* \"contracts/Stakable.sol\":10289:10315  votedUsers[_votingId] -= 1 */\n      tag_67\n      swap1\n        /* \"contracts/Stakable.sol\":10235:10259  voters[msg.sender].voted */\n      dup5\n      swap1\n        /* \"contracts/Stakable.sol\":10289:10315  votedUsers[_votingId] -= 1 */\n      tag_68\n      jump\t// in\n    tag_67:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":9974:10322  function retractVote() public _votingStatusTrue {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":9629:9968  function vote() public _votingStatusTrue {... */\n    tag_24:\n        /* \"contracts/Stakable.sol\":1174:1195  _check_votingStatus() */\n      tag_70\n        /* \"contracts/Stakable.sol\":1174:1193  _check_votingStatus */\n      tag_59\n        /* \"contracts/Stakable.sol\":1174:1195  _check_votingStatus() */\n      jump\t// in\n    tag_70:\n        /* \"contracts/Stakable.sol\":9695:9705  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":9688:9706  voters[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":9688:9694  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":9688:9706  voters[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":9688:9718  voters[msg.sender].votingRight */\n      sload\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":9688:9726  voters[msg.sender].votingRight == true */\n      iszero\n      iszero\n        /* \"contracts/Stakable.sol\":9688:9718  voters[msg.sender].votingRight */\n      0x01\n        /* \"contracts/Stakable.sol\":9688:9726  voters[msg.sender].votingRight == true */\n      eq\n        /* \"contracts/Stakable.sol\":9680:9750  require(voters[msg.sender].votingRight == true, \"You are not a voter\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1966:1968   */\n      0x20\n        /* \"contracts/Stakable.sol\":9680:9750  require(voters[msg.sender].votingRight == true, \"You are not a voter\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1948:1969   */\n      mstore\n        /* \"#utility.yul\":2005:2007   */\n      0x13\n        /* \"#utility.yul\":1985:2003   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1978:2008   */\n      mstore\n        /* \"#utility.yul\":2044:2065   */\n      0x596f7520617265206e6f74206120766f74657200000000000000000000000000\n        /* \"#utility.yul\":2024:2042   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2017:2066   */\n      mstore\n        /* \"#utility.yul\":2083:2101   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":9680:9750  require(voters[msg.sender].votingRight == true, \"You are not a voter\") */\n      tag_62\n        /* \"#utility.yul\":1764:2107   */\n      jump\n        /* \"contracts/Stakable.sol\":9680:9750  require(voters[msg.sender].votingRight == true, \"You are not a voter\") */\n    tag_72:\n        /* \"contracts/Stakable.sol\":9788:9798  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":9781:9799  voters[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":9781:9787  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":9781:9799  voters[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":9806:9815  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":9781:9816  voters[msg.sender].voted[_votingId] */\n      dup5\n      mstore\n        /* \"contracts/Stakable.sol\":9781:9805  voters[msg.sender].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":9781:9816  voters[msg.sender].voted[_votingId] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":9781:9825  voters[msg.sender].voted[_votingId] == false */\n      iszero\n        /* \"contracts/Stakable.sol\":9760:9872  require(... */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2984:2986   */\n      0x20\n        /* \"contracts/Stakable.sol\":9760:9872  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2966:2987   */\n      mstore\n        /* \"#utility.yul\":3023:3025   */\n      0x15\n        /* \"#utility.yul\":3003:3021   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2996:3026   */\n      mstore\n        /* \"#utility.yul\":3062:3085   */\n      0x596f75206861766520766f746564206265666f72650000000000000000000000\n        /* \"#utility.yul\":3042:3060   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3035:3086   */\n      mstore\n        /* \"#utility.yul\":3103:3121   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":9760:9872  require(... */\n      tag_62\n        /* \"#utility.yul\":2782:3127   */\n      jump\n        /* \"contracts/Stakable.sol\":9760:9872  require(... */\n    tag_74:\n        /* \"contracts/Stakable.sol\":9890:9900  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":9883:9901  voters[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":9883:9889  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":9883:9901  voters[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":9908:9917  _votingId */\n      0x04\n      dup1\n      sload\n        /* \"contracts/Stakable.sol\":9883:9918  voters[msg.sender].voted[_votingId] */\n      dup6\n      mstore\n        /* \"contracts/Stakable.sol\":9921:9925  true */\n      0x01\n        /* \"contracts/Stakable.sol\":9883:9907  voters[msg.sender].voted */\n      swap2\n      dup3\n      add\n        /* \"contracts/Stakable.sol\":9883:9918  voters[msg.sender].voted[_votingId] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/Stakable.sol\":9883:9925  voters[msg.sender].voted[_votingId] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup4\n      or\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":9946:9955  _votingId */\n      sload\n        /* \"contracts/Stakable.sol\":9935:9956  votedUsers[_votingId] */\n      dup5\n      mstore\n        /* \"contracts/Stakable.sol\":9935:9945  votedUsers */\n      0x07\n        /* \"contracts/Stakable.sol\":9935:9956  votedUsers[_votingId] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"contracts/Stakable.sol\":9935:9961  votedUsers[_votingId] += 1 */\n      dup1\n      sload\n        /* \"contracts/Stakable.sol\":9921:9925  true */\n      swap2\n      swap3\n        /* \"contracts/Stakable.sol\":9935:9956  votedUsers[_votingId] */\n      swap1\n      swap2\n        /* \"contracts/Stakable.sol\":9935:9961  votedUsers[_votingId] += 1 */\n      tag_67\n      swap1\n        /* \"contracts/Stakable.sol\":9921:9925  true */\n      dup5\n      swap1\n        /* \"contracts/Stakable.sol\":9935:9961  votedUsers[_votingId] += 1 */\n      tag_78\n      jump\t// in\n        /* \"contracts/Stakable.sol\":9451:9623  function isVoter(address _staker) public view returns (bool) {... */\n    tag_41:\n        /* \"contracts/Stakable.sol\":9506:9510  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":9530:9551  _staker != address(0) */\n      dup3\n      and\n        /* \"contracts/Stakable.sol\":9522:9571  require(_staker != address(0), \"Invalid address\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3467:3469   */\n      0x20\n        /* \"contracts/Stakable.sol\":9522:9571  require(_staker != address(0), \"Invalid address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3449:3470   */\n      mstore\n        /* \"#utility.yul\":3506:3508   */\n      0x0f\n        /* \"#utility.yul\":3486:3504   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3479:3509   */\n      mstore\n        /* \"#utility.yul\":3545:3562   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":3525:3543   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3518:3563   */\n      mstore\n        /* \"#utility.yul\":3580:3598   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":9522:9571  require(_staker != address(0), \"Invalid address\") */\n      tag_62\n        /* \"#utility.yul\":3265:3604   */\n      jump\n        /* \"contracts/Stakable.sol\":9522:9571  require(_staker != address(0), \"Invalid address\") */\n    tag_80:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":9589:9604  voters[_staker] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":9589:9595  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":9589:9604  voters[_staker] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":9589:9616  voters[_staker].votingRight */\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/Stakable.sol\":9451:9623  function isVoter(address _staker) public view returns (bool) {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":8966:9170  function airdropWeek() public view returns (uint256) {... */\n    tag_50:\n        /* \"contracts/Stakable.sol\":9010:9017  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":9033:9045  airdropSince */\n      sload(0x02)\n        /* \"contracts/Stakable.sol\":9049:9050  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":9033:9050  airdropSince != 0 */\n      eq\n        /* \"contracts/Stakable.sol\":9029:9164  if (airdropSince != 0) {... */\n      tag_84\n      jumpi\n        /* \"contracts/Stakable.sol\":9108:9114  7 days */\n      0x093a80\n        /* \"contracts/Stakable.sol\":9092:9104  airdropSince */\n      sload(0x02)\n        /* \"contracts/Stakable.sol\":9074:9089  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":9074:9104  block.timestamp - airdropSince */\n      tag_85\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_85:\n        /* \"contracts/Stakable.sol\":9073:9114  (block.timestamp - airdropSince) / 7 days */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"contracts/Stakable.sol\":9066:9114  return (block.timestamp - airdropSince) / 7 days */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":8966:9170  function airdropWeek() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stakable.sol\":9029:9164  if (airdropSince != 0) {... */\n    tag_84:\n      pop\n        /* \"contracts/Stakable.sol\":9152:9153  0 */\n      0x00\n      swap1\n        /* \"contracts/Stakable.sol\":8966:9170  function airdropWeek() public view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":7042:8163  function hasStake(address _staker)... */\n    tag_54:\n        /* \"contracts/Stakable.sol\":7124:7145  StakingSummary memory */\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":7187:7208  stakeholders[_staker] */\n      dup1\n      dup4\n      and\n        /* \"contracts/Stakable.sol\":7161:7184  Stakeholder memory data */\n      0x00\n        /* \"contracts/Stakable.sol\":7187:7208  stakeholders[_staker] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":7187:7199  stakeholders */\n      0x08\n        /* \"contracts/Stakable.sol\":7187:7208  stakeholders[_staker] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Stakable.sol\":7161:7208  Stakeholder memory data = stakeholders[_staker] */\n      dup2\n      mload\n      0x0140\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      dup8\n      and\n      0x60\n      dup1\n      dup4\n      add\n      swap2\n      dup3\n      mstore\n      0x01\n      dup5\n      add\n      sload\n      0x80\n      dup5\n      add\n      mstore\n      0x02\n      dup5\n      add\n      sload\n      0xa0\n      dup5\n      add\n      mstore\n      0x03\n      dup5\n      add\n      sload\n      0xc0\n      dup5\n      add\n      mstore\n      0x04\n      dup5\n      add\n      sload\n      0xe0\n      dup5\n      add\n      mstore\n      0x05\n      dup5\n      add\n      sload\n      0x0100\n      dup5\n      add\n      mstore\n      0x06\n      dup5\n      add\n      sload\n      0x0120\n      dup5\n      add\n      mstore\n      swap1\n      dup3\n      mstore\n      0x07\n      dup4\n      add\n      sload\n      swap1\n      swap8\n      and\n      dup2\n      dup6\n      add\n      mstore\n      swap4\n      add\n      sload\n      dup4\n      dup3\n      add\n      mstore\n        /* \"contracts/Stakable.sol\":7250:7282  StakingSummary(0, 0, data.stake) */\n      dup1\n      mload\n      swap5\n      dup6\n      add\n      dup2\n      mstore\n      dup4\n      dup6\n      mstore\n      dup5\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/Stakable.sol\":7271:7281  data.stake */\n      dup2\n      mload\n        /* \"contracts/Stakable.sol\":7250:7282  StakingSummary(0, 0, data.stake) */\n      swap3\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Stakable.sol\":7300:7320  summary.stake.amount */\n      swap2\n      swap1\n      swap2\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7161:7208  Stakeholder memory data = stakeholders[_staker] */\n      swap1\n      swap2\n        /* \"contracts/Stakable.sol\":7250:7282  StakingSummary(0, 0, data.stake) */\n      swap1\n        /* \"contracts/Stakable.sol\":7292:7344  require(summary.stake.amount != 0, \"No stake found\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4279:4281   */\n      0x20\n        /* \"contracts/Stakable.sol\":7292:7344  require(summary.stake.amount != 0, \"No stake found\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4261:4282   */\n      mstore\n        /* \"#utility.yul\":4318:4320   */\n      0x0e\n        /* \"#utility.yul\":4298:4316   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4291:4321   */\n      mstore\n        /* \"#utility.yul\":4357:4373   */\n      0x4e6f207374616b6520666f756e64000000000000000000000000000000000000\n        /* \"#utility.yul\":4337:4355   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4330:4374   */\n      mstore\n        /* \"#utility.yul\":4391:4409   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":7292:7344  require(summary.stake.amount != 0, \"No stake found\") */\n      tag_62\n        /* \"#utility.yul\":4077:4415   */\n      jump\n        /* \"contracts/Stakable.sol\":7292:7344  require(summary.stake.amount != 0, \"No stake found\") */\n    tag_92:\n        /* \"contracts/Stakable.sol\":7355:7378  uint256 availableReward */\n      0x00\n        /* \"contracts/Stakable.sol\":7381:7416  calculateStakeReward(summary.stake) */\n      tag_95\n        /* \"contracts/Stakable.sol\":7402:7409  summary */\n      dup3\n        /* \"contracts/Stakable.sol\":7402:7415  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7381:7401  calculateStakeReward */\n      tag_96\n        /* \"contracts/Stakable.sol\":7381:7416  calculateStakeReward(summary.stake) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/Stakable.sol\":7355:7416  uint256 availableReward = calculateStakeReward(summary.stake) */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":7426:7441  uint256 penalty */\n      0x00\n        /* \"contracts/Stakable.sol\":7484:7499  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":7456:7463  summary */\n      dup4\n        /* \"contracts/Stakable.sol\":7456:7469  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7456:7481  summary.stake.releaseTime */\n      0xc0\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7456:7499  summary.stake.releaseTime > block.timestamp */\n      gt\n        /* \"contracts/Stakable.sol\":7452:7733  if (summary.stake.releaseTime > block.timestamp) {... */\n      iszero\n      tag_97\n      jumpi\n        /* \"contracts/Stakable.sol\":7516:7538  uint256 amount_penalty */\n      0x00\n        /* \"contracts/Stakable.sol\":7540:7562  uint256 reward_penalty */\n      dup1\n        /* \"contracts/Stakable.sol\":7566:7667  calculatePenalty(... */\n      tag_98\n        /* \"contracts/Stakable.sol\":7600:7607  summary */\n      dup6\n        /* \"contracts/Stakable.sol\":7600:7613  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7600:7620  summary.stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7638:7653  availableReward */\n      dup6\n        /* \"contracts/Stakable.sol\":7566:7582  calculatePenalty */\n      tag_99\n        /* \"contracts/Stakable.sol\":7566:7667  calculatePenalty(... */\n      jump\t// in\n    tag_98:\n        /* \"contracts/Stakable.sol\":7515:7667  (uint256 amount_penalty, uint256 reward_penalty) = calculatePenalty(... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":7691:7722  amount_penalty + reward_penalty */\n      tag_100\n        /* \"contracts/Stakable.sol\":7515:7667  (uint256 amount_penalty, uint256 reward_penalty) = calculatePenalty(... */\n      dup2\n      dup4\n        /* \"contracts/Stakable.sol\":7691:7722  amount_penalty + reward_penalty */\n      tag_78\n      jump\t// in\n    tag_100:\n        /* \"contracts/Stakable.sol\":7681:7722  penalty = amount_penalty + reward_penalty */\n      swap3\n      pop\n        /* \"contracts/Stakable.sol\":7501:7733  {... */\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":7452:7733  if (summary.stake.releaseTime > block.timestamp) {... */\n    tag_97:\n        /* \"contracts/Stakable.sol\":7786:7787  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":7747:7783  _calculateWeek(data.latestClaimDrop) */\n      tag_101\n        /* \"contracts/Stakable.sol\":7762:7766  data */\n      dup6\n        /* \"contracts/Stakable.sol\":7762:7782  data.latestClaimDrop */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7747:7761  _calculateWeek */\n      tag_102\n        /* \"contracts/Stakable.sol\":7747:7783  _calculateWeek(data.latestClaimDrop) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/Stakable.sol\":7747:7787  _calculateWeek(data.latestClaimDrop) > 0 */\n      gt\n        /* \"contracts/Stakable.sol\":7743:7992  if (_calculateWeek(data.latestClaimDrop) > 0) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"contracts/Stakable.sol\":7803:7818  uint256 airdrop */\n      0x00\n        /* \"contracts/Stakable.sol\":7821:7860  _calculateAirdrop(summary.stake.amount) */\n      tag_104\n        /* \"contracts/Stakable.sol\":7839:7846  summary */\n      dup5\n        /* \"contracts/Stakable.sol\":7839:7852  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7839:7859  summary.stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7821:7838  _calculateAirdrop */\n      tag_105\n        /* \"contracts/Stakable.sol\":7821:7860  _calculateAirdrop(summary.stake.amount) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/Stakable.sol\":7874:7887  summary.stake */\n      0x40\n      dup6\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7874:7905  summary.stake.claimable_airdrop */\n      0x80\n      add\n        /* \"contracts/Stakable.sol\":7874:7915  summary.stake.claimable_airdrop = airdrop */\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":7743:7992  if (_calculateWeek(data.latestClaimDrop) > 0) {... */\n      jump(tag_106)\n    tag_103:\n        /* \"contracts/Stakable.sol\":7946:7959  summary.stake */\n      0x40\n      dup4\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7980:7981  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":7946:7977  summary.stake.claimable_airdrop */\n      0x80\n      swap1\n      swap2\n      add\n        /* \"contracts/Stakable.sol\":7946:7981  summary.stake.claimable_airdrop = 0 */\n      mstore\n        /* \"contracts/Stakable.sol\":7743:7992  if (_calculateWeek(data.latestClaimDrop) > 0) {... */\n    tag_106:\n        /* \"contracts/Stakable.sol\":8002:8015  summary.stake */\n      0x40\n      dup4\n      add\n      dup1\n      mload\n        /* \"contracts/Stakable.sol\":8002:8025  summary.stake.claimable */\n      0x60\n      add\n        /* \"contracts/Stakable.sol\":8002:8043  summary.stake.claimable = availableReward */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/Stakable.sol\":8053:8068  summary.penalty */\n      0x20\n      dup1\n      dup5\n      add\n        /* \"contracts/Stakable.sol\":8053:8078  summary.penalty = penalty */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Stakable.sol\":8111:8124  summary.stake */\n      swap1\n      mload\n        /* \"contracts/Stakable.sol\":8111:8131  summary.stake.amount */\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8088:8131  summary.total_amount = summary.stake.amount */\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":8002:8009  summary */\n      swap4\n        /* \"contracts/Stakable.sol\":7042:8163  function hasStake(address _staker)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":1018:1129  function _check_votingStatus() internal view {... */\n    tag_59:\n        /* \"contracts/Stakable.sol\":1081:1094  _votingStatus */\n      and(0xff, sload(0x03))\n        /* \"contracts/Stakable.sol\":1073:1122  require(_votingStatus, \"Voting is not available\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4622:4624   */\n      0x20\n        /* \"contracts/Stakable.sol\":1073:1122  require(_votingStatus, \"Voting is not available\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4604:4625   */\n      mstore\n        /* \"#utility.yul\":4661:4663   */\n      0x17\n        /* \"#utility.yul\":4641:4659   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4634:4664   */\n      mstore\n        /* \"#utility.yul\":4700:4725   */\n      0x566f74696e67206973206e6f7420617661696c61626c65000000000000000000\n        /* \"#utility.yul\":4680:4698   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4673:4726   */\n      mstore\n        /* \"#utility.yul\":4743:4761   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":1073:1122  require(_votingStatus, \"Voting is not available\") */\n      tag_62\n        /* \"#utility.yul\":4420:4767   */\n      jump\n        /* \"contracts/Stakable.sol\":1073:1122  require(_votingStatus, \"Voting is not available\") */\n    tag_108:\n        /* \"contracts/Stakable.sol\":1018:1129  function _check_votingStatus() internal view {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":4930:5278  function calculateStakeReward(Stake memory user_stake)... */\n    tag_96:\n        /* \"contracts/Stakable.sol\":5032:5039  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":5059:5069  user_stake */\n      dup2\n        /* \"contracts/Stakable.sol\":5059:5076  user_stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":5080:5081  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":5059:5081  user_stake.amount == 0 */\n      eq\n        /* \"contracts/Stakable.sol\":5055:5116  if (user_stake.amount == 0) {... */\n      iszero\n      tag_112\n      jumpi\n      pop\n        /* \"contracts/Stakable.sol\":5104:5105  0 */\n      0x00\n      swap2\n        /* \"contracts/Stakable.sol\":4930:5278  function calculateStakeReward(Stake memory user_stake)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":5055:5116  if (user_stake.amount == 0) {... */\n    tag_112:\n        /* \"contracts/Stakable.sol\":5267:5271  1e26 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/Stakable.sol\":5221:5263  calculateStakingDuration(user_stake.since) */\n      tag_113\n        /* \"contracts/Stakable.sol\":5246:5256  user_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":5246:5262  user_stake.since */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":5221:5245  calculateStakingDuration */\n      tag_114\n        /* \"contracts/Stakable.sol\":5221:5263  calculateStakingDuration(user_stake.since) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/Stakable.sol\":5182:5192  user_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":5182:5202  user_stake.rewardAPY */\n      0xa0\n      add\n      mload\n        /* \"contracts/Stakable.sol\":5146:5156  user_stake */\n      dup5\n        /* \"contracts/Stakable.sol\":5146:5163  user_stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":5146:5202  user_stake.amount *... */\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"contracts/Stakable.sol\":5146:5263  user_stake.amount *... */\n      tag_117\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_117:\n        /* \"contracts/Stakable.sol\":5145:5271  (user_stake.amount *... */\n      tag_118\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_118:\n        /* \"contracts/Stakable.sol\":5126:5271  return... */\n      swap3\n        /* \"contracts/Stakable.sol\":4930:5278  function calculateStakeReward(Stake memory user_stake)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":5284:5593  function calculatePenalty(uint256 amount, uint256 reward)... */\n    tag_99:\n        /* \"contracts/Stakable.sol\":5389:5396  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":5398:5405  uint256 */\n      dup1\n        /* \"contracts/Stakable.sol\":5442:5502  SafeMath.div(SafeMath.mul(amount, stakingPenaltyRate), 1000) */\n      tag_120\n        /* \"contracts/Stakable.sol\":5455:5495  SafeMath.mul(amount, stakingPenaltyRate) */\n      tag_121\n        /* \"contracts/Stakable.sol\":5468:5474  amount */\n      dup6\n        /* \"contracts/Stakable.sol\":5476:5494  stakingPenaltyRate */\n      sload(0x00)\n        /* \"contracts/Stakable.sol\":5455:5467  SafeMath.mul */\n      tag_122\n        /* \"contracts/Stakable.sol\":5455:5495  SafeMath.mul(amount, stakingPenaltyRate) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/Stakable.sol\":5497:5501  1000 */\n      0x03e8\n        /* \"contracts/Stakable.sol\":5442:5454  SafeMath.div */\n      tag_123\n        /* \"contracts/Stakable.sol\":5442:5502  SafeMath.div(SafeMath.mul(amount, stakingPenaltyRate), 1000) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/Stakable.sol\":5516:5576  SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000) */\n      tag_124\n        /* \"contracts/Stakable.sol\":5529:5569  SafeMath.mul(reward, stakingPenaltyRate) */\n      tag_121\n        /* \"contracts/Stakable.sol\":5542:5548  reward */\n      dup6\n        /* \"contracts/Stakable.sol\":5550:5568  stakingPenaltyRate */\n      sload(0x00)\n        /* \"contracts/Stakable.sol\":5529:5541  SafeMath.mul */\n      tag_122\n        /* \"contracts/Stakable.sol\":5529:5569  SafeMath.mul(reward, stakingPenaltyRate) */\n      jump\t// in\n        /* \"contracts/Stakable.sol\":5516:5576  SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000) */\n    tag_124:\n        /* \"contracts/Stakable.sol\":5421:5586  return (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Stakable.sol\":5284:5593  function calculatePenalty(uint256 amount, uint256 reward)... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":2802:2934  function _calculateWeek(uint256 input) internal view returns (uint256) {... */\n    tag_102:\n        /* \"contracts/Stakable.sol\":2864:2871  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":2890:2927  (block.timestamp - input).div(7 days) */\n      tag_118\n        /* \"contracts/Stakable.sol\":2920:2926  7 days */\n      0x093a80\n        /* \"contracts/Stakable.sol\":2891:2914  block.timestamp - input */\n      tag_128\n        /* \"contracts/Stakable.sol\":2909:2914  input */\n      dup5\n        /* \"contracts/Stakable.sol\":2891:2906  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":2891:2914  block.timestamp - input */\n      tag_68\n      jump\t// in\n    tag_128:\n        /* \"contracts/Stakable.sol\":2890:2919  (block.timestamp - input).div */\n      swap1\n      tag_123\n        /* \"contracts/Stakable.sol\":2890:2927  (block.timestamp - input).div(7 days) */\n      jump\t// in\n        /* \"contracts/Stakable.sol\":8274:8453  function _calculateAirdrop(uint256 stakeAmount)... */\n    tag_105:\n        /* \"contracts/Stakable.sol\":8369:8376  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":8438:8446  52 weeks */\n      0x01dfe200\n        /* \"contracts/Stakable.sol\":8430:8434  1000 */\n      0x03e8\n        /* \"contracts/Stakable.sol\":8415:8426  airdropRate */\n      sload(0x01)\n        /* \"contracts/Stakable.sol\":8401:8412  stakeAmount */\n      dup5\n        /* \"contracts/Stakable.sol\":8401:8426  stakeAmount * airdropRate */\n      tag_130\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_130:\n        /* \"contracts/Stakable.sol\":8400:8434  (stakeAmount * airdropRate) / 1000 */\n      tag_117\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n        /* \"contracts/Stakable.sol\":4576:4924  function calculateStakingDuration(uint256 since_)... */\n    tag_114:\n        /* \"contracts/Stakable.sol\":4673:4680  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":4713:4714  0 */\n      dup1\n        /* \"contracts/Stakable.sol\":4704:4710  since_ */\n      dup3\n        /* \"contracts/Stakable.sol\":4704:4714  since_ > 0 */\n      gt\n        /* \"contracts/Stakable.sol\":4696:4736  require(since_ > 0, \"Error timestamp 0\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5147:5149   */\n      0x20\n        /* \"contracts/Stakable.sol\":4696:4736  require(since_ > 0, \"Error timestamp 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5129:5150   */\n      mstore\n        /* \"#utility.yul\":5186:5188   */\n      0x11\n        /* \"#utility.yul\":5166:5184   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5159:5189   */\n      mstore\n        /* \"#utility.yul\":5225:5244   */\n      0x4572726f722074696d657374616d702030000000000000000000000000000000\n        /* \"#utility.yul\":5205:5223   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5198:5245   */\n      mstore\n        /* \"#utility.yul\":5262:5280   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":4696:4736  require(since_ > 0, \"Error timestamp 0\") */\n      tag_62\n        /* \"#utility.yul\":4945:5286   */\n      jump\n        /* \"contracts/Stakable.sol\":4696:4736  require(since_ > 0, \"Error timestamp 0\") */\n    tag_134:\n        /* \"contracts/Stakable.sol\":4765:4917  SafeMath.div(... */\n      tag_118\n        /* \"contracts/Stakable.sol\":4796:4820  block.timestamp - since_ */\n      tag_138\n        /* \"contracts/Stakable.sol\":4814:4820  since_ */\n      dup4\n        /* \"contracts/Stakable.sol\":4796:4811  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":4796:4820  block.timestamp - since_ */\n      tag_68\n      jump\t// in\n    tag_138:\n        /* \"contracts/Stakable.sol\":4795:4828  (block.timestamp - since_) * 1e24 */\n      tag_139\n      swap1\n        /* \"contracts/Stakable.sol\":4824:4828  1e24 */\n      0xd3c21bcecceda1000000\n        /* \"contracts/Stakable.sol\":4795:4828  (block.timestamp - since_) * 1e24 */\n      tag_116\n      jump\t// in\n    tag_139:\n        /* \"contracts/Stakable.sol\":4846:4854  365 days */\n      0x01e13380\n        /* \"contracts/Stakable.sol\":4765:4917  SafeMath.div(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      0x4572726f722063616e6e6f74206469766964652074696d657374616d70000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":4765:4777  SafeMath.div */\n      tag_140\n        /* \"contracts/Stakable.sol\":4765:4917  SafeMath.div(... */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_142\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_116\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_142\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_87\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n    tag_140:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5776:5783  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5834:5846  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5827:5832  b > 0 */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5819:5847  require(b > 0, errorMessage) */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_146:\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5872:5873  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5869  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5873  a / b */\n      dup2\n      tag_150\n      jumpi\n      tag_150\n      tag_151\n      jump\t// in\n    tag_150:\n      div\n      swap5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_90:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      tag_152\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_152:\n      swap1\n      mstore\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":196:376   */\n    tag_30:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      dup1\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_158:\n      pop\n        /* \"#utility.yul\":347:370   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:376   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":381:690   */\n    tag_35:\n        /* \"#utility.yul\":440:446   */\n      0x00\n        /* \"#utility.yul\":493:495   */\n      0x20\n        /* \"#utility.yul\":481:490   */\n      dup3\n        /* \"#utility.yul\":472:479   */\n      dup5\n        /* \"#utility.yul\":468:491   */\n      sub\n        /* \"#utility.yul\":464:496   */\n      slt\n        /* \"#utility.yul\":461:513   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":509:510   */\n      0x00\n        /* \"#utility.yul\":506:507   */\n      dup1\n        /* \"#utility.yul\":499:511   */\n      revert\n        /* \"#utility.yul\":461:513   */\n    tag_160:\n        /* \"#utility.yul\":548:557   */\n      dup2\n        /* \"#utility.yul\":535:558   */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":591:596   */\n      dup2\n        /* \"#utility.yul\":587:641   */\n      and\n        /* \"#utility.yul\":580:585   */\n      dup2\n        /* \"#utility.yul\":577:642   */\n      eq\n        /* \"#utility.yul\":567:660   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":656:657   */\n      0x00\n        /* \"#utility.yul\":653:654   */\n      dup1\n        /* \"#utility.yul\":646:658   */\n      revert\n        /* \"#utility.yul\":2463:2647   */\n    tag_154:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":2512:2513   */\n      0x00\n        /* \"#utility.yul\":2505:2593   */\n      mstore\n        /* \"#utility.yul\":2612:2616   */\n      0x11\n        /* \"#utility.yul\":2609:2610   */\n      0x04\n        /* \"#utility.yul\":2602:2617   */\n      mstore\n        /* \"#utility.yul\":2636:2640   */\n      0x24\n        /* \"#utility.yul\":2633:2634   */\n      0x00\n        /* \"#utility.yul\":2626:2641   */\n      revert\n        /* \"#utility.yul\":2652:2777   */\n    tag_68:\n        /* \"#utility.yul\":2692:2696   */\n      0x00\n        /* \"#utility.yul\":2720:2721   */\n      dup3\n        /* \"#utility.yul\":2717:2718   */\n      dup3\n        /* \"#utility.yul\":2714:2722   */\n      lt\n        /* \"#utility.yul\":2711:2745   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2725:2743   */\n      tag_169\n      tag_154\n      jump\t// in\n    tag_169:\n      pop\n        /* \"#utility.yul\":2762:2771   */\n      sub\n      swap1\n        /* \"#utility.yul\":2652:2777   */\n      jump\t// out\n        /* \"#utility.yul\":3132:3260   */\n    tag_78:\n        /* \"#utility.yul\":3172:3175   */\n      0x00\n        /* \"#utility.yul\":3203:3204   */\n      dup3\n        /* \"#utility.yul\":3199:3205   */\n      not\n        /* \"#utility.yul\":3196:3197   */\n      dup3\n        /* \"#utility.yul\":3193:3206   */\n      gt\n        /* \"#utility.yul\":3190:3229   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":3209:3227   */\n      tag_173\n      tag_154\n      jump\t// in\n    tag_173:\n      pop\n        /* \"#utility.yul\":3245:3254   */\n      add\n      swap1\n        /* \"#utility.yul\":3132:3260   */\n      jump\t// out\n        /* \"#utility.yul\":3609:3793   */\n    tag_151:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":3658:3659   */\n      0x00\n        /* \"#utility.yul\":3651:3739   */\n      mstore\n        /* \"#utility.yul\":3758:3762   */\n      0x12\n        /* \"#utility.yul\":3755:3756   */\n      0x04\n        /* \"#utility.yul\":3748:3763   */\n      mstore\n        /* \"#utility.yul\":3782:3786   */\n      0x24\n        /* \"#utility.yul\":3779:3780   */\n      0x00\n        /* \"#utility.yul\":3772:3787   */\n      revert\n        /* \"#utility.yul\":3798:4072   */\n    tag_87:\n        /* \"#utility.yul\":3838:3839   */\n      0x00\n        /* \"#utility.yul\":3864:3865   */\n      dup3\n        /* \"#utility.yul\":3854:4043   */\n      tag_177\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":3896:3897   */\n      0x00\n        /* \"#utility.yul\":3889:3977   */\n      mstore\n        /* \"#utility.yul\":4000:4004   */\n      0x12\n        /* \"#utility.yul\":3997:3998   */\n      0x04\n        /* \"#utility.yul\":3990:4005   */\n      mstore\n        /* \"#utility.yul\":4028:4032   */\n      0x24\n        /* \"#utility.yul\":4025:4026   */\n      0x00\n        /* \"#utility.yul\":4018:4033   */\n      revert\n        /* \"#utility.yul\":3854:4043   */\n    tag_177:\n      pop\n        /* \"#utility.yul\":4057:4066   */\n      div\n      swap1\n        /* \"#utility.yul\":3798:4072   */\n      jump\t// out\n        /* \"#utility.yul\":4772:4940   */\n    tag_116:\n        /* \"#utility.yul\":4812:4819   */\n      0x00\n        /* \"#utility.yul\":4878:4879   */\n      dup2\n        /* \"#utility.yul\":4874:4875   */\n      0x00\n        /* \"#utility.yul\":4870:4876   */\n      not\n        /* \"#utility.yul\":4866:4880   */\n      div\n        /* \"#utility.yul\":4863:4864   */\n      dup4\n        /* \"#utility.yul\":4860:4881   */\n      gt\n        /* \"#utility.yul\":4855:4856   */\n      dup3\n        /* \"#utility.yul\":4848:4857   */\n      iszero\n        /* \"#utility.yul\":4841:4858   */\n      iszero\n        /* \"#utility.yul\":4837:4882   */\n      and\n        /* \"#utility.yul\":4834:4905   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":4885:4903   */\n      tag_182\n      tag_154\n      jump\t// in\n    tag_182:\n      pop\n        /* \"#utility.yul\":4925:4934   */\n      mul\n      swap1\n        /* \"#utility.yul\":4772:4940   */\n      jump\t// out\n        /* \"#utility.yul\":5291:5888   */\n    tag_148:\n        /* \"#utility.yul\":5403:5407   */\n      0x00\n        /* \"#utility.yul\":5432:5434   */\n      0x20\n        /* \"#utility.yul\":5461:5463   */\n      dup1\n        /* \"#utility.yul\":5450:5459   */\n      dup4\n        /* \"#utility.yul\":5443:5464   */\n      mstore\n        /* \"#utility.yul\":5493:5499   */\n      dup4\n        /* \"#utility.yul\":5487:5500   */\n      mload\n        /* \"#utility.yul\":5536:5542   */\n      dup1\n        /* \"#utility.yul\":5531:5533   */\n      dup3\n        /* \"#utility.yul\":5520:5529   */\n      dup6\n        /* \"#utility.yul\":5516:5534   */\n      add\n        /* \"#utility.yul\":5509:5543   */\n      mstore\n        /* \"#utility.yul\":5561:5562   */\n      0x00\n        /* \"#utility.yul\":5571:5711   */\n    tag_185:\n        /* \"#utility.yul\":5585:5591   */\n      dup2\n        /* \"#utility.yul\":5582:5583   */\n      dup2\n        /* \"#utility.yul\":5579:5592   */\n      lt\n        /* \"#utility.yul\":5571:5711   */\n      iszero\n      tag_187\n      jumpi\n        /* \"#utility.yul\":5680:5694   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":5676:5699   */\n      dup4\n      add\n        /* \"#utility.yul\":5670:5700   */\n      mload\n        /* \"#utility.yul\":5646:5663   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":5665:5667   */\n      0x40\n        /* \"#utility.yul\":5642:5668   */\n      add\n        /* \"#utility.yul\":5635:5701   */\n      mstore\n        /* \"#utility.yul\":5600:5610   */\n      dup3\n      add\n        /* \"#utility.yul\":5571:5711   */\n      jump(tag_185)\n    tag_187:\n        /* \"#utility.yul\":5729:5735   */\n      dup2\n        /* \"#utility.yul\":5726:5727   */\n      dup2\n        /* \"#utility.yul\":5723:5736   */\n      gt\n        /* \"#utility.yul\":5720:5811   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":5799:5800   */\n      0x00\n        /* \"#utility.yul\":5794:5796   */\n      0x40\n        /* \"#utility.yul\":5785:5791   */\n      dup4\n        /* \"#utility.yul\":5774:5783   */\n      dup8\n        /* \"#utility.yul\":5770:5792   */\n      add\n        /* \"#utility.yul\":5766:5797   */\n      add\n        /* \"#utility.yul\":5759:5801   */\n      mstore\n        /* \"#utility.yul\":5720:5811   */\n    tag_188:\n      pop\n        /* \"#utility.yul\":5872:5874   */\n      0x1f\n        /* \"#utility.yul\":5851:5866   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5847:5876   */\n      and\n        /* \"#utility.yul\":5832:5877   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":5879:5881   */\n      0x40\n        /* \"#utility.yul\":5828:5882   */\n      add\n      swap4\n        /* \"#utility.yul\":5291:5888   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122044c86817f27656ff4fdbbd72a63858eeabbccac5de512229dad1054a91720ba564736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_359": {
									"entryPoint": null,
									"id": 359,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600f6000556050600155610a968061002a6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063a3ec138d11610081578063cb79c2e11161005b578063cb79c2e114610174578063cbb3e1521461017d578063e73e14bf1461018557600080fd5b8063a3ec138d14610125578063a7771ee314610158578063b87da76d1461016b57600080fd5b8063632a9a52116100b2578063632a9a52146100f45780638891cf0d146100fc578063a143a5f21461010557600080fd5b8063070c8b74146100ce5780635f5300ff146100d8575b600080fd5b6100d6610210565b005b6100e160055481565b6040519081526020015b60405180910390f35b6100d661031f565b6100e160015481565b6100e161011336600461092d565b60076020526000908152604090205481565b610148610133366004610946565b60066020526000908152604090205460ff1681565b60405190151581526020016100eb565b610148610166366004610946565b610442565b6100e160025481565b6100e160005481565b6100e16104b9565b610198610193366004610946565b6104ec565b6040516100eb9190600061012082019050825182526020830151602083015260408301516001600160a01b0381511660408401526020810151606084015260408101516080840152606081015160a0840152608081015160c084015260a081015160e084015260c08101516101008401525092915050565b61021861069a565b3360009081526006602052604090205460ff1615156001146102815760405162461bcd60e51b815260206004820152601360248201527f596f7520617265206e6f74206120766f7465720000000000000000000000000060448201526064015b60405180910390fd5b336000908152600660209081526040808320600454845260019081019092529091205460ff161515146102f65760405162461bcd60e51b815260206004820152601660248201527f596f752068617665206e6f7420766f74656420796574000000000000000000006044820152606401610278565b6004546000908152600760205260408120805460019290610318908490610985565b9091555050565b61032761069a565b3360009081526006602052604090205460ff16151560011461038b5760405162461bcd60e51b815260206004820152601360248201527f596f7520617265206e6f74206120766f746572000000000000000000000000006044820152606401610278565b336000908152600660209081526040808320600454845260010190915290205460ff16156103fb5760405162461bcd60e51b815260206004820152601560248201527f596f75206861766520766f746564206265666f726500000000000000000000006044820152606401610278565b33600090815260066020908152604080832060048054855260019182018452828520805460ff1916831790555484526007909252822080549192909161031890849061099c565b60006001600160a01b03821661049a5760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152606401610278565b506001600160a01b031660009081526006602052604090205460ff1690565b60006002546000146104e65762093a80600254426104d79190610985565b6104e191906109ca565b905090565b50600090565b6104f46108c6565b6001600160a01b03808316600090815260086020818152604080842081516101408101835281548716606080830191825260018401546080840152600284015460a0840152600384015460c0840152600484015460e084015260058401546101008401526006840154610120840152908252600783015490971681850152930154838201528051948501815283855284820193909352815192840183905291909101519091906105e65760405162461bcd60e51b815260206004820152600e60248201527f4e6f207374616b6520666f756e640000000000000000000000000000000000006044820152606401610278565b60006105f582604001516106ee565b9050600042836040015160c0015111156106325760008061061e8560400151602001518561074c565b909250905061062d818361099c565b925050505b60006106418560400151610780565b111561066957600061065a846040015160200151610799565b60408501516080015250610677565b604083015160006080909101525b604083018051606001929092526020808401919091529051015181529392505050565b60035460ff166106ec5760405162461bcd60e51b815260206004820152601760248201527f566f74696e67206973206e6f7420617661696c61626c650000000000000000006044820152606401610278565b565b600081602001516000141561070557506000919050565b6a52b7d2dcc80cd2e400000061071e83604001516107bb565b8360a00151846020015161073291906109ec565b61073c91906109ec565b61074691906109ca565b92915050565b60008061076661075e8560005461086d565b6103e8610880565b61077561075e8560005461086d565b915091509250929050565b600061074662093a806107938442610985565b90610880565b60006301dfe2006103e8600154846107b191906109ec565b61073c91906109ca565b600080821161080c5760405162461bcd60e51b815260206004820152601160248201527f4572726f722074696d657374616d7020300000000000000000000000000000006044820152606401610278565b6107466108198342610985565b61082d9069d3c21bcecceda10000006109ec565b6301e133806040518060400160405280601d81526020017f4572726f722063616e6e6f74206469766964652074696d657374616d7000000081525061088c565b600061087982846109ec565b9392505050565b600061087982846109ca565b600081836108ad5760405162461bcd60e51b81526004016102789190610a0b565b508284816108bd576108bd6109b4565b04949350505050565b604051806060016040528060008152602001600081526020016109286040518060e0016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b905290565b60006020828403121561093f57600080fd5b5035919050565b60006020828403121561095857600080fd5b81356001600160a01b038116811461087957600080fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156109975761099761096f565b500390565b600082198211156109af576109af61096f565b500190565b634e487b7160e01b600052601260045260246000fd5b6000826109e757634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610a0657610a0661096f565b500290565b600060208083528351808285015260005b81811015610a3857858101830151858201604001528201610a1c565b81811115610a4a576000604083870101525b50601f01601f191692909201604001939250505056fea264697066735822122044c86817f27656ff4fdbbd72a63858eeabbccac5de512229dad1054a91720ba564736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF PUSH1 0x0 SSTORE PUSH1 0x50 PUSH1 0x1 SSTORE PUSH2 0xA96 DUP1 PUSH2 0x2A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA3EC138D GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xCB79C2E1 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xCBB3E152 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xE73E14BF EQ PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0xA7771EE3 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x632A9A52 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8891CF0D EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70C8B74 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x5F5300FF EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x210 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH2 0x31F JUMP JUMPDEST PUSH2 0xE1 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x148 PUSH2 0x133 CALLDATASIZE PUSH1 0x4 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEB JUMP JUMPDEST PUSH2 0x148 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x946 JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST PUSH2 0xE1 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE1 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x4B9 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x946 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x218 PUSH2 0x69A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x281 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74206120766F74657200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F7420766F7465642079657400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x278 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x318 SWAP1 DUP5 SWAP1 PUSH2 0x985 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH2 0x327 PUSH2 0x69A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x38B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74206120766F74657200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x278 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520766F746564206265666F72650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x278 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE SLOAD DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x318 SWAP1 DUP5 SWAP1 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x49A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x278 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x0 EQ PUSH2 0x4E6 JUMPI PUSH3 0x93A80 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4F4 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP8 AND PUSH1 0x60 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x7 DUP4 ADD SLOAD SWAP1 SWAP8 AND DUP2 DUP6 ADD MSTORE SWAP4 ADD SLOAD DUP4 DUP3 ADD MSTORE DUP1 MLOAD SWAP5 DUP6 ADD DUP2 MSTORE DUP4 DUP6 MSTORE DUP5 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD SWAP3 DUP5 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x5E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207374616B6520666F756E64000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x278 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F5 DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x6EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 TIMESTAMP DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xC0 ADD MLOAD GT ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 PUSH2 0x61E DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0x74C JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x62D DUP2 DUP4 PUSH2 0x99C JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x641 DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x780 JUMP JUMPDEST GT ISZERO PUSH2 0x669 JUMPI PUSH1 0x0 PUSH2 0x65A DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x80 ADD MSTORE POP PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x0 PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE JUMPDEST PUSH1 0x40 DUP4 ADD DUP1 MLOAD PUSH1 0x60 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 MLOAD ADD MLOAD DUP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x6EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E67206973206E6F7420617661696C61626C65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x278 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x705 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x71E DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x7BB JUMP JUMPDEST DUP4 PUSH1 0xA0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x732 SWAP2 SWAP1 PUSH2 0x9EC JUMP JUMPDEST PUSH2 0x73C SWAP2 SWAP1 PUSH2 0x9EC JUMP JUMPDEST PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x9CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x766 PUSH2 0x75E DUP6 PUSH1 0x0 SLOAD PUSH2 0x86D JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x880 JUMP JUMPDEST PUSH2 0x775 PUSH2 0x75E DUP6 PUSH1 0x0 SLOAD PUSH2 0x86D JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x746 PUSH3 0x93A80 PUSH2 0x793 DUP5 TIMESTAMP PUSH2 0x985 JUMP JUMPDEST SWAP1 PUSH2 0x880 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x1 SLOAD DUP5 PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0x9EC JUMP JUMPDEST PUSH2 0x73C SWAP2 SWAP1 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x80C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F722074696D657374616D702030000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x278 JUMP JUMPDEST PUSH2 0x746 PUSH2 0x819 DUP4 TIMESTAMP PUSH2 0x985 JUMP JUMPDEST PUSH2 0x82D SWAP1 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x9EC JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0x88C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x879 DUP3 DUP5 PUSH2 0x9EC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x879 DUP3 DUP5 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0xA0B JUMP JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x8BD JUMPI PUSH2 0x8BD PUSH2 0x9B4 JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x928 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x997 JUMPI PUSH2 0x997 PUSH2 0x96F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x9AF JUMPI PUSH2 0x9AF PUSH2 0x96F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x9E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA06 JUMPI PUSH2 0xA06 PUSH2 0x96F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA38 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xA1C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA4A JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY 0xC8 PUSH9 0x17F27656FF4FDBBD72 0xA6 CODESIZE PC 0xEE 0xAB 0xBC 0xCA 0xC5 0xDE MLOAD 0x22 0x29 0xDA 0xD1 SDIV 0x4A SWAP2 PUSH19 0xBA564736F6C634300080B0033000000000000 ",
							"sourceMap": "155:10614:1:-:0;;;765:142;;;;;;;;;-1:-1:-1;872:2:1;851:18;:23;898:2;884:11;:16;155:10614;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateAirdrop_924": {
									"entryPoint": 1945,
									"id": 924,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateWeek_457": {
									"entryPoint": 1920,
									"id": 457,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_check_votingStatus_368": {
									"entryPoint": 1690,
									"id": 368,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropRate_330": {
									"entryPoint": null,
									"id": 330,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropSince_332": {
									"entryPoint": null,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropWeek_1001": {
									"entryPoint": 1209,
									"id": 1001,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calculatePenalty_665": {
									"entryPoint": 1868,
									"id": 665,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@calculateStakeReward_633": {
									"entryPoint": 1774,
									"id": 633,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateStakingDuration_602": {
									"entryPoint": 1979,
									"id": 602,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_220": {
									"entryPoint": 2176,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_285": {
									"entryPoint": 2188,
									"id": 285,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@hasStake_906": {
									"entryPoint": 1260,
									"id": 906,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isVoter_1043": {
									"entryPoint": 1090,
									"id": 1043,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_205": {
									"entryPoint": 2157,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@retractVote_1135": {
									"entryPoint": 528,
									"id": 1135,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingPenaltyRate_328": {
									"entryPoint": null,
									"id": 328,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalVoters_338": {
									"entryPoint": null,
									"id": 338,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vote_1089": {
									"entryPoint": 799,
									"id": 1089,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@votedUsers_347": {
									"entryPoint": null,
									"id": 347,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@voters_343": {
									"entryPoint": null,
									"id": 343,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_StakingSummary_$406_memory_ptr__to_t_struct$_StakingSummary_$406_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2484,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5890:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:2",
														"type": ""
													}
												],
												"src": "14:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "266:110:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "312:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "321:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "324:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "308:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "279:32:2"
															},
															"nodeType": "YulIf",
															"src": "276:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "347:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "347:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "337:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "232:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "243:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "255:6:2",
														"type": ""
													}
												],
												"src": "196:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "451:239:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "497:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "506:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "509:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "499:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "499:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "499:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "472:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "481:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "468:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "468:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "493:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "464:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "464:32:2"
															},
															"nodeType": "YulIf",
															"src": "461:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "522:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "548:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "535:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "535:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "526:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "644:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "653:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "656:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "646:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "646:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "646:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "580:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "591:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "598:42:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "587:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "587:54:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "577:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "577:65:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "570:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:73:2"
															},
															"nodeType": "YulIf",
															"src": "567:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "669:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "679:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "669:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "417:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "428:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "440:6:2",
														"type": ""
													}
												],
												"src": "381:309:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "790:92:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "800:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "812:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "808:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "808:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "800:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "842:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "867:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "860:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "860:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "853:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "853:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "835:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "835:41:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "759:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "770:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "781:4:2",
														"type": ""
													}
												],
												"src": "695:187:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1050:709:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1060:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1072:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1083:3:2",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1068:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1068:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1060:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1103:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1120:6:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1114:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1114:13:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1096:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1096:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1096:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1148:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1159:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1144:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1144:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1184:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1172:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1172:17:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1166:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1166:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1137:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1137:54:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1137:54:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1200:44:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1230:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1238:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1226:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1226:17:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1220:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:24:2"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "1204:12:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1264:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1275:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1260:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1260:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "1292:12:2"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "1286:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1286:19:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1307:42:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1282:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1282:68:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1253:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1253:98:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1253:98:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1382:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1367:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1367:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "1397:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1411:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1393:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1393:23:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1387:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1387:30:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1360:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1360:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1360:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1438:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1449:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1434:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1434:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "1465:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1479:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1461:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1461:23:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1455:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1455:30:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1427:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1427:59:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1427:59:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1506:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1517:3:2",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1502:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1502:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "1533:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1547:2:2",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1529:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1529:21:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1523:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1523:28:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1495:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:57:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1495:57:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1572:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1583:3:2",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1568:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1568:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "1599:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1613:3:2",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1595:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1595:22:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1589:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1589:29:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1561:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1561:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1561:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1639:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1650:3:2",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1635:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1635:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "1666:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1680:3:2",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1662:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1662:22:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1656:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1656:29:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1628:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1706:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1717:3:2",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1702:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1702:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "1733:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1747:3:2",
																						"type": "",
																						"value": "192"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1729:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1729:22:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1723:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1723:29:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1695:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1695:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1695:58:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_StakingSummary_$406_memory_ptr__to_t_struct$_StakingSummary_$406_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1019:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1030:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1041:4:2",
														"type": ""
													}
												],
												"src": "887:872:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1938:169:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1955:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1966:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1948:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1948:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1948:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1989:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2000:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1985:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1985:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2005:2:2",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1978:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1978:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1978:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2028:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2039:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2024:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2024:18:2"
																	},
																	{
																		"hexValue": "596f7520617265206e6f74206120766f746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2044:21:2",
																		"type": "",
																		"value": "You are not a voter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2017:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2017:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2017:49:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2075:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2087:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2098:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2083:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2083:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2075:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1915:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1929:4:2",
														"type": ""
													}
												],
												"src": "1764:343:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2286:172:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2303:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2314:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2296:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2296:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2296:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2333:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2353:2:2",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2326:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2326:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2326:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2376:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2387:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2372:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2372:18:2"
																	},
																	{
																		"hexValue": "596f752068617665206e6f7420766f74656420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2392:24:2",
																		"type": "",
																		"value": "You have not voted yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2365:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2365:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2365:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2426:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2438:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2449:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2434:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2434:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2426:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2263:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2277:4:2",
														"type": ""
													}
												],
												"src": "2112:346:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2495:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2512:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2515:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2505:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2505:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2505:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2609:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2612:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2602:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2602:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2602:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2633:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2636:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2626:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2626:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2626:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2463:184:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2701:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2723:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2725:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2725:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2725:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2717:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2720:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2714:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2714:8:2"
															},
															"nodeType": "YulIf",
															"src": "2711:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2754:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2766:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2769:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2762:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2754:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2683:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2686:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2692:4:2",
														"type": ""
													}
												],
												"src": "2652:125:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2956:171:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2973:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2984:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2966:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2966:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3007:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3018:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3003:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3003:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3023:2:2",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2996:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2996:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3046:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3057:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3042:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3042:18:2"
																	},
																	{
																		"hexValue": "596f75206861766520766f746564206265666f7265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3062:23:2",
																		"type": "",
																		"value": "You have voted before"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3035:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3035:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3035:51:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3095:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3107:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3118:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3103:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3103:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3095:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2933:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2947:4:2",
														"type": ""
													}
												],
												"src": "2782:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3180:80:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3207:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3209:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3209:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3209:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3196:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3203:1:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3199:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3199:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3193:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3193:13:2"
															},
															"nodeType": "YulIf",
															"src": "3190:39:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3238:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3249:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3252:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3245:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3245:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3238:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3163:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3166:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3172:3:2",
														"type": ""
													}
												],
												"src": "3132:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3439:165:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3456:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3467:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3449:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3449:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3449:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3490:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3501:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3486:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3486:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3506:2:2",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3479:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3479:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3479:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3529:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3540:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3525:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3525:18:2"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3545:17:2",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3518:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3518:45:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3518:45:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3572:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3584:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3595:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3580:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3580:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3572:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3416:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3430:4:2",
														"type": ""
													}
												],
												"src": "3265:339:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3641:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3658:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3661:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3651:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3651:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3651:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3755:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3758:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3748:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3748:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3748:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3779:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3782:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3772:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3772:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3772:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "3609:184:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3844:228:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3875:168:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3896:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3899:77:2",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3889:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3889:88:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3889:88:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3997:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4000:4:2",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3990:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3990:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3990:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4025:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4028:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4018:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4018:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4018:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3864:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3857:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3857:9:2"
															},
															"nodeType": "YulIf",
															"src": "3854:189:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4052:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4061:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4064:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4057:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4052:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3829:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3832:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3838:1:2",
														"type": ""
													}
												],
												"src": "3798:274:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4251:164:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4268:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4261:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4261:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4261:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4302:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4313:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4298:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4298:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4318:2:2",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4291:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4291:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4291:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4341:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4352:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4337:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4337:18:2"
																	},
																	{
																		"hexValue": "4e6f207374616b6520666f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4357:16:2",
																		"type": "",
																		"value": "No stake found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4330:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4330:44:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4330:44:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4383:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4395:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4406:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4391:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4391:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4383:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4228:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4242:4:2",
														"type": ""
													}
												],
												"src": "4077:338:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4594:173:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4611:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4622:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4604:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4604:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4604:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4645:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4656:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4641:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4641:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:2:2",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4634:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4634:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4684:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4695:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4680:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4680:18:2"
																	},
																	{
																		"hexValue": "566f74696e67206973206e6f7420617661696c61626c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4700:25:2",
																		"type": "",
																		"value": "Voting is not available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4673:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4673:53:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4673:53:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4735:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4747:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4758:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4743:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4743:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4735:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4571:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4585:4:2",
														"type": ""
													}
												],
												"src": "4420:347:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4824:116:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4883:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4885:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4885:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4885:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4855:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4848:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4848:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4841:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4841:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4863:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4874:1:2",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4870:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4870:6:2"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4878:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4866:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4866:14:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4860:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4860:21:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4837:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4837:45:2"
															},
															"nodeType": "YulIf",
															"src": "4834:71:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4914:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4929:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4932:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4925:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4925:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4914:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4803:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4806:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4812:7:2",
														"type": ""
													}
												],
												"src": "4772:168:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5119:167:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5136:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5147:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5129:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5129:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5129:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5170:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5181:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5166:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5166:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5186:2:2",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5159:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5159:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5159:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5209:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5220:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5205:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5205:18:2"
																	},
																	{
																		"hexValue": "4572726f722074696d657374616d702030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5225:19:2",
																		"type": "",
																		"value": "Error timestamp 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5198:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5198:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5254:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5266:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5277:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5262:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5262:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5254:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5096:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5110:4:2",
														"type": ""
													}
												],
												"src": "4945:341:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5412:476:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5422:12:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5432:2:2",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5426:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5450:9:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5461:2:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5443:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5443:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5443:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5473:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5493:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5487:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5487:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5477:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5520:9:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5531:2:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5516:18:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5536:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5509:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5509:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5509:34:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5552:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5561:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5556:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5621:90:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "5650:9:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5661:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5646:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5646:17:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5665:2:2",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5642:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5642:26:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "5684:6:2"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "5692:1:2"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "5680:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5680:14:2"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "5696:2:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5676:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5676:23:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5670:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5670:30:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5635:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5635:66:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5635:66:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5582:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5585:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5579:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5579:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5593:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5595:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5604:1:2"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5607:2:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5600:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5600:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5595:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5575:3:2",
																"statements": []
															},
															"src": "5571:140:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5745:66:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "5774:9:2"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "5785:6:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5770:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5770:22:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5794:2:2",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5766:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5766:31:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5799:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5759:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5759:42:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5759:42:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5726:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5729:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5723:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5723:13:2"
															},
															"nodeType": "YulIf",
															"src": "5720:91:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5820:62:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5836:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "5855:6:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5863:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5851:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5851:15:2"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5872:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5868:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5868:7:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5847:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5847:29:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5832:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5832:45:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5879:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5828:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5828:54:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5820:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5381:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5392:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5403:4:2",
														"type": ""
													}
												],
												"src": "5291:597:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_struct$_StakingSummary_$406_memory_ptr__to_t_struct$_StakingSummary_$406_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 288)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        let memberValue0 := mload(add(value0, 0x40))\n        mstore(add(headStart, 0x40), and(mload(memberValue0), 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), mload(add(memberValue0, 0x20)))\n        mstore(add(headStart, 128), mload(add(memberValue0, 0x40)))\n        mstore(add(headStart, 160), mload(add(memberValue0, 96)))\n        mstore(add(headStart, 192), mload(add(memberValue0, 128)))\n        mstore(add(headStart, 224), mload(add(memberValue0, 160)))\n        mstore(add(headStart, 256), mload(add(memberValue0, 192)))\n    }\n    function abi_encode_tuple_t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"You are not a voter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"You have not voted yet\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"You have voted before\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid address\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"No stake found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Voting is not available\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Error timestamp 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100c95760003560e01c8063a3ec138d11610081578063cb79c2e11161005b578063cb79c2e114610174578063cbb3e1521461017d578063e73e14bf1461018557600080fd5b8063a3ec138d14610125578063a7771ee314610158578063b87da76d1461016b57600080fd5b8063632a9a52116100b2578063632a9a52146100f45780638891cf0d146100fc578063a143a5f21461010557600080fd5b8063070c8b74146100ce5780635f5300ff146100d8575b600080fd5b6100d6610210565b005b6100e160055481565b6040519081526020015b60405180910390f35b6100d661031f565b6100e160015481565b6100e161011336600461092d565b60076020526000908152604090205481565b610148610133366004610946565b60066020526000908152604090205460ff1681565b60405190151581526020016100eb565b610148610166366004610946565b610442565b6100e160025481565b6100e160005481565b6100e16104b9565b610198610193366004610946565b6104ec565b6040516100eb9190600061012082019050825182526020830151602083015260408301516001600160a01b0381511660408401526020810151606084015260408101516080840152606081015160a0840152608081015160c084015260a081015160e084015260c08101516101008401525092915050565b61021861069a565b3360009081526006602052604090205460ff1615156001146102815760405162461bcd60e51b815260206004820152601360248201527f596f7520617265206e6f74206120766f7465720000000000000000000000000060448201526064015b60405180910390fd5b336000908152600660209081526040808320600454845260019081019092529091205460ff161515146102f65760405162461bcd60e51b815260206004820152601660248201527f596f752068617665206e6f7420766f74656420796574000000000000000000006044820152606401610278565b6004546000908152600760205260408120805460019290610318908490610985565b9091555050565b61032761069a565b3360009081526006602052604090205460ff16151560011461038b5760405162461bcd60e51b815260206004820152601360248201527f596f7520617265206e6f74206120766f746572000000000000000000000000006044820152606401610278565b336000908152600660209081526040808320600454845260010190915290205460ff16156103fb5760405162461bcd60e51b815260206004820152601560248201527f596f75206861766520766f746564206265666f726500000000000000000000006044820152606401610278565b33600090815260066020908152604080832060048054855260019182018452828520805460ff1916831790555484526007909252822080549192909161031890849061099c565b60006001600160a01b03821661049a5760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152606401610278565b506001600160a01b031660009081526006602052604090205460ff1690565b60006002546000146104e65762093a80600254426104d79190610985565b6104e191906109ca565b905090565b50600090565b6104f46108c6565b6001600160a01b03808316600090815260086020818152604080842081516101408101835281548716606080830191825260018401546080840152600284015460a0840152600384015460c0840152600484015460e084015260058401546101008401526006840154610120840152908252600783015490971681850152930154838201528051948501815283855284820193909352815192840183905291909101519091906105e65760405162461bcd60e51b815260206004820152600e60248201527f4e6f207374616b6520666f756e640000000000000000000000000000000000006044820152606401610278565b60006105f582604001516106ee565b9050600042836040015160c0015111156106325760008061061e8560400151602001518561074c565b909250905061062d818361099c565b925050505b60006106418560400151610780565b111561066957600061065a846040015160200151610799565b60408501516080015250610677565b604083015160006080909101525b604083018051606001929092526020808401919091529051015181529392505050565b60035460ff166106ec5760405162461bcd60e51b815260206004820152601760248201527f566f74696e67206973206e6f7420617661696c61626c650000000000000000006044820152606401610278565b565b600081602001516000141561070557506000919050565b6a52b7d2dcc80cd2e400000061071e83604001516107bb565b8360a00151846020015161073291906109ec565b61073c91906109ec565b61074691906109ca565b92915050565b60008061076661075e8560005461086d565b6103e8610880565b61077561075e8560005461086d565b915091509250929050565b600061074662093a806107938442610985565b90610880565b60006301dfe2006103e8600154846107b191906109ec565b61073c91906109ca565b600080821161080c5760405162461bcd60e51b815260206004820152601160248201527f4572726f722074696d657374616d7020300000000000000000000000000000006044820152606401610278565b6107466108198342610985565b61082d9069d3c21bcecceda10000006109ec565b6301e133806040518060400160405280601d81526020017f4572726f722063616e6e6f74206469766964652074696d657374616d7000000081525061088c565b600061087982846109ec565b9392505050565b600061087982846109ca565b600081836108ad5760405162461bcd60e51b81526004016102789190610a0b565b508284816108bd576108bd6109b4565b04949350505050565b604051806060016040528060008152602001600081526020016109286040518060e0016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b905290565b60006020828403121561093f57600080fd5b5035919050565b60006020828403121561095857600080fd5b81356001600160a01b038116811461087957600080fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156109975761099761096f565b500390565b600082198211156109af576109af61096f565b500190565b634e487b7160e01b600052601260045260246000fd5b6000826109e757634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610a0657610a0661096f565b500290565b600060208083528351808285015260005b81811015610a3857858101830151858201604001528201610a1c565b81811115610a4a576000604083870101525b50601f01601f191692909201604001939250505056fea264697066735822122044c86817f27656ff4fdbbd72a63858eeabbccac5de512229dad1054a91720ba564736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA3EC138D GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xCB79C2E1 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xCBB3E152 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xE73E14BF EQ PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0xA7771EE3 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x632A9A52 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8891CF0D EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70C8B74 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x5F5300FF EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x210 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH2 0x31F JUMP JUMPDEST PUSH2 0xE1 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x148 PUSH2 0x133 CALLDATASIZE PUSH1 0x4 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEB JUMP JUMPDEST PUSH2 0x148 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x946 JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST PUSH2 0xE1 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE1 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x4B9 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x946 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x218 PUSH2 0x69A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x281 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74206120766F74657200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F7420766F7465642079657400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x278 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x318 SWAP1 DUP5 SWAP1 PUSH2 0x985 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH2 0x327 PUSH2 0x69A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x38B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74206120766F74657200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x278 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520766F746564206265666F72650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x278 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE SLOAD DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x318 SWAP1 DUP5 SWAP1 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x49A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x278 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x0 EQ PUSH2 0x4E6 JUMPI PUSH3 0x93A80 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4F4 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP8 AND PUSH1 0x60 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x7 DUP4 ADD SLOAD SWAP1 SWAP8 AND DUP2 DUP6 ADD MSTORE SWAP4 ADD SLOAD DUP4 DUP3 ADD MSTORE DUP1 MLOAD SWAP5 DUP6 ADD DUP2 MSTORE DUP4 DUP6 MSTORE DUP5 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD SWAP3 DUP5 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x5E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207374616B6520666F756E64000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x278 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F5 DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x6EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 TIMESTAMP DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xC0 ADD MLOAD GT ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 PUSH2 0x61E DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0x74C JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x62D DUP2 DUP4 PUSH2 0x99C JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x641 DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x780 JUMP JUMPDEST GT ISZERO PUSH2 0x669 JUMPI PUSH1 0x0 PUSH2 0x65A DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x80 ADD MSTORE POP PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x0 PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE JUMPDEST PUSH1 0x40 DUP4 ADD DUP1 MLOAD PUSH1 0x60 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 MLOAD ADD MLOAD DUP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x6EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E67206973206E6F7420617661696C61626C65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x278 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x705 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x71E DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x7BB JUMP JUMPDEST DUP4 PUSH1 0xA0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x732 SWAP2 SWAP1 PUSH2 0x9EC JUMP JUMPDEST PUSH2 0x73C SWAP2 SWAP1 PUSH2 0x9EC JUMP JUMPDEST PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x9CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x766 PUSH2 0x75E DUP6 PUSH1 0x0 SLOAD PUSH2 0x86D JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x880 JUMP JUMPDEST PUSH2 0x775 PUSH2 0x75E DUP6 PUSH1 0x0 SLOAD PUSH2 0x86D JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x746 PUSH3 0x93A80 PUSH2 0x793 DUP5 TIMESTAMP PUSH2 0x985 JUMP JUMPDEST SWAP1 PUSH2 0x880 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x1 SLOAD DUP5 PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0x9EC JUMP JUMPDEST PUSH2 0x73C SWAP2 SWAP1 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x80C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F722074696D657374616D702030000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x278 JUMP JUMPDEST PUSH2 0x746 PUSH2 0x819 DUP4 TIMESTAMP PUSH2 0x985 JUMP JUMPDEST PUSH2 0x82D SWAP1 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x9EC JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0x88C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x879 DUP3 DUP5 PUSH2 0x9EC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x879 DUP3 DUP5 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0xA0B JUMP JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x8BD JUMPI PUSH2 0x8BD PUSH2 0x9B4 JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x928 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x997 JUMPI PUSH2 0x997 PUSH2 0x96F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x9AF JUMPI PUSH2 0x9AF PUSH2 0x96F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x9E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA06 JUMPI PUSH2 0xA06 PUSH2 0x96F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA38 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xA1C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA4A JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY 0xC8 PUSH9 0x17F27656FF4FDBBD72 0xA6 CODESIZE PC 0xEE 0xAB 0xBC 0xCA 0xC5 0xDE MLOAD 0x22 0x29 0xDA 0xD1 SDIV 0x4A SWAP2 PUSH19 0xBA564736F6C634300080B0033000000000000 ",
							"sourceMap": "155:10614:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9974:348;;;:::i;:::-;;636:26;;;;;;;;;160:25:2;;;148:2;133:18;636:26:1;;;;;;;;9629:339;;;:::i;507:26::-;;;;;;713:45;;;;;;:::i;:::-;;;;;;;;;;;;;;668:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;860:14:2;;853:22;835:41;;823:2;808:18;668:39:1;695:187:2;9451:172:1;;;;;;:::i;:::-;;:::i;539:27::-;;;;;;468:33;;;;;;8966:204;;;:::i;7042:1121::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;1041:4:2;1083:3;1072:9;1068:19;1060:27;;1120:6;1114:13;1103:9;1096:32;1184:4;1176:6;1172:17;1166:24;1159:4;1148:9;1144:20;1137:54;1238:4;1230:6;1226:17;1220:24;-1:-1:-1;;;;;1292:12:2;1286:19;1282:68;1275:4;1264:9;1260:20;1253:98;1411:4;1397:12;1393:23;1387:30;1382:2;1371:9;1367:18;1360:58;1479:4;1465:12;1461:23;1455:30;1449:3;1438:9;1434:19;1427:59;1547:2;1533:12;1529:21;1523:28;1517:3;1506:9;1502:19;1495:57;1613:3;1599:12;1595:22;1589:29;1583:3;1572:9;1568:19;1561:58;1680:3;1666:12;1662:22;1656:29;1650:3;1639:9;1635:19;1628:58;1747:3;1733:12;1729:22;1723:29;1717:3;1706:9;1702:19;1695:58;;887:872;;;;;9974:348:1;1174:21;:19;:21::i;:::-;10047:10:::1;10040:18;::::0;;;:6:::1;:18;::::0;;;;:30;::::1;;:38;;:30:::0;:38:::1;10032:70;;;::::0;-1:-1:-1;;;10032:70:1;;1966:2:2;10032:70:1::1;::::0;::::1;1948:21:2::0;2005:2;1985:18;;;1978:30;2044:21;2024:18;;;2017:49;2083:18;;10032:70:1::1;;;;;;;;;10140:10;10133:18;::::0;;;:6:::1;:18;::::0;;;;;;;10158:9:::1;::::0;10133:35;;:24:::1;::::0;;::::1;:35:::0;;;;;;;::::1;;:43;;;10112:112;;;::::0;-1:-1:-1;;;10112:112:1;;2314:2:2;10112:112:1::1;::::0;::::1;2296:21:2::0;2353:2;2333:18;;;2326:30;2392:24;2372:18;;;2365:52;2434:18;;10112:112:1::1;2112:346:2::0;10112:112:1::1;10260:9;::::0;10235:18:::1;:35:::0;;;10289:10:::1;10235:18;10289:21:::0;10235:18;10289:21;;:26;;10235:24:::1;::::0;:18;10289:26:::1;::::0;10235:24;;10289:26:::1;:::i;:::-;::::0;;;-1:-1:-1;;9974:348:1:o;9629:339::-;1174:21;:19;:21::i;:::-;9695:10:::1;9688:18;::::0;;;:6:::1;:18;::::0;;;;:30;::::1;;:38;;:30:::0;:38:::1;9680:70;;;::::0;-1:-1:-1;;;9680:70:1;;1966:2:2;9680:70:1::1;::::0;::::1;1948:21:2::0;2005:2;1985:18;;;1978:30;2044:21;2024:18;;;2017:49;2083:18;;9680:70:1::1;1764:343:2::0;9680:70:1::1;9788:10;9781:18;::::0;;;:6:::1;:18;::::0;;;;;;;9806:9:::1;::::0;9781:35;;:24:::1;;:35:::0;;;;;;::::1;;:44;9760:112;;;::::0;-1:-1:-1;;;9760:112:1;;2984:2:2;9760:112:1::1;::::0;::::1;2966:21:2::0;3023:2;3003:18;;;2996:30;3062:23;3042:18;;;3035:51;3103:18;;9760:112:1::1;2782:345:2::0;9760:112:1::1;9890:10;9883:18;::::0;;;:6:::1;:18;::::0;;;;;;;9908:9:::1;::::0;;9883:35;;9921:4:::1;9883:24:::0;;::::1;:35:::0;;;;;:42;;-1:-1:-1;;9883:42:1::1;::::0;::::1;::::0;;9946:9;9935:21;;:10:::1;:21:::0;;;;;:26;;9921:4;;9935:21;;:26:::1;::::0;9921:4;;9935:26:::1;:::i;9451:172::-:0;9506:4;-1:-1:-1;;;;;9530:21:1;;9522:49;;;;-1:-1:-1;;;9522:49:1;;3467:2:2;9522:49:1;;;3449:21:2;3506:2;3486:18;;;3479:30;3545:17;3525:18;;;3518:45;3580:18;;9522:49:1;3265:339:2;9522:49:1;-1:-1:-1;;;;;;9589:15:1;;;;;:6;:15;;;;;:27;;;;9451:172::o;8966:204::-;9010:7;9033:12;;9049:1;9033:17;9029:135;;9108:6;9092:12;;9074:15;:30;;;;:::i;:::-;9073:41;;;;:::i;:::-;9066:48;;8966:204;:::o;9029:135::-;-1:-1:-1;9152:1:1;;8966:204::o;7042:1121::-;7124:21;;:::i;:::-;-1:-1:-1;;;;;7187:21:1;;;7161:23;7187:21;;;:12;:21;;;;;;;;7161:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7250:32;;;;;;;;;;;;;;;;;7271:10;;7250:32;;;;;;7300:20;;;;;7161:47;;7250:32;7292:52;;;;-1:-1:-1;;;7292:52:1;;4279:2:2;7292:52:1;;;4261:21:2;4318:2;4298:18;;;4291:30;4357:16;4337:18;;;4330:44;4391:18;;7292:52:1;4077:338:2;7292:52:1;7355:23;7381:35;7402:7;:13;;;7381:20;:35::i;:::-;7355:61;;7426:15;7484;7456:7;:13;;;:25;;;:43;7452:281;;;7516:22;7540;7566:101;7600:7;:13;;;:20;;;7638:15;7566:16;:101::i;:::-;7515:152;;-1:-1:-1;7515:152:1;-1:-1:-1;7691:31:1;7515:152;;7691:31;:::i;:::-;7681:41;;7501:232;;7452:281;7786:1;7747:36;7762:4;:20;;;7747:14;:36::i;:::-;:40;7743:249;;;7803:15;7821:39;7839:7;:13;;;:20;;;7821:17;:39::i;:::-;7874:13;;;;:31;;:41;-1:-1:-1;7743:249:1;;;7946:13;;;;7980:1;7946:31;;;;:35;7743:249;8002:13;;;;;:23;;:41;;;;8053:15;;;;:25;;;;8111:13;;:20;;8088:43;;8002:7;7042:1121;-1:-1:-1;;;7042:1121:1:o;1018:111::-;1081:13;;;;1073:49;;;;-1:-1:-1;;;1073:49:1;;4622:2:2;1073:49:1;;;4604:21:2;4661:2;4641:18;;;4634:30;4700:25;4680:18;;;4673:53;4743:18;;1073:49:1;4420:347:2;1073:49:1;1018:111::o;4930:348::-;5032:7;5059:10;:17;;;5080:1;5059:22;5055:61;;;-1:-1:-1;5104:1:1;;4930:348;-1:-1:-1;4930:348:1:o;5055:61::-;5267:4;5221:42;5246:10;:16;;;5221:24;:42::i;:::-;5182:10;:20;;;5146:10;:17;;;:56;;;;:::i;:::-;:117;;;;:::i;:::-;5145:126;;;;:::i;:::-;5126:145;4930:348;-1:-1:-1;;4930:348:1:o;5284:309::-;5389:7;5398;5442:60;5455:40;5468:6;5476:18;;5455:12;:40::i;:::-;5497:4;5442:12;:60::i;:::-;5516;5529:40;5542:6;5550:18;;5529:12;:40::i;5516:60::-;5421:165;;;;5284:309;;;;;:::o;2802:132::-;2864:7;2890:37;2920:6;2891:23;2909:5;2891:15;:23;:::i;:::-;2890:29;;:37::i;8274:179::-;8369:7;8438:8;8430:4;8415:11;;8401;:25;;;;:::i;:::-;8400:34;;;;:::i;4576:348::-;4673:7;4713:1;4704:6;:10;4696:40;;;;-1:-1:-1;;;4696:40:1;;5147:2:2;4696:40:1;;;5129:21:2;5186:2;5166:18;;;5159:30;5225:19;5205:18;;;5198:47;5262:18;;4696:40:1;4945:341:2;4696:40:1;4765:152;4796:24;4814:6;4796:15;:24;:::i;:::-;4795:33;;4824:4;4795:33;:::i;:::-;4846:8;4765:152;;;;;;;;;;;;;;;;;:12;:152::i;3451:96:0:-;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;3451:96;-1:-1:-1;;;3451:96:0:o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;5660:230::-;5776:7;5834:12;5827:5;5819:28;;;;-1:-1:-1;;;5819:28:0;;;;;;;;:::i;:::-;;5872:1;5868;:5;;;;;:::i;:::-;;;5660:230;-1:-1:-1;;;;5660:230:0:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;196:180:2:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:2;;196:180;-1:-1:-1;196:180:2:o;381:309::-;440:6;493:2;481:9;472:7;468:23;464:32;461:52;;;509:1;506;499:12;461:52;548:9;535:23;-1:-1:-1;;;;;591:5:2;587:54;580:5;577:65;567:93;;656:1;653;646:12;2463:184;-1:-1:-1;;;2512:1:2;2505:88;2612:4;2609:1;2602:15;2636:4;2633:1;2626:15;2652:125;2692:4;2720:1;2717;2714:8;2711:34;;;2725:18;;:::i;:::-;-1:-1:-1;2762:9:2;;2652:125::o;3132:128::-;3172:3;3203:1;3199:6;3196:1;3193:13;3190:39;;;3209:18;;:::i;:::-;-1:-1:-1;3245:9:2;;3132:128::o;3609:184::-;-1:-1:-1;;;3658:1:2;3651:88;3758:4;3755:1;3748:15;3782:4;3779:1;3772:15;3798:274;3838:1;3864;3854:189;;-1:-1:-1;;;3896:1:2;3889:88;4000:4;3997:1;3990:15;4028:4;4025:1;4018:15;3854:189;-1:-1:-1;4057:9:2;;3798:274::o;4772:168::-;4812:7;4878:1;4874;4870:6;4866:14;4863:1;4860:21;4855:1;4848:9;4841:17;4837:45;4834:71;;;4885:18;;:::i;:::-;-1:-1:-1;4925:9:2;;4772:168::o;5291:597::-;5403:4;5432:2;5461;5450:9;5443:21;5493:6;5487:13;5536:6;5531:2;5520:9;5516:18;5509:34;5561:1;5571:140;5585:6;5582:1;5579:13;5571:140;;;5680:14;;;5676:23;;5670:30;5646:17;;;5665:2;5642:26;5635:66;5600:10;;5571:140;;;5729:6;5726:1;5723:13;5720:91;;;5799:1;5794:2;5785:6;5774:9;5770:22;5766:31;5759:42;5720:91;-1:-1:-1;5872:2:2;5851:15;-1:-1:-1;;5847:29:2;5832:45;;;;5879:2;5828:54;;5291:597;-1:-1:-1;;;5291:597:2:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "542000",
								"executionCost": "44787",
								"totalCost": "586787"
							},
							"external": {
								"airdropRate()": "2329",
								"airdropSince()": "2351",
								"airdropWeek()": "4602",
								"hasStake(address)": "infinite",
								"isVoter(address)": "2611",
								"retractVote()": "35369",
								"stakingPenaltyRate()": "2306",
								"totalVoters()": "2330",
								"vote()": "61829",
								"votedUsers(uint256)": "2494",
								"voters(address)": "2519"
							},
							"internal": {
								"_calculateAirdrop(uint256)": "infinite",
								"_calculateWeek(uint256)": "193",
								"_changeAirdropPercentage(uint256)": "infinite",
								"_changePenaltyFee(uint256)": "infinite",
								"_check_votingStatus()": "infinite",
								"_claimAirdrop(address)": "infinite",
								"_getVotingResult()": "infinite",
								"_stake(address,uint256,uint256,uint256)": "infinite",
								"_startAirdropSince()": "infinite",
								"_startVoting()": "infinite",
								"_stopVoting()": "infinite",
								"_withdrawStake(address)": "infinite",
								"calculatePenalty(uint256,uint256)": "infinite",
								"calculateStakeReward(struct Stakable.Stake memory)": "infinite",
								"calculateStakingDuration(uint256)": "infinite",
								"calculateStakingWithPenalty(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 155,
									"end": 10769,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 155,
									"end": 10769,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 155,
									"end": 10769,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 765,
									"end": 907,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 765,
									"end": 907,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 765,
									"end": 907,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 765,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 765,
									"end": 907,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 765,
									"end": 907,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 765,
									"end": 907,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 765,
									"end": 907,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 765,
									"end": 907,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 765,
									"end": 907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 872,
									"end": 874,
									"name": "PUSH",
									"source": 1,
									"value": "F"
								},
								{
									"begin": 851,
									"end": 869,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 851,
									"end": 874,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 898,
									"end": 900,
									"name": "PUSH",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 884,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 884,
									"end": 900,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 155,
									"end": 10769,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 155,
									"end": 10769,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 155,
									"end": 10769,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 155,
									"end": 10769,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 155,
									"end": 10769,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 155,
									"end": 10769,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 155,
									"end": 10769,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122044c86817f27656ff4fdbbd72a63858eeabbccac5de512229dad1054a91720ba564736f6c634300080b0033",
									".code": [
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "A3EC138D"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "CB79C2E1"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "CB79C2E1"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "CBB3E152"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "E73E14BF"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "A3EC138D"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "A7771EE3"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "B87DA76D"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "632A9A52"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "632A9A52"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "8891CF0D"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "A143A5F2"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "70C8B74"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "5F5300FF"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 10322,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9974,
											"end": 10322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 10322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 9974,
											"end": 10322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 9974,
											"end": 10322,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9974,
											"end": 10322,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 9974,
											"end": 10322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 10322,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 636,
											"end": 662,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 636,
											"end": 662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 636,
											"end": 662,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 636,
											"end": 662,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 636,
											"end": 662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 636,
											"end": 662,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 636,
											"end": 662,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 636,
											"end": 662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 662,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 636,
											"end": 662,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 636,
											"end": 662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 662,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 636,
											"end": 662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 636,
											"end": 662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 636,
											"end": 662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 636,
											"end": 662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 636,
											"end": 662,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9629,
											"end": 9968,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 9629,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9629,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 9629,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9629,
											"end": 9968,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 713,
											"end": 758,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 713,
											"end": 758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 713,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 713,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 713,
											"end": 758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 713,
											"end": 758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 713,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 713,
											"end": 758,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 713,
											"end": 758,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 713,
											"end": 758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 713,
											"end": 758,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 713,
											"end": 758,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 713,
											"end": 758,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 713,
											"end": 758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 713,
											"end": 758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 713,
											"end": 758,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 713,
											"end": 758,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 713,
											"end": 758,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 713,
											"end": 758,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 713,
											"end": 758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 713,
											"end": 758,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 668,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 668,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 668,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 668,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 668,
											"end": 707,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 668,
											"end": 707,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 668,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 668,
											"end": 707,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 668,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 668,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 668,
											"end": 707,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 668,
											"end": 707,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 668,
											"end": 707,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 668,
											"end": 707,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 668,
											"end": 707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 668,
											"end": 707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 668,
											"end": 707,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 668,
											"end": 707,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 668,
											"end": 707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 668,
											"end": 707,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 668,
											"end": 707,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 668,
											"end": 707,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 668,
											"end": 707,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 668,
											"end": 707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 668,
											"end": 707,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 668,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 668,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 668,
											"end": 707,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 668,
											"end": 707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 860,
											"end": 874,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 860,
											"end": 874,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 853,
											"end": 875,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 835,
											"end": 876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 835,
											"end": 876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 823,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 808,
											"end": 826,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 668,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 695,
											"end": 882,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9451,
											"end": 9623,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 9451,
											"end": 9623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9451,
											"end": 9623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 9451,
											"end": 9623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9451,
											"end": 9623,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9451,
											"end": 9623,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9451,
											"end": 9623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 9451,
											"end": 9623,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9451,
											"end": 9623,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9451,
											"end": 9623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9451,
											"end": 9623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 9451,
											"end": 9623,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 468,
											"end": 501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 468,
											"end": 501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 468,
											"end": 501,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 9170,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 8966,
											"end": 9170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 9170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 8966,
											"end": 9170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 8966,
											"end": 9170,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1045,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1086,
											"name": "PUSH",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1072,
											"end": 1081,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1127,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1176,
											"end": 1182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1166,
											"end": 1190,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1164,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1242,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1230,
											"end": 1236,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1244,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1292,
											"end": 1304,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1280,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1415,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1397,
											"end": 1409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1416,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1384,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1385,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1418,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1479,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1465,
											"end": 1477,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1484,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1455,
											"end": 1485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1453,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1486,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 1549,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1533,
											"end": 1545,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1550,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1551,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1506,
											"end": 1515,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1552,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1616,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1599,
											"end": 1611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1617,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1586,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 1572,
											"end": 1581,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1568,
											"end": 1587,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1619,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1683,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1666,
											"end": 1678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1653,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1639,
											"end": 1648,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1635,
											"end": 1654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 1733,
											"end": 1745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1751,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1752,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 1720,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1706,
											"end": 1715,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 1753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 1753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 1759,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 887,
											"end": 1759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 887,
											"end": 1759,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 1759,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 1759,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9974,
											"end": 10322,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 9974,
											"end": 10322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1174,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1174,
											"end": 1195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1174,
											"end": 1195,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1174,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10047,
											"end": 10057,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10046,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10070,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10070,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10040,
											"end": 10070,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10078,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10078,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10070,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10040,
											"end": 10078,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1966,
											"end": 1968,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1969,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2007,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1985,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1985,
											"end": 2003,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2003,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 2008,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2065,
											"name": "PUSH",
											"source": 2,
											"value": "596F7520617265206E6F74206120766F74657200000000000000000000000000"
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 10032,
											"end": 10102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10140,
											"end": 10150,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10139,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10158,
											"end": 10167,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10158,
											"end": 10167,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10168,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10157,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10133,
											"end": 10157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10157,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10168,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10168,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10168,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10168,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10133,
											"end": 10168,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10176,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10176,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10176,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10112,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10112,
											"end": 10224,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10112,
											"end": 10224,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10112,
											"end": 10224,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10112,
											"end": 10224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10112,
											"end": 10224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2316,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10112,
											"end": 10224,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10112,
											"end": 10224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10112,
											"end": 10224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2317,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2353,
											"end": 2355,
											"name": "PUSH",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2333,
											"end": 2351,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2333,
											"end": 2351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2356,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2416,
											"name": "PUSH",
											"source": 2,
											"value": "596F752068617665206E6F7420766F7465642079657400000000000000000000"
										},
										{
											"begin": 2372,
											"end": 2390,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2372,
											"end": 2390,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2372,
											"end": 2390,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2434,
											"end": 2452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10112,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2112,
											"end": 2458,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10112,
											"end": 10224,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10112,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10260,
											"end": 10269,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10260,
											"end": 10269,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10235,
											"end": 10253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10235,
											"end": 10270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10235,
											"end": 10270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10235,
											"end": 10270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10299,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 10235,
											"end": 10253,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10289,
											"end": 10310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10235,
											"end": 10253,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10289,
											"end": 10310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10310,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10315,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10235,
											"end": 10259,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10235,
											"end": 10259,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10235,
											"end": 10253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 10289,
											"end": 10315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10235,
											"end": 10259,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10235,
											"end": 10259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 10289,
											"end": 10315,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10289,
											"end": 10315,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 10289,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10315,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9974,
											"end": 10322,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9629,
											"end": 9968,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9629,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1174,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1174,
											"end": 1195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1174,
											"end": 1195,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1174,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9695,
											"end": 9705,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9694,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9718,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9718,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9688,
											"end": 9718,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9726,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9726,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9718,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9688,
											"end": 9726,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 9750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 9680,
											"end": 9750,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 9750,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9680,
											"end": 9750,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9680,
											"end": 9750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 9750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1966,
											"end": 1968,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9680,
											"end": 9750,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9680,
											"end": 9750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 9750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1969,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2007,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1985,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1985,
											"end": 2003,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2003,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 2008,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2065,
											"name": "PUSH",
											"source": 2,
											"value": "596F7520617265206E6F74206120766F74657200000000000000000000000000"
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9680,
											"end": 9750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1764,
											"end": 2107,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9680,
											"end": 9750,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 9680,
											"end": 9750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9788,
											"end": 9798,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9787,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9815,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9806,
											"end": 9815,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9816,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9805,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9781,
											"end": 9805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9816,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9816,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9816,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9781,
											"end": 9816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9825,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9760,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 9760,
											"end": 9872,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9760,
											"end": 9872,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9760,
											"end": 9872,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9760,
											"end": 9872,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9760,
											"end": 9872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 2986,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9760,
											"end": 9872,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9760,
											"end": 9872,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9760,
											"end": 9872,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2987,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3025,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3003,
											"end": 3021,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3003,
											"end": 3021,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3026,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3062,
											"end": 3085,
											"name": "PUSH",
											"source": 2,
											"value": "596F75206861766520766F746564206265666F72650000000000000000000000"
										},
										{
											"begin": 3042,
											"end": 3060,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3042,
											"end": 3060,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3060,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3035,
											"end": 3086,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3103,
											"end": 3121,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3103,
											"end": 3121,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9760,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2782,
											"end": 3127,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9760,
											"end": 9872,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 9760,
											"end": 9872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9890,
											"end": 9900,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9883,
											"end": 9901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9889,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 9883,
											"end": 9901,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9883,
											"end": 9901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9901,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9883,
											"end": 9901,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9901,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9901,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9908,
											"end": 9917,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9908,
											"end": 9917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9908,
											"end": 9917,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9918,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9921,
											"end": 9925,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9883,
											"end": 9907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9918,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9918,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9918,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9925,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9883,
											"end": 9925,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9925,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9925,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9925,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9946,
											"end": 9955,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9935,
											"end": 9956,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9935,
											"end": 9956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9935,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 9935,
											"end": 9956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9935,
											"end": 9956,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9935,
											"end": 9956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9935,
											"end": 9956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9935,
											"end": 9956,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9935,
											"end": 9961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9935,
											"end": 9961,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9921,
											"end": 9925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9921,
											"end": 9925,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9935,
											"end": 9956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9935,
											"end": 9956,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9935,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 9935,
											"end": 9961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9921,
											"end": 9925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9921,
											"end": 9925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9935,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 9935,
											"end": 9961,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9451,
											"end": 9623,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 9451,
											"end": 9623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9506,
											"end": 9510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9530,
											"end": 9551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9530,
											"end": 9551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9522,
											"end": 9571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9571,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9522,
											"end": 9571,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9522,
											"end": 9571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9571,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3469,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9522,
											"end": 9571,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9522,
											"end": 9571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3449,
											"end": 3470,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3508,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3562,
											"name": "PUSH",
											"source": 2,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3518,
											"end": 3563,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3580,
											"end": 3598,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3580,
											"end": 3598,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9522,
											"end": 9571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3265,
											"end": 3604,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9522,
											"end": 9571,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9522,
											"end": 9571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9589,
											"end": 9604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9589,
											"end": 9604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9595,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 9589,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9589,
											"end": 9604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9589,
											"end": 9604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9604,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9616,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9616,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9589,
											"end": 9616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9451,
											"end": 9623,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8966,
											"end": 9170,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 8966,
											"end": 9170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9010,
											"end": 9017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9045,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9033,
											"end": 9045,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9049,
											"end": 9050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9050,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9029,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9029,
											"end": 9164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9108,
											"end": 9114,
											"name": "PUSH",
											"source": 1,
											"value": "93A80"
										},
										{
											"begin": 9092,
											"end": 9104,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9092,
											"end": 9104,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9074,
											"end": 9089,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 9074,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 9074,
											"end": 9104,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9074,
											"end": 9104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9074,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 9074,
											"end": 9104,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9074,
											"end": 9104,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 9074,
											"end": 9104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 9073,
											"end": 9114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 9073,
											"end": 9114,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9073,
											"end": 9114,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 9073,
											"end": 9114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 9170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 9170,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9029,
											"end": 9164,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9029,
											"end": 9164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9152,
											"end": 9153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9152,
											"end": 9153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 9170,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 7124,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 7124,
											"end": 7145,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7124,
											"end": 7145,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 7124,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7187,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7208,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7187,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7199,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7187,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7187,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7187,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7208,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7271,
											"end": 7281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7271,
											"end": 7281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7320,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7320,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7320,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7292,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 7292,
											"end": 7344,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7292,
											"end": 7344,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7292,
											"end": 7344,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7292,
											"end": 7344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7292,
											"end": 7344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7292,
											"end": 7344,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7292,
											"end": 7344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7292,
											"end": 7344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4318,
											"end": 4320,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 4298,
											"end": 4316,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4298,
											"end": 4316,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4298,
											"end": 4316,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4291,
											"end": 4321,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4357,
											"end": 4373,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F207374616B6520666F756E64000000000000000000000000000000000000"
										},
										{
											"begin": 4337,
											"end": 4355,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4337,
											"end": 4355,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4337,
											"end": 4355,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4330,
											"end": 4374,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4391,
											"end": 4409,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4391,
											"end": 4409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7292,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4077,
											"end": 4415,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7292,
											"end": 7344,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 7292,
											"end": 7344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7381,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7402,
											"end": 7415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 7381,
											"end": 7416,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7381,
											"end": 7416,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 7381,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7426,
											"end": 7441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7484,
											"end": 7499,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 7463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 7469,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7456,
											"end": 7469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 7469,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 7481,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7456,
											"end": 7481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 7481,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 7499,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7733,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 7452,
											"end": 7733,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7540,
											"end": 7562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 7600,
											"end": 7607,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7600,
											"end": 7613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7600,
											"end": 7613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7600,
											"end": 7613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7600,
											"end": 7620,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7600,
											"end": 7620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7600,
											"end": 7620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7638,
											"end": 7653,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7566,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7515,
											"end": 7667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7515,
											"end": 7667,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7515,
											"end": 7667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7691,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7515,
											"end": 7667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7515,
											"end": 7667,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 7691,
											"end": 7722,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7691,
											"end": 7722,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7691,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7722,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7733,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 7452,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7786,
											"end": 7787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7747,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7762,
											"end": 7766,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 7747,
											"end": 7783,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7747,
											"end": 7783,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7747,
											"end": 7783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7747,
											"end": 7787,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7743,
											"end": 7992,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7743,
											"end": 7992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 7743,
											"end": 7992,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 7839,
											"end": 7846,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 7852,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7839,
											"end": 7852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 7852,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 7859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7839,
											"end": 7859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 7859,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7874,
											"end": 7887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7874,
											"end": 7887,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7874,
											"end": 7887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7874,
											"end": 7887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7874,
											"end": 7905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7874,
											"end": 7915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7743,
											"end": 7992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 7743,
											"end": 7992,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7743,
											"end": 7992,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 7743,
											"end": 7992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7959,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7946,
											"end": 7959,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7959,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7980,
											"end": 7981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7977,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7946,
											"end": 7977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7981,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7743,
											"end": 7992,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 7743,
											"end": 7992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8015,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8015,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8015,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8025,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8002,
											"end": 8025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8043,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8043,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8068,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8053,
											"end": 8068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8068,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8111,
											"end": 8124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8111,
											"end": 8124,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8111,
											"end": 8131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8111,
											"end": 8131,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8088,
											"end": 8131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8088,
											"end": 8131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8009,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7042,
											"end": 8163,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1018,
											"end": 1129,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1018,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4622,
											"end": 4624,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4661,
											"end": 4663,
											"name": "PUSH",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4641,
											"end": 4659,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4641,
											"end": 4659,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4641,
											"end": 4659,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4634,
											"end": 4664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4700,
											"end": 4725,
											"name": "PUSH",
											"source": 2,
											"value": "566F74696E67206973206E6F7420617661696C61626C65000000000000000000"
										},
										{
											"begin": 4680,
											"end": 4698,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4680,
											"end": 4698,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4673,
											"end": 4726,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4420,
											"end": 4767,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1073,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1129,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4930,
											"end": 5278,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4930,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5059,
											"end": 5069,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5080,
											"end": 5081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5059,
											"end": 5081,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5055,
											"end": 5116,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5055,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5055,
											"end": 5116,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 5278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4930,
											"end": 5278,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5055,
											"end": 5116,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5055,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5267,
											"end": 5271,
											"name": "PUSH",
											"source": 1,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 5221,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5246,
											"end": 5256,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5262,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5246,
											"end": 5262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5262,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5221,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5221,
											"end": 5263,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5221,
											"end": 5263,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5221,
											"end": 5263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5192,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5202,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5182,
											"end": 5202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5156,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5146,
											"end": 5163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5146,
											"end": 5202,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5146,
											"end": 5202,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5146,
											"end": 5202,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5146,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5146,
											"end": 5263,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5146,
											"end": 5263,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5146,
											"end": 5263,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5146,
											"end": 5263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5145,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5145,
											"end": 5271,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5145,
											"end": 5271,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5145,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5145,
											"end": 5271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5145,
											"end": 5271,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5145,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5271,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 5278,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4930,
											"end": 5278,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5284,
											"end": 5593,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5284,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5389,
											"end": 5396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5398,
											"end": 5405,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5455,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5468,
											"end": 5474,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5455,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5455,
											"end": 5495,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5455,
											"end": 5495,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5455,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5497,
											"end": 5501,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 5442,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5442,
											"end": 5502,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5442,
											"end": 5502,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5442,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5529,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5542,
											"end": 5548,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5568,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5529,
											"end": 5569,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5516,
											"end": 5576,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5516,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5586,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5586,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5593,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5593,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5593,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2802,
											"end": 2934,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2802,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2920,
											"end": 2926,
											"name": "PUSH",
											"source": 1,
											"value": "93A80"
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2909,
											"end": 2914,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2906,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2890,
											"end": 2919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2890,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2890,
											"end": 2927,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8274,
											"end": 8453,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 8274,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8369,
											"end": 8376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8438,
											"end": 8446,
											"name": "PUSH",
											"source": 1,
											"value": "1DFE200"
										},
										{
											"begin": 8430,
											"end": 8434,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 8415,
											"end": 8426,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8415,
											"end": 8426,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8401,
											"end": 8412,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8401,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 8401,
											"end": 8426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8401,
											"end": 8426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8401,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 8401,
											"end": 8426,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8401,
											"end": 8426,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 8401,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8400,
											"end": 8434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8400,
											"end": 8434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8400,
											"end": 8434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8400,
											"end": 8434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 8400,
											"end": 8434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4576,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4576,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4673,
											"end": 4680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4713,
											"end": 4714,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4714,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4696,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4696,
											"end": 4736,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4696,
											"end": 4736,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4696,
											"end": 4736,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4696,
											"end": 4736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4696,
											"end": 4736,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5147,
											"end": 5149,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4696,
											"end": 4736,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4696,
											"end": 4736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4696,
											"end": 4736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5150,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5186,
											"end": 5188,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 5166,
											"end": 5184,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5166,
											"end": 5184,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5166,
											"end": 5184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5159,
											"end": 5189,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5225,
											"end": 5244,
											"name": "PUSH",
											"source": 2,
											"value": "4572726F722074696D657374616D702030000000000000000000000000000000"
										},
										{
											"begin": 5205,
											"end": 5223,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5205,
											"end": 5223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5205,
											"end": 5223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5198,
											"end": 5245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5262,
											"end": 5280,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5262,
											"end": 5280,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4696,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4945,
											"end": 5286,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4696,
											"end": 4736,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4696,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4796,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4814,
											"end": 4820,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4796,
											"end": 4811,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4796,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4796,
											"end": 4820,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4796,
											"end": 4820,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4796,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4795,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4795,
											"end": 4828,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4828,
											"name": "PUSH",
											"source": 1,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 4795,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4795,
											"end": 4828,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4795,
											"end": 4828,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4795,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4854,
											"name": "PUSH",
											"source": 1,
											"value": "1E13380"
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "PUSH",
											"source": 1,
											"value": "4572726F722063616E6E6F74206469766964652074696D657374616D70000000"
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4765,
											"end": 4917,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5869,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "152"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "152"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 347,
											"end": 370,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 196,
											"end": 376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 381,
											"end": 690,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 381,
											"end": 690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 440,
											"end": 446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 495,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 481,
											"end": 490,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 472,
											"end": 479,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 468,
											"end": 491,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 464,
											"end": 496,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 461,
											"end": 513,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 461,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 461,
											"end": 513,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 509,
											"end": 510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 507,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 511,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 461,
											"end": 513,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 461,
											"end": 513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 548,
											"end": 557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 535,
											"end": 558,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 587,
											"end": 641,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 577,
											"end": 642,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 567,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 567,
											"end": 660,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 656,
											"end": 657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 646,
											"end": 658,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2647,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2463,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2512,
											"end": 2513,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2593,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2612,
											"end": 2616,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2609,
											"end": 2610,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2602,
											"end": 2617,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 2640,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2633,
											"end": 2634,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2652,
											"end": 2777,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2652,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2718,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2722,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2745,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2711,
											"end": 2745,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2762,
											"end": 2771,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2762,
											"end": 2771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2652,
											"end": 2777,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3132,
											"end": 3260,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3132,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3172,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3206,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3190,
											"end": 3229,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3190,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3190,
											"end": 3229,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3245,
											"end": 3254,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3245,
											"end": 3254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3260,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3609,
											"end": 3793,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3609,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3658,
											"end": 3659,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3739,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3755,
											"end": 3756,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3748,
											"end": 3763,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3782,
											"end": 3786,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3779,
											"end": 3780,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4072,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3798,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3838,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3864,
											"end": 3865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3854,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3854,
											"end": 4043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3896,
											"end": 3897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3889,
											"end": 3977,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4004,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3997,
											"end": 3998,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3990,
											"end": 4005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4032,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4025,
											"end": 4026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4033,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3854,
											"end": 4043,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3854,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4057,
											"end": 4066,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4072,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4772,
											"end": 4940,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4772,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4879,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4874,
											"end": 4875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4870,
											"end": 4876,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4880,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4864,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4881,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4857,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4834,
											"end": 4905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4834,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4834,
											"end": 4905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4925,
											"end": 4934,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 4934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4772,
											"end": 4940,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5291,
											"end": 5888,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5291,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5407,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5434,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5461,
											"end": 5463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5459,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5464,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5493,
											"end": 5499,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5487,
											"end": 5500,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5536,
											"end": 5542,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5531,
											"end": 5533,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5520,
											"end": 5529,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5516,
											"end": 5534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5509,
											"end": 5543,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5561,
											"end": 5562,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5711,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5571,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5591,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5579,
											"end": 5592,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5711,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5571,
											"end": 5711,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5694,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5699,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5646,
											"end": 5663,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5646,
											"end": 5663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5646,
											"end": 5663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5642,
											"end": 5668,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5635,
											"end": 5701,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5610,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5610,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5571,
											"end": 5711,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5711,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5571,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5729,
											"end": 5735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5726,
											"end": 5727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5723,
											"end": 5736,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5720,
											"end": 5811,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5720,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 5720,
											"end": 5811,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5794,
											"end": 5796,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5785,
											"end": 5791,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5774,
											"end": 5783,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5759,
											"end": 5801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5720,
											"end": 5811,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 5720,
											"end": 5811,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5872,
											"end": 5874,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5851,
											"end": 5866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5847,
											"end": 5876,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5877,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5877,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5832,
											"end": 5877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5879,
											"end": 5881,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5828,
											"end": 5882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5882,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5888,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5291,
											"end": 5888,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"airdropRate()": "8891cf0d",
							"airdropSince()": "b87da76d",
							"airdropWeek()": "cbb3e152",
							"hasStake(address)": "e73e14bf",
							"isVoter(address)": "a7771ee3",
							"retractVote()": "070c8b74",
							"stakingPenaltyRate()": "cb79c2e1",
							"totalVoters()": "5f5300ff",
							"vote()": "632a9a52",
							"votedUsers(uint256)": "a143a5f2",
							"voters(address)": "a3ec138d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PenaltyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"airdropRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropSince\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropWeek\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"hasStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable_airdrop\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Stakable.Stake\",\"name\":\"stake\",\"type\":\"tuple\"}],\"internalType\":\"struct Stakable.StakingSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"isVoter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retractVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPenaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVoters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votedUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"votingRight\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Staked(address,uint256,uint256,uint256)\":{\"notice\":\"Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Stakable.sol\":\"Stakable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/Stakable.sol\":{\"keccak256\":\"0xffb21b339eb79e971a8cc1ff8b92076a6105f80bfb626b071022e13e260e8379\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0f3a9b24b88786d87dc283e58e39228f1349daae3e687568216d983b94a3b45d\",\"dweb:/ipfs/QmcwpDiHn5R9QQuKqY5jmqMhhG4dx2XoVpdUfguB5qwwHn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 328,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "stakingPenaltyRate",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 330,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "airdropRate",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 332,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "airdropSince",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 334,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_votingStatus",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 336,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_votingId",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 338,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "totalVoters",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 343,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "voters",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Voter)326_storage)"
							},
							{
								"astId": 347,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "votedUsers",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 412,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "stakeholders",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_struct(Stakeholder)398_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Stakeholder)398_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Stakable.Stakeholder)",
								"numberOfBytes": "32",
								"value": "t_struct(Stakeholder)398_storage"
							},
							"t_mapping(t_address,t_struct(Voter)326_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Stakable.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)326_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)390_storage": {
								"encoding": "inplace",
								"label": "struct Stakable.Stake",
								"members": [
									{
										"astId": 377,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 379,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 381,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "since",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 383,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "claimable",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 385,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "claimable_airdrop",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 387,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "rewardAPY",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 389,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "releaseTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(Stakeholder)398_storage": {
								"encoding": "inplace",
								"label": "struct Stakable.Stakeholder",
								"members": [
									{
										"astId": 393,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "stake",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Stake)390_storage"
									},
									{
										"astId": 395,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "user",
										"offset": 0,
										"slot": "7",
										"type": "t_address"
									},
									{
										"astId": 397,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "latestClaimDrop",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(Voter)326_storage": {
								"encoding": "inplace",
								"label": "struct Stakable.Voter",
								"members": [
									{
										"astId": 321,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "votingRight",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 325,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_uint256,t_bool)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Staked(address,uint256,uint256,uint256)": {
								"notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "475:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "702:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "712:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "736:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "767:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "778:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "823:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "809:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:0"
									},
									"scope": 311,
									"src": "626:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1064:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1102:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1106:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1098:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1109:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1158:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1140:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:0"
									},
									"scope": 311,
									"src": "988:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1401:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1665:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1677:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1707:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1742:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1738:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1754:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1785:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:0"
									},
									"scope": 311,
									"src": "1325:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2043:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2077:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2089:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2120:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:0"
									},
									"scope": 311,
									"src": "1967:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2392:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2426:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2438:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2483:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2487:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2469:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:0"
									},
									"scope": 311,
									"src": "2316:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2808:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2818:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:0"
									},
									"scope": 311,
									"src": "2741:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3175:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3185:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:0"
									},
									"scope": 311,
									"src": "3108:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3518:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3528:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:0"
									},
									"scope": 311,
									"src": "3451:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3903:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3913:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3849:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:0"
									},
									"scope": 311,
									"src": "3836:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4452:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4462:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:0"
									},
									"scope": 311,
									"src": "4385:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5070:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5120:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5147:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:0"
									},
									"scope": 311,
									"src": "4945:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5785:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5834:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5861:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5701:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5720:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5776:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:0"
									},
									"scope": 311,
									"src": "5660:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6661:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6710:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6737:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:0"
									},
									"scope": 311,
									"src": "6536:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "467:6301:0",
							"usedErrors": []
						}
					],
					"src": "92:6677:0"
				},
				"id": 0
			},
			"contracts/Stakable.sol": {
				"ast": {
					"absolutePath": "contracts/Stakable.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						],
						"Stakable": [
							1185
						],
						"Voting___votingStatus": [
							316
						]
					},
					"id": 1186,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1186,
							"sourceUnit": 312,
							"src": "64:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 316,
							"name": "Voting___votingStatus",
							"nameLocation": "129:21:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 315,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "150:2:1"
							},
							"src": "123:30:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Stakable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1185,
							"linearizedBaseContracts": [
								1185
							],
							"name": "Stakable",
							"nameLocation": "164:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 319,
									"libraryName": {
										"id": 317,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "185:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "179:27:1",
									"typeName": {
										"id": 318,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "198:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Stakable.Voter",
									"id": 326,
									"members": [
										{
											"constant": false,
											"id": 321,
											"mutability": "mutable",
											"name": "votingRight",
											"nameLocation": "404:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 326,
											"src": "399:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 320,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "399:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 325,
											"mutability": "mutable",
											"name": "voted",
											"nameLocation": "450:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 326,
											"src": "425:30:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 324,
												"keyType": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "425:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueType": {
													"id": 323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "383:5:1",
									"nodeType": "StructDefinition",
									"scope": 1185,
									"src": "376:86:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb79c2e1",
									"id": 328,
									"mutability": "mutable",
									"name": "stakingPenaltyRate",
									"nameLocation": "483:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "468:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 327,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "468:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8891cf0d",
									"id": 330,
									"mutability": "mutable",
									"name": "airdropRate",
									"nameLocation": "522:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "507:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 329,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "507:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b87da76d",
									"id": 332,
									"mutability": "mutable",
									"name": "airdropSince",
									"nameLocation": "554:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "539:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 331,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "539:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_votingStatus",
									"nameLocation": "586:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "573:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 333,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "573:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 336,
									"mutability": "mutable",
									"name": "_votingId",
									"nameLocation": "621:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "605:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 335,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "605:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "5f5300ff",
									"id": 338,
									"mutability": "mutable",
									"name": "totalVoters",
									"nameLocation": "651:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "636:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "636:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3ec138d",
									"id": 343,
									"mutability": "mutable",
									"name": "voters",
									"nameLocation": "701:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "668:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
										"typeString": "mapping(address => struct Stakable.Voter)"
									},
									"typeName": {
										"id": 342,
										"keyType": {
											"id": 339,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "676:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "668:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
											"typeString": "mapping(address => struct Stakable.Voter)"
										},
										"valueType": {
											"id": 341,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 340,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 326,
												"src": "687:5:1"
											},
											"referencedDeclaration": 326,
											"src": "687:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$326_storage_ptr",
												"typeString": "struct Stakable.Voter"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a143a5f2",
									"id": 347,
									"mutability": "mutable",
									"name": "votedUsers",
									"nameLocation": "748:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "713:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 346,
										"keyType": {
											"id": 344,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "721:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "713:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 345,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "732:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "779:128:1",
										"statements": [
											{
												"expression": {
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 350,
														"name": "stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "851:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3135",
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "872:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "851:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "851:23:1"
											},
											{
												"expression": {
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 354,
														"name": "airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "884:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3830",
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "898:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_80_by_1",
															"typeString": "int_const 80"
														},
														"value": "80"
													},
													"src": "884:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "884:16:1"
											}
										]
									},
									"id": 359,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:2:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:0:1"
									},
									"scope": 1185,
									"src": "765:142:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "1063:66:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 363,
															"name": "_votingStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "1081:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f74696e67206973206e6f7420617661696c61626c65",
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1096:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc",
																"typeString": "literal_string \"Voting is not available\""
															},
															"value": "Voting is not available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc",
																"typeString": "literal_string \"Voting is not available\""
															}
														],
														"id": 362,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1073:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1073:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "1073:49:1"
											}
										]
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_check_votingStatus",
									"nameLocation": "1027:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1046:2:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1063:0:1"
									},
									"scope": 1185,
									"src": "1018:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "1164:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 370,
														"name": "_check_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "1174:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1174:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "1174:21:1"
											},
											{
												"id": 373,
												"nodeType": "PlaceholderStatement",
												"src": "1205:1:1"
											}
										]
									},
									"id": 375,
									"name": "_votingStatusTrue",
									"nameLocation": "1144:17:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1161:2:1"
									},
									"src": "1135:78:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "Stakable.Stake",
									"id": 390,
									"members": [
										{
											"constant": false,
											"id": 377,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "1477:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 390,
											"src": "1469:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 376,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1469:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 379,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1499:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 390,
											"src": "1491:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 378,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1491:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 381,
											"mutability": "mutable",
											"name": "since",
											"nameLocation": "1523:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 390,
											"src": "1515:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 380,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1515:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 383,
											"mutability": "mutable",
											"name": "claimable",
											"nameLocation": "1645:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 390,
											"src": "1637:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 382,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 385,
											"mutability": "mutable",
											"name": "claimable_airdrop",
											"nameLocation": "1672:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 390,
											"src": "1664:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 384,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1664:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 387,
											"mutability": "mutable",
											"name": "rewardAPY",
											"nameLocation": "1707:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 390,
											"src": "1699:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 386,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1699:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 389,
											"mutability": "mutable",
											"name": "releaseTime",
											"nameLocation": "1734:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 390,
											"src": "1726:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 388,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1726:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "1453:5:1",
									"nodeType": "StructDefinition",
									"scope": 1185,
									"src": "1446:306:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.Stakeholder",
									"id": 398,
									"members": [
										{
											"constant": false,
											"id": 393,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "1870:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 398,
											"src": "1864:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$390_storage_ptr",
												"typeString": "struct Stakable.Stake"
											},
											"typeName": {
												"id": 392,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 391,
													"name": "Stake",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 390,
													"src": "1864:5:1"
												},
												"referencedDeclaration": 390,
												"src": "1864:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$390_storage_ptr",
													"typeString": "struct Stakable.Stake"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 395,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "1893:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 398,
											"src": "1885:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 394,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1885:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 397,
											"mutability": "mutable",
											"name": "latestClaimDrop",
											"nameLocation": "1915:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 398,
											"src": "1907:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 396,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1907:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stakeholder",
									"nameLocation": "1842:11:1",
									"nodeType": "StructDefinition",
									"scope": 1185,
									"src": "1835:102:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.StakingSummary",
									"id": 406,
									"members": [
										{
											"constant": false,
											"id": 400,
											"mutability": "mutable",
											"name": "total_amount",
											"nameLocation": "2114:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 406,
											"src": "2106:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 399,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2106:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 402,
											"mutability": "mutable",
											"name": "penalty",
											"nameLocation": "2144:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 406,
											"src": "2136:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 401,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2136:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 405,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "2167:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 406,
											"src": "2161:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$390_storage_ptr",
												"typeString": "struct Stakable.Stake"
											},
											"typeName": {
												"id": 404,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 403,
													"name": "Stake",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 390,
													"src": "2161:5:1"
												},
												"referencedDeclaration": 390,
												"src": "2161:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$390_storage_ptr",
													"typeString": "struct Stakable.Stake"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingSummary",
									"nameLocation": "2081:14:1",
									"nodeType": "StructDefinition",
									"scope": 1185,
									"src": "2074:105:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "2185:111:1",
										"text": " @notice\n stakes is used to keep track of the INDEX for the stakers in the stakes array"
									},
									"id": 412,
									"mutability": "mutable",
									"name": "stakeholders",
									"nameLocation": "2342:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "2301:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$398_storage_$",
										"typeString": "mapping(address => struct Stakable.Stakeholder)"
									},
									"typeName": {
										"id": 411,
										"keyType": {
											"id": 408,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2309:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2301:31:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$398_storage_$",
											"typeString": "mapping(address => struct Stakable.Stakeholder)"
										},
										"valueType": {
											"id": 410,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 409,
												"name": "Stakeholder",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 398,
												"src": "2320:11:1"
											},
											"referencedDeclaration": 398,
											"src": "2320:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stakeholder_$398_storage_ptr",
												"typeString": "struct Stakable.Stakeholder"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2361:124:1",
										"text": " @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
									},
									"id": 423,
									"name": "Staked",
									"nameLocation": "2496:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2528:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2512:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2550:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2542:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2574:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2566:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"indexed": false,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "2601:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2593:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2593:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2502:116:1"
									},
									"src": "2490:129:1"
								},
								{
									"anonymous": false,
									"id": 427,
									"name": "PenaltyChanged",
									"nameLocation": "2631:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2654:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2646:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:16:1"
									},
									"src": "2625:37:1"
								},
								{
									"anonymous": false,
									"id": 431,
									"name": "AirdropChanged",
									"nameLocation": "2673:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2696:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2688:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2687:16:1"
									},
									"src": "2667:37:1"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "2749:47:1",
										"statements": [
											{
												"expression": {
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 434,
														"name": "airdropSince",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "2759:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 435,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2774:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2774:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2759:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "2759:30:1"
											}
										]
									},
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startAirdropSince",
									"nameLocation": "2719:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2737:2:1"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2749:0:1"
									},
									"scope": 1185,
									"src": "2710:86:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "2873:61:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "37",
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2920:6:1",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															},
															"value": "7"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															}
														],
														"expression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 447,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "2891:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "2891:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 449,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "2909:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2891:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 451,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2890:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "2890:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2890:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 446,
												"id": 455,
												"nodeType": "Return",
												"src": "2883:44:1"
											}
										]
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateWeek",
									"nameLocation": "2811:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "2834:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2826:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2826:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2825:15:1"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2864:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2864:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2863:9:1"
									},
									"scope": 1185,
									"src": "2802:132:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "3283:850:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 470,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "3355:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3365:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3355:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b65206e6f7468696e67",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3368:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
																"typeString": "literal_string \"Cannot stake nothing\""
															},
															"value": "Cannot stake nothing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
																"typeString": "literal_string \"Cannot stake nothing\""
															}
														],
														"id": 469,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3347:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3347:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "3347:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"baseExpression": {
																			"id": 477,
																			"name": "stakeholders",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 412,
																			"src": "3409:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$398_storage_$",
																				"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
																			}
																		},
																		"id": 479,
																		"indexExpression": {
																			"id": 478,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "3422:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3409:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stakeholder_$398_storage",
																			"typeString": "struct Stakable.Stakeholder storage ref"
																		}
																	},
																	"id": 480,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 393,
																	"src": "3409:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$390_storage",
																		"typeString": "struct Stakable.Stake storage ref"
																	}
																},
																"id": 481,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 379,
																"src": "3409:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3445:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3409:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "557365722069732061207374616b6572",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3448:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2691efb0aa18db578dd8d5763b4183f2fc55ea2de0a8db285ee617da2a9fe108",
																"typeString": "literal_string \"User is a staker\""
															},
															"value": "User is a staker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2691efb0aa18db578dd8d5763b4183f2fc55ea2de0a8db285ee617da2a9fe108",
																"typeString": "literal_string \"User is a staker\""
															}
														],
														"id": 476,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3401:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3401:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "3401:66:1"
											},
											{
												"expression": {
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 487,
														"name": "totalVoters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "3478:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3493:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3478:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "3478:16:1"
											},
											{
												"expression": {
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 491,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "3504:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																	"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																}
															},
															"id": 493,
															"indexExpression": {
																"id": 492,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "3511:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3504:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$326_storage",
																"typeString": "struct Stakable.Voter storage ref"
															}
														},
														"id": 494,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "votingRight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 321,
														"src": "3504:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3532:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3504:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "3504:32:1"
											},
											{
												"assignments": [
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 499,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "3642:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "3634:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 498,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3634:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"expression": {
														"id": 500,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "3654:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "3654:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3634:35:1"
											},
											{
												"expression": {
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 503,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "3797:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$398_storage_$",
																	"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
																}
															},
															"id": 505,
															"indexExpression": {
																"id": 504,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "3810:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3797:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$398_storage",
																"typeString": "struct Stakable.Stakeholder storage ref"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 393,
														"src": "3797:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$390_storage",
															"typeString": "struct Stakable.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 508,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "3844:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 509,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "3863:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 510,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 499,
																"src": "3884:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3907:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3922:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 513,
																"name": "_rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "3937:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 514,
																			"name": "_stakePeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 464,
																			"src": "3963:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 515,
																			"name": "timestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 499,
																			"src": "3978:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3963:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 517,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3962:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 507,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3825:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$390_storage_ptr_$",
																"typeString": "type(struct Stakable.Stake storage pointer)"
															}
														},
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3825:173:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
															"typeString": "struct Stakable.Stake memory"
														}
													},
													"src": "3797:201:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$390_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "3797:201:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 522,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "4072:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "4079:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 524,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "4088:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 525,
																		"name": "_stakePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "4100:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 526,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "4115:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4100:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 528,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4099:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 521,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "4065:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "EmitStatement",
												"src": "4060:66:1"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "2940:200:1",
										"text": " @notice\n _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n StakeID"
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stake",
									"nameLocation": "3154:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3178:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3170:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3170:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3201:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3193:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3193:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "3226:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3218:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "3256:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3248:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3248:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3160:113:1"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3283:0:1"
									},
									"scope": 1185,
									"src": "3145:988:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "4192:155:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 538,
																"name": "amount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "4210:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3330",
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4221:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"src": "4210:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50656e616c7479206665652063616e6e6f742065786365656420332070657263656e742e",
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4225:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28b9cc5845d3e07d7ab8f34d980f137c1b248a3950e8cece74e9bf5f2a6e64e9",
																"typeString": "literal_string \"Penalty fee cannot exceed 3 percent.\""
															},
															"value": "Penalty fee cannot exceed 3 percent."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28b9cc5845d3e07d7ab8f34d980f137c1b248a3950e8cece74e9bf5f2a6e64e9",
																"typeString": "literal_string \"Penalty fee cannot exceed 3 percent.\""
															}
														],
														"id": 537,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4202:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4202:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "4202:62:1"
											},
											{
												"expression": {
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 544,
														"name": "stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "4274:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 545,
														"name": "amount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "4295:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4274:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "4274:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 549,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "4332:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 548,
														"name": "PenaltyChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "4317:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4317:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "EmitStatement",
												"src": "4312:28:1"
											}
										]
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changePenaltyFee",
									"nameLocation": "4148:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "4174:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "4166:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4166:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4165:17:1"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4192:0:1"
									},
									"scope": 1185,
									"src": "4139:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "4413:157:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 559,
																"name": "amount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "4431:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "323030",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4442:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_200_by_1",
																	"typeString": "int_const 200"
																},
																"value": "200"
															},
															"src": "4431:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41697264726f702050657263656e746167652063616e6e6f74206578636565642032302070657263656e742e",
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4447:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61040048776cdd899f1524647893fcc96c1bb450f0665365eef2ede5ee6e90cc",
																"typeString": "literal_string \"Airdrop Percentage cannot exceed 20 percent.\""
															},
															"value": "Airdrop Percentage cannot exceed 20 percent."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61040048776cdd899f1524647893fcc96c1bb450f0665365eef2ede5ee6e90cc",
																"typeString": "literal_string \"Airdrop Percentage cannot exceed 20 percent.\""
															}
														],
														"id": 558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4423:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4423:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "4423:71:1"
											},
											{
												"expression": {
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 565,
														"name": "airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "4504:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 566,
														"name": "amount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "4518:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4504:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "4504:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 570,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "4555:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 569,
														"name": "AirdropChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "4540:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4540:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 572,
												"nodeType": "EmitStatement",
												"src": "4535:28:1"
											}
										]
									},
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAirdropPercentage",
									"nameLocation": "4362:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "4395:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "4387:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4387:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4386:17:1"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4413:0:1"
									},
									"scope": 1185,
									"src": "4353:217:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "4686:238:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 582,
																"name": "since_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "4704:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4713:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4704:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722074696d657374616d702030",
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4716:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3",
																"typeString": "literal_string \"Error timestamp 0\""
															},
															"value": "Error timestamp 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3",
																"typeString": "literal_string \"Error timestamp 0\""
															}
														],
														"id": 581,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4696:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4696:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "4696:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 590,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "4796:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "4796:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 592,
																			"name": "since_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 576,
																			"src": "4814:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4796:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 594,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4795:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653234",
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4824:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																},
																"value": "1e24"
															},
															"src": "4795:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "333635",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4846:8:1",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															"value": "365"
														},
														{
															"hexValue": "4572726f722063616e6e6f74206469766964652074696d657374616d70",
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4872:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ba63f68453a968478e961499d34536225d92ab3a3ce82e5cf26f86ae6edd90d",
																"typeString": "literal_string \"Error cannot divide timestamp\""
															},
															"value": "Error cannot divide timestamp"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															{
																"typeIdentifier": "t_stringliteral_1ba63f68453a968478e961499d34536225d92ab3a3ce82e5cf26f86ae6edd90d",
																"typeString": "literal_string \"Error cannot divide timestamp\""
															}
														],
														"expression": {
															"id": 588,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "4765:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 285,
														"src": "4765:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4765:152:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 580,
												"id": 600,
												"nodeType": "Return",
												"src": "4746:171:1"
											}
										]
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingDuration",
									"nameLocation": "4585:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "since_",
												"nameLocation": "4618:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "4610:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4610:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4609:16:1"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "4673:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4673:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4672:9:1"
									},
									"scope": 1185,
									"src": "4576:348:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "5045:233:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 610,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5059:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 379,
														"src": "5059:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5080:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5059:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 617,
												"nodeType": "IfStatement",
												"src": "5055:61:1",
												"trueBody": {
													"id": 616,
													"nodeType": "Block",
													"src": "5083:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5104:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 609,
															"id": 615,
															"nodeType": "Return",
															"src": "5097:8:1"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 618,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 605,
																			"src": "5146:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 619,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 379,
																		"src": "5146:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 620,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 605,
																			"src": "5182:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 621,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardAPY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 387,
																		"src": "5182:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:56:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 624,
																				"name": "user_stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "5246:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																					"typeString": "struct Stakable.Stake memory"
																				}
																			},
																			"id": 625,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "since",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 381,
																			"src": "5246:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 623,
																		"name": "calculateStakingDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "5221:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5221:42:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5146:117:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 628,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5145:119:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653236",
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5267:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000000"
														},
														"value": "1e26"
													},
													"src": "5145:126:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 609,
												"id": 631,
												"nodeType": "Return",
												"src": "5126:145:1"
											}
										]
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakeReward",
									"nameLocation": "4939:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "user_stake",
												"nameLocation": "4973:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4960:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
													"typeString": "struct Stakable.Stake"
												},
												"typeName": {
													"id": 604,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 603,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 390,
														"src": "4960:5:1"
													},
													"referencedDeclaration": 390,
													"src": "4960:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$390_storage_ptr",
														"typeString": "struct Stakable.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4959:25:1"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "5032:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5031:9:1"
									},
									"scope": 1185,
									"src": "4930:348:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "5411:182:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 648,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 635,
																			"src": "5468:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 649,
																			"name": "stakingPenaltyRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 328,
																			"src": "5476:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 646,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "5455:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 205,
																		"src": "5455:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5455:40:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "31303030",
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5497:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"expression": {
																	"id": 644,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "5442:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 220,
																"src": "5442:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5442:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 657,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "5542:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 658,
																			"name": "stakingPenaltyRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 328,
																			"src": "5550:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 655,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "5529:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 205,
																		"src": "5529:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5529:40:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "31303030",
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5571:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"expression": {
																	"id": 653,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "5516:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 220,
																"src": "5516:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5516:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 662,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5428:158:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 643,
												"id": 663,
												"nodeType": "Return",
												"src": "5421:165:1"
											}
										]
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePenalty",
									"nameLocation": "5293:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5318:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5310:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5310:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "5334:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5326:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5309:32:1"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5389:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5389:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5398:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5398:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5388:18:1"
									},
									"scope": 1185,
									"src": "5284:309:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "5737:326:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 676,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "5751:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5761:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5751:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 684,
												"nodeType": "IfStatement",
												"src": "5747:55:1",
												"trueBody": {
													"id": 683,
													"nodeType": "Block",
													"src": "5764:38:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5786:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5789:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 681,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5785:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 675,
															"id": 682,
															"nodeType": "Return",
															"src": "5778:13:1"
														}
													]
												}
											},
											{
												"assignments": [
													686,
													688
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"mutability": "mutable",
														"name": "amount_penalty",
														"nameLocation": "5821:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 706,
														"src": "5813:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 685,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5813:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 688,
														"mutability": "mutable",
														"name": "reward_penalty",
														"nameLocation": "5845:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 706,
														"src": "5837:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 687,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5837:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 693,
												"initialValue": {
													"arguments": [
														{
															"id": 690,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "5893:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 691,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "5913:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 689,
														"name": "calculatePenalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "5863:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5863:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5812:117:1"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 696,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "5973:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 697,
																	"name": "amount_penalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "5981:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 694,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "5960:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "5960:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5960:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 701,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "6023:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 702,
																	"name": "reward_penalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "6031:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "6010:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "6010:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6010:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 704,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5946:110:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 675,
												"id": 705,
												"nodeType": "Return",
												"src": "5939:117:1"
											}
										]
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingWithPenalty",
									"nameLocation": "5608:27:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5644:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "5636:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5636:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "5660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "5652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5635:32:1"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "5715:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "5724:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5724:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5714:18:1"
									},
									"scope": 1185,
									"src": "5599:464:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "6482:554:1",
										"statements": [
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "stake",
														"nameLocation": "6578:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 778,
														"src": "6565:18:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
															"typeString": "struct Stakable.Stake"
														},
														"typeName": {
															"id": 718,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 717,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 390,
																"src": "6565:5:1"
															},
															"referencedDeclaration": 390,
															"src": "6565:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$390_storage_ptr",
																"typeString": "struct Stakable.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 724,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 720,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "6586:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$398_storage_$",
																"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
															}
														},
														"id": 722,
														"indexExpression": {
															"id": 721,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "6599:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6586:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stakeholder_$398_storage",
															"typeString": "struct Stakable.Stakeholder storage ref"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stake",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 393,
													"src": "6586:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$390_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6565:46:1"
											},
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "6630:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 778,
														"src": "6622:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 725,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6622:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 730,
												"initialValue": {
													"arguments": [
														{
															"id": 728,
															"name": "stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "6660:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														],
														"id": 727,
														"name": "calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "6639:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$390_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct Stakable.Stake memory) view returns (uint256)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6639:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6622:44:1"
											},
											{
												"expression": {
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6677:26:1",
													"subExpression": {
														"baseExpression": {
															"id": 731,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "6684:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$398_storage_$",
																"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
															}
														},
														"id": 733,
														"indexExpression": {
															"id": 732,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "6697:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6684:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stakeholder_$398_storage",
															"typeString": "struct Stakable.Stakeholder storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "6677:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 736,
															"name": "stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "6718:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 389,
														"src": "6718:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 738,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6738:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6738:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6718:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 760,
												"nodeType": "IfStatement",
												"src": "6714:203:1",
												"trueBody": {
													"id": 759,
													"nodeType": "Block",
													"src": "6755:162:1",
													"statements": [
														{
															"expression": {
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 741,
																	"name": "totalVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "6769:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6784:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6769:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 744,
															"nodeType": "ExpressionStatement",
															"src": "6769:16:1"
														},
														{
															"expression": {
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "6799:37:1",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 745,
																				"name": "voters",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 343,
																				"src": "6806:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																					"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																				}
																			},
																			"id": 747,
																			"indexExpression": {
																				"id": 746,
																				"name": "_user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "6813:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6806:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Voter_$326_storage",
																				"typeString": "struct Stakable.Voter storage ref"
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voted",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 325,
																		"src": "6806:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																			"typeString": "mapping(uint256 => bool)"
																		}
																	},
																	"id": 750,
																	"indexExpression": {
																		"id": 749,
																		"name": "_votingId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 336,
																		"src": "6826:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6806:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 752,
															"nodeType": "ExpressionStatement",
															"src": "6799:37:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 754,
																			"name": "stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "6885:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 755,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 379,
																		"src": "6885:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 756,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "6899:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 753,
																	"name": "calculateStakingWithPenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "6857:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																	}
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6857:49:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 716,
															"id": 758,
															"nodeType": "Return",
															"src": "6850:56:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 761,
														"name": "totalVoters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "6927:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6942:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6927:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "6927:16:1"
											},
											{
												"expression": {
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6953:37:1",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 765,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "6960:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 767,
																"indexExpression": {
																	"id": 766,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "6967:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6960:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$326_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 768,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 325,
															"src": "6960:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 770,
														"indexExpression": {
															"id": 769,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "6980:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6960:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "6953:37:1"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 773,
																"name": "stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "7008:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																	"typeString": "struct Stakable.Stake memory"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 379,
															"src": "7008:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 775,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "7022:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 776,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7007:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 716,
												"id": 777,
												"nodeType": "Return",
												"src": "7000:29:1"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "6069:333:1",
										"text": " @notice\n withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n Notice index of the stake is the users stake counter, starting at 0 for the first stake\n Will return the amount to MINT onto the acount\n Will also calculateStakeReward and reset timer"
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawStake",
									"nameLocation": "6416:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6439:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6431:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6430:15:1"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6464:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6464:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6473:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6473:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6463:18:1"
									},
									"scope": 1185,
									"src": "6407:629:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "7151:1012:1",
										"statements": [
											{
												"assignments": [
													789
												],
												"declarations": [
													{
														"constant": false,
														"id": 789,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "7180:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 905,
														"src": "7161:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stakeholder_$398_memory_ptr",
															"typeString": "struct Stakable.Stakeholder"
														},
														"typeName": {
															"id": 788,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 787,
																"name": "Stakeholder",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 398,
																"src": "7161:11:1"
															},
															"referencedDeclaration": 398,
															"src": "7161:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$398_storage_ptr",
																"typeString": "struct Stakable.Stakeholder"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 793,
												"initialValue": {
													"baseExpression": {
														"id": 790,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "7187:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$398_storage_$",
															"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
														}
													},
													"id": 792,
													"indexExpression": {
														"id": 791,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "7200:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7187:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stakeholder_$398_storage",
														"typeString": "struct Stakable.Stakeholder storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7161:47:1"
											},
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "summary",
														"nameLocation": "7240:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 905,
														"src": "7218:29:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingSummary_$406_memory_ptr",
															"typeString": "struct Stakable.StakingSummary"
														},
														"typeName": {
															"id": 795,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 794,
																"name": "StakingSummary",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 406,
																"src": "7218:14:1"
															},
															"referencedDeclaration": 406,
															"src": "7218:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$406_storage_ptr",
																"typeString": "struct Stakable.StakingSummary"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 803,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7265:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7268:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 800,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "7271:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$398_memory_ptr",
																	"typeString": "struct Stakable.Stakeholder memory"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 393,
															"src": "7271:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														],
														"id": 797,
														"name": "StakingSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "7250:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakingSummary_$406_storage_ptr_$",
															"typeString": "type(struct Stakable.StakingSummary storage pointer)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7250:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$406_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7218:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 805,
																		"name": "summary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "7300:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingSummary_$406_memory_ptr",
																			"typeString": "struct Stakable.StakingSummary memory"
																		}
																	},
																	"id": 806,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 405,
																	"src": "7300:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																		"typeString": "struct Stakable.Stake memory"
																	}
																},
																"id": 807,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 379,
																"src": "7300:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7324:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7300:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207374616b6520666f756e64",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7327:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															},
															"value": "No stake found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															}
														],
														"id": 804,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7292:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7292:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "7292:52:1"
											},
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "availableReward",
														"nameLocation": "7363:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 905,
														"src": "7355:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 813,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7355:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 819,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 816,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "7402:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$406_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 405,
															"src": "7402:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														],
														"id": 815,
														"name": "calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "7381:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$390_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct Stakable.Stake memory) view returns (uint256)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7381:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7355:61:1"
											},
											{
												"assignments": [
													821
												],
												"declarations": [
													{
														"constant": false,
														"id": 821,
														"mutability": "mutable",
														"name": "penalty",
														"nameLocation": "7434:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 905,
														"src": "7426:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 820,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7426:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 822,
												"nodeType": "VariableDeclarationStatement",
												"src": "7426:15:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 823,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "7456:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$406_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 405,
															"src": "7456:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 389,
														"src": "7456:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 826,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7484:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7484:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7456:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 847,
												"nodeType": "IfStatement",
												"src": "7452:281:1",
												"trueBody": {
													"id": 846,
													"nodeType": "Block",
													"src": "7501:232:1",
													"statements": [
														{
															"assignments": [
																830,
																832
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 830,
																	"mutability": "mutable",
																	"name": "amount_penalty",
																	"nameLocation": "7524:14:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 846,
																	"src": "7516:22:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 829,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7516:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 832,
																	"mutability": "mutable",
																	"name": "reward_penalty",
																	"nameLocation": "7548:14:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 846,
																	"src": "7540:22:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 831,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7540:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 839,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"expression": {
																				"id": 834,
																				"name": "summary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 796,
																				"src": "7600:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakingSummary_$406_memory_ptr",
																					"typeString": "struct Stakable.StakingSummary memory"
																				}
																			},
																			"id": 835,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stake",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 405,
																			"src": "7600:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 836,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 379,
																		"src": "7600:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 837,
																		"name": "availableReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "7638:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 833,
																	"name": "calculatePenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "7566:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7566:101:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7515:152:1"
														},
														{
															"expression": {
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 840,
																	"name": "penalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "7681:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 841,
																		"name": "amount_penalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 830,
																		"src": "7691:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 842,
																		"name": "reward_penalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 832,
																		"src": "7708:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7691:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7681:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 845,
															"nodeType": "ExpressionStatement",
															"src": "7681:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 849,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "7762:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stakeholder_$398_memory_ptr",
																		"typeString": "struct Stakable.Stakeholder memory"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "latestClaimDrop",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 397,
																"src": "7762:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 848,
															"name": "_calculateWeek",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "7747:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7747:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7786:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7747:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 879,
													"nodeType": "Block",
													"src": "7932:60:1",
													"statements": [
														{
															"expression": {
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 871,
																			"name": "summary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 796,
																			"src": "7946:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingSummary_$406_memory_ptr",
																				"typeString": "struct Stakable.StakingSummary memory"
																			}
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stake",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 405,
																		"src": "7946:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		}
																	},
																	"id": 875,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimable_airdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 385,
																	"src": "7946:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7980:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7946:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 878,
															"nodeType": "ExpressionStatement",
															"src": "7946:35:1"
														}
													]
												},
												"id": 880,
												"nodeType": "IfStatement",
												"src": "7743:249:1",
												"trueBody": {
													"id": 870,
													"nodeType": "Block",
													"src": "7789:137:1",
													"statements": [
														{
															"assignments": [
																855
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 855,
																	"mutability": "mutable",
																	"name": "airdrop",
																	"nameLocation": "7811:7:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 870,
																	"src": "7803:15:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 854,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7803:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 861,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"expression": {
																				"id": 857,
																				"name": "summary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 796,
																				"src": "7839:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakingSummary_$406_memory_ptr",
																					"typeString": "struct Stakable.StakingSummary memory"
																				}
																			},
																			"id": 858,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stake",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 405,
																			"src": "7839:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 859,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 379,
																		"src": "7839:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 856,
																	"name": "_calculateAirdrop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "7821:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7821:39:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7803:57:1"
														},
														{
															"expression": {
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 862,
																			"name": "summary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 796,
																			"src": "7874:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingSummary_$406_memory_ptr",
																				"typeString": "struct Stakable.StakingSummary memory"
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stake",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 405,
																		"src": "7874:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		}
																	},
																	"id": 866,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimable_airdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 385,
																	"src": "7874:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 867,
																	"name": "airdrop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "7908:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7874:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 869,
															"nodeType": "ExpressionStatement",
															"src": "7874:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 881,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "8002:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$406_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 405,
															"src": "8002:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimable",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 383,
														"src": "8002:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 886,
														"name": "availableReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "8028:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8002:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "8002:41:1"
											},
											{
												"expression": {
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 889,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "8053:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$406_memory_ptr",
																"typeString": "struct Stakable.StakingSummary memory"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "penalty",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 402,
														"src": "8053:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 892,
														"name": "penalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "8071:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8053:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "8053:25:1"
											},
											{
												"expression": {
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 895,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "8088:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$406_memory_ptr",
																"typeString": "struct Stakable.StakingSummary memory"
															}
														},
														"id": 897,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 400,
														"src": "8088:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 898,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "8111:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$406_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 405,
															"src": "8111:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 900,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 379,
														"src": "8111:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8088:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "8088:43:1"
											},
											{
												"expression": {
													"id": 903,
													"name": "summary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 796,
													"src": "8149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$406_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"functionReturnParameters": 786,
												"id": 904,
												"nodeType": "Return",
												"src": "8142:14:1"
											}
										]
									},
									"functionSelector": "e73e14bf",
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasStake",
									"nameLocation": "7051:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "7068:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "7060:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7060:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7059:17:1"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "7124:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingSummary_$406_memory_ptr",
													"typeString": "struct Stakable.StakingSummary"
												},
												"typeName": {
													"id": 784,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 783,
														"name": "StakingSummary",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 406,
														"src": "7124:14:1"
													},
													"referencedDeclaration": 406,
													"src": "7124:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$406_storage_ptr",
														"typeString": "struct Stakable.StakingSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7123:23:1"
									},
									"scope": 1185,
									"src": "7042:1121:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "8382:71:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 913,
																				"name": "stakeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 908,
																				"src": "8401:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 914,
																				"name": "airdropRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 330,
																				"src": "8415:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8401:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 916,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8400:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8430:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "8400:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 919,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8399:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3532",
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8438:8:1",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31449600_by_1",
															"typeString": "int_const 31449600"
														},
														"value": "52"
													},
													"src": "8399:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 912,
												"id": 922,
												"nodeType": "Return",
												"src": "8392:54:1"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateAirdrop",
									"nameLocation": "8283:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "stakeAmount",
												"nameLocation": "8309:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "8301:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8301:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8300:21:1"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "8369:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8369:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8368:9:1"
									},
									"scope": 1185,
									"src": "8274:179:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "8531:429:1",
										"statements": [
											{
												"assignments": [
													933
												],
												"declarations": [
													{
														"constant": false,
														"id": 933,
														"mutability": "mutable",
														"name": "stakeholder",
														"nameLocation": "8560:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 978,
														"src": "8541:30:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stakeholder_$398_memory_ptr",
															"typeString": "struct Stakable.Stakeholder"
														},
														"typeName": {
															"id": 932,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 931,
																"name": "Stakeholder",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 398,
																"src": "8541:11:1"
															},
															"referencedDeclaration": 398,
															"src": "8541:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$398_storage_ptr",
																"typeString": "struct Stakable.Stakeholder"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 937,
												"initialValue": {
													"baseExpression": {
														"id": 934,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "8574:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$398_storage_$",
															"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
														}
													},
													"id": 936,
													"indexExpression": {
														"id": 935,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "8587:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8574:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stakeholder_$398_storage",
														"typeString": "struct Stakable.Stakeholder storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8541:54:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 939,
																		"name": "stakeholder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 933,
																		"src": "8614:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stakeholder_$398_memory_ptr",
																			"typeString": "struct Stakable.Stakeholder memory"
																		}
																	},
																	"id": 940,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 393,
																	"src": "8614:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																		"typeString": "struct Stakable.Stake memory"
																	}
																},
																"id": 941,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 379,
																"src": "8614:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8641:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8614:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207374616b6520666f756e64",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8644:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															},
															"value": "No stake found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															}
														],
														"id": 938,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8606:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8606:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "8606:55:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 949,
																			"name": "stakeholder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 933,
																			"src": "8708:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stakeholder_$398_memory_ptr",
																				"typeString": "struct Stakable.Stakeholder memory"
																			}
																		},
																		"id": 950,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "latestClaimDrop",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 397,
																		"src": "8708:27:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 948,
																	"name": "_calculateWeek",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "8693:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8693:43:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8739:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8693:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436c61696d61626c65206f6e63652061207765656b",
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8754:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3",
																"typeString": "literal_string \"Claimable once a week\""
															},
															"value": "Claimable once a week"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3",
																"typeString": "literal_string \"Claimable once a week\""
															}
														],
														"id": 947,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8672:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8672:115:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "8672:115:1"
											},
											{
												"expression": {
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 957,
																"name": "stakeholder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 933,
																"src": "8798:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$398_memory_ptr",
																	"typeString": "struct Stakable.Stakeholder memory"
																}
															},
															"id": 960,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 393,
															"src": "8798:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimable_airdrop",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 385,
														"src": "8798:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8836:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8798:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "8798:39:1"
											},
											{
												"expression": {
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 965,
															"name": "stakeholder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "8847:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$398_memory_ptr",
																"typeString": "struct Stakable.Stakeholder memory"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "latestClaimDrop",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 397,
														"src": "8847:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 968,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8877:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8877:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8847:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "8847:45:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 973,
																	"name": "stakeholder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 933,
																	"src": "8928:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stakeholder_$398_memory_ptr",
																		"typeString": "struct Stakable.Stakeholder memory"
																	}
																},
																"id": 974,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 393,
																"src": "8928:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$390_memory_ptr",
																	"typeString": "struct Stakable.Stake memory"
																}
															},
															"id": 975,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 379,
															"src": "8928:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 972,
														"name": "_calculateAirdrop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "8910:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8910:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 930,
												"id": 977,
												"nodeType": "Return",
												"src": "8903:50:1"
											}
										]
									},
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_claimAirdrop",
									"nameLocation": "8468:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "8490:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "8482:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8482:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8481:17:1"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "8522:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8522:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8521:9:1"
									},
									"scope": 1185,
									"src": "8459:501:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "9019:151:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 984,
														"name": "airdropSince",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "9033:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9049:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9033:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 998,
													"nodeType": "Block",
													"src": "9131:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9152:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 983,
															"id": 997,
															"nodeType": "Return",
															"src": "9145:8:1"
														}
													]
												},
												"id": 999,
												"nodeType": "IfStatement",
												"src": "9029:135:1",
												"trueBody": {
													"id": 995,
													"nodeType": "Block",
													"src": "9052:73:1",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 987,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "9074:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 988,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "9074:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 989,
																				"name": "airdropSince",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 332,
																				"src": "9092:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9074:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 991,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9073:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "37",
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9108:6:1",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_604800_by_1",
																		"typeString": "int_const 604800"
																	},
																	"value": "7"
																},
																"src": "9073:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 983,
															"id": 994,
															"nodeType": "Return",
															"src": "9066:48:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "cbb3e152",
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "airdropWeek",
									"nameLocation": "8975:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8986:2:1"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "9010:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9010:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9009:9:1"
									},
									"scope": 1185,
									"src": "8966:204:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "9314:131:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1005,
																"name": "_votingStatus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "9332:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9349:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "9332:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f74696e6720697320616c72656164792072756e6e696e67",
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9356:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_969fcb32819a2e5a3a691d23a4d49e930347b87e51b5eda1c61c0d5f2288a7a0",
																"typeString": "literal_string \"Voting is already running\""
															},
															"value": "Voting is already running"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_969fcb32819a2e5a3a691d23a4d49e930347b87e51b5eda1c61c0d5f2288a7a0",
																"typeString": "literal_string \"Voting is already running\""
															}
														],
														"id": 1004,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9324:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9324:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "9324:60:1"
											},
											{
												"expression": {
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1011,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "9394:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9410:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "9394:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "9394:20:1"
											},
											{
												"expression": {
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1015,
														"name": "_votingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "9424:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9437:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9424:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "9424:14:1"
											}
										]
									},
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startVoting",
									"nameLocation": "9290:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9302:2:1"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9314:0:1"
									},
									"scope": 1185,
									"src": "9281:164:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "9512:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1028,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "9530:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9549:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9541:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1029,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9541:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9541:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9530:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9553:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1027,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9522:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9522:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "9522:49:1"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1037,
															"name": "voters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "9589:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																"typeString": "mapping(address => struct Stakable.Voter storage ref)"
															}
														},
														"id": 1039,
														"indexExpression": {
															"id": 1038,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "9596:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9589:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$326_storage",
															"typeString": "struct Stakable.Voter storage ref"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "votingRight",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 321,
													"src": "9589:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1026,
												"id": 1041,
												"nodeType": "Return",
												"src": "9582:34:1"
											}
										]
									},
									"functionSelector": "a7771ee3",
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isVoter",
									"nameLocation": "9460:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "9476:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "9468:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9468:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9467:17:1"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "9506:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1024,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9506:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9505:6:1"
									},
									"scope": 1185,
									"src": "9451:172:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "9670:298:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1049,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "9688:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																			"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																		}
																	},
																	"id": 1052,
																	"indexExpression": {
																		"expression": {
																			"id": 1050,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9695:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9695:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9688:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$326_storage",
																		"typeString": "struct Stakable.Voter storage ref"
																	}
																},
																"id": 1053,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votingRight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 321,
																"src": "9688:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9722:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "9688:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f74206120766f746572",
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9728:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56",
																"typeString": "literal_string \"You are not a voter\""
															},
															"value": "You are not a voter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56",
																"typeString": "literal_string \"You are not a voter\""
															}
														],
														"id": 1048,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9680:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9680:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "9680:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1060,
																			"name": "voters",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 343,
																			"src": "9781:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																				"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																			}
																		},
																		"id": 1063,
																		"indexExpression": {
																			"expression": {
																				"id": 1061,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "9788:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "9788:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9781:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$326_storage",
																			"typeString": "struct Stakable.Voter storage ref"
																		}
																	},
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 325,
																	"src": "9781:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1066,
																"indexExpression": {
																	"id": 1065,
																	"name": "_votingId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "9806:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9781:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9820:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "9781:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206861766520766f746564206265666f7265",
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9839:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215",
																"typeString": "literal_string \"You have voted before\""
															},
															"value": "You have voted before"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215",
																"typeString": "literal_string \"You have voted before\""
															}
														],
														"id": 1059,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9760:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9760:112:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "9760:112:1"
											},
											{
												"expression": {
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1072,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "9883:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 1075,
																"indexExpression": {
																	"expression": {
																		"id": 1073,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9890:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9890:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9883:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$326_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 325,
															"src": "9883:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1078,
														"indexExpression": {
															"id": 1077,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "9908:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9883:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9921:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "9883:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "9883:42:1"
											},
											{
												"expression": {
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1082,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "9935:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1084,
														"indexExpression": {
															"id": 1083,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "9946:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9935:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9960:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9935:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "9935:26:1"
											}
										]
									},
									"functionSelector": "632a9a52",
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1046,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1045,
												"name": "_votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 375,
												"src": "9652:17:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "9652:17:1"
										}
									],
									"name": "vote",
									"nameLocation": "9638:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9642:2:1"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9670:0:1"
									},
									"scope": 1185,
									"src": "9629:339:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "10022:300:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1095,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "10040:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																			"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																		}
																	},
																	"id": 1098,
																	"indexExpression": {
																		"expression": {
																			"id": 1096,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10047:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10047:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10040:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$326_storage",
																		"typeString": "struct Stakable.Voter storage ref"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votingRight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 321,
																"src": "10040:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10074:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "10040:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f74206120766f746572",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10080:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56",
																"typeString": "literal_string \"You are not a voter\""
															},
															"value": "You are not a voter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56",
																"typeString": "literal_string \"You are not a voter\""
															}
														],
														"id": 1094,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10032:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10032:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "10032:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1106,
																			"name": "voters",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 343,
																			"src": "10133:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																				"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																			}
																		},
																		"id": 1109,
																		"indexExpression": {
																			"expression": {
																				"id": 1107,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "10140:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "10140:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10133:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$326_storage",
																			"typeString": "struct Stakable.Voter storage ref"
																		}
																	},
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 325,
																	"src": "10133:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1112,
																"indexExpression": {
																	"id": 1111,
																	"name": "_votingId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "10158:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10133:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10172:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "10133:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f7420766f74656420796574",
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10190:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10",
																"typeString": "literal_string \"You have not voted yet\""
															},
															"value": "You have not voted yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10",
																"typeString": "literal_string \"You have not voted yet\""
															}
														],
														"id": 1105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10112:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10112:112:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "10112:112:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1118,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "10235:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 1121,
																"indexExpression": {
																	"expression": {
																		"id": 1119,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10242:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10242:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10235:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$326_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 325,
															"src": "10235:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1124,
														"indexExpression": {
															"id": 1123,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "10260:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10235:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10274:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "10235:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "10235:44:1"
											},
											{
												"expression": {
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1128,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "10289:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1130,
														"indexExpression": {
															"id": 1129,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "10300:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10289:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10314:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10289:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "10289:26:1"
											}
										]
									},
									"functionSelector": "070c8b74",
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1092,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1091,
												"name": "_votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 375,
												"src": "10004:17:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "10004:17:1"
										}
									],
									"name": "retractVote",
									"nameLocation": "9983:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9994:2:1"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10022:0:1"
									},
									"scope": 1185,
									"src": "9974:348:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "10403:270:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1143,
																"name": "totalVoters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "10421:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31",
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10435:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10421:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820766f74657273",
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10438:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8443067fe584654845e3de9005bf323ce8e62d22ddf82e3572418fb8e736e171",
																"typeString": "literal_string \"Not enough voters\""
															},
															"value": "Not enough voters"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8443067fe584654845e3de9005bf323ce8e62d22ddf82e3572418fb8e736e171",
																"typeString": "literal_string \"Not enough voters\""
															}
														],
														"id": 1142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10413:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10413:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "10413:45:1"
											},
											{
												"assignments": [
													1150
												],
												"declarations": [
													{
														"constant": false,
														"id": 1150,
														"mutability": "mutable",
														"name": "half_voters",
														"nameLocation": "10476:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 1173,
														"src": "10468:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1149,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1160,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1155,
																	"name": "totalVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "10516:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "35",
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10529:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	}
																],
																"expression": {
																	"id": 1153,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "10503:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "10503:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "3130",
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10533:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"id": 1151,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "10490:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "10490:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10490:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10468:68:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1161,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "10551:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1163,
														"indexExpression": {
															"id": 1162,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "10562:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10551:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1164,
														"name": "half_voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "10575:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10551:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1171,
													"nodeType": "Block",
													"src": "10630:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10651:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1141,
															"id": 1170,
															"nodeType": "Return",
															"src": "10644:12:1"
														}
													]
												},
												"id": 1172,
												"nodeType": "IfStatement",
												"src": "10547:120:1",
												"trueBody": {
													"id": 1168,
													"nodeType": "Block",
													"src": "10588:36:1",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10609:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1141,
															"id": 1167,
															"nodeType": "Return",
															"src": "10602:11:1"
														}
													]
												}
											}
										]
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1138,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1137,
												"name": "_votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 375,
												"src": "10370:17:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "10370:17:1"
										}
									],
									"name": "_getVotingResult",
									"nameLocation": "10337:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10353:2:1"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "10397:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10397:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10396:6:1"
									},
									"scope": 1185,
									"src": "10328:345:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "10729:38:1",
										"statements": [
											{
												"expression": {
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1179,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "10739:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10755:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "10739:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "10739:21:1"
											}
										]
									},
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1177,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1176,
												"name": "_votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 375,
												"src": "10711:17:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "10711:17:1"
										}
									],
									"name": "_stopVoting",
									"nameLocation": "10688:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10699:2:1"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10729:0:1"
									},
									"scope": 1185,
									"src": "10679:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1186,
							"src": "155:10614:1",
							"usedErrors": []
						}
					],
					"src": "39:10731:1"
				},
				"id": 1
			}
		}
	}
}