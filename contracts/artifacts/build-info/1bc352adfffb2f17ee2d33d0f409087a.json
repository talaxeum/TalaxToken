{
	"id": "1bc352adfffb2f17ee2d33d0f409087a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Whitelist.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.11;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract Whitelist {\n    using SafeMath for uint256;\n    uint256 public privateSaleUsers;\n\n    uint256 public privateSaleAmount;\n    uint256 internal constant _phase1 = 73395000 * 1e18;\n    uint256 internal constant _phase2 = 3820562 * 1e18; // daily limit\n\n    uint256 public startPrivateSale;\n\n    struct WhitelistStruct {\n        uint256 lockedAmount;\n        uint256 amount;\n        bool isPhase1Claimed;\n        uint256 latestClaimDay;\n    }\n\n    // beneficiary of tokens after they are released\n    mapping(address => WhitelistStruct) private _beneficiary;\n\n    address talaxAddress;\n\n    constructor() {\n        privateSaleAmount = 1467900000 * 1e18;\n        talaxAddress = msg.sender;\n    }\n\n    /* ------------------------------------------ modifier ------------------------------------------ */\n    function _onlyTalax() internal view {\n        require(msg.sender == talaxAddress, \"Not authorized\");\n    }\n\n    modifier onlyTalax() {\n        _onlyTalax();\n        _;\n    }\n\n    /* ---------------------------------------------- - --------------------------------------------- */\n\n    function changeTalaxAddress(address talax) external onlyTalax {\n        talaxAddress = talax;\n    }\n\n    function beneficiary(address user)\n        external\n        view\n        returns (\n            uint256,\n            uint256,\n            bool,\n            uint256\n        )\n    {\n        WhitelistStruct memory benef = _beneficiary[user];\n        return (\n            benef.lockedAmount,\n            benef.amount,\n            benef.isPhase1Claimed,\n            benef.latestClaimDay\n        );\n    }\n\n    function initiateWhitelist() external onlyTalax {\n        startPrivateSale = block.timestamp;\n    }\n\n    function hasWhitelist(address user)\n        external\n        view\n        returns (WhitelistStruct memory)\n    {\n        return _beneficiary[user];\n    }\n\n    /**\n     *  @dev \t\tMain Functions\n     *  @return \tClaimable amount from Locked Wallet\n     */\n    function _calculateClaimableAmount(address user)\n        internal\n        returns (uint256)\n    {\n        uint256 claimable;\n\n        uint256 lockDuration = (block.timestamp - startPrivateSale) / 1 days;\n\n        //Phase 1 of locked wallet release - monthly\n        if (lockDuration < 16 * 30) {\n            if (_beneficiary[user].isPhase1Claimed == false) {\n                claimable = claimable.add(\n                    SafeMath.div(\n                        SafeMath.mul(_phase1, _beneficiary[user].lockedAmount),\n                        privateSaleAmount\n                    )\n                );\n                _beneficiary[user].isPhase1Claimed = true;\n            }\n            _beneficiary[user].latestClaimDay = 15 * 30;\n        }\n        //Phase 2 of locked wallet release - daily\n        else if (lockDuration >= 16 * 30 && lockDuration < 28 * 30) {\n            if (_beneficiary[user].isPhase1Claimed == false) {\n                claimable = claimable.add(\n                    SafeMath.div(\n                        SafeMath.mul(_phase1, _beneficiary[user].lockedAmount),\n                        privateSaleAmount\n                    )\n                );\n                _beneficiary[user].isPhase1Claimed = true;\n            }\n\n            uint256 sinceLatestClaim = lockDuration -\n                _beneficiary[user].latestClaimDay;\n            claimable =\n                sinceLatestClaim *\n                claimable.add(\n                    SafeMath.div(\n                        SafeMath.mul(_phase2, _beneficiary[user].lockedAmount),\n                        privateSaleAmount\n                    )\n                );\n            _beneficiary[user].latestClaimDay = lockDuration;\n        }\n\n        require(claimable != 0, \"Nothing to claim yet\");\n        return claimable;\n    }\n\n    function addBeneficiary(address user, uint256 amount)\n        external\n        onlyTalax\n    {\n        require(amount <= privateSaleAmount, \"Insufficient Total Balance\");\n        require(_beneficiary[user].amount == 0, \"Cannot add Registered User\");\n\n        _beneficiary[user].lockedAmount = amount;\n        _beneficiary[user].amount = amount;\n        _beneficiary[user].isPhase1Claimed = false;\n        _beneficiary[user].latestClaimDay = 1;\n\n        privateSaleUsers += 1;\n        privateSaleAmount -= amount;\n    }\n\n    function deleteBeneficiary(address user)\n        external\n        onlyTalax\n        returns (uint256)\n    {\n        require(_beneficiary[user].amount != 0, \"User not Registered\");\n        privateSaleUsers -= 1;\n        privateSaleAmount += _beneficiary[user].amount;\n        uint256 ex_amount = _beneficiary[user].amount;\n\n        delete _beneficiary[user];\n        return ex_amount;\n    }\n\n    /**\n     * @notice Transfers tokens held by timelock to beneficiary.\n     */\n    function releaseClaimable(address user)\n        external\n        onlyTalax\n        returns (uint256)\n    {\n        require(_beneficiary[user].amount > 0, \"No Tokens Left\");\n\n        uint256 claimableLockedAmount = _calculateClaimableAmount(user);\n\n        require(claimableLockedAmount > 0, \"No Tokens to Release for Now\");\n\n        _beneficiary[user].amount = SafeMath.sub(\n            _beneficiary[user].amount,\n            claimableLockedAmount\n        );\n\n        return claimableLockedAmount;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xF7F CALLDATACOPY GASLIMIT ISZERO 0x27 PUSH29 0x40DC0699C995F2B4C7F397D9F3BFD9AE759628B3F81D334D64736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xF7F CALLDATACOPY GASLIMIT ISZERO 0x27 PUSH29 0x40DC0699C995F2B4C7F397D9F3BFD9AE759628B3F81D334D64736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Whitelist.sol": {
				"Whitelist": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addBeneficiary",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "deleteBeneficiary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "hasWhitelist",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "lockedAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isPhase1Claimed",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "latestClaimDay",
											"type": "uint256"
										}
									],
									"internalType": "struct Whitelist.WhitelistStruct",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initiateWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "releaseClaimable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPrivateSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Whitelist.sol\":123:5389  contract Whitelist {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Whitelist.sol\":718:821  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Whitelist.sol\":762:779  1467900000 * 1e18 */\n  0x04be37ea7317415c45800000\n    /* \"contracts/Whitelist.sol\":742:759  privateSaleAmount */\n  0x01\n    /* \"contracts/Whitelist.sol\":742:779  privateSaleAmount = 1467900000 * 1e18 */\n  sstore\n    /* \"contracts/Whitelist.sol\":789:801  talaxAddress */\n  0x04\n    /* \"contracts/Whitelist.sol\":789:814  talaxAddress = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Whitelist.sol\":804:814  msg.sender */\n  caller\n    /* \"contracts/Whitelist.sol\":789:814  talaxAddress = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Whitelist.sol\":123:5389  contract Whitelist {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Whitelist.sol\":123:5389  contract Whitelist {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x81008568\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x8cdb7e8b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8cdb7e8b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x96074e70\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xefdd8796\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x81008568\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8b2b423a\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x338dbf59\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x338dbf59\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x549dee0b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7d3bca76\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x5171f4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1d77b00b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Whitelist.sol\":4884:5387  function releaseClaimable(address user)... */\n    tag_3:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n        /* \"#utility.yul\":552:577   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":540:542   */\n      0x20\n        /* \"#utility.yul\":525:543   */\n      add\n        /* \"contracts/Whitelist.sol\":4884:5387  function releaseClaimable(address user)... */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Whitelist.sol\":1217:1316  function changeTalaxAddress(address talax) external onlyTalax {... */\n    tag_4:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/Whitelist.sol\":385:416  uint256 public startPrivateSale */\n    tag_5:\n      tag_16\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/Whitelist.sol\":180:211  uint256 public privateSaleUsers */\n    tag_6:\n      tag_16\n      sload(0x00)\n      dup2\n      jump\n        /* \"contracts/Whitelist.sol\":4408:4797  function deleteBeneficiary(address user)... */\n    tag_7:\n      tag_16\n      tag_32\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n        /* \"contracts/Whitelist.sol\":1322:1719  function beneficiary(address user)... */\n    tag_8:\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":1540:1558  _beneficiary[user] */\n      and\n        /* \"contracts/Whitelist.sol\":1417:1424  uint256 */\n      0x00\n        /* \"contracts/Whitelist.sol\":1540:1558  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":1540:1552  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":1540:1558  _beneficiary[user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":1509:1558  WhitelistStruct memory benef = _beneficiary[user] */\n      dup4\n      mload\n      0x80\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      dup1\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      swap4\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      swap6\n      dup3\n      add\n      dup7\n      swap1\n      mstore\n      swap2\n      swap1\n      swap4\n      add\n      sload\n      0x60\n      swap1\n      swap4\n      add\n      dup4\n      swap1\n      mstore\n      swap4\n      swap1\n      swap3\n      swap2\n      swap1\n        /* \"contracts/Whitelist.sol\":1322:1719  function beneficiary(address user)... */\n      jump\n    tag_35:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":813:838   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":869:871   */\n      0x20\n        /* \"#utility.yul\":854:872   */\n      dup6\n      add\n        /* \"#utility.yul\":847:881   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":924:938   */\n      swap1\n      iszero\n        /* \"#utility.yul\":917:939   */\n      iszero\n        /* \"#utility.yul\":897:915   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":890:940   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":971:973   */\n      0x60\n        /* \"#utility.yul\":956:974   */\n      dup3\n      add\n        /* \"#utility.yul\":949:983   */\n      mstore\n        /* \"#utility.yul\":800:803   */\n      0x80\n        /* \"#utility.yul\":785:804   */\n      add\n        /* \"contracts/Whitelist.sol\":1322:1719  function beneficiary(address user)... */\n      tag_20\n        /* \"#utility.yul\":588:989   */\n      jump\n        /* \"contracts/Whitelist.sol\":218:250  uint256 public privateSaleAmount */\n    tag_9:\n      tag_16\n      sload(0x01)\n      dup2\n      jump\n        /* \"contracts/Whitelist.sol\":1830:1983  function hasWhitelist(address user)... */\n    tag_10:\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n        /* \"#utility.yul\":1223:1236   */\n      dup2\n      mload\n        /* \"#utility.yul\":1205:1237   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1293:1297   */\n      0x20\n        /* \"#utility.yul\":1281:1298   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1275:1299   */\n      mload\n        /* \"#utility.yul\":1253:1273   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1246:1300   */\n      mstore\n        /* \"#utility.yul\":1370:1374   */\n      0x40\n        /* \"#utility.yul\":1358:1375   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1352:1376   */\n      mload\n        /* \"#utility.yul\":1345:1377   */\n      iszero\n        /* \"#utility.yul\":1338:1378   */\n      iszero\n        /* \"#utility.yul\":1316:1336   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1309:1379   */\n      mstore\n        /* \"#utility.yul\":1435:1439   */\n      0x60\n        /* \"#utility.yul\":1423:1440   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":1417:1441   */\n      mload\n        /* \"#utility.yul\":1395:1415   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":1388:1442   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1192:1195   */\n      0x80\n        /* \"#utility.yul\":1177:1196   */\n      add\n      swap1\n        /* \"#utility.yul\":994:1448   */\n      jump\n        /* \"contracts/Whitelist.sol\":3884:4402  function addBeneficiary(address user, uint256 amount)... */\n    tag_11:\n      tag_22\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"contracts/Whitelist.sol\":1725:1824  function initiateWhitelist() external onlyTalax {... */\n    tag_12:\n      tag_22\n      tag_53\n      jump\t// in\n        /* \"contracts/Whitelist.sol\":4884:5387  function releaseClaimable(address user)... */\n    tag_19:\n        /* \"contracts/Whitelist.sol\":4976:4983  uint256 */\n      0x00\n        /* \"contracts/Whitelist.sol\":1075:1087  _onlyTalax() */\n      tag_55\n        /* \"contracts/Whitelist.sol\":1075:1085  _onlyTalax */\n      tag_56\n        /* \"contracts/Whitelist.sol\":1075:1087  _onlyTalax() */\n      jump\t// in\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":5007:5025  _beneficiary[user] */\n      dup3\n      and\n        /* \"contracts/Whitelist.sol\":5035:5036  0 */\n      0x00\n        /* \"contracts/Whitelist.sol\":5007:5025  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":5007:5019  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":5007:5025  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":5007:5032  _beneficiary[user].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":4999:5055  require(_beneficiary[user].amount > 0, \"No Tokens Left\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1914:1916   */\n      0x20\n        /* \"contracts/Whitelist.sol\":4999:5055  require(_beneficiary[user].amount > 0, \"No Tokens Left\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1896:1917   */\n      mstore\n        /* \"#utility.yul\":1953:1955   */\n      0x0e\n        /* \"#utility.yul\":1933:1951   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1926:1956   */\n      mstore\n        /* \"#utility.yul\":1992:2008   */\n      0x4e6f20546f6b656e73204c656674000000000000000000000000000000000000\n        /* \"#utility.yul\":1972:1990   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1965:2009   */\n      mstore\n        /* \"#utility.yul\":2026:2044   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":4999:5055  require(_beneficiary[user].amount > 0, \"No Tokens Left\") */\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"contracts/Whitelist.sol\":5066:5095  uint256 claimableLockedAmount */\n      0x00\n        /* \"contracts/Whitelist.sol\":5098:5129  _calculateClaimableAmount(user) */\n      tag_61\n        /* \"contracts/Whitelist.sol\":5124:5128  user */\n      dup4\n        /* \"contracts/Whitelist.sol\":5098:5123  _calculateClaimableAmount */\n      tag_62\n        /* \"contracts/Whitelist.sol\":5098:5129  _calculateClaimableAmount(user) */\n      jump\t// in\n    tag_61:\n        /* \"contracts/Whitelist.sol\":5066:5129  uint256 claimableLockedAmount = _calculateClaimableAmount(user) */\n      swap1\n      pop\n        /* \"contracts/Whitelist.sol\":5172:5173  0 */\n      0x00\n        /* \"contracts/Whitelist.sol\":5148:5169  claimableLockedAmount */\n      dup2\n        /* \"contracts/Whitelist.sol\":5148:5173  claimableLockedAmount > 0 */\n      gt\n        /* \"contracts/Whitelist.sol\":5140:5206  require(claimableLockedAmount > 0, \"No Tokens to Release for Now\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2257:2259   */\n      0x20\n        /* \"contracts/Whitelist.sol\":5140:5206  require(claimableLockedAmount > 0, \"No Tokens to Release for Now\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2239:2260   */\n      mstore\n        /* \"#utility.yul\":2296:2298   */\n      0x1c\n        /* \"#utility.yul\":2276:2294   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2269:2299   */\n      mstore\n        /* \"#utility.yul\":2335:2365   */\n      0x4e6f20546f6b656e7320746f2052656c6561736520666f72204e6f7700000000\n        /* \"#utility.yul\":2315:2333   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2308:2366   */\n      mstore\n        /* \"#utility.yul\":2383:2401   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":5140:5206  require(claimableLockedAmount > 0, \"No Tokens to Release for Now\") */\n      tag_59\n        /* \"#utility.yul\":2055:2407   */\n      jump\n        /* \"contracts/Whitelist.sol\":5140:5206  require(claimableLockedAmount > 0, \"No Tokens to Release for Now\") */\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":5271:5289  _beneficiary[user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":5271:5283  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":5271:5289  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":5271:5296  _beneficiary[user].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":5245:5341  SafeMath.sub(... */\n      tag_66\n      swap1\n        /* \"contracts/Whitelist.sol\":5310:5331  claimableLockedAmount */\n      dup3\n        /* \"contracts/Whitelist.sol\":5245:5257  SafeMath.sub */\n      tag_67\n        /* \"contracts/Whitelist.sol\":5245:5341  SafeMath.sub(... */\n      jump\t// in\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":5217:5235  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":5217:5229  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":5217:5235  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":5217:5242  _beneficiary[user].amount */\n      0x01\n      add\n        /* \"contracts/Whitelist.sol\":5217:5341  _beneficiary[user].amount = SafeMath.sub(... */\n      sstore\n        /* \"contracts/Whitelist.sol\":5359:5380  claimableLockedAmount */\n      swap1\n      pop\n        /* \"contracts/Whitelist.sol\":1097:1098  _ */\n    tag_57:\n        /* \"contracts/Whitelist.sol\":4884:5387  function releaseClaimable(address user)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":1217:1316  function changeTalaxAddress(address talax) external onlyTalax {... */\n    tag_24:\n        /* \"contracts/Whitelist.sol\":1075:1087  _onlyTalax() */\n      tag_69\n        /* \"contracts/Whitelist.sol\":1075:1085  _onlyTalax */\n      tag_56\n        /* \"contracts/Whitelist.sol\":1075:1087  _onlyTalax() */\n      jump\t// in\n    tag_69:\n        /* \"contracts/Whitelist.sol\":1289:1301  talaxAddress */\n      0x04\n        /* \"contracts/Whitelist.sol\":1289:1309  talaxAddress = talax */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":1217:1316  function changeTalaxAddress(address talax) external onlyTalax {... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":4408:4797  function deleteBeneficiary(address user)... */\n    tag_33:\n        /* \"contracts/Whitelist.sol\":4501:4508  uint256 */\n      0x00\n        /* \"contracts/Whitelist.sol\":1075:1087  _onlyTalax() */\n      tag_72\n        /* \"contracts/Whitelist.sol\":1075:1085  _onlyTalax */\n      tag_56\n        /* \"contracts/Whitelist.sol\":1075:1087  _onlyTalax() */\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":4532:4550  _beneficiary[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":4532:4544  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":4532:4550  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":4532:4557  _beneficiary[user].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":4524:4586  require(_beneficiary[user].amount != 0, \"User not Registered\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2614:2616   */\n      0x20\n        /* \"contracts/Whitelist.sol\":4524:4586  require(_beneficiary[user].amount != 0, \"User not Registered\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2596:2617   */\n      mstore\n        /* \"#utility.yul\":2653:2655   */\n      0x13\n        /* \"#utility.yul\":2633:2651   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2626:2656   */\n      mstore\n        /* \"#utility.yul\":2692:2713   */\n      0x55736572206e6f74205265676973746572656400000000000000000000000000\n        /* \"#utility.yul\":2672:2690   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2665:2714   */\n      mstore\n        /* \"#utility.yul\":2731:2749   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":4524:4586  require(_beneficiary[user].amount != 0, \"User not Registered\") */\n      tag_59\n        /* \"#utility.yul\":2412:2755   */\n      jump\n        /* \"contracts/Whitelist.sol\":4524:4586  require(_beneficiary[user].amount != 0, \"User not Registered\") */\n    tag_74:\n        /* \"contracts/Whitelist.sol\":4616:4617  1 */\n      0x01\n        /* \"contracts/Whitelist.sol\":4596:4612  privateSaleUsers */\n      0x00\n      dup1\n        /* \"contracts/Whitelist.sol\":4596:4617  privateSaleUsers -= 1 */\n      dup3\n      dup3\n      sload\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":4648:4666  _beneficiary[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":4648:4660  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":4648:4666  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Whitelist.sol\":4648:4673  _beneficiary[user].amount */\n      0x01\n      swap1\n      dup2\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":4627:4673  privateSaleAmount += _beneficiary[user].amount */\n      dup2\n      sload\n        /* \"contracts/Whitelist.sol\":4648:4673  _beneficiary[user].amount */\n      swap1\n      swap3\n        /* \"contracts/Whitelist.sol\":4648:4666  _beneficiary[user] */\n      swap1\n        /* \"contracts/Whitelist.sol\":4627:4673  privateSaleAmount += _beneficiary[user].amount */\n      tag_79\n      swap1\n        /* \"contracts/Whitelist.sol\":4648:4673  _beneficiary[user].amount */\n      dup5\n      swap1\n        /* \"contracts/Whitelist.sol\":4627:4673  privateSaleAmount += _beneficiary[user].amount */\n      tag_80\n      jump\t// in\n    tag_79:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":4703:4721  _beneficiary[user] */\n      and\n        /* \"contracts/Whitelist.sol\":4683:4700  uint256 ex_amount */\n      0x00\n        /* \"contracts/Whitelist.sol\":4703:4721  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":4703:4715  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":4703:4721  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Whitelist.sol\":4703:4728  _beneficiary[user].amount */\n      0x01\n      dup2\n      add\n      dup1\n      sload\n        /* \"contracts/Whitelist.sol\":4739:4764  delete _beneficiary[user] */\n      dup5\n      dup4\n      sstore\n      swap1\n      dup5\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      swap2\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Whitelist.sol\":4703:4728  _beneficiary[user].amount */\n      swap1\n        /* \"contracts/Whitelist.sol\":4408:4797  function deleteBeneficiary(address user)... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":1830:1983  function hasWhitelist(address user)... */\n    tag_45:\n        /* \"contracts/Whitelist.sol\":1913:1935  WhitelistStruct memory */\n      tag_82\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_82:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":1958:1976  _beneficiary[user] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":1958:1970  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":1958:1976  _beneficiary[user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":1951:1976  return _beneficiary[user] */\n      dup4\n      mload\n      0x80\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      swap2\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      swap1\n        /* \"contracts/Whitelist.sol\":1830:1983  function hasWhitelist(address user)... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":3884:4402  function addBeneficiary(address user, uint256 amount)... */\n    tag_51:\n        /* \"contracts/Whitelist.sol\":1075:1087  _onlyTalax() */\n      tag_86\n        /* \"contracts/Whitelist.sol\":1075:1085  _onlyTalax */\n      tag_56\n        /* \"contracts/Whitelist.sol\":1075:1087  _onlyTalax() */\n      jump\t// in\n    tag_86:\n        /* \"contracts/Whitelist.sol\":4005:4022  privateSaleAmount */\n      sload(0x01)\n        /* \"contracts/Whitelist.sol\":3995:4001  amount */\n      dup2\n        /* \"contracts/Whitelist.sol\":3995:4022  amount <= privateSaleAmount */\n      gt\n      iszero\n        /* \"contracts/Whitelist.sol\":3987:4053  require(amount <= privateSaleAmount, \"Insufficient Total Balance\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3414:3416   */\n      0x20\n        /* \"contracts/Whitelist.sol\":3987:4053  require(amount <= privateSaleAmount, \"Insufficient Total Balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3396:3417   */\n      mstore\n        /* \"#utility.yul\":3453:3455   */\n      0x1a\n        /* \"#utility.yul\":3433:3451   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3426:3456   */\n      mstore\n        /* \"#utility.yul\":3492:3520   */\n      0x496e73756666696369656e7420546f74616c2042616c616e6365000000000000\n        /* \"#utility.yul\":3472:3490   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3465:3521   */\n      mstore\n        /* \"#utility.yul\":3538:3556   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":3987:4053  require(amount <= privateSaleAmount, \"Insufficient Total Balance\") */\n      tag_59\n        /* \"#utility.yul\":3212:3562   */\n      jump\n        /* \"contracts/Whitelist.sol\":3987:4053  require(amount <= privateSaleAmount, \"Insufficient Total Balance\") */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":4071:4089  _beneficiary[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":4071:4083  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":4071:4089  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":4071:4096  _beneficiary[user].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":4071:4101  _beneficiary[user].amount == 0 */\n      iszero\n        /* \"contracts/Whitelist.sol\":4063:4132  require(_beneficiary[user].amount == 0, \"Cannot add Registered User\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3769:3771   */\n      0x20\n        /* \"contracts/Whitelist.sol\":4063:4132  require(_beneficiary[user].amount == 0, \"Cannot add Registered User\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3751:3772   */\n      mstore\n        /* \"#utility.yul\":3808:3810   */\n      0x1a\n        /* \"#utility.yul\":3788:3806   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3781:3811   */\n      mstore\n        /* \"#utility.yul\":3847:3875   */\n      0x43616e6e6f742061646420526567697374657265642055736572000000000000\n        /* \"#utility.yul\":3827:3845   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3820:3876   */\n      mstore\n        /* \"#utility.yul\":3893:3911   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":4063:4132  require(_beneficiary[user].amount == 0, \"Cannot add Registered User\") */\n      tag_59\n        /* \"#utility.yul\":3567:3917   */\n      jump\n        /* \"contracts/Whitelist.sol\":4063:4132  require(_beneficiary[user].amount == 0, \"Cannot add Registered User\") */\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":4143:4161  _beneficiary[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":4143:4155  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":4143:4161  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Whitelist.sol\":4143:4183  _beneficiary[user].lockedAmount = amount */\n      dup4\n      dup2\n      sstore\n        /* \"contracts/Whitelist.sol\":4193:4218  _beneficiary[user].amount */\n      0x01\n      dup1\n      dup3\n      add\n        /* \"contracts/Whitelist.sol\":4193:4227  _beneficiary[user].amount = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":4237:4271  _beneficiary[user].isPhase1Claimed */\n      0x02\n      dup3\n      add\n        /* \"contracts/Whitelist.sol\":4237:4279  _beneficiary[user].isPhase1Claimed = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":4289:4322  _beneficiary[user].latestClaimDay */\n      swap2\n      add\n        /* \"contracts/Whitelist.sol\":4289:4326  _beneficiary[user].latestClaimDay = 1 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":4337:4358  privateSaleUsers += 1 */\n      dup2\n      sload\n        /* \"contracts/Whitelist.sol\":4193:4218  _beneficiary[user].amount */\n      swap1\n      swap2\n        /* \"contracts/Whitelist.sol\":4143:4161  _beneficiary[user] */\n      swap1\n      dup2\n      swap1\n        /* \"contracts/Whitelist.sol\":4337:4358  privateSaleUsers += 1 */\n      tag_94\n      swap1\n        /* \"contracts/Whitelist.sol\":4193:4218  _beneficiary[user].amount */\n      dup5\n      swap1\n        /* \"contracts/Whitelist.sol\":4337:4358  privateSaleUsers += 1 */\n      tag_80\n      jump\t// in\n    tag_94:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Whitelist.sol\":4389:4395  amount */\n      dup1\n        /* \"contracts/Whitelist.sol\":4368:4385  privateSaleAmount */\n      0x01\n      0x00\n        /* \"contracts/Whitelist.sol\":4368:4395  privateSaleAmount -= amount */\n      dup3\n      dup3\n      sload\n      tag_95\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_95:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Whitelist.sol\":3884:4402  function addBeneficiary(address user, uint256 amount)... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":1725:1824  function initiateWhitelist() external onlyTalax {... */\n    tag_53:\n        /* \"contracts/Whitelist.sol\":1075:1087  _onlyTalax() */\n      tag_97\n        /* \"contracts/Whitelist.sol\":1075:1085  _onlyTalax */\n      tag_56\n        /* \"contracts/Whitelist.sol\":1075:1087  _onlyTalax() */\n      jump\t// in\n    tag_97:\n        /* \"contracts/Whitelist.sol\":1802:1817  block.timestamp */\n      timestamp\n        /* \"contracts/Whitelist.sol\":1783:1799  startPrivateSale */\n      0x02\n        /* \"contracts/Whitelist.sol\":1783:1817  startPrivateSale = block.timestamp */\n      sstore\n        /* \"contracts/Whitelist.sol\":1725:1824  function initiateWhitelist() external onlyTalax {... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":932:1038  function _onlyTalax() internal view {... */\n    tag_56:\n        /* \"contracts/Whitelist.sol\":1000:1012  talaxAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/Whitelist.sol\":986:996  msg.sender */\n      caller\n        /* \"contracts/Whitelist.sol\":986:1012  msg.sender == talaxAddress */\n      eq\n        /* \"contracts/Whitelist.sol\":978:1031  require(msg.sender == talaxAddress, \"Not authorized\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4124:4126   */\n      0x20\n        /* \"contracts/Whitelist.sol\":978:1031  require(msg.sender == talaxAddress, \"Not authorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4106:4127   */\n      mstore\n        /* \"#utility.yul\":4163:4165   */\n      0x0e\n        /* \"#utility.yul\":4143:4161   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4136:4166   */\n      mstore\n        /* \"#utility.yul\":4202:4218   */\n      0x4e6f7420617574686f72697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":4182:4200   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4175:4219   */\n      mstore\n        /* \"#utility.yul\":4236:4254   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":978:1031  require(msg.sender == talaxAddress, \"Not authorized\") */\n      tag_59\n        /* \"#utility.yul\":3922:4260   */\n      jump\n        /* \"contracts/Whitelist.sol\":978:1031  require(msg.sender == talaxAddress, \"Not authorized\") */\n    tag_100:\n        /* \"contracts/Whitelist.sol\":932:1038  function _onlyTalax() internal view {... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":2088:3878  function _calculateClaimableAmount(address user)... */\n    tag_62:\n        /* \"contracts/Whitelist.sol\":2171:2178  uint256 */\n      0x00\n        /* \"contracts/Whitelist.sol\":2194:2211  uint256 claimable */\n      dup1\n        /* \"contracts/Whitelist.sol\":2222:2242  uint256 lockDuration */\n      0x00\n        /* \"contracts/Whitelist.sol\":2284:2290  1 days */\n      0x015180\n        /* \"contracts/Whitelist.sol\":2264:2280  startPrivateSale */\n      sload(0x02)\n        /* \"contracts/Whitelist.sol\":2246:2261  block.timestamp */\n      timestamp\n        /* \"contracts/Whitelist.sol\":2246:2280  block.timestamp - startPrivateSale */\n      tag_104\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_104:\n        /* \"contracts/Whitelist.sol\":2245:2290  (block.timestamp - startPrivateSale) / 1 days */\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"contracts/Whitelist.sol\":2222:2290  uint256 lockDuration = (block.timestamp - startPrivateSale) / 1 days */\n      swap1\n      pop\n        /* \"contracts/Whitelist.sol\":2373:2380  16 * 30 */\n      0x01e0\n        /* \"contracts/Whitelist.sol\":2358:2370  lockDuration */\n      dup2\n        /* \"contracts/Whitelist.sol\":2358:2380  lockDuration < 16 * 30 */\n      lt\n        /* \"contracts/Whitelist.sol\":2354:3788  if (lockDuration < 16 * 30) {... */\n      iszero\n      tag_107\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":2400:2418  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":2400:2412  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":2400:2418  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":2400:2434  _beneficiary[user].isPhase1Claimed */\n      0x02\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/Whitelist.sol\":2396:2759  if (_beneficiary[user].isPhase1Claimed == false) {... */\n      tag_108\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":2570:2588  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":2570:2582  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":2570:2588  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":2570:2601  _beneficiary[user].lockedAmount */\n      sload\n        /* \"contracts/Whitelist.sol\":2475:2685  claimable.add(... */\n      tag_109\n      swap1\n        /* \"contracts/Whitelist.sol\":2510:2667  SafeMath.div(... */\n      tag_110\n      swap1\n        /* \"contracts/Whitelist.sol\":2548:2602  SafeMath.mul(_phase1, _beneficiary[user].lockedAmount) */\n      tag_111\n      swap1\n        /* \"contracts/Whitelist.sol\":292:307  73395000 * 1e18 */\n      0x3cb5feec27901169e00000\n      swap1\n        /* \"contracts/Whitelist.sol\":2548:2560  SafeMath.mul */\n      tag_112\n        /* \"contracts/Whitelist.sol\":2548:2602  SafeMath.mul(_phase1, _beneficiary[user].lockedAmount) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/Whitelist.sol\":2628:2645  privateSaleAmount */\n      sload(0x01)\n        /* \"contracts/Whitelist.sol\":2510:2522  SafeMath.div */\n      tag_113\n        /* \"contracts/Whitelist.sol\":2510:2667  SafeMath.div(... */\n      jump\t// in\n    tag_110:\n        /* \"contracts/Whitelist.sol\":2475:2484  claimable */\n      dup4\n      swap1\n        /* \"contracts/Whitelist.sol\":2475:2488  claimable.add */\n      tag_114\n        /* \"contracts/Whitelist.sol\":2475:2685  claimable.add(... */\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":2703:2721  _beneficiary[user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":2703:2715  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":2703:2721  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":2703:2737  _beneficiary[user].isPhase1Claimed */\n      0x02\n      add\n        /* \"contracts/Whitelist.sol\":2703:2744  _beneficiary[user].isPhase1Claimed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Whitelist.sol\":2740:2744  true */\n      0x01\n        /* \"contracts/Whitelist.sol\":2703:2744  _beneficiary[user].isPhase1Claimed = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":2463:2685  claimable = claimable.add(... */\n      swap2\n      pop\n        /* \"contracts/Whitelist.sol\":2396:2759  if (_beneficiary[user].isPhase1Claimed == false) {... */\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":2772:2790  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":2772:2784  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":2772:2790  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Whitelist.sol\":2808:2815  15 * 30 */\n      0x01c2\n        /* \"contracts/Whitelist.sol\":2772:2805  _beneficiary[user].latestClaimDay */\n      swap2\n      add\n        /* \"contracts/Whitelist.sol\":2772:2815  _beneficiary[user].latestClaimDay = 15 * 30 */\n      sstore\n        /* \"contracts/Whitelist.sol\":2354:3788  if (lockDuration < 16 * 30) {... */\n      jump(tag_117)\n    tag_107:\n        /* \"contracts/Whitelist.sol\":2911:2918  16 * 30 */\n      0x01e0\n        /* \"contracts/Whitelist.sol\":2895:2907  lockDuration */\n      dup2\n        /* \"contracts/Whitelist.sol\":2895:2918  lockDuration >= 16 * 30 */\n      lt\n      iszero\n        /* \"contracts/Whitelist.sol\":2895:2944  lockDuration >= 16 * 30 && lockDuration < 28 * 30 */\n      dup1\n      iszero\n      tag_116\n      jumpi\n      pop\n        /* \"contracts/Whitelist.sol\":2937:2944  28 * 30 */\n      0x0348\n        /* \"contracts/Whitelist.sol\":2922:2934  lockDuration */\n      dup2\n        /* \"contracts/Whitelist.sol\":2922:2944  lockDuration < 28 * 30 */\n      lt\n        /* \"contracts/Whitelist.sol\":2895:2944  lockDuration >= 16 * 30 && lockDuration < 28 * 30 */\n    tag_116:\n        /* \"contracts/Whitelist.sol\":2891:3788  if (lockDuration >= 16 * 30 && lockDuration < 28 * 30) {... */\n      iszero\n      tag_117\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":2964:2982  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":2964:2976  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":2964:2982  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":2964:2998  _beneficiary[user].isPhase1Claimed */\n      0x02\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/Whitelist.sol\":2960:3323  if (_beneficiary[user].isPhase1Claimed == false) {... */\n      tag_118\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":3134:3152  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":3134:3146  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":3134:3152  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":3134:3165  _beneficiary[user].lockedAmount */\n      sload\n        /* \"contracts/Whitelist.sol\":3039:3249  claimable.add(... */\n      tag_119\n      swap1\n        /* \"contracts/Whitelist.sol\":3074:3231  SafeMath.div(... */\n      tag_110\n      swap1\n        /* \"contracts/Whitelist.sol\":3112:3166  SafeMath.mul(_phase1, _beneficiary[user].lockedAmount) */\n      tag_111\n      swap1\n        /* \"contracts/Whitelist.sol\":292:307  73395000 * 1e18 */\n      0x3cb5feec27901169e00000\n      swap1\n        /* \"contracts/Whitelist.sol\":3112:3124  SafeMath.mul */\n      tag_112\n        /* \"contracts/Whitelist.sol\":3112:3166  SafeMath.mul(_phase1, _beneficiary[user].lockedAmount) */\n      jump\t// in\n        /* \"contracts/Whitelist.sol\":3039:3249  claimable.add(... */\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":3267:3285  _beneficiary[user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":3267:3279  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":3267:3285  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":3267:3301  _beneficiary[user].isPhase1Claimed */\n      0x02\n      add\n        /* \"contracts/Whitelist.sol\":3267:3308  _beneficiary[user].isPhase1Claimed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Whitelist.sol\":3304:3308  true */\n      0x01\n        /* \"contracts/Whitelist.sol\":3267:3308  _beneficiary[user].isPhase1Claimed = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":3027:3249  claimable = claimable.add(... */\n      swap2\n      pop\n        /* \"contracts/Whitelist.sol\":2960:3323  if (_beneficiary[user].isPhase1Claimed == false) {... */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":3395:3413  _beneficiary[user] */\n      dup5\n      and\n        /* \"contracts/Whitelist.sol\":3337:3361  uint256 sinceLatestClaim */\n      0x00\n        /* \"contracts/Whitelist.sol\":3395:3413  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":3395:3407  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":3395:3413  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Whitelist.sol\":3395:3428  _beneficiary[user].latestClaimDay */\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":3364:3428  lockDuration -... */\n      tag_122\n      swap1\n        /* \"contracts/Whitelist.sol\":3364:3376  lockDuration */\n      dup4\n        /* \"contracts/Whitelist.sol\":3364:3428  lockDuration -... */\n      tag_78\n      jump\t// in\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":3600:3618  _beneficiary[user] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":3600:3612  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":3600:3618  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":3600:3631  _beneficiary[user].lockedAmount */\n      sload\n        /* \"contracts/Whitelist.sol\":3337:3428  uint256 sinceLatestClaim = lockDuration -... */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Whitelist.sol\":3505:3715  claimable.add(... */\n      tag_123\n      swap1\n        /* \"contracts/Whitelist.sol\":3540:3697  SafeMath.div(... */\n      tag_124\n      swap1\n        /* \"contracts/Whitelist.sol\":3578:3632  SafeMath.mul(_phase2, _beneficiary[user].lockedAmount) */\n      tag_111\n      swap1\n        /* \"contracts/Whitelist.sol\":349:363  3820562 * 1e18 */\n      0x03290914be1afb75080000\n      swap1\n        /* \"contracts/Whitelist.sol\":3578:3590  SafeMath.mul */\n      tag_112\n        /* \"contracts/Whitelist.sol\":3578:3632  SafeMath.mul(_phase2, _beneficiary[user].lockedAmount) */\n      jump\t// in\n        /* \"contracts/Whitelist.sol\":3540:3697  SafeMath.div(... */\n    tag_124:\n        /* \"contracts/Whitelist.sol\":3505:3514  claimable */\n      dup5\n      swap1\n        /* \"contracts/Whitelist.sol\":3505:3518  claimable.add */\n      tag_114\n        /* \"contracts/Whitelist.sol\":3505:3715  claimable.add(... */\n      jump\t// in\n    tag_123:\n        /* \"contracts/Whitelist.sol\":3470:3715  sinceLatestClaim *... */\n      tag_126\n      swap1\n        /* \"contracts/Whitelist.sol\":3470:3486  sinceLatestClaim */\n      dup3\n        /* \"contracts/Whitelist.sol\":3470:3715  sinceLatestClaim *... */\n      tag_127\n      jump\t// in\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":3729:3747  _beneficiary[user] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":3729:3741  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":3729:3747  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Whitelist.sol\":3729:3762  _beneficiary[user].latestClaimDay */\n      add\n        /* \"contracts/Whitelist.sol\":3729:3777  _beneficiary[user].latestClaimDay = lockDuration */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":3442:3715  claimable =... */\n      swap3\n      pop\n      pop\n        /* \"contracts/Whitelist.sol\":2891:3788  if (lockDuration >= 16 * 30 && lockDuration < 28 * 30) {... */\n    tag_117:\n        /* \"contracts/Whitelist.sol\":3806:3820  claimable != 0 */\n      dup2\n        /* \"contracts/Whitelist.sol\":3798:3845  require(claimable != 0, \"Nothing to claim yet\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4919:4921   */\n      0x20\n        /* \"contracts/Whitelist.sol\":3798:3845  require(claimable != 0, \"Nothing to claim yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4901:4922   */\n      mstore\n        /* \"#utility.yul\":4958:4960   */\n      0x14\n        /* \"#utility.yul\":4938:4956   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4931:4961   */\n      mstore\n        /* \"#utility.yul\":4997:5019   */\n      0x4e6f7468696e6720746f20636c61696d20796574000000000000000000000000\n        /* \"#utility.yul\":4977:4995   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4970:5020   */\n      mstore\n        /* \"#utility.yul\":5037:5055   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":3798:3845  require(claimable != 0, \"Nothing to claim yet\") */\n      tag_59\n        /* \"#utility.yul\":4717:5061   */\n      jump\n        /* \"contracts/Whitelist.sol\":3798:3845  require(claimable != 0, \"Nothing to claim yet\") */\n    tag_128:\n      pop\n        /* \"contracts/Whitelist.sol\":3862:3871  claimable */\n      swap3\n        /* \"contracts/Whitelist.sol\":2088:3878  function _calculateClaimableAmount(address user)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_132\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_78\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_132\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_127\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_132\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_106\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_132\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_80\n      jump\t// in\n        /* \"#utility.yul\":14:210   */\n    tag_139:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":215:401   */\n    tag_18:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:347   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      dup1\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":295:347   */\n    tag_145:\n        /* \"#utility.yul\":366:395   */\n      tag_132\n        /* \"#utility.yul\":385:394   */\n      dup3\n        /* \"#utility.yul\":366:395   */\n      tag_139\n      jump\t// in\n        /* \"#utility.yul\":1453:1707   */\n    tag_50:\n        /* \"#utility.yul\":1521:1527   */\n      0x00\n        /* \"#utility.yul\":1529:1535   */\n      dup1\n        /* \"#utility.yul\":1582:1584   */\n      0x40\n        /* \"#utility.yul\":1570:1579   */\n      dup4\n        /* \"#utility.yul\":1561:1568   */\n      dup6\n        /* \"#utility.yul\":1557:1580   */\n      sub\n        /* \"#utility.yul\":1553:1585   */\n      slt\n        /* \"#utility.yul\":1550:1602   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1598:1599   */\n      0x00\n        /* \"#utility.yul\":1595:1596   */\n      dup1\n        /* \"#utility.yul\":1588:1600   */\n      revert\n        /* \"#utility.yul\":1550:1602   */\n    tag_151:\n        /* \"#utility.yul\":1621:1650   */\n      tag_152\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1621:1650   */\n      tag_139\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1611:1650   */\n      swap5\n        /* \"#utility.yul\":1697:1699   */\n      0x20\n        /* \"#utility.yul\":1682:1700   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1669:1701   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1453:1707   */\n      jump\t// out\n        /* \"#utility.yul\":2760:2944   */\n    tag_140:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":2809:2810   */\n      0x00\n        /* \"#utility.yul\":2802:2890   */\n      mstore\n        /* \"#utility.yul\":2909:2913   */\n      0x11\n        /* \"#utility.yul\":2906:2907   */\n      0x04\n        /* \"#utility.yul\":2899:2914   */\n      mstore\n        /* \"#utility.yul\":2933:2937   */\n      0x24\n        /* \"#utility.yul\":2930:2931   */\n      0x00\n        /* \"#utility.yul\":2923:2938   */\n      revert\n        /* \"#utility.yul\":2949:3074   */\n    tag_78:\n        /* \"#utility.yul\":2989:2993   */\n      0x00\n        /* \"#utility.yul\":3017:3018   */\n      dup3\n        /* \"#utility.yul\":3014:3015   */\n      dup3\n        /* \"#utility.yul\":3011:3019   */\n      lt\n        /* \"#utility.yul\":3008:3042   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":3022:3040   */\n      tag_159\n      tag_140\n      jump\t// in\n    tag_159:\n      pop\n        /* \"#utility.yul\":3059:3068   */\n      sub\n      swap1\n        /* \"#utility.yul\":2949:3074   */\n      jump\t// out\n        /* \"#utility.yul\":3079:3207   */\n    tag_80:\n        /* \"#utility.yul\":3119:3122   */\n      0x00\n        /* \"#utility.yul\":3150:3151   */\n      dup3\n        /* \"#utility.yul\":3146:3152   */\n      not\n        /* \"#utility.yul\":3143:3144   */\n      dup3\n        /* \"#utility.yul\":3140:3153   */\n      gt\n        /* \"#utility.yul\":3137:3176   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":3156:3174   */\n      tag_162\n      tag_140\n      jump\t// in\n    tag_162:\n      pop\n        /* \"#utility.yul\":3192:3201   */\n      add\n      swap1\n        /* \"#utility.yul\":3079:3207   */\n      jump\t// out\n        /* \"#utility.yul\":4265:4539   */\n    tag_106:\n        /* \"#utility.yul\":4305:4306   */\n      0x00\n        /* \"#utility.yul\":4331:4332   */\n      dup3\n        /* \"#utility.yul\":4321:4510   */\n      tag_167\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":4363:4364   */\n      0x00\n        /* \"#utility.yul\":4356:4444   */\n      mstore\n        /* \"#utility.yul\":4467:4471   */\n      0x12\n        /* \"#utility.yul\":4464:4465   */\n      0x04\n        /* \"#utility.yul\":4457:4472   */\n      mstore\n        /* \"#utility.yul\":4495:4499   */\n      0x24\n        /* \"#utility.yul\":4492:4493   */\n      0x00\n        /* \"#utility.yul\":4485:4500   */\n      revert\n        /* \"#utility.yul\":4321:4510   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":4524:4533   */\n      div\n      swap1\n        /* \"#utility.yul\":4265:4539   */\n      jump\t// out\n        /* \"#utility.yul\":4544:4712   */\n    tag_127:\n        /* \"#utility.yul\":4584:4591   */\n      0x00\n        /* \"#utility.yul\":4650:4651   */\n      dup2\n        /* \"#utility.yul\":4646:4647   */\n      0x00\n        /* \"#utility.yul\":4642:4648   */\n      not\n        /* \"#utility.yul\":4638:4652   */\n      div\n        /* \"#utility.yul\":4635:4636   */\n      dup4\n        /* \"#utility.yul\":4632:4653   */\n      gt\n        /* \"#utility.yul\":4627:4628   */\n      dup3\n        /* \"#utility.yul\":4620:4629   */\n      iszero\n        /* \"#utility.yul\":4613:4630   */\n      iszero\n        /* \"#utility.yul\":4609:4654   */\n      and\n        /* \"#utility.yul\":4606:4677   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":4657:4675   */\n      tag_170\n      tag_140\n      jump\t// in\n    tag_170:\n      pop\n        /* \"#utility.yul\":4697:4706   */\n      mul\n      swap1\n        /* \"#utility.yul\":4544:4712   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220439cc59a243eb57fda634421fbe6587305244c75abe56e61e2e233453f43da0164736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_364": {
									"entryPoint": null,
									"id": 364,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506b04be37ea7317415c45800000600155600480546001600160a01b03191633179055610a3c806100426000396000f3fe608060405234801561001057600080fd5b50600436106100bd5760003560e01c806381008568116100765780638cdb7e8b1161005b5780638cdb7e8b146101b657806396074e70146101fe578063efdd87961461021157600080fd5b806381008568146101225780638b2b423a146101ad57600080fd5b8063338dbf59116100a7578063338dbf59146100fd578063549dee0b146101065780637d3bca761461010f57600080fd5b80625171f4146100c25780631d77b00b146100e8575b600080fd5b6100d56100d036600461093b565b610219565b6040519081526020015b60405180910390f35b6100fb6100f636600461093b565b610337565b005b6100d560025481565b6100d560005481565b6100d561011d36600461093b565b610379565b61018761013036600461093b565b6001600160a01b0316600090815260036020818152604092839020835160808101855281548082526001830154938201849052600283015460ff161515958201869052919093015460609093018390529390929190565b6040805194855260208501939093529015159183019190915260608201526080016100df565b6100d560015481565b6101c96101c436600461093b565b610471565b6040516100df919081518152602080830151908201526040808301511515908201526060918201519181019190915260800190565b6100fb61020c366004610956565b6104ee565b6100fb61061b565b6000610223610629565b6001600160a01b0382166000908152600360205260409020600101546102905760405162461bcd60e51b815260206004820152600e60248201527f4e6f20546f6b656e73204c65667400000000000000000000000000000000000060448201526064015b60405180910390fd5b600061029b83610685565b9050600081116102ed5760405162461bcd60e51b815260206004820152601c60248201527f4e6f20546f6b656e7320746f2052656c6561736520666f72204e6f77000000006044820152606401610287565b6001600160a01b03831660009081526003602052604090206001015461031390826108ed565b6001600160a01b03841660009081526003602052604090206001015590505b919050565b61033f610629565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000610383610629565b6001600160a01b0382166000908152600360205260409020600101546103eb5760405162461bcd60e51b815260206004820152601360248201527f55736572206e6f742052656769737465726564000000000000000000000000006044820152606401610287565b60016000808282546103fd9190610996565b90915550506001600160a01b038216600090815260036020526040812060019081015481549092906104309084906109ad565b9091555050506001600160a01b0316600090815260036020819052604082206001810180548483559084905560028201805460ff1916905591019190915590565b61049e60405180608001604052806000815260200160008152602001600015158152602001600081525090565b506001600160a01b0316600090815260036020818152604092839020835160808101855281548152600182015492810192909252600281015460ff16151593820193909352910154606082015290565b6104f6610629565b6001548111156105485760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420546f74616c2042616c616e63650000000000006044820152606401610287565b6001600160a01b038216600090815260036020526040902060010154156105b15760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f7420616464205265676973746572656420557365720000000000006044820152606401610287565b6001600160a01b03821660009081526003602081905260408220838155600180820185905560028201805460ff191690559101819055815490919081906105f99084906109ad565b9250508190555080600160008282546106129190610996565b90915550505050565b610623610629565b42600255565b6004546001600160a01b031633146106835760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a65640000000000000000000000000000000000006044820152606401610287565b565b6000806000620151806002544261069c9190610996565b6106a691906109c5565b90506101e081101561076a576001600160a01b03841660009081526003602052604090206002015460ff16610744576001600160a01b03841660009081526003602052604090205461071b906107149061070c906a3cb5feec27901169e0000090610900565b60015461090c565b8390610918565b6001600160a01b0385166000908152600360205260409020600201805460ff1916600117905591505b6001600160a01b03841660009081526003602081905260409091206101c2910155610899565b6101e0811015801561077d575061034881105b15610899576001600160a01b03841660009081526003602052604090206002015460ff16610805576001600160a01b0384166000908152600360205260409020546107dc906107149061070c906a3cb5feec27901169e0000090610900565b6001600160a01b0385166000908152600360205260409020600201805460ff1916600117905591505b6001600160a01b03841660009081526003602081905260408220015461082b9083610996565b6001600160a01b03861660009081526003602052604090205490915061086c906108659061070c906a03290914be1afb7508000090610900565b8490610918565b61087690826109e7565b6001600160a01b0386166000908152600360208190526040909120018390559250505b816108e65760405162461bcd60e51b815260206004820152601460248201527f4e6f7468696e6720746f20636c61696d207965740000000000000000000000006044820152606401610287565b5092915050565b60006108f98284610996565b9392505050565b60006108f982846109e7565b60006108f982846109c5565b60006108f982846109ad565b80356001600160a01b038116811461033257600080fd5b60006020828403121561094d57600080fd5b6108f982610924565b6000806040838503121561096957600080fd5b61097283610924565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156109a8576109a8610980565b500390565b600082198211156109c0576109c0610980565b500190565b6000826109e257634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610a0157610a01610980565b50029056fea2646970667358221220439cc59a243eb57fda634421fbe6587305244c75abe56e61e2e233453f43da0164736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH12 0x4BE37EA7317415C45800000 PUSH1 0x1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0xA3C DUP1 PUSH2 0x42 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81008568 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0x8CDB7E8B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8CDB7E8B EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x96074E70 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xEFDD8796 EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81008568 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x8B2B423A EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x338DBF59 GT PUSH2 0xA7 JUMPI DUP1 PUSH4 0x338DBF59 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x549DEE0B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x7D3BCA76 EQ PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x5171F4 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0xE8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5 PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x219 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD5 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP6 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP1 SWAP4 ADD SLOAD PUSH1 0x60 SWAP1 SWAP4 ADD DUP4 SWAP1 MSTORE SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xDF JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFB PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x956 JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST PUSH2 0xFB PUSH2 0x61B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x223 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x290 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20546F6B656E73204C656674000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x29B DUP4 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20546F6B656E7320746F2052656C6561736520666F72204E6F7700000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x313 SWAP1 DUP3 PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33F PUSH2 0x629 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55736572206E6F74205265676973746572656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP2 SLOAD SWAP1 SWAP3 SWAP1 PUSH2 0x430 SWAP1 DUP5 SWAP1 PUSH2 0x9AD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD DUP5 DUP4 SSTORE SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH2 0x49E PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x4F6 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420546F74616C2042616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742061646420526567697374657265642055736572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 ADD DUP2 SWAP1 SSTORE DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x5F9 SWAP1 DUP5 SWAP1 PUSH2 0x9AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x623 PUSH2 0x629 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x15180 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E0 DUP2 LT ISZERO PUSH2 0x76A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x744 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x71B SWAP1 PUSH2 0x714 SWAP1 PUSH2 0x70C SWAP1 PUSH11 0x3CB5FEEC27901169E00000 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x90C JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x1C2 SWAP2 ADD SSTORE PUSH2 0x899 JUMP JUMPDEST PUSH2 0x1E0 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x77D JUMPI POP PUSH2 0x348 DUP2 LT JUMPDEST ISZERO PUSH2 0x899 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x805 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7DC SWAP1 PUSH2 0x714 SWAP1 PUSH2 0x70C SWAP1 PUSH11 0x3CB5FEEC27901169E00000 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH2 0x82B SWAP1 DUP4 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x86C SWAP1 PUSH2 0x865 SWAP1 PUSH2 0x70C SWAP1 PUSH11 0x3290914BE1AFB75080000 SWAP1 PUSH2 0x900 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH2 0x876 SWAP1 DUP3 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD DUP4 SWAP1 SSTORE SWAP3 POP POP JUMPDEST DUP2 PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F20636C61696D20796574000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 DUP5 PUSH2 0x996 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 DUP5 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 DUP5 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 DUP5 PUSH2 0x9AD JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F9 DUP3 PUSH2 0x924 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x972 DUP4 PUSH2 0x924 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x9A8 PUSH2 0x980 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9C0 PUSH2 0x980 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x9E2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA01 JUMPI PUSH2 0xA01 PUSH2 0x980 JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER SWAP13 0xC5 SWAP11 0x24 RETURNDATACOPY 0xB5 PUSH32 0xDA634421FBE6587305244C75ABE56E61E2E233453F43DA0164736F6C63430008 SIGNEXTEND STOP CALLER ",
							"sourceMap": "123:5266:1:-:0;;;718:103;;;;;;;;;-1:-1:-1;762:17:1;742;:37;789:12;:25;;-1:-1:-1;;;;;;789:25:1;804:10;789:25;;;123:5266;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateClaimableAmount_612": {
									"entryPoint": 1669,
									"id": 612,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_onlyTalax_376": {
									"entryPoint": 1577,
									"id": 376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addBeneficiary_675": {
									"entryPoint": 1262,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_175": {
									"entryPoint": 2328,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@beneficiary_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@changeTalaxAddress_395": {
									"entryPoint": 823,
									"id": 395,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deleteBeneficiary_720": {
									"entryPoint": 889,
									"id": 720,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_220": {
									"entryPoint": 2316,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@hasWhitelist_450": {
									"entryPoint": 1137,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initiateWhitelist_437": {
									"entryPoint": 1563,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_205": {
									"entryPoint": 2304,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@privateSaleAmount_321": {
									"entryPoint": null,
									"id": 321,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleUsers_319": {
									"entryPoint": null,
									"id": 319,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@releaseClaimable_770": {
									"entryPoint": 537,
									"id": 770,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@startPrivateSale_333": {
									"entryPoint": null,
									"id": 333,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_190": {
									"entryPoint": 2285,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_2812df8098724a19e626f2fcbdd08b3426e65b5ff71e519def40bf6bb8ffaf35__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3a5b0dad58f234c834b2d59776b599ea5a1d0292e912cadc1b414bfc6148e30f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5d6b80ebd59a303e9bfcce2d67970219661c6efe8c5f304a97d73d3dcf15ad17__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5ef76857e7f388323c58ffa20ec2ff71fb20ac2c5604fb66f74cf4cef5400bd7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94458f364e0ffb245ca4eba56924e7293ed20457455c1d78ac86885ac4682e2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_WhitelistStruct_$342_memory_ptr__to_t_struct$_WhitelistStruct_$342_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2432,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5063:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:2"
															},
															"nodeType": "YulIf",
															"src": "111:93:2"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "14:196:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "285:116:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "331:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "340:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:32:2"
															},
															"nodeType": "YulIf",
															"src": "295:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "356:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "385:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "366:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:2",
														"type": ""
													}
												],
												"src": "215:186:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "507:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "517:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "529:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "540:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "517:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "559:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "570:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "552:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "552:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "476:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "487:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "498:4:2",
														"type": ""
													}
												],
												"src": "406:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "767:222:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "777:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "789:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "800:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "777:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "820:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "831:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "813:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "813:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "813:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "858:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "869:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "854:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "854:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "874:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "901:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "912:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "897:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "897:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "931:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "924:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "924:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "917:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "917:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "890:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "890:50:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "960:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "971:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:18:2"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "976:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "949:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "949:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "949:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "712:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "723:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "731:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "739:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "747:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "758:4:2",
														"type": ""
													}
												],
												"src": "588:401:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1159:289:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1169:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1181:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1192:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1177:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1177:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1169:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1212:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1229:6:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1223:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1223:13:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1205:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1205:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1205:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1257:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1268:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1253:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1253:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1285:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1293:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1281:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1281:17:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1275:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1275:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1246:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1246:54:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1246:54:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1320:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1331:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1316:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "value0",
																										"nodeType": "YulIdentifier",
																										"src": "1362:6:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1370:4:2",
																										"type": "",
																										"value": "0x40"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1358:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1358:17:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "1352:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1352:24:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1345:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1345:32:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1338:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:40:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1309:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:70:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1309:70:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1399:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1410:4:2",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1395:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1395:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1427:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1435:4:2",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1423:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1423:17:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1417:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1417:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1388:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1388:54:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1388:54:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_WhitelistStruct_$342_memory_ptr__to_t_struct$_WhitelistStruct_$342_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1128:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1139:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1150:4:2",
														"type": ""
													}
												],
												"src": "994:454:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1540:167:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1586:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1595:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1598:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1588:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1588:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1588:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1561:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1570:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1557:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1557:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1582:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1553:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1553:32:2"
															},
															"nodeType": "YulIf",
															"src": "1550:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1611:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1640:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1621:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1621:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1611:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1659:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1686:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1697:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1682:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1682:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1669:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1659:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1498:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1509:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1521:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1529:6:2",
														"type": ""
													}
												],
												"src": "1453:254:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1886:164:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1903:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1914:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1896:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1896:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1937:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1948:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1933:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1933:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1953:2:2",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1926:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1926:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1926:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1976:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1987:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1972:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1972:18:2"
																	},
																	{
																		"hexValue": "4e6f20546f6b656e73204c656674",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1992:16:2",
																		"type": "",
																		"value": "No Tokens Left"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1965:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1965:44:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1965:44:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2018:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2030:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2041:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2026:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2026:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2018:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5d6b80ebd59a303e9bfcce2d67970219661c6efe8c5f304a97d73d3dcf15ad17__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1863:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1877:4:2",
														"type": ""
													}
												],
												"src": "1712:338:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2229:178:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2246:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2257:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2239:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2280:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2291:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2276:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2296:2:2",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2269:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2269:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2319:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2330:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2315:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2315:18:2"
																	},
																	{
																		"hexValue": "4e6f20546f6b656e7320746f2052656c6561736520666f72204e6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2335:30:2",
																		"type": "",
																		"value": "No Tokens to Release for Now"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2308:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2308:58:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2375:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2387:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2398:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2383:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2375:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3a5b0dad58f234c834b2d59776b599ea5a1d0292e912cadc1b414bfc6148e30f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2206:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2220:4:2",
														"type": ""
													}
												],
												"src": "2055:352:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2586:169:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2603:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2614:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2596:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2596:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2596:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2637:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2648:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2633:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2633:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2653:2:2",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2626:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2626:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2626:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2676:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2687:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2672:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2672:18:2"
																	},
																	{
																		"hexValue": "55736572206e6f742052656769737465726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2692:21:2",
																		"type": "",
																		"value": "User not Registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2665:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2665:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2665:49:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2723:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2735:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2746:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2731:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2731:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2723:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5ef76857e7f388323c58ffa20ec2ff71fb20ac2c5604fb66f74cf4cef5400bd7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2563:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2577:4:2",
														"type": ""
													}
												],
												"src": "2412:343:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2792:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2809:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2812:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2802:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2802:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2802:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2906:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2909:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2899:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2899:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2930:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2933:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2923:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2923:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2923:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2760:184:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2998:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3020:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3022:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3022:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3022:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3014:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3017:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3011:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3011:8:2"
															},
															"nodeType": "YulIf",
															"src": "3008:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3051:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3063:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3066:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3059:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3051:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2980:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2983:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2989:4:2",
														"type": ""
													}
												],
												"src": "2949:125:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3127:80:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3154:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3156:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3156:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3156:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3143:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3150:1:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3146:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3146:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3140:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:13:2"
															},
															"nodeType": "YulIf",
															"src": "3137:39:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3185:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3196:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3199:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3192:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3192:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3185:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3110:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3113:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3119:3:2",
														"type": ""
													}
												],
												"src": "3079:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3386:176:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3403:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3414:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3396:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3396:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3437:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3448:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3433:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3433:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3453:2:2",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3426:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3426:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3476:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3487:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3472:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:18:2"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420546f74616c2042616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3492:28:2",
																		"type": "",
																		"value": "Insufficient Total Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3465:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3465:56:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3465:56:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3530:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3542:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3553:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3538:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3538:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3530:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2812df8098724a19e626f2fcbdd08b3426e65b5ff71e519def40bf6bb8ffaf35__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3363:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3377:4:2",
														"type": ""
													}
												],
												"src": "3212:350:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3741:176:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3758:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3769:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3751:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3751:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3751:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3792:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3803:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3788:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3788:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3808:2:2",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3781:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3781:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3831:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3842:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3827:18:2"
																	},
																	{
																		"hexValue": "43616e6e6f742061646420526567697374657265642055736572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3847:28:2",
																		"type": "",
																		"value": "Cannot add Registered User"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:56:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:56:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3885:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3897:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3893:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3893:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3885:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94458f364e0ffb245ca4eba56924e7293ed20457455c1d78ac86885ac4682e2a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3718:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3732:4:2",
														"type": ""
													}
												],
												"src": "3567:350:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4096:164:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4113:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4124:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4106:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4106:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4106:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4147:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4158:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4143:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4163:2:2",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4136:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4136:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4136:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4186:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4197:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4182:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4182:18:2"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4202:16:2",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4175:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4175:44:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4175:44:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4228:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4240:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4251:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4236:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4236:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4228:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4073:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4087:4:2",
														"type": ""
													}
												],
												"src": "3922:338:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4311:228:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4342:168:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4363:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4366:77:2",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4356:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4356:88:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4356:88:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4464:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4467:4:2",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4457:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4457:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4457:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4492:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4495:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4485:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4485:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4485:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4331:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4324:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4324:9:2"
															},
															"nodeType": "YulIf",
															"src": "4321:189:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4519:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4528:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4531:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4524:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4524:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4519:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4296:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4299:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4305:1:2",
														"type": ""
													}
												],
												"src": "4265:274:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4596:116:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4655:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4657:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4657:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4657:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4627:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4620:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4620:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4613:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4613:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4635:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4646:1:2",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4642:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4642:6:2"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4650:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4638:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4638:14:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4632:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4632:21:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4609:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4609:45:2"
															},
															"nodeType": "YulIf",
															"src": "4606:71:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4686:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4701:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4704:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4697:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4697:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4686:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4575:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4578:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4584:7:2",
														"type": ""
													}
												],
												"src": "4544:168:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4891:170:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4908:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4919:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4901:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4901:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4901:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4942:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4953:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4938:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4938:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4958:2:2",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4931:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4931:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4931:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4981:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4992:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4977:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:18:2"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d20796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4997:22:2",
																		"type": "",
																		"value": "Nothing to claim yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4970:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4970:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4970:50:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5029:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5041:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5052:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5037:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5037:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5029:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4868:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4882:4:2",
														"type": ""
													}
												],
												"src": "4717:344:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_struct$_WhitelistStruct_$342_memory_ptr__to_t_struct$_WhitelistStruct_$342_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), iszero(iszero(mload(add(value0, 0x40)))))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_5d6b80ebd59a303e9bfcce2d67970219661c6efe8c5f304a97d73d3dcf15ad17__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"No Tokens Left\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3a5b0dad58f234c834b2d59776b599ea5a1d0292e912cadc1b414bfc6148e30f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"No Tokens to Release for Now\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5ef76857e7f388323c58ffa20ec2ff71fb20ac2c5604fb66f74cf4cef5400bd7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"User not Registered\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_2812df8098724a19e626f2fcbdd08b3426e65b5ff71e519def40bf6bb8ffaf35__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Insufficient Total Balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_94458f364e0ffb245ca4eba56924e7293ed20457455c1d78ac86885ac4682e2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Cannot add Registered User\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not authorized\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Nothing to claim yet\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100bd5760003560e01c806381008568116100765780638cdb7e8b1161005b5780638cdb7e8b146101b657806396074e70146101fe578063efdd87961461021157600080fd5b806381008568146101225780638b2b423a146101ad57600080fd5b8063338dbf59116100a7578063338dbf59146100fd578063549dee0b146101065780637d3bca761461010f57600080fd5b80625171f4146100c25780631d77b00b146100e8575b600080fd5b6100d56100d036600461093b565b610219565b6040519081526020015b60405180910390f35b6100fb6100f636600461093b565b610337565b005b6100d560025481565b6100d560005481565b6100d561011d36600461093b565b610379565b61018761013036600461093b565b6001600160a01b0316600090815260036020818152604092839020835160808101855281548082526001830154938201849052600283015460ff161515958201869052919093015460609093018390529390929190565b6040805194855260208501939093529015159183019190915260608201526080016100df565b6100d560015481565b6101c96101c436600461093b565b610471565b6040516100df919081518152602080830151908201526040808301511515908201526060918201519181019190915260800190565b6100fb61020c366004610956565b6104ee565b6100fb61061b565b6000610223610629565b6001600160a01b0382166000908152600360205260409020600101546102905760405162461bcd60e51b815260206004820152600e60248201527f4e6f20546f6b656e73204c65667400000000000000000000000000000000000060448201526064015b60405180910390fd5b600061029b83610685565b9050600081116102ed5760405162461bcd60e51b815260206004820152601c60248201527f4e6f20546f6b656e7320746f2052656c6561736520666f72204e6f77000000006044820152606401610287565b6001600160a01b03831660009081526003602052604090206001015461031390826108ed565b6001600160a01b03841660009081526003602052604090206001015590505b919050565b61033f610629565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000610383610629565b6001600160a01b0382166000908152600360205260409020600101546103eb5760405162461bcd60e51b815260206004820152601360248201527f55736572206e6f742052656769737465726564000000000000000000000000006044820152606401610287565b60016000808282546103fd9190610996565b90915550506001600160a01b038216600090815260036020526040812060019081015481549092906104309084906109ad565b9091555050506001600160a01b0316600090815260036020819052604082206001810180548483559084905560028201805460ff1916905591019190915590565b61049e60405180608001604052806000815260200160008152602001600015158152602001600081525090565b506001600160a01b0316600090815260036020818152604092839020835160808101855281548152600182015492810192909252600281015460ff16151593820193909352910154606082015290565b6104f6610629565b6001548111156105485760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420546f74616c2042616c616e63650000000000006044820152606401610287565b6001600160a01b038216600090815260036020526040902060010154156105b15760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f7420616464205265676973746572656420557365720000000000006044820152606401610287565b6001600160a01b03821660009081526003602081905260408220838155600180820185905560028201805460ff191690559101819055815490919081906105f99084906109ad565b9250508190555080600160008282546106129190610996565b90915550505050565b610623610629565b42600255565b6004546001600160a01b031633146106835760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a65640000000000000000000000000000000000006044820152606401610287565b565b6000806000620151806002544261069c9190610996565b6106a691906109c5565b90506101e081101561076a576001600160a01b03841660009081526003602052604090206002015460ff16610744576001600160a01b03841660009081526003602052604090205461071b906107149061070c906a3cb5feec27901169e0000090610900565b60015461090c565b8390610918565b6001600160a01b0385166000908152600360205260409020600201805460ff1916600117905591505b6001600160a01b03841660009081526003602081905260409091206101c2910155610899565b6101e0811015801561077d575061034881105b15610899576001600160a01b03841660009081526003602052604090206002015460ff16610805576001600160a01b0384166000908152600360205260409020546107dc906107149061070c906a3cb5feec27901169e0000090610900565b6001600160a01b0385166000908152600360205260409020600201805460ff1916600117905591505b6001600160a01b03841660009081526003602081905260408220015461082b9083610996565b6001600160a01b03861660009081526003602052604090205490915061086c906108659061070c906a03290914be1afb7508000090610900565b8490610918565b61087690826109e7565b6001600160a01b0386166000908152600360208190526040909120018390559250505b816108e65760405162461bcd60e51b815260206004820152601460248201527f4e6f7468696e6720746f20636c61696d207965740000000000000000000000006044820152606401610287565b5092915050565b60006108f98284610996565b9392505050565b60006108f982846109e7565b60006108f982846109c5565b60006108f982846109ad565b80356001600160a01b038116811461033257600080fd5b60006020828403121561094d57600080fd5b6108f982610924565b6000806040838503121561096957600080fd5b61097283610924565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156109a8576109a8610980565b500390565b600082198211156109c0576109c0610980565b500190565b6000826109e257634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610a0157610a01610980565b50029056fea2646970667358221220439cc59a243eb57fda634421fbe6587305244c75abe56e61e2e233453f43da0164736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81008568 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0x8CDB7E8B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8CDB7E8B EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x96074E70 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xEFDD8796 EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81008568 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x8B2B423A EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x338DBF59 GT PUSH2 0xA7 JUMPI DUP1 PUSH4 0x338DBF59 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x549DEE0B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x7D3BCA76 EQ PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x5171F4 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0xE8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5 PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x219 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD5 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP6 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP1 SWAP4 ADD SLOAD PUSH1 0x60 SWAP1 SWAP4 ADD DUP4 SWAP1 MSTORE SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xDF JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFB PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x956 JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST PUSH2 0xFB PUSH2 0x61B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x223 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x290 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20546F6B656E73204C656674000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x29B DUP4 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20546F6B656E7320746F2052656C6561736520666F72204E6F7700000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x313 SWAP1 DUP3 PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33F PUSH2 0x629 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55736572206E6F74205265676973746572656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP2 SLOAD SWAP1 SWAP3 SWAP1 PUSH2 0x430 SWAP1 DUP5 SWAP1 PUSH2 0x9AD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD DUP5 DUP4 SSTORE SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH2 0x49E PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x4F6 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420546F74616C2042616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742061646420526567697374657265642055736572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 ADD DUP2 SWAP1 SSTORE DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x5F9 SWAP1 DUP5 SWAP1 PUSH2 0x9AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x623 PUSH2 0x629 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x15180 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E0 DUP2 LT ISZERO PUSH2 0x76A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x744 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x71B SWAP1 PUSH2 0x714 SWAP1 PUSH2 0x70C SWAP1 PUSH11 0x3CB5FEEC27901169E00000 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x90C JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x1C2 SWAP2 ADD SSTORE PUSH2 0x899 JUMP JUMPDEST PUSH2 0x1E0 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x77D JUMPI POP PUSH2 0x348 DUP2 LT JUMPDEST ISZERO PUSH2 0x899 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x805 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7DC SWAP1 PUSH2 0x714 SWAP1 PUSH2 0x70C SWAP1 PUSH11 0x3CB5FEEC27901169E00000 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH2 0x82B SWAP1 DUP4 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x86C SWAP1 PUSH2 0x865 SWAP1 PUSH2 0x70C SWAP1 PUSH11 0x3290914BE1AFB75080000 SWAP1 PUSH2 0x900 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH2 0x876 SWAP1 DUP3 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD DUP4 SWAP1 SSTORE SWAP3 POP POP JUMPDEST DUP2 PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F20636C61696D20796574000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 DUP5 PUSH2 0x996 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 DUP5 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 DUP5 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 DUP5 PUSH2 0x9AD JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F9 DUP3 PUSH2 0x924 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x972 DUP4 PUSH2 0x924 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x9A8 PUSH2 0x980 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9C0 PUSH2 0x980 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x9E2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA01 JUMPI PUSH2 0xA01 PUSH2 0x980 JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER SWAP13 0xC5 SWAP11 0x24 RETURNDATACOPY 0xB5 PUSH32 0xDA634421FBE6587305244C75ABE56E61E2E233453F43DA0164736F6C63430008 SIGNEXTEND STOP CALLER ",
							"sourceMap": "123:5266:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4884:503;;;;;;:::i;:::-;;:::i;:::-;;;552:25:2;;;540:2;525:18;4884:503:1;;;;;;;;1217:99;;;;;;:::i;:::-;;:::i;:::-;;385:31;;;;;;180;;;;;;4408:389;;;;;;:::i;:::-;;:::i;1322:397::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1540:18:1;1417:7;1540:18;;;:12;:18;;;;;;;;;1509:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1322:397;;;;;813:25:2;;;869:2;854:18;;847:34;;;;924:14;;917:22;897:18;;;890:50;;;;971:2;956:18;;949:34;800:3;785:19;1322:397:1;588:401:2;218:32:1;;;;;;1830:153;;;;;;:::i;:::-;;:::i;:::-;;;;;;1223:13:2;;1205:32;;1293:4;1281:17;;;1275:24;1253:20;;;1246:54;1370:4;1358:17;;;1352:24;1345:32;1338:40;1316:20;;;1309:70;1435:4;1423:17;;;1417:24;1395:20;;;1388:54;;;;1192:3;1177:19;;994:454;3884:518:1;;;;;;:::i;:::-;;:::i;1725:99::-;;;:::i;4884:503::-;4976:7;1075:12;:10;:12::i;:::-;-1:-1:-1;;;;;5007:18:1;::::1;5035:1;5007:18:::0;;;:12:::1;:18;::::0;;;;:25:::1;;::::0;4999:56:::1;;;::::0;-1:-1:-1;;;4999:56:1;;1914:2:2;4999:56:1::1;::::0;::::1;1896:21:2::0;1953:2;1933:18;;;1926:30;1992:16;1972:18;;;1965:44;2026:18;;4999:56:1::1;;;;;;;;;5066:29;5098:31;5124:4;5098:25;:31::i;:::-;5066:63;;5172:1;5148:21;:25;5140:66;;;::::0;-1:-1:-1;;;5140:66:1;;2257:2:2;5140:66:1::1;::::0;::::1;2239:21:2::0;2296:2;2276:18;;;2269:30;2335;2315:18;;;2308:58;2383:18;;5140:66:1::1;2055:352:2::0;5140:66:1::1;-1:-1:-1::0;;;;;5271:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;;::::0;5245:96:::1;::::0;5310:21;5245:12:::1;:96::i;:::-;-1:-1:-1::0;;;;;5217:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;;:124:::0;5359:21;-1:-1:-1;1097:1:1::1;4884:503:::0;;;:::o;1217:99::-;1075:12;:10;:12::i;:::-;1289::::1;:20:::0;;;::::1;-1:-1:-1::0;;;;;1289:20:1;;;::::1;::::0;;;::::1;::::0;;1217:99::o;4408:389::-;4501:7;1075:12;:10;:12::i;:::-;-1:-1:-1;;;;;4532:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;;::::0;4524:62:::1;;;::::0;-1:-1:-1;;;4524:62:1;;2614:2:2;4524:62:1::1;::::0;::::1;2596:21:2::0;2653:2;2633:18;;;2626:30;2692:21;2672:18;;;2665:49;2731:18;;4524:62:1::1;2412:343:2::0;4524:62:1::1;4616:1;4596:16;::::0;:21:::1;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;4648:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;::::0;;::::1;::::0;4627:46;;4648:25;;:18;4627:46:::1;::::0;4648:25;;4627:46:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;;4703:18:1::1;4683:17;4703:18:::0;;;:12:::1;:18;::::0;;;;;;:25:::1;::::0;::::1;::::0;;4739;;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;4739:25:1::1;::::0;;;::::1;::::0;;;;4703;4408:389::o;1830:153::-;1913:22;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1913:22:1;-1:-1:-1;;;;;;1958:18:1;;;;;:12;:18;;;;;;;;;1951:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1830:153::o;3884:518::-;1075:12;:10;:12::i;:::-;4005:17:::1;;3995:6;:27;;3987:66;;;::::0;-1:-1:-1;;;3987:66:1;;3414:2:2;3987:66:1::1;::::0;::::1;3396:21:2::0;3453:2;3433:18;;;3426:30;3492:28;3472:18;;;3465:56;3538:18;;3987:66:1::1;3212:350:2::0;3987:66:1::1;-1:-1:-1::0;;;;;4071:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;;::::0;:30;4063:69:::1;;;::::0;-1:-1:-1;;;4063:69:1;;3769:2:2;4063:69:1::1;::::0;::::1;3751:21:2::0;3808:2;3788:18;;;3781:30;3847:28;3827:18;;;3820:56;3893:18;;4063:69:1::1;3567:350:2::0;4063:69:1::1;-1:-1:-1::0;;;;;4143:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;;;:40;;;4193:25:::1;::::0;;::::1;:34:::0;;;4237::::1;::::0;::::1;:42:::0;;-1:-1:-1;;4237:42:1::1;::::0;;4289:33;::::1;:37:::0;;;4337:21;;4193:25;;4143:18;;;4337:21:::1;::::0;4193:25;;4337:21:::1;:::i;:::-;;;;;;;;4389:6;4368:17;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;3884:518:1:o;1725:99::-;1075:12;:10;:12::i;:::-;1802:15:::1;1783:16;:34:::0;1725:99::o;932:106::-;1000:12;;-1:-1:-1;;;;;1000:12:1;986:10;:26;978:53;;;;-1:-1:-1;;;978:53:1;;4124:2:2;978:53:1;;;4106:21:2;4163:2;4143:18;;;4136:30;4202:16;4182:18;;;4175:44;4236:18;;978:53:1;3922:338:2;978:53:1;932:106::o;2088:1790::-;2171:7;2194:17;2222:20;2284:6;2264:16;;2246:15;:34;;;;:::i;:::-;2245:45;;;;:::i;:::-;2222:68;;2373:7;2358:12;:22;2354:1434;;;-1:-1:-1;;;;;2400:18:1;;;;;;:12;:18;;;;;:34;;;;;2396:363;;-1:-1:-1;;;;;2570:18:1;;;;;;:12;:18;;;;;:31;2475:210;;2510:157;;2548:54;;292:15;;2548:12;:54::i;:::-;2628:17;;2510:12;:157::i;:::-;2475:9;;:13;:210::i;:::-;-1:-1:-1;;;;;2703:18:1;;;;;;:12;:18;;;;;:34;;:41;;-1:-1:-1;;2703:41:1;2740:4;2703:41;;;2463:222;-1:-1:-1;2396:363:1;-1:-1:-1;;;;;2772:18:1;;;;;;:12;:18;;;;;;;;2808:7;2772:33;;:43;2354:1434;;;2911:7;2895:12;:23;;:49;;;;;2937:7;2922:12;:22;2895:49;2891:897;;;-1:-1:-1;;;;;2964:18:1;;;;;;:12;:18;;;;;:34;;;;;2960:363;;-1:-1:-1;;;;;3134:18:1;;;;;;:12;:18;;;;;:31;3039:210;;3074:157;;3112:54;;292:15;;3112:12;:54::i;3039:210::-;-1:-1:-1;;;;;3267:18:1;;;;;;:12;:18;;;;;:34;;:41;;-1:-1:-1;;3267:41:1;3304:4;3267:41;;;3027:222;-1:-1:-1;2960:363:1;-1:-1:-1;;;;;3395:18:1;;3337:24;3395:18;;;:12;:18;;;;;;;:33;;3364:64;;:12;:64;:::i;:::-;-1:-1:-1;;;;;3600:18:1;;;;;;:12;:18;;;;;:31;3337:91;;-1:-1:-1;3505:210:1;;3540:157;;3578:54;;349:14;;3578:12;:54::i;3540:157::-;3505:9;;:13;:210::i;:::-;3470:245;;:16;:245;:::i;:::-;-1:-1:-1;;;;;3729:18:1;;;;;;:12;:18;;;;;;;;:33;:48;;;3442:273;-1:-1:-1;;2891:897:1;3806:14;3798:47;;;;-1:-1:-1;;;3798:47:1;;4919:2:2;3798:47:1;;;4901:21:2;4958:2;4938:18;;;4931:30;4997:22;4977:18;;;4970:50;5037:18;;3798:47:1;4717:344:2;3798:47:1;-1:-1:-1;3862:9:1;2088:1790;-1:-1:-1;;2088:1790:1:o;3108:96:0:-;3166:7;3192:5;3196:1;3192;:5;:::i;:::-;3185:12;3108:96;-1:-1:-1;;;3108:96:0:o;3451:::-;3509:7;3535:5;3539:1;3535;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;2741:96::-;2799:7;2825:5;2829:1;2825;:5;:::i;14:196:2:-;82:20;;-1:-1:-1;;;;;131:54:2;;121:65;;111:93;;200:1;197;190:12;215:186;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;1453:254::-;1521:6;1529;1582:2;1570:9;1561:7;1557:23;1553:32;1550:52;;;1598:1;1595;1588:12;1550:52;1621:29;1640:9;1621:29;:::i;:::-;1611:39;1697:2;1682:18;;;;1669:32;;-1:-1:-1;;;1453:254:2:o;2760:184::-;-1:-1:-1;;;2809:1:2;2802:88;2909:4;2906:1;2899:15;2933:4;2930:1;2923:15;2949:125;2989:4;3017:1;3014;3011:8;3008:34;;;3022:18;;:::i;:::-;-1:-1:-1;3059:9:2;;2949:125::o;3079:128::-;3119:3;3150:1;3146:6;3143:1;3140:13;3137:39;;;3156:18;;:::i;:::-;-1:-1:-1;3192:9:2;;3079:128::o;4265:274::-;4305:1;4331;4321:189;;-1:-1:-1;;;4363:1:2;4356:88;4467:4;4464:1;4457:15;4495:4;4492:1;4485:15;4321:189;-1:-1:-1;4524:9:2;;4265:274::o;4544:168::-;4584:7;4650:1;4646;4642:6;4638:14;4635:1;4632:21;4627:1;4620:9;4613:17;4609:45;4606:71;;;4657:18;;:::i;:::-;-1:-1:-1;4697:9:2;;4544:168::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "524000",
								"executionCost": "46897",
								"totalCost": "570897"
							},
							"external": {
								"addBeneficiary(address,uint256)": "146128",
								"beneficiary(address)": "9103",
								"changeTalaxAddress(address)": "26766",
								"deleteBeneficiary(address)": "97045",
								"hasWhitelist(address)": "9247",
								"initiateWhitelist()": "24479",
								"privateSaleAmount()": "2329",
								"privateSaleUsers()": "2329",
								"releaseClaimable(address)": "infinite",
								"startPrivateSale()": "2307"
							},
							"internal": {
								"_calculateClaimableAmount(address)": "infinite",
								"_onlyTalax()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 123,
									"end": 5389,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 123,
									"end": 5389,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 123,
									"end": 5389,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 718,
									"end": 821,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 718,
									"end": 821,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 718,
									"end": 821,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 718,
									"end": 821,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 718,
									"end": 821,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 718,
									"end": 821,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 821,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 718,
									"end": 821,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 718,
									"end": 821,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 718,
									"end": 821,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 762,
									"end": 779,
									"name": "PUSH",
									"source": 1,
									"value": "4BE37EA7317415C45800000"
								},
								{
									"begin": 742,
									"end": 759,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 742,
									"end": 779,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 789,
									"end": 801,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 789,
									"end": 814,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 789,
									"end": 814,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 789,
									"end": 814,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 789,
									"end": 814,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 789,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 789,
									"end": 814,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5389,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 5389,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5389,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 5389,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 5389,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5389,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 5389,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220439cc59a243eb57fda634421fbe6587305244c75abe56e61e2e233453f43da0164736f6c634300080b0033",
									".code": [
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "81008568"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "8CDB7E8B"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "8CDB7E8B"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "96074E70"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "EFDD8796"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "81008568"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "8B2B423A"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "338DBF59"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "338DBF59"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "549DEE0B"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "7D3BCA76"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "5171F4"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "1D77B00B"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5389,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 552,
											"end": 577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 552,
											"end": 577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 552,
											"end": 577,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 540,
											"end": 542,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 525,
											"end": 543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 385,
											"end": 416,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 385,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 385,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 385,
											"end": 416,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 385,
											"end": 416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 385,
											"end": 416,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 180,
											"end": 211,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 180,
											"end": 211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 180,
											"end": 211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 180,
											"end": 211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 211,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 180,
											"end": 211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 180,
											"end": 211,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4797,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4408,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4408,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4408,
											"end": 4797,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4797,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4408,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4408,
											"end": 4797,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4408,
											"end": 4797,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4408,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4408,
											"end": 4797,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1719,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1322,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1322,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1322,
											"end": 1719,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1719,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1322,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1322,
											"end": 1719,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1719,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1322,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1552,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1540,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1540,
											"end": 1558,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1558,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1719,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1719,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1322,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 813,
											"end": 838,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 869,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 854,
											"end": 872,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 854,
											"end": 872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 847,
											"end": 881,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 847,
											"end": 881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 881,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 847,
											"end": 881,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 924,
											"end": 938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 924,
											"end": 938,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 917,
											"end": 939,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 897,
											"end": 915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 897,
											"end": 915,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 897,
											"end": 915,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 890,
											"end": 940,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 890,
											"end": 940,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 890,
											"end": 940,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 890,
											"end": 940,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 956,
											"end": 974,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 956,
											"end": 974,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 949,
											"end": 983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 800,
											"end": 803,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 785,
											"end": 804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 989,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 250,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 218,
											"end": 250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 218,
											"end": 250,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 218,
											"end": 250,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 218,
											"end": 250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 250,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1237,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1237,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1298,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1299,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1300,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1374,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1376,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1377,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1378,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1379,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1435,
											"end": 1439,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1441,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1442,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1442,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1442,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1177,
											"end": 1196,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1177,
											"end": 1196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1448,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4402,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3884,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3884,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3884,
											"end": 4402,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 4402,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3884,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3884,
											"end": 4402,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3884,
											"end": 4402,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3884,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3884,
											"end": 4402,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1725,
											"end": 1824,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1725,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1725,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1725,
											"end": 1824,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4976,
											"end": 4983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5007,
											"end": 5025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5035,
											"end": 5036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5025,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5019,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5007,
											"end": 5025,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5007,
											"end": 5025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5025,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5007,
											"end": 5025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5025,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5032,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5007,
											"end": 5032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5032,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1916,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1896,
											"end": 1917,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1955,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1992,
											"end": 2008,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F20546F6B656E73204C656674000000000000000000000000000000000000"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 2009,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2026,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2026,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4999,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5124,
											"end": 5128,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5173,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5140,
											"end": 5206,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5140,
											"end": 5206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2257,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5206,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5140,
											"end": 5206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2239,
											"end": 2260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2296,
											"end": 2298,
											"name": "PUSH",
											"source": 2,
											"value": "1C"
										},
										{
											"begin": 2276,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2276,
											"end": 2294,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2294,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2299,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2365,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F20546F6B656E7320746F2052656C6561736520666F72204E6F7700000000"
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2308,
											"end": 2366,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2383,
											"end": 2401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5140,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2055,
											"end": 2407,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5140,
											"end": 5206,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5140,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5271,
											"end": 5289,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5271,
											"end": 5289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5271,
											"end": 5289,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5271,
											"end": 5289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5289,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5271,
											"end": 5289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5289,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5296,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5271,
											"end": 5296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5296,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5245,
											"end": 5341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5245,
											"end": 5341,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5245,
											"end": 5341,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5245,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5217,
											"end": 5235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5217,
											"end": 5235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5217,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5217,
											"end": 5235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5217,
											"end": 5235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5235,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5242,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5217,
											"end": 5242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5341,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5359,
											"end": 5380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1097,
											"end": 1098,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1097,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 5387,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1301,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1316,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4408,
											"end": 4797,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4408,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4544,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4557,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4532,
											"end": 4557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4557,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4524,
											"end": 4586,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4586,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4524,
											"end": 4586,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4524,
											"end": 4586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2616,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4524,
											"end": 4586,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4524,
											"end": 4586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2617,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2655,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2633,
											"end": 2651,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2633,
											"end": 2651,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2713,
											"name": "PUSH",
											"source": 2,
											"value": "55736572206E6F74205265676973746572656400000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2690,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2672,
											"end": 2690,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2690,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2665,
											"end": 2714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4524,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2412,
											"end": 2755,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4524,
											"end": 4586,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4524,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4616,
											"end": 4617,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4617,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4673,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4627,
											"end": 4673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4627,
											"end": 4673,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4627,
											"end": 4673,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4627,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4673,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4673,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4683,
											"end": 4700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4715,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4797,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1983,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3884,
											"end": 4402,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3884,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4005,
											"end": 4022,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4005,
											"end": 4022,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4022,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4022,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3987,
											"end": 4053,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4053,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3987,
											"end": 4053,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3987,
											"end": 4053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3416,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3987,
											"end": 4053,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3455,
											"name": "PUSH",
											"source": 2,
											"value": "1A"
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3492,
											"end": 3520,
											"name": "PUSH",
											"source": 2,
											"value": "496E73756666696369656E7420546F74616C2042616C616E6365000000000000"
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3556,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3538,
											"end": 3556,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3212,
											"end": 3562,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4053,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3987,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4089,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4083,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4071,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4071,
											"end": 4089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4089,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4096,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4071,
											"end": 4096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4096,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4101,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4063,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4063,
											"end": 4132,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4063,
											"end": 4132,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4063,
											"end": 4132,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4063,
											"end": 4132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4063,
											"end": 4132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3769,
											"end": 3771,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4063,
											"end": 4132,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4063,
											"end": 4132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4063,
											"end": 4132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 2,
											"value": "1A"
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3781,
											"end": 3811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "43616E6E6F742061646420526567697374657265642055736572000000000000"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4063,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3567,
											"end": 3917,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4063,
											"end": 4132,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4063,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4155,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4183,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4183,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4218,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4193,
											"end": 4218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4227,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4227,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4271,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4237,
											"end": 4271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4237,
											"end": 4279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4279,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4326,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4218,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4389,
											"end": 4395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4368,
											"end": 4385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4368,
											"end": 4395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4395,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4368,
											"end": 4395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4368,
											"end": 4395,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4368,
											"end": 4395,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4368,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3884,
											"end": 4402,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1725,
											"end": 1824,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1725,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1817,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1799,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1783,
											"end": 1817,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1824,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 932,
											"end": 1038,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 932,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1012,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1012,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1000,
											"end": 1012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 986,
											"end": 996,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1012,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 978,
											"end": 1031,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1031,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1031,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 978,
											"end": 1031,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1031,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4124,
											"end": 4126,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 1031,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 978,
											"end": 1031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1031,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4136,
											"end": 4166,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4218,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F7420617574686F72697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 4182,
											"end": 4200,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4182,
											"end": 4200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4182,
											"end": 4200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4175,
											"end": 4219,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3922,
											"end": 4260,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1031,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 978,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 932,
											"end": 1038,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2088,
											"end": 3878,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2088,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "PUSH",
											"source": 1,
											"value": "15180"
										},
										{
											"begin": 2264,
											"end": 2280,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2264,
											"end": 2280,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2261,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2245,
											"end": 2290,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2245,
											"end": 2290,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2245,
											"end": 2290,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2245,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "1E0"
										},
										{
											"begin": 2358,
											"end": 2370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2380,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 3788,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2354,
											"end": 3788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2400,
											"end": 2418,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2418,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2400,
											"end": 2418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2412,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2400,
											"end": 2418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2400,
											"end": 2418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2418,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2400,
											"end": 2418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2418,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2400,
											"end": 2434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2434,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2400,
											"end": 2434,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2396,
											"end": 2759,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2582,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2601,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2475,
											"end": 2685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2510,
											"end": 2667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2548,
											"end": 2602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 292,
											"end": 307,
											"name": "PUSH",
											"source": 1,
											"value": "3CB5FEEC27901169E00000"
										},
										{
											"begin": 292,
											"end": 307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2548,
											"end": 2602,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2548,
											"end": 2602,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2548,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2645,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2645,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2510,
											"end": 2667,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2667,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2510,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2484,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2475,
											"end": 2685,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2475,
											"end": 2685,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2475,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2715,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2737,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2703,
											"end": 2737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2744,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2703,
											"end": 2744,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2703,
											"end": 2744,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2744,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2396,
											"end": 2759,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2396,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2784,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2815,
											"name": "PUSH",
											"source": 1,
											"value": "1C2"
										},
										{
											"begin": 2772,
											"end": 2805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2815,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2354,
											"end": 3788,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2354,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2918,
											"name": "PUSH",
											"source": 1,
											"value": "1E0"
										},
										{
											"begin": 2895,
											"end": 2907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2918,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2918,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2944,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2895,
											"end": 2944,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2944,
											"name": "PUSH",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 2922,
											"end": 2934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2922,
											"end": 2944,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2944,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2895,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3788,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2891,
											"end": 3788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2976,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2998,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2964,
											"end": 2998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2998,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2998,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2964,
											"end": 2998,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2960,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2960,
											"end": 3323,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3146,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3165,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3039,
											"end": 3249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3074,
											"end": 3231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3112,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3112,
											"end": 3166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 292,
											"end": 307,
											"name": "PUSH",
											"source": 1,
											"value": "3CB5FEEC27901169E00000"
										},
										{
											"begin": 292,
											"end": 307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3112,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3112,
											"end": 3166,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3039,
											"end": 3249,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3039,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3267,
											"end": 3285,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3285,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3279,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3267,
											"end": 3285,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3285,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3267,
											"end": 3285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3285,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3301,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3267,
											"end": 3301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3308,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3267,
											"end": 3308,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3308,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3267,
											"end": 3308,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3308,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2960,
											"end": 3323,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2960,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3407,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3428,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3364,
											"end": 3428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3376,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3364,
											"end": 3428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3364,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3364,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3631,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3505,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3505,
											"end": 3715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3540,
											"end": 3697,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3578,
											"end": 3632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 349,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "3290914BE1AFB75080000"
										},
										{
											"begin": 349,
											"end": 363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3578,
											"end": 3632,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3540,
											"end": 3697,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3540,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3505,
											"end": 3715,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3505,
											"end": 3715,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3505,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3470,
											"end": 3715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3470,
											"end": 3715,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3470,
											"end": 3715,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3470,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3729,
											"end": 3747,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3741,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3729,
											"end": 3747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3747,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3777,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3777,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3442,
											"end": 3715,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2891,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2891,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 4922,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4958,
											"end": 4960,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4938,
											"end": 4956,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4938,
											"end": 4956,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 4956,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5019,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F7468696E6720746F20636C61696D20796574000000000000000000000000"
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 5020,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4717,
											"end": 5061,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3798,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 3878,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2088,
											"end": 3878,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 215,
											"end": 401,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 295,
											"end": 347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 295,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 295,
											"end": 347,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 385,
											"end": 394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1453,
											"end": 1707,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1453,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1527,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1584,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1579,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1568,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1580,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1602,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1550,
											"end": 1602,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1599,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1600,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1602,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1550,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1621,
											"end": 1650,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1621,
											"end": 1650,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1621,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1650,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1682,
											"end": 1700,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 1700,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 1700,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 1700,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 1701,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 1701,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1453,
											"end": 1707,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2760,
											"end": 2944,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2760,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2809,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2913,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2906,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2899,
											"end": 2914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2930,
											"end": 2931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2938,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2949,
											"end": 3074,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2949,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 2993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3018,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3015,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3019,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3022,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3022,
											"end": 3040,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3022,
											"end": 3040,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3022,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3059,
											"end": 3068,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2949,
											"end": 3074,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3079,
											"end": 3207,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3079,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3151,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3146,
											"end": 3152,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3143,
											"end": 3144,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3176,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3137,
											"end": 3176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3192,
											"end": 3201,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3192,
											"end": 3201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3207,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4265,
											"end": 4539,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4265,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4305,
											"end": 4306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4331,
											"end": 4332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4321,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4321,
											"end": 4510,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4363,
											"end": 4364,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4444,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4467,
											"end": 4471,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4464,
											"end": 4465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4457,
											"end": 4472,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4495,
											"end": 4499,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4492,
											"end": 4493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4500,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4321,
											"end": 4510,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4321,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4524,
											"end": 4533,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4524,
											"end": 4533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4539,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4544,
											"end": 4712,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4544,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4650,
											"end": 4651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4646,
											"end": 4647,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4648,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4638,
											"end": 4652,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4635,
											"end": 4636,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4627,
											"end": 4628,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4620,
											"end": 4629,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4613,
											"end": 4630,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4609,
											"end": 4654,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4677,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4606,
											"end": 4677,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4697,
											"end": 4706,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4697,
											"end": 4706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4544,
											"end": 4712,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addBeneficiary(address,uint256)": "96074e70",
							"beneficiary(address)": "81008568",
							"changeTalaxAddress(address)": "1d77b00b",
							"deleteBeneficiary(address)": "7d3bca76",
							"hasWhitelist(address)": "8cdb7e8b",
							"initiateWhitelist()": "efdd8796",
							"privateSaleAmount()": "8b2b423a",
							"privateSaleUsers()": "549dee0b",
							"releaseClaimable(address)": "005171f4",
							"startPrivateSale()": "338dbf59"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"deleteBeneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasWhitelist\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lockedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPhase1Claimed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"latestClaimDay\",\"type\":\"uint256\"}],\"internalType\":\"struct Whitelist.WhitelistStruct\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"releaseClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPrivateSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"releaseClaimable(address)\":{\"notice\":\"Transfers tokens held by timelock to beneficiary.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Whitelist.sol\":\"Whitelist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/Whitelist.sol\":{\"keccak256\":\"0x6ca65fb8c43940d40ea09ad0df2b806ebd8aa5387567f311edf83725f7a4cfdf\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e0856c5d57b77353048b97b54d2b8d6a52e269afedb29a3479f653b6876160a9\",\"dweb:/ipfs/QmbnvMZr4WiAzHZGSUPUZZa4RVXVcmeAs9iVxtT2enpN7E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "contracts/Whitelist.sol:Whitelist",
								"label": "privateSaleUsers",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 321,
								"contract": "contracts/Whitelist.sol:Whitelist",
								"label": "privateSaleAmount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 333,
								"contract": "contracts/Whitelist.sol:Whitelist",
								"label": "startPrivateSale",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 347,
								"contract": "contracts/Whitelist.sol:Whitelist",
								"label": "_beneficiary",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(WhitelistStruct)342_storage)"
							},
							{
								"astId": 349,
								"contract": "contracts/Whitelist.sol:Whitelist",
								"label": "talaxAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(WhitelistStruct)342_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Whitelist.WhitelistStruct)",
								"numberOfBytes": "32",
								"value": "t_struct(WhitelistStruct)342_storage"
							},
							"t_struct(WhitelistStruct)342_storage": {
								"encoding": "inplace",
								"label": "struct Whitelist.WhitelistStruct",
								"members": [
									{
										"astId": 335,
										"contract": "contracts/Whitelist.sol:Whitelist",
										"label": "lockedAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 337,
										"contract": "contracts/Whitelist.sol:Whitelist",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 339,
										"contract": "contracts/Whitelist.sol:Whitelist",
										"label": "isPhase1Claimed",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 341,
										"contract": "contracts/Whitelist.sol:Whitelist",
										"label": "latestClaimDay",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"releaseClaimable(address)": {
								"notice": "Transfers tokens held by timelock to beneficiary."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "475:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "702:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "712:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "736:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "767:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "778:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "823:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "809:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:0"
									},
									"scope": 311,
									"src": "626:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1064:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1102:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1106:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1098:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1109:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1158:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1140:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:0"
									},
									"scope": 311,
									"src": "988:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1401:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1665:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1677:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1707:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1742:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1738:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1754:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1785:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:0"
									},
									"scope": 311,
									"src": "1325:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2043:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2077:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2089:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2120:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:0"
									},
									"scope": 311,
									"src": "1967:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2392:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2426:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2438:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2483:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2487:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2469:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:0"
									},
									"scope": 311,
									"src": "2316:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2808:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2818:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:0"
									},
									"scope": 311,
									"src": "2741:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3175:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3185:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:0"
									},
									"scope": 311,
									"src": "3108:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3518:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3528:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:0"
									},
									"scope": 311,
									"src": "3451:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3903:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3913:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3849:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:0"
									},
									"scope": 311,
									"src": "3836:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4452:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4462:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:0"
									},
									"scope": 311,
									"src": "4385:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5070:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5120:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5147:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:0"
									},
									"scope": 311,
									"src": "4945:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5785:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5834:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5861:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5701:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5720:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5776:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:0"
									},
									"scope": 311,
									"src": "5660:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6661:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6710:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6737:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:0"
									},
									"scope": 311,
									"src": "6536:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "467:6301:0",
							"usedErrors": []
						}
					],
					"src": "92:6677:0"
				},
				"id": 0
			},
			"contracts/Whitelist.sol": {
				"ast": {
					"absolutePath": "contracts/Whitelist.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						],
						"Whitelist": [
							771
						]
					},
					"id": 772,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 772,
							"sourceUnit": 312,
							"src": "64:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Whitelist",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771
							],
							"name": "Whitelist",
							"nameLocation": "132:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 317,
									"libraryName": {
										"id": 315,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "154:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "148:27:1",
									"typeName": {
										"id": 316,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "167:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "549dee0b",
									"id": 319,
									"mutability": "mutable",
									"name": "privateSaleUsers",
									"nameLocation": "195:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "180:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 318,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "180:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b2b423a",
									"id": 321,
									"mutability": "mutable",
									"name": "privateSaleAmount",
									"nameLocation": "233:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "218:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 320,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "218:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 326,
									"mutability": "constant",
									"name": "_phase1",
									"nameLocation": "282:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "256:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 322,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "256:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_73395000000000000000000000_by_1",
											"typeString": "int_const 73395000000000000000000000"
										},
										"id": 325,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3733333935303030",
											"id": 323,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "292:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_73395000_by_1",
												"typeString": "int_const 73395000"
											},
											"value": "73395000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 324,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "303:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "292:15:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_73395000000000000000000000_by_1",
											"typeString": "int_const 73395000000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 331,
									"mutability": "constant",
									"name": "_phase2",
									"nameLocation": "339:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "313:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 327,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "313:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_3820562000000000000000000_by_1",
											"typeString": "int_const 3820562000000000000000000"
										},
										"id": 330,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "33383230353632",
											"id": 328,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "349:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3820562_by_1",
												"typeString": "int_const 3820562"
											},
											"value": "3820562"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 329,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "359:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "349:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3820562000000000000000000_by_1",
											"typeString": "int_const 3820562000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "338dbf59",
									"id": 333,
									"mutability": "mutable",
									"name": "startPrivateSale",
									"nameLocation": "400:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "385:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 332,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "385:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Whitelist.WhitelistStruct",
									"id": 342,
									"members": [
										{
											"constant": false,
											"id": 335,
											"mutability": "mutable",
											"name": "lockedAmount",
											"nameLocation": "464:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 342,
											"src": "456:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 334,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "456:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 337,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "494:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 342,
											"src": "486:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 336,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "486:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 339,
											"mutability": "mutable",
											"name": "isPhase1Claimed",
											"nameLocation": "515:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 342,
											"src": "510:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 338,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "510:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 341,
											"mutability": "mutable",
											"name": "latestClaimDay",
											"nameLocation": "548:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 342,
											"src": "540:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 340,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "540:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WhitelistStruct",
									"nameLocation": "430:15:1",
									"nodeType": "StructDefinition",
									"scope": 771,
									"src": "423:146:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 347,
									"mutability": "mutable",
									"name": "_beneficiary",
									"nameLocation": "672:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "628:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
										"typeString": "mapping(address => struct Whitelist.WhitelistStruct)"
									},
									"typeName": {
										"id": 346,
										"keyType": {
											"id": 343,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "636:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "628:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
											"typeString": "mapping(address => struct Whitelist.WhitelistStruct)"
										},
										"valueType": {
											"id": 345,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 344,
												"name": "WhitelistStruct",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 342,
												"src": "647:15:1"
											},
											"referencedDeclaration": 342,
											"src": "647:15:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage_ptr",
												"typeString": "struct Whitelist.WhitelistStruct"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "talaxAddress",
									"nameLocation": "699:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "691:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 348,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "691:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "732:89:1",
										"statements": [
											{
												"expression": {
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 352,
														"name": "privateSaleAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "742:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_1467900000000000000000000000_by_1",
															"typeString": "int_const 1467900000000000000000000000"
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31343637393030303030",
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "762:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1467900000_by_1",
																"typeString": "int_const 1467900000"
															},
															"value": "1467900000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "775:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "762:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1467900000000000000000000000_by_1",
															"typeString": "int_const 1467900000000000000000000000"
														}
													},
													"src": "742:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "742:37:1"
											},
											{
												"expression": {
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 358,
														"name": "talaxAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "789:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 359,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "804:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "804:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "789:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "789:25:1"
											}
										]
									},
									"id": 364,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "729:2:1"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "732:0:1"
									},
									"scope": 771,
									"src": "718:103:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "968:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 368,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "986:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "986:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 370,
																"name": "talaxAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1000:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "986:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1014:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "978:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "978:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "978:53:1"
											}
										]
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_onlyTalax",
									"nameLocation": "941:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "951:2:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:0:1"
									},
									"scope": 771,
									"src": "932:106:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "1065:40:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 378,
														"name": "_onlyTalax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "1075:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1075:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1075:12:1"
											},
											{
												"id": 381,
												"nodeType": "PlaceholderStatement",
												"src": "1097:1:1"
											}
										]
									},
									"id": 383,
									"name": "onlyTalax",
									"nameLocation": "1053:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1062:2:1"
									},
									"src": "1044:61:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1279:37:1",
										"statements": [
											{
												"expression": {
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 390,
														"name": "talaxAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1289:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 391,
														"name": "talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "1304:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1289:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "1289:20:1"
											}
										]
									},
									"functionSelector": "1d77b00b",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 388,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 387,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 383,
												"src": "1269:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1269:9:1"
										}
									],
									"name": "changeTalaxAddress",
									"nameLocation": "1226:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "1253:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1245:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1245:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1244:15:1"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1279:0:1"
									},
									"scope": 771,
									"src": "1217:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "1499:220:1",
										"statements": [
											{
												"assignments": [
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "benef",
														"nameLocation": "1532:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 425,
														"src": "1509:28:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WhitelistStruct_$342_memory_ptr",
															"typeString": "struct Whitelist.WhitelistStruct"
														},
														"typeName": {
															"id": 409,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 408,
																"name": "WhitelistStruct",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 342,
																"src": "1509:15:1"
															},
															"referencedDeclaration": 342,
															"src": "1509:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage_ptr",
																"typeString": "struct Whitelist.WhitelistStruct"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"baseExpression": {
														"id": 411,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "1540:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
															"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
														}
													},
													"id": 413,
													"indexExpression": {
														"id": 412,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "1553:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1540:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
														"typeString": "struct Whitelist.WhitelistStruct storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1509:49:1"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 415,
																"name": "benef",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "1589:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStruct_$342_memory_ptr",
																	"typeString": "struct Whitelist.WhitelistStruct memory"
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lockedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 335,
															"src": "1589:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 417,
																"name": "benef",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "1621:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStruct_$342_memory_ptr",
																	"typeString": "struct Whitelist.WhitelistStruct memory"
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 337,
															"src": "1621:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 419,
																"name": "benef",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "1647:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStruct_$342_memory_ptr",
																	"typeString": "struct Whitelist.WhitelistStruct memory"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isPhase1Claimed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 339,
															"src": "1647:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 421,
																"name": "benef",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "1682:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStruct_$342_memory_ptr",
																	"typeString": "struct Whitelist.WhitelistStruct memory"
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "latestClaimDay",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 341,
															"src": "1682:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 423,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1575:137:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,bool,uint256)"
													}
												},
												"functionReturnParameters": 407,
												"id": 424,
												"nodeType": "Return",
												"src": "1568:144:1"
											}
										]
									},
									"functionSelector": "81008568",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nameLocation": "1331:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1351:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1343:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1343:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1342:14:1"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1417:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1438:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1459:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 403,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1459:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1477:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1403:91:1"
									},
									"scope": 771,
									"src": "1322:397:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "1773:51:1",
										"statements": [
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 431,
														"name": "startPrivateSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "1783:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 432,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1802:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1802:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1783:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "1783:34:1"
											}
										]
									},
									"functionSelector": "efdd8796",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 429,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 428,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 383,
												"src": "1763:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1763:9:1"
										}
									],
									"name": "initiateWhitelist",
									"nameLocation": "1734:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1751:2:1"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:0:1"
									},
									"scope": 771,
									"src": "1725:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "1941:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 445,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "1958:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
															"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "1971:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1958:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
														"typeString": "struct Whitelist.WhitelistStruct storage ref"
													}
												},
												"functionReturnParameters": 444,
												"id": 448,
												"nodeType": "Return",
												"src": "1951:25:1"
											}
										]
									},
									"functionSelector": "8cdb7e8b",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasWhitelist",
									"nameLocation": "1839:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1860:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "1852:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1851:14:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "1913:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_WhitelistStruct_$342_memory_ptr",
													"typeString": "struct Whitelist.WhitelistStruct"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "WhitelistStruct",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 342,
														"src": "1913:15:1"
													},
													"referencedDeclaration": 342,
													"src": "1913:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage_ptr",
														"typeString": "struct Whitelist.WhitelistStruct"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1912:24:1"
									},
									"scope": 771,
									"src": "1830:153:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "2184:1694:1",
										"statements": [
											{
												"assignments": [
													459
												],
												"declarations": [
													{
														"constant": false,
														"id": 459,
														"mutability": "mutable",
														"name": "claimable",
														"nameLocation": "2202:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 611,
														"src": "2194:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 458,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2194:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 460,
												"nodeType": "VariableDeclarationStatement",
												"src": "2194:17:1"
											},
											{
												"assignments": [
													462
												],
												"declarations": [
													{
														"constant": false,
														"id": 462,
														"mutability": "mutable",
														"name": "lockDuration",
														"nameLocation": "2230:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 611,
														"src": "2222:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 461,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2222:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 470,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 463,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2246:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2246:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 465,
																	"name": "startPrivateSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "2264:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2246:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 467,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2245:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2284:6:1",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "1"
													},
													"src": "2245:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2222:68:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 471,
														"name": "lockDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "2358:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_480_by_1",
															"typeString": "int_const 480"
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3136",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2373:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "16"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3330",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2378:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_30_by_1",
																"typeString": "int_const 30"
															},
															"value": "30"
														},
														"src": "2373:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_480_by_1",
															"typeString": "int_const 480"
														}
													},
													"src": "2358:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 519,
																"name": "lockDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "2895:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_480_by_1",
																	"typeString": "int_const 480"
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3136",
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2911:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2916:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "2911:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_480_by_1",
																	"typeString": "int_const 480"
																}
															},
															"src": "2895:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 524,
																"name": "lockDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "2922:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_840_by_1",
																	"typeString": "int_const 840"
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3238",
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2937:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_28_by_1",
																		"typeString": "int_const 28"
																	},
																	"value": "28"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2942:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "2937:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_840_by_1",
																	"typeString": "int_const 840"
																}
															},
															"src": "2922:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2895:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 600,
													"nodeType": "IfStatement",
													"src": "2891:897:1",
													"trueBody": {
														"id": 599,
														"nodeType": "Block",
														"src": "2946:842:1",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 530,
																				"name": "_beneficiary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 347,
																				"src": "2964:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																					"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																				}
																			},
																			"id": 532,
																			"indexExpression": {
																				"id": 531,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 453,
																				"src": "2977:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2964:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																				"typeString": "struct Whitelist.WhitelistStruct storage ref"
																			}
																		},
																		"id": 533,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "isPhase1Claimed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 339,
																		"src": "2964:34:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "66616c7365",
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3002:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "2964:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 562,
																"nodeType": "IfStatement",
																"src": "2960:363:1",
																"trueBody": {
																	"id": 561,
																	"nodeType": "Block",
																	"src": "3009:314:1",
																	"statements": [
																		{
																			"expression": {
																				"id": 552,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 536,
																					"name": "claimable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 459,
																					"src": "3027:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"id": 543,
																											"name": "_phase1",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 326,
																											"src": "3125:7:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										{
																											"expression": {
																												"baseExpression": {
																													"id": 544,
																													"name": "_beneficiary",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 347,
																													"src": "3134:12:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																														"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																													}
																												},
																												"id": 546,
																												"indexExpression": {
																													"id": 545,
																													"name": "user",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 453,
																													"src": "3147:4:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "3134:18:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																													"typeString": "struct Whitelist.WhitelistStruct storage ref"
																												}
																											},
																											"id": 547,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "lockedAmount",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 335,
																											"src": "3134:31:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 541,
																											"name": "SafeMath",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 311,
																											"src": "3112:8:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																												"typeString": "type(library SafeMath)"
																											}
																										},
																										"id": 542,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 205,
																										"src": "3112:12:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 548,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "3112:54:1",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 549,
																									"name": "privateSaleAmount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 321,
																									"src": "3192:17:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 539,
																									"name": "SafeMath",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 311,
																									"src": "3074:8:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																										"typeString": "type(library SafeMath)"
																									}
																								},
																								"id": 540,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "div",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 220,
																								"src": "3074:12:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 550,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3074:157:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 537,
																							"name": "claimable",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 459,
																							"src": "3039:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 538,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "add",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 175,
																						"src": "3039:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 551,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3039:210:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3027:222:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 553,
																			"nodeType": "ExpressionStatement",
																			"src": "3027:222:1"
																		},
																		{
																			"expression": {
																				"id": 559,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"baseExpression": {
																							"id": 554,
																							"name": "_beneficiary",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 347,
																							"src": "3267:12:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																								"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																							}
																						},
																						"id": 556,
																						"indexExpression": {
																							"id": 555,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 453,
																							"src": "3280:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3267:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																							"typeString": "struct Whitelist.WhitelistStruct storage ref"
																						}
																					},
																					"id": 557,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "isPhase1Claimed",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 339,
																					"src": "3267:34:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "74727565",
																					"id": 558,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3304:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				"src": "3267:41:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 560,
																			"nodeType": "ExpressionStatement",
																			"src": "3267:41:1"
																		}
																	]
																}
															},
															{
																"assignments": [
																	564
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 564,
																		"mutability": "mutable",
																		"name": "sinceLatestClaim",
																		"nameLocation": "3345:16:1",
																		"nodeType": "VariableDeclaration",
																		"scope": 599,
																		"src": "3337:24:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 563,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3337:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 571,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 565,
																		"name": "lockDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "3364:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 566,
																				"name": "_beneficiary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 347,
																				"src": "3395:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																					"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																				}
																			},
																			"id": 568,
																			"indexExpression": {
																				"id": 567,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 453,
																				"src": "3408:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3395:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																				"typeString": "struct Whitelist.WhitelistStruct storage ref"
																			}
																		},
																		"id": 569,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "latestClaimDay",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 341,
																		"src": "3395:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3364:64:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3337:91:1"
															},
															{
																"expression": {
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 572,
																		"name": "claimable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "3442:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 573,
																			"name": "sinceLatestClaim",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "3470:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"id": 580,
																									"name": "_phase2",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 331,
																									"src": "3591:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"expression": {
																										"baseExpression": {
																											"id": 581,
																											"name": "_beneficiary",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 347,
																											"src": "3600:12:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																												"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																											}
																										},
																										"id": 583,
																										"indexExpression": {
																											"id": 582,
																											"name": "user",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 453,
																											"src": "3613:4:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "3600:18:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																											"typeString": "struct Whitelist.WhitelistStruct storage ref"
																										}
																									},
																									"id": 584,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "lockedAmount",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 335,
																									"src": "3600:31:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 578,
																									"name": "SafeMath",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 311,
																									"src": "3578:8:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																										"typeString": "type(library SafeMath)"
																									}
																								},
																								"id": 579,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 205,
																								"src": "3578:12:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 585,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3578:54:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 586,
																							"name": "privateSaleAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 321,
																							"src": "3658:17:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 576,
																							"name": "SafeMath",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 311,
																							"src": "3540:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																								"typeString": "type(library SafeMath)"
																							}
																						},
																						"id": 577,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "div",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 220,
																						"src": "3540:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 587,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3540:157:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 574,
																					"name": "claimable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 459,
																					"src": "3505:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 175,
																				"src": "3505:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3505:210:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3470:245:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3442:273:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 591,
																"nodeType": "ExpressionStatement",
																"src": "3442:273:1"
															},
															{
																"expression": {
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 592,
																				"name": "_beneficiary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 347,
																				"src": "3729:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																					"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																				}
																			},
																			"id": 594,
																			"indexExpression": {
																				"id": 593,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 453,
																				"src": "3742:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3729:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																				"typeString": "struct Whitelist.WhitelistStruct storage ref"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "latestClaimDay",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 341,
																		"src": "3729:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 596,
																		"name": "lockDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "3765:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3729:48:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 598,
																"nodeType": "ExpressionStatement",
																"src": "3729:48:1"
															}
														]
													}
												},
												"id": 601,
												"nodeType": "IfStatement",
												"src": "2354:1434:1",
												"trueBody": {
													"id": 518,
													"nodeType": "Block",
													"src": "2382:444:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 476,
																			"name": "_beneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 347,
																			"src": "2400:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																				"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																			}
																		},
																		"id": 478,
																		"indexExpression": {
																			"id": 477,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 453,
																			"src": "2413:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2400:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																			"typeString": "struct Whitelist.WhitelistStruct storage ref"
																		}
																	},
																	"id": 479,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "isPhase1Claimed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 339,
																	"src": "2400:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2438:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "2400:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 508,
															"nodeType": "IfStatement",
															"src": "2396:363:1",
															"trueBody": {
																"id": 507,
																"nodeType": "Block",
																"src": "2445:314:1",
																"statements": [
																	{
																		"expression": {
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 482,
																				"name": "claimable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 459,
																				"src": "2463:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 489,
																										"name": "_phase1",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 326,
																										"src": "2561:7:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"expression": {
																											"baseExpression": {
																												"id": 490,
																												"name": "_beneficiary",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 347,
																												"src": "2570:12:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																													"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																												}
																											},
																											"id": 492,
																											"indexExpression": {
																												"id": 491,
																												"name": "user",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 453,
																												"src": "2583:4:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "2570:18:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																												"typeString": "struct Whitelist.WhitelistStruct storage ref"
																											}
																										},
																										"id": 493,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "lockedAmount",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 335,
																										"src": "2570:31:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 487,
																										"name": "SafeMath",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 311,
																										"src": "2548:8:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																											"typeString": "type(library SafeMath)"
																										}
																									},
																									"id": 488,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 205,
																									"src": "2548:12:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 494,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2548:54:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 495,
																								"name": "privateSaleAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 321,
																								"src": "2628:17:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 485,
																								"name": "SafeMath",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 311,
																								"src": "2510:8:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																									"typeString": "type(library SafeMath)"
																								}
																							},
																							"id": 486,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 220,
																							"src": "2510:12:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 496,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2510:157:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 483,
																						"name": "claimable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 459,
																						"src": "2475:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 484,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 175,
																					"src": "2475:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 497,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2475:210:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2463:222:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 499,
																		"nodeType": "ExpressionStatement",
																		"src": "2463:222:1"
																	},
																	{
																		"expression": {
																			"id": 505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 500,
																						"name": "_beneficiary",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 347,
																						"src": "2703:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																							"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																						}
																					},
																					"id": 502,
																					"indexExpression": {
																						"id": 501,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 453,
																						"src": "2716:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2703:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																						"typeString": "struct Whitelist.WhitelistStruct storage ref"
																					}
																				},
																				"id": 503,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "isPhase1Claimed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 339,
																				"src": "2703:34:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 504,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2740:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "2703:41:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 506,
																		"nodeType": "ExpressionStatement",
																		"src": "2703:41:1"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 509,
																			"name": "_beneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 347,
																			"src": "2772:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																				"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																			}
																		},
																		"id": 511,
																		"indexExpression": {
																			"id": 510,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 453,
																			"src": "2785:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2772:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																			"typeString": "struct Whitelist.WhitelistStruct storage ref"
																		}
																	},
																	"id": 512,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "latestClaimDay",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 341,
																	"src": "2772:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_rational_450_by_1",
																		"typeString": "int_const 450"
																	},
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3135",
																		"id": 513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2808:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		},
																		"value": "15"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3330",
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2813:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_30_by_1",
																			"typeString": "int_const 30"
																		},
																		"value": "30"
																	},
																	"src": "2808:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_450_by_1",
																		"typeString": "int_const 450"
																	}
																},
																"src": "2772:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 517,
															"nodeType": "ExpressionStatement",
															"src": "2772:43:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 603,
																"name": "claimable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "3806:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3819:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3806:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d20796574",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3822:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9",
																"typeString": "literal_string \"Nothing to claim yet\""
															},
															"value": "Nothing to claim yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9",
																"typeString": "literal_string \"Nothing to claim yet\""
															}
														],
														"id": 602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3798:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3798:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "3798:47:1"
											},
											{
												"expression": {
													"id": 609,
													"name": "claimable",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 459,
													"src": "3862:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 457,
												"id": 610,
												"nodeType": "Return",
												"src": "3855:16:1"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "1989:94:1",
										"text": "  @dev \t\tMain Functions\n  @return \tClaimable amount from Locked Wallet"
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateClaimableAmount",
									"nameLocation": "2097:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2131:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2123:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:1"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2171:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:9:1"
									},
									"scope": 771,
									"src": "2088:1790:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "3977:425:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 622,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "3995:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 623,
																"name": "privateSaleAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4005:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3995:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420546f74616c2042616c616e6365",
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4024:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2812df8098724a19e626f2fcbdd08b3426e65b5ff71e519def40bf6bb8ffaf35",
																"typeString": "literal_string \"Insufficient Total Balance\""
															},
															"value": "Insufficient Total Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2812df8098724a19e626f2fcbdd08b3426e65b5ff71e519def40bf6bb8ffaf35",
																"typeString": "literal_string \"Insufficient Total Balance\""
															}
														],
														"id": 621,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3987:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3987:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "3987:66:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 629,
																		"name": "_beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "4071:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																			"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																		}
																	},
																	"id": 631,
																	"indexExpression": {
																		"id": 630,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "4084:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4071:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																		"typeString": "struct Whitelist.WhitelistStruct storage ref"
																	}
																},
																"id": 632,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 337,
																"src": "4071:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4071:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742061646420526567697374657265642055736572",
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4103:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94458f364e0ffb245ca4eba56924e7293ed20457455c1d78ac86885ac4682e2a",
																"typeString": "literal_string \"Cannot add Registered User\""
															},
															"value": "Cannot add Registered User"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94458f364e0ffb245ca4eba56924e7293ed20457455c1d78ac86885ac4682e2a",
																"typeString": "literal_string \"Cannot add Registered User\""
															}
														],
														"id": 628,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4063:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4063:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "4063:69:1"
											},
											{
												"expression": {
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 638,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "4143:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 640,
															"indexExpression": {
																"id": 639,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "4156:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4143:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lockedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "4143:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 642,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "4177:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4143:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "4143:40:1"
											},
											{
												"expression": {
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 645,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "4193:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 647,
															"indexExpression": {
																"id": 646,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "4206:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4193:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "4193:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 649,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "4221:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4193:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "4193:34:1"
											},
											{
												"expression": {
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 652,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "4237:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 654,
															"indexExpression": {
																"id": 653,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "4250:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4237:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "isPhase1Claimed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 339,
														"src": "4237:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4274:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4237:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "4237:42:1"
											},
											{
												"expression": {
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 659,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "4289:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 661,
															"indexExpression": {
																"id": 660,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "4302:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4289:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 662,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "latestClaimDay",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 341,
														"src": "4289:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4325:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4289:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "4289:37:1"
											},
											{
												"expression": {
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 666,
														"name": "privateSaleUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "4337:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4357:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4337:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "4337:21:1"
											},
											{
												"expression": {
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 670,
														"name": "privateSaleAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "4368:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 671,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "4389:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4368:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "4368:27:1"
											}
										]
									},
									"functionSelector": "96074e70",
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 619,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 618,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 383,
												"src": "3963:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3963:9:1"
										}
									],
									"name": "addBeneficiary",
									"nameLocation": "3893:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3916:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "3908:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3930:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "3922:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3922:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:30:1"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3977:0:1"
									},
									"scope": 771,
									"src": "3884:518:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "4514:283:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 685,
																		"name": "_beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "4532:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																			"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																		}
																	},
																	"id": 687,
																	"indexExpression": {
																		"id": 686,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "4545:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4532:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																		"typeString": "struct Whitelist.WhitelistStruct storage ref"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 337,
																"src": "4532:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4561:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4532:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206e6f742052656769737465726564",
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4564:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ef76857e7f388323c58ffa20ec2ff71fb20ac2c5604fb66f74cf4cef5400bd7",
																"typeString": "literal_string \"User not Registered\""
															},
															"value": "User not Registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ef76857e7f388323c58ffa20ec2ff71fb20ac2c5604fb66f74cf4cef5400bd7",
																"typeString": "literal_string \"User not Registered\""
															}
														],
														"id": 684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4524:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4524:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "4524:62:1"
											},
											{
												"expression": {
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 694,
														"name": "privateSaleUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "4596:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4616:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4596:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "4596:21:1"
											},
											{
												"expression": {
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 698,
														"name": "privateSaleAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "4627:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 699,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "4648:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 701,
															"indexExpression": {
																"id": 700,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "4661:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4648:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 702,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "4648:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4627:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "4627:46:1"
											},
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "ex_amount",
														"nameLocation": "4691:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 719,
														"src": "4683:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4683:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 711,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 707,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "4703:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
															}
														},
														"id": 709,
														"indexExpression": {
															"id": 708,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "4716:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4703:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
															"typeString": "struct Whitelist.WhitelistStruct storage ref"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 337,
													"src": "4703:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4683:45:1"
											},
											{
												"expression": {
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4739:25:1",
													"subExpression": {
														"baseExpression": {
															"id": 712,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "4746:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
															}
														},
														"id": 714,
														"indexExpression": {
															"id": 713,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "4759:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4746:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
															"typeString": "struct Whitelist.WhitelistStruct storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "4739:25:1"
											},
											{
												"expression": {
													"id": 717,
													"name": "ex_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 706,
													"src": "4781:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 683,
												"id": 718,
												"nodeType": "Return",
												"src": "4774:16:1"
											}
										]
									},
									"functionSelector": "7d3bca76",
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 679,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 383,
												"src": "4474:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4474:9:1"
										}
									],
									"name": "deleteBeneficiary",
									"nameLocation": "4417:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4443:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "4435:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4435:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4434:14:1"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "4501:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4501:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4500:9:1"
									},
									"scope": 771,
									"src": "4408:389:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "4989:398:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 731,
																		"name": "_beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "5007:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																			"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																		}
																	},
																	"id": 733,
																	"indexExpression": {
																		"id": 732,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "5020:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5007:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																		"typeString": "struct Whitelist.WhitelistStruct storage ref"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 337,
																"src": "5007:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5035:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5007:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20546f6b656e73204c656674",
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5038:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d6b80ebd59a303e9bfcce2d67970219661c6efe8c5f304a97d73d3dcf15ad17",
																"typeString": "literal_string \"No Tokens Left\""
															},
															"value": "No Tokens Left"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d6b80ebd59a303e9bfcce2d67970219661c6efe8c5f304a97d73d3dcf15ad17",
																"typeString": "literal_string \"No Tokens Left\""
															}
														],
														"id": 730,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4999:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4999:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "4999:56:1"
											},
											{
												"assignments": [
													741
												],
												"declarations": [
													{
														"constant": false,
														"id": 741,
														"mutability": "mutable",
														"name": "claimableLockedAmount",
														"nameLocation": "5074:21:1",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "5066:29:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 740,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5066:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 745,
												"initialValue": {
													"arguments": [
														{
															"id": 743,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "5124:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 742,
														"name": "_calculateClaimableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "5098:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5066:63:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 747,
																"name": "claimableLockedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "5148:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5148:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20546f6b656e7320746f2052656c6561736520666f72204e6f77",
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5175:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3a5b0dad58f234c834b2d59776b599ea5a1d0292e912cadc1b414bfc6148e30f",
																"typeString": "literal_string \"No Tokens to Release for Now\""
															},
															"value": "No Tokens to Release for Now"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3a5b0dad58f234c834b2d59776b599ea5a1d0292e912cadc1b414bfc6148e30f",
																"typeString": "literal_string \"No Tokens to Release for Now\""
															}
														],
														"id": 746,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5140:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5140:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "5140:66:1"
											},
											{
												"expression": {
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 753,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "5217:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 755,
															"indexExpression": {
																"id": 754,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 723,
																"src": "5230:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5217:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 756,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "5217:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"baseExpression": {
																		"id": 759,
																		"name": "_beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "5271:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$342_storage_$",
																			"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																		}
																	},
																	"id": 761,
																	"indexExpression": {
																		"id": 760,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "5284:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5271:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WhitelistStruct_$342_storage",
																		"typeString": "struct Whitelist.WhitelistStruct storage ref"
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 337,
																"src": "5271:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 763,
																"name": "claimableLockedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "5310:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 757,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "5245:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "5245:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5245:96:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5217:124:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "5217:124:1"
											},
											{
												"expression": {
													"id": 767,
													"name": "claimableLockedAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 741,
													"src": "5359:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 729,
												"id": 768,
												"nodeType": "Return",
												"src": "5352:28:1"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "4803:76:1",
										"text": " @notice Transfers tokens held by timelock to beneficiary."
									},
									"functionSelector": "005171f4",
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 726,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 725,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 383,
												"src": "4949:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4949:9:1"
										}
									],
									"name": "releaseClaimable",
									"nameLocation": "4893:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4918:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "4910:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4909:14:1"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "4976:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4976:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4975:9:1"
									},
									"scope": 771,
									"src": "4884:503:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 772,
							"src": "123:5266:1",
							"usedErrors": []
						}
					],
					"src": "39:5351:1"
				},
				"id": 1
			}
		}
	}
}