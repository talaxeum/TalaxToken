{
	"id": "aec2660a7c77c4c4d70a28cbffe3d4e8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Stake-2.0.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.11;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/**\r\n * @notice Error handling message for Modifier\r\n */\r\nerror Function__notAuthorized();\r\nerror Function__notAVoter();\r\nerror Function__votingNotAvailable();\r\n\r\n/**\r\n * @notice Error handling message for Staking functions\r\n */\r\nerror Staking__cannotStakeNothing();\r\nerror Staking__userIsStaker();\r\nerror Staking__penaltyExceed3Percent();\r\nerror Staking__airdropExceed20Percent();\r\nerror Staking__noStakingFound();\r\nerror Staking_noStakingPackageFound();\r\n\r\n/**\r\n * @notice Error handling message for Airdrop functions\r\n */\r\nerror Airdrop__claimableOnceAWeek();\r\n\r\n/**\r\n * @notice Error handling message for Voting functions\r\n */\r\nerror Voting__votingIsRunning();\r\nerror Voting__alreadyVoted();\r\nerror Voting__notYetVoted();\r\nerror Voting__notEnoughVoters();\r\n\r\ncontract Stake is ReentrancyGuard, Ownable {\r\n    /**\r\n     * @notice Constructor since this contract is not meant to be used without inheritance\r\n     * push once to stakeholders for it to work properly\r\n     */\r\n\r\n    struct Voter {\r\n        bool votingRight;\r\n        mapping(uint256 => bool) voted;\r\n    }\r\n\r\n    mapping(uint256 => uint256) internal stakingPackage;\r\n\r\n    uint256 public stakingPenaltyRate;\r\n    uint256 public airdropRate;\r\n    uint256 public airdropSince;\r\n\r\n    bool internal _votingStatus;\r\n    uint256 internal _votingId;\r\n    uint256 public totalVoters;\r\n    mapping(address => Voter) public voters;\r\n    mapping(uint256 => uint256) public votedUsers;\r\n\r\n    address public token_address;\r\n\r\n    constructor(address token) {\r\n        //Staking penalty and Airdrop in 0.1 times percentage\r\n        stakingPenaltyRate = 15;\r\n        airdropRate = 80;\r\n\r\n        token_address = token;\r\n\r\n        stakingPackage[90 days] = 6;\r\n        stakingPackage[180 days] = 7;\r\n        stakingPackage[365 days] = 8;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * A stake struct is used to represent the way we store stakes,\r\n     * A Stake will contain the users address, the amount staked and a timestamp,\r\n     * Since which is when the stake was made\r\n     */\r\n    struct Stake {\r\n        uint256 amount;\r\n        uint256 since;\r\n        uint256 rewardAPY;\r\n        uint256 releaseTime;\r\n        // This claimable field is new and used to tell how big of a reward is currently available\r\n        uint256 claimable;\r\n        uint256 claimableAirdrop;\r\n        uint256 latestClaimDrop;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * StakingSummary is a struct that is used to contain all stakes performed by a certain account\r\n     */\r\n    struct StakingSummary {\r\n        uint256 total_amount;\r\n        uint256 penalty;\r\n        Stake stake;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * stakes is used to keep track of the INDEX for the stakers in the stakes array\r\n     */\r\n    mapping(address => Stake) internal stakeholders;\r\n\r\n    /**\r\n     * @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\r\n     */\r\n    event Staked(\r\n        address indexed user,\r\n        uint256 amount,\r\n        uint256 timestamp,\r\n        uint256 releaseTime\r\n    );\r\n\r\n    event PenaltyChanged(uint256 amount);\r\n    event AirdropChanged(uint256 amount);\r\n\r\n    /* ------------------------------------------ Modifier ------------------------------------------ */\r\n\r\n    function _isVoter() internal view {\r\n        // require(voters[msg.sender].votingRight == true, \"You are not a voter\");\r\n        if (voters[msg.sender].votingRight == false) {\r\n            revert Function__notAVoter();\r\n        }\r\n    }\r\n\r\n    modifier isVoter() {\r\n        _isVoter();\r\n        _;\r\n    }\r\n\r\n    function _checkVotingStatus() internal view {\r\n        // require(_votingStatus, \"Voting is not available\");\r\n        if (!_votingStatus) {\r\n            revert Function__votingNotAvailable();\r\n        }\r\n    }\r\n\r\n    modifier votingStatusTrue() {\r\n        _checkVotingStatus();\r\n        _;\r\n    }\r\n\r\n    /* ---------------------------------------------- - --------------------------------------------- */\r\n\r\n    /**\r\n     * @notice\r\n     * _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\r\n     * StakeID\r\n     */\r\n    function stake(uint256 amount, uint256 stakePeriod) external nonReentrant {\r\n        // Simple check so that user does not stake 0\r\n        // require(amount > 0, \"Cannot stake nothing\");\r\n        // require(stakeholders[user].amount == 0, \"User is a staker\");\r\n        if (stakeholders[msg.sender].amount != 0) {\r\n            revert Staking__userIsStaker();\r\n        }\r\n\r\n        if (stakingPackage[stakePeriod] == 0) {\r\n            revert Staking_noStakingPackageFound();\r\n        }\r\n\r\n        totalVoters += 1;\r\n        voters[msg.sender].votingRight = true;\r\n\r\n        // block.timestamp = timestamp of the current block in seconds since the epoch\r\n        uint256 timestamp = block.timestamp;\r\n\r\n        // Use the index to push a new Stake\r\n        // push a newly created Stake with the current block timestamp.\r\n\r\n        stakeholders[msg.sender] = Stake(\r\n            amount,\r\n            timestamp,\r\n            stakingPackage[stakePeriod],\r\n            (stakePeriod + timestamp),\r\n            0,\r\n            0,\r\n            0\r\n        );\r\n\r\n        SafeERC20.safeTransferFrom(\r\n            IERC20(token_address),\r\n            msg.sender,\r\n            address(this),\r\n            amount\r\n        );\r\n        // Emit an event that the stake has occured\r\n        emit Staked(msg.sender, amount, timestamp, (stakePeriod + timestamp));\r\n    }\r\n\r\n    function changePenaltyFee(uint256 amount) external onlyOwner {\r\n        // require(amount <= 30, \"Penalty fee cannot exceed 3 percent.\");\r\n        if (amount > 30) {\r\n            revert Staking__penaltyExceed3Percent();\r\n        }\r\n        stakingPenaltyRate = amount;\r\n        emit PenaltyChanged(amount);\r\n    }\r\n\r\n    function _calculateStakingDuration(uint256 since)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        // times by 1e24 so theres no missing value\r\n        return ((block.timestamp - since) * 1e24) / 365 days;\r\n    }\r\n\r\n    function _calculateStakeReward(Stake memory user_stake)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        if (user_stake.amount == 0) {\r\n            return 0;\r\n        }\r\n        // divided by 1e26 because 1e2 for APY and 1e24 from calculate staking duration\r\n        return\r\n            (user_stake.amount *\r\n                user_stake.rewardAPY *\r\n                _calculateStakingDuration(user_stake.since)) / 1e26;\r\n    }\r\n\r\n    function _calculateStakingWithPenalty(uint256 amount, uint256 reward)\r\n        internal\r\n        view\r\n        returns (uint256, uint256)\r\n    {\r\n        if (amount == 0) {\r\n            return (0, 0);\r\n        }\r\n        return (\r\n            amount - ((amount * stakingPenaltyRate) / 1000),\r\n            reward - ((reward * stakingPenaltyRate) / 1000)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\r\n     * Notice index of the stake is the users stake counter, starting at 0 for the first stake\r\n     * Will return the amount to MINT onto the account\r\n     * Will also _calculateStakeReward and reset timer\r\n     */\r\n\r\n    function withdrawStake() external nonReentrant {\r\n        // TODO: can be simplified\r\n        // Grab user_index which is the index to use to grab the Stake[]\r\n        Stake memory user_stake = stakeholders[msg.sender];\r\n        uint256 reward = _calculateStakeReward(user_stake);\r\n\r\n        delete stakeholders[msg.sender];\r\n        totalVoters -= 1;\r\n        delete voters[msg.sender].voted[_votingId];\r\n\r\n        if (user_stake.releaseTime > block.timestamp) {\r\n            (\r\n                uint256 amount_reduced,\r\n                uint256 reward_reduced\r\n            ) = _calculateStakingWithPenalty(user_stake.amount, reward);\r\n\r\n            SafeERC20.safeTransfer(\r\n                IERC20(token_address),\r\n                msg.sender,\r\n                (amount_reduced + reward_reduced)\r\n            );\r\n        } else {\r\n            SafeERC20.safeTransfer(\r\n                IERC20(token_address),\r\n                msg.sender,\r\n                (user_stake.amount + reward)\r\n            );\r\n        }\r\n    }\r\n\r\n    function hasStake() external view returns (StakingSummary memory) {\r\n        Stake memory user_stake = stakeholders[msg.sender];\r\n        // require(user_stake.amount > 0, \"No Stake Found\");\r\n        if (user_stake.amount <= 0) {\r\n            revert Staking__noStakingFound();\r\n        }\r\n        StakingSummary memory summary = StakingSummary(0, 0, user_stake);\r\n\r\n        uint256 reward = _calculateStakeReward(user_stake);\r\n\r\n        if (summary.stake.releaseTime > block.timestamp) {\r\n            summary.penalty =\r\n                ((user_stake.amount * stakingPenaltyRate) / 1000) +\r\n                ((reward * stakingPenaltyRate) / 1000);\r\n        }\r\n\r\n        if (calculateWeek(user_stake.latestClaimDrop) > 0) {\r\n            uint256 airdrop = _calculateAirdrop(user_stake.amount);\r\n            summary.stake.claimableAirdrop = airdrop;\r\n        } else {\r\n            summary.stake.claimableAirdrop = 0;\r\n        }\r\n\r\n        summary.stake.claimable = reward;\r\n        summary.total_amount = user_stake.amount;\r\n\r\n        return summary;\r\n    }\r\n\r\n    /* -------------------------------------- Airdrop functions ------------------------------------- */\r\n\r\n    function startAirdrop() external onlyOwner {\r\n        airdropSince = block.timestamp;\r\n    }\r\n\r\n    function changeAirdropPercentage(uint256 amount) external onlyOwner {\r\n        if (amount > 200) {\r\n            revert Staking__airdropExceed20Percent();\r\n        }\r\n        airdropRate = amount;\r\n        emit AirdropChanged(amount);\r\n    }\r\n\r\n    function _blockTimestamp() public view returns (uint256) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    function calculateWeek(uint256 timestamp) public view returns (uint256) {\r\n        return (block.timestamp - timestamp) / 7 days;\r\n    }\r\n\r\n    function _calculateAirdrop(uint256 stakeAmount)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return ((stakeAmount * airdropRate) / 1000) / 52 weeks;\r\n    }\r\n\r\n    function claimAirdrop() external {\r\n        // TODO: can be simplified if using address\r\n        Stake storage staker = stakeholders[msg.sender];\r\n\r\n        if (staker.amount > 0) {\r\n            if (calculateWeek(staker.latestClaimDrop) == 0) {\r\n                revert Airdrop__claimableOnceAWeek();\r\n            }\r\n\r\n            staker.claimableAirdrop = 0;\r\n            staker.latestClaimDrop = block.timestamp;\r\n\r\n            SafeERC20.safeTransfer(\r\n                IERC20(token_address),\r\n                msg.sender,\r\n                _calculateAirdrop(staker.amount)\r\n            );\r\n        }\r\n    }\r\n\r\n    /* -------------------------------- Voting Functions for DAO Pool ------------------------------- */\r\n    // ! Replaceable with Governance token\r\n\r\n    // function getVoters(address user) external view returns (bool, bool) {\r\n    //     return (voters[user].votingRight, voters[user].voted[_votingId]);\r\n    // }\r\n\r\n    // // TODO: can be simplified since not connected directly\r\n    // function startVoting() external nonReentrant onlyOwner {\r\n    //     if (_votingStatus == true) {\r\n    //         revert Voting__votingIsRunning();\r\n    //     }\r\n\r\n    //     _votingStatus = true;\r\n    //     _votingId += 1;\r\n    // }\r\n\r\n    // function vote() public nonReentrant votingStatusTrue isVoter {\r\n    //     if (voters[msg.sender].voted[_votingId] == true) {\r\n    //         revert Voting__alreadyVoted();\r\n    //     }\r\n\r\n    //     voters[msg.sender].voted[_votingId] = true;\r\n    //     votedUsers[_votingId] += 1;\r\n    // }\r\n\r\n    // function retractVote() public nonReentrant votingStatusTrue isVoter {\r\n    //     if (voters[msg.sender].voted[_votingId] == false) {\r\n    //         revert Voting__notYetVoted();\r\n    //     }\r\n\r\n    //     voters[msg.sender].voted[_votingId] == false;\r\n    //     votedUsers[_votingId] -= 1;\r\n    // }\r\n\r\n    // function getVotingResult()\r\n    //     external\r\n    //     view\r\n    //     onlyOwner\r\n    //     votingStatusTrue\r\n    //     returns (bool)\r\n    // {\r\n    //     if (totalVoters <= 1) {\r\n    //         revert Voting__notEnoughVoters();\r\n    //     }\r\n    //     uint256 half_voters = (totalVoters * 5) / 10;\r\n\r\n    //     if (votedUsers[_votingId] > half_voters) {\r\n    //         return true;\r\n    //     } else {\r\n    //         return false;\r\n    //     }\r\n    // }\r\n\r\n    // function stopVoting() external onlyOwner votingStatusTrue {\r\n    //     _votingStatus = false;\r\n    // }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 115,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122006bf73c3865eaaf80d277dd1c60b6b2e822b5a3d224d478d84e61499ce98038064736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122006bf73c3865eaaf80d277dd1c60b6b2e822b5a3d224d478d84e61499ce98038064736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xBF PUSH20 0xC3865EAAF80D277DD1C60B6B2E822B5A3D224D47 DUP14 DUP5 0xE6 EQ SWAP10 0xCE SWAP9 SUB DUP1 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "645:3270:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122006bf73c3865eaaf80d277dd1c60b6b2e822b5a3d224d478d84e61499ce98038064736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xBF PUSH20 0xC3865EAAF80D277DD1C60B6B2E822B5A3D224D47 DUP14 DUP5 0xE6 EQ SWAP10 0xCE SWAP9 SUB DUP1 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "645:3270:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122006bf73c3865eaaf80d277dd1c60b6b2e822b5a3d224d478d84e61499ce98038064736f6c634300080b0033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220079c0c034a8a0c9c40eb3166d9fb5a40dc6087548392141a6ff32cc1c40f87b764736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220079c0c034a8a0c9c40eb3166d9fb5a40dc6087548392141a6ff32cc1c40f87b764736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xC SUB 0x4A DUP11 0xC SWAP13 BLOCKHASH 0xEB BALANCE PUSH7 0xD9FB5A40DC6087 SLOAD DUP4 SWAP3 EQ BYTE PUSH16 0xF32CC1C40F87B764736F6C634300080B STOP CALLER ",
							"sourceMap": "194:8061:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220079c0c034a8a0c9c40eb3166d9fb5a40dc6087548392141a6ff32cc1c40f87b764736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xC SUB 0x4A DUP11 0xC SWAP13 BLOCKHASH 0xEB BALANCE PUSH7 0xD9FB5A40DC6087 SLOAD DUP4 SWAP3 EQ BYTE PUSH16 0xF32CC1C40F87B764736F6C634300080B STOP CALLER ",
							"sourceMap": "194:8061:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220079c0c034a8a0c9c40eb3166d9fb5a40dc6087548392141a6ff32cc1c40f87b764736f6c634300080b0033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Stake-2.0.sol": {
				"Stake": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "Airdrop__claimableOnceAWeek",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__airdropExceed20Percent",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__noStakingFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__penaltyExceed3Percent",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__userIsStaker",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking_noStakingPackageFound",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AirdropChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PenaltyChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_blockTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropSince",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "calculateWeek",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changeAirdropPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changePenaltyFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimAirdrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "total_amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "penalty",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "since",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "rewardAPY",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "releaseTime",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimableAirdrop",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "latestClaimDrop",
													"type": "uint256"
												}
											],
											"internalType": "struct Stake.Stake",
											"name": "stake",
											"type": "tuple"
										}
									],
									"internalType": "struct Stake.StakingSummary",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakePeriod",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingPenaltyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startAirdrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token_address",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVoters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "votedUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "votingRight",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Stake-2.0.sol\":1017:12999  contract Stake is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Stake-2.0.sol\":1740:2051  constructor(address token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"contracts/Stake-2.0.sol\":1862:1864  15 */\n  0x0f\n    /* \"contracts/Stake-2.0.sol\":1841:1859  stakingPenaltyRate */\n  0x03\n    /* \"contracts/Stake-2.0.sol\":1841:1864  stakingPenaltyRate = 15 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stake-2.0.sol\":1889:1891  80 */\n  0x50\n    /* \"contracts/Stake-2.0.sol\":1875:1886  airdropRate */\n  0x04\n    /* \"contracts/Stake-2.0.sol\":1875:1891  airdropRate = 80 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stake-2.0.sol\":1920:1925  token */\n  dup1\n    /* \"contracts/Stake-2.0.sol\":1904:1917  token_address */\n  0x0b\n  0x00\n    /* \"contracts/Stake-2.0.sol\":1904:1925  token_address = token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stake-2.0.sol\":1964:1965  6 */\n  0x06\n    /* \"contracts/Stake-2.0.sol\":1938:1952  stakingPackage */\n  0x02\n    /* \"contracts/Stake-2.0.sol\":1938:1961  stakingPackage[90 days] */\n  0x00\n    /* \"contracts/Stake-2.0.sol\":1953:1960  90 days */\n  0x76a700\n    /* \"contracts/Stake-2.0.sol\":1938:1961  stakingPackage[90 days] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/Stake-2.0.sol\":1938:1965  stakingPackage[90 days] = 6 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stake-2.0.sol\":2003:2004  7 */\n  0x07\n    /* \"contracts/Stake-2.0.sol\":1976:1990  stakingPackage */\n  0x02\n    /* \"contracts/Stake-2.0.sol\":1976:2000  stakingPackage[180 days] */\n  0x00\n    /* \"contracts/Stake-2.0.sol\":1991:1999  180 days */\n  0xed4e00\n    /* \"contracts/Stake-2.0.sol\":1976:2000  stakingPackage[180 days] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/Stake-2.0.sol\":1976:2004  stakingPackage[180 days] = 7 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stake-2.0.sol\":2042:2043  8 */\n  0x08\n    /* \"contracts/Stake-2.0.sol\":2015:2029  stakingPackage */\n  0x02\n    /* \"contracts/Stake-2.0.sol\":2015:2039  stakingPackage[365 days] */\n  0x00\n    /* \"contracts/Stake-2.0.sol\":2030:2038  365 days */\n  0x01e13380\n    /* \"contracts/Stake-2.0.sol\":2015:2039  stakingPackage[365 days] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/Stake-2.0.sol\":2015:2043  stakingPackage[365 days] = 8 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stake-2.0.sol\":1740:2051  constructor(address token) {... */\n  pop\n    /* \"contracts/Stake-2.0.sol\":1017:12999  contract Stake is ReentrancyGuard, Ownable {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_30\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_22:\n    /* \"#utility.yul\":641:665   */\n  tag_32\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_21\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_33:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_23:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_35\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_22\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_38\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":932:1051   */\ntag_37:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_39\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_23\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Stake-2.0.sol\":1017:12999  contract Stake is ReentrancyGuard, Ownable {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Stake-2.0.sol\":1017:12999  contract Stake is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa143a5f2\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xc63aa3e7\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xc63aa3e7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xcb79c2e1\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd2a569c3\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd5dbdf1b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0xa143a5f2\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa3ec138d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb5d9df83\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb87da76d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xbed9d861\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x7b0472f0\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8891cf0d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8c63f97f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8c8e8fee\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x10486b6a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5b88349d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5f5300ff\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Stake-2.0.sol\":8587:9638  function hasStake() external view returns (StakingSummary memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stake-2.0.sol\":10545:11150  function claimAirdrop() external {... */\n    tag_4:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/Stake-2.0.sol\":1570:1596  uint256 public totalVoters */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/Stake-2.0.sol\":4457:5806  function stake(uint256 amount, uint256 stakePeriod) external nonReentrant {... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/Stake-2.0.sol\":1434:1460  uint256 public airdropRate */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stake-2.0.sol\":5814:6127  function changePenaltyFee(uint256 amount) external onlyOwner {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/Stake-2.0.sol\":1703:1731  address public token_address */\n    tag_10:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stake-2.0.sol\":1649:1694  mapping(uint256 => uint256) public votedUsers */\n    tag_12:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stake-2.0.sol\":1603:1642  mapping(address => Voter) public voters */\n    tag_13:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stake-2.0.sol\":10208:10344  function calculateWeek(uint256 timestamp) public view returns (uint256) {... */\n    tag_14:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stake-2.0.sol\":1467:1494  uint256 public airdropSince */\n    tag_15:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stake-2.0.sol\":7567:8579  function withdrawStake() external nonReentrant {... */\n    tag_16:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/Stake-2.0.sol\":10102:10200  function _blockTimestamp() public view returns (uint256) {... */\n    tag_17:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stake-2.0.sol\":1394:1427  uint256 public stakingPenaltyRate */\n    tag_18:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stake-2.0.sol\":9754:9846  function startAirdrop() external onlyOwner {... */\n    tag_19:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/Stake-2.0.sol\":9854:10094  function changeAirdropPercentage(uint256 amount) external onlyOwner {... */\n    tag_20:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contracts/Stake-2.0.sol\":8587:9638  function hasStake() external view returns (StakingSummary memory) {... */\n    tag_26:\n        /* \"contracts/Stake-2.0.sol\":8630:8651  StakingSummary memory */\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"contracts/Stake-2.0.sol\":8664:8687  Stake memory user_stake */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":8690:8702  stakeholders */\n      0x0c\n        /* \"contracts/Stake-2.0.sol\":8690:8714  stakeholders[msg.sender] */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":8703:8713  msg.sender */\n      caller\n        /* \"contracts/Stake-2.0.sol\":8690:8714  stakeholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stake-2.0.sol\":8664:8714  Stake memory user_stake = stakeholders[msg.sender] */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Stake-2.0.sol\":8812:8813  0 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":8791:8801  user_stake */\n      dup2\n        /* \"contracts/Stake-2.0.sol\":8791:8808  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stake-2.0.sol\":8791:8813  user_stake.amount <= 0 */\n      gt\n        /* \"contracts/Stake-2.0.sol\":8787:8874  if (user_stake.amount <= 0) {... */\n      tag_91\n      jumpi\n        /* \"contracts/Stake-2.0.sol\":8837:8862  Staking__noStakingFound() */\n      mload(0x40)\n      0xb018f08700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stake-2.0.sol\":8787:8874  if (user_stake.amount <= 0) {... */\n    tag_91:\n        /* \"contracts/Stake-2.0.sol\":8884:8913  StakingSummary memory summary */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":8916:8948  StakingSummary(0, 0, user_stake) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Stake-2.0.sol\":8931:8932  0 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":8916:8948  StakingSummary(0, 0, user_stake) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stake-2.0.sol\":8934:8935  0 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":8916:8948  StakingSummary(0, 0, user_stake) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stake-2.0.sol\":8937:8947  user_stake */\n      dup4\n        /* \"contracts/Stake-2.0.sol\":8916:8948  StakingSummary(0, 0, user_stake) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stake-2.0.sol\":8884:8948  StakingSummary memory summary = StakingSummary(0, 0, user_stake) */\n      swap1\n      pop\n        /* \"contracts/Stake-2.0.sol\":8961:8975  uint256 reward */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":8978:9011  _calculateStakeReward(user_stake) */\n      tag_92\n        /* \"contracts/Stake-2.0.sol\":9000:9010  user_stake */\n      dup4\n        /* \"contracts/Stake-2.0.sol\":8978:8999  _calculateStakeReward */\n      tag_93\n        /* \"contracts/Stake-2.0.sol\":8978:9011  _calculateStakeReward(user_stake) */\n      jump\t// in\n    tag_92:\n        /* \"contracts/Stake-2.0.sol\":8961:9011  uint256 reward = _calculateStakeReward(user_stake) */\n      swap1\n      pop\n        /* \"contracts/Stake-2.0.sol\":9056:9071  block.timestamp */\n      timestamp\n        /* \"contracts/Stake-2.0.sol\":9028:9035  summary */\n      dup3\n        /* \"contracts/Stake-2.0.sol\":9028:9041  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stake-2.0.sol\":9028:9053  summary.stake.releaseTime */\n      0x60\n      add\n      mload\n        /* \"contracts/Stake-2.0.sol\":9028:9071  summary.stake.releaseTime > block.timestamp */\n      gt\n        /* \"contracts/Stake-2.0.sol\":9024:9242  if (summary.stake.releaseTime > block.timestamp) {... */\n      iszero\n      tag_94\n      jumpi\n        /* \"contracts/Stake-2.0.sol\":9225:9229  1000 */\n      0x03e8\n        /* \"contracts/Stake-2.0.sol\":9203:9221  stakingPenaltyRate */\n      sload(0x03)\n        /* \"contracts/Stake-2.0.sol\":9194:9200  reward */\n      dup3\n        /* \"contracts/Stake-2.0.sol\":9194:9221  reward * stakingPenaltyRate */\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"contracts/Stake-2.0.sol\":9193:9229  (reward * stakingPenaltyRate) / 1000 */\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"contracts/Stake-2.0.sol\":9167:9171  1000 */\n      0x03e8\n        /* \"contracts/Stake-2.0.sol\":9145:9163  stakingPenaltyRate */\n      sload(0x03)\n        /* \"contracts/Stake-2.0.sol\":9125:9135  user_stake */\n      dup6\n        /* \"contracts/Stake-2.0.sol\":9125:9142  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stake-2.0.sol\":9125:9163  user_stake.amount * stakingPenaltyRate */\n      tag_99\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_99:\n        /* \"contracts/Stake-2.0.sol\":9124:9171  (user_stake.amount * stakingPenaltyRate) / 1000 */\n      tag_100\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_100:\n        /* \"contracts/Stake-2.0.sol\":9123:9230  ((user_stake.amount * stakingPenaltyRate) / 1000) +... */\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"contracts/Stake-2.0.sol\":9088:9095  summary */\n      dup3\n        /* \"contracts/Stake-2.0.sol\":9088:9103  summary.penalty */\n      0x20\n      add\n        /* \"contracts/Stake-2.0.sol\":9088:9230  summary.penalty =... */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stake-2.0.sol\":9024:9242  if (summary.stake.releaseTime > block.timestamp) {... */\n    tag_94:\n        /* \"contracts/Stake-2.0.sol\":9302:9303  0 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":9258:9299  calculateWeek(user_stake.latestClaimDrop) */\n      tag_103\n        /* \"contracts/Stake-2.0.sol\":9272:9282  user_stake */\n      dup5\n        /* \"contracts/Stake-2.0.sol\":9272:9298  user_stake.latestClaimDrop */\n      0xc0\n      add\n      mload\n        /* \"contracts/Stake-2.0.sol\":9258:9271  calculateWeek */\n      tag_67\n        /* \"contracts/Stake-2.0.sol\":9258:9299  calculateWeek(user_stake.latestClaimDrop) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/Stake-2.0.sol\":9258:9303  calculateWeek(user_stake.latestClaimDrop) > 0 */\n      gt\n        /* \"contracts/Stake-2.0.sol\":9254:9508  if (calculateWeek(user_stake.latestClaimDrop) > 0) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"contracts/Stake-2.0.sol\":9320:9335  uint256 airdrop */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":9338:9374  _calculateAirdrop(user_stake.amount) */\n      tag_105\n        /* \"contracts/Stake-2.0.sol\":9356:9366  user_stake */\n      dup5\n        /* \"contracts/Stake-2.0.sol\":9356:9373  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stake-2.0.sol\":9338:9355  _calculateAirdrop */\n      tag_106\n        /* \"contracts/Stake-2.0.sol\":9338:9374  _calculateAirdrop(user_stake.amount) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/Stake-2.0.sol\":9320:9374  uint256 airdrop = _calculateAirdrop(user_stake.amount) */\n      swap1\n      pop\n        /* \"contracts/Stake-2.0.sol\":9422:9429  airdrop */\n      dup1\n        /* \"contracts/Stake-2.0.sol\":9389:9396  summary */\n      dup4\n        /* \"contracts/Stake-2.0.sol\":9389:9402  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stake-2.0.sol\":9389:9419  summary.stake.claimableAirdrop */\n      0xa0\n      add\n        /* \"contracts/Stake-2.0.sol\":9389:9429  summary.stake.claimableAirdrop = airdrop */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stake-2.0.sol\":9305:9441  {... */\n      pop\n        /* \"contracts/Stake-2.0.sol\":9254:9508  if (calculateWeek(user_stake.latestClaimDrop) > 0) {... */\n      jump(tag_107)\n    tag_104:\n        /* \"contracts/Stake-2.0.sol\":9495:9496  0 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":9462:9469  summary */\n      dup3\n        /* \"contracts/Stake-2.0.sol\":9462:9475  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stake-2.0.sol\":9462:9492  summary.stake.claimableAirdrop */\n      0xa0\n      add\n        /* \"contracts/Stake-2.0.sol\":9462:9496  summary.stake.claimableAirdrop = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stake-2.0.sol\":9254:9508  if (calculateWeek(user_stake.latestClaimDrop) > 0) {... */\n    tag_107:\n        /* \"contracts/Stake-2.0.sol\":9546:9552  reward */\n      dup1\n        /* \"contracts/Stake-2.0.sol\":9520:9527  summary */\n      dup3\n        /* \"contracts/Stake-2.0.sol\":9520:9533  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stake-2.0.sol\":9520:9543  summary.stake.claimable */\n      0x80\n      add\n        /* \"contracts/Stake-2.0.sol\":9520:9552  summary.stake.claimable = reward */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stake-2.0.sol\":9586:9596  user_stake */\n      dup3\n        /* \"contracts/Stake-2.0.sol\":9586:9603  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stake-2.0.sol\":9563:9570  summary */\n      dup3\n        /* \"contracts/Stake-2.0.sol\":9563:9583  summary.total_amount */\n      0x00\n      add\n        /* \"contracts/Stake-2.0.sol\":9563:9603  summary.total_amount = user_stake.amount */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stake-2.0.sol\":9623:9630  summary */\n      dup2\n        /* \"contracts/Stake-2.0.sol\":9616:9630  return summary */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Stake-2.0.sol\":8587:9638  function hasStake() external view returns (StakingSummary memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":10545:11150  function claimAirdrop() external {... */\n    tag_30:\n        /* \"contracts/Stake-2.0.sol\":10642:10662  Stake storage staker */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":10665:10677  stakeholders */\n      0x0c\n        /* \"contracts/Stake-2.0.sol\":10665:10689  stakeholders[msg.sender] */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":10678:10688  msg.sender */\n      caller\n        /* \"contracts/Stake-2.0.sol\":10665:10689  stakeholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stake-2.0.sol\":10642:10689  Stake storage staker = stakeholders[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Stake-2.0.sol\":10722:10723  0 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":10706:10712  staker */\n      dup2\n        /* \"contracts/Stake-2.0.sol\":10706:10719  staker.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Stake-2.0.sol\":10706:10723  staker.amount > 0 */\n      gt\n        /* \"contracts/Stake-2.0.sol\":10702:11143  if (staker.amount > 0) {... */\n      iszero\n      tag_109\n      jumpi\n        /* \"contracts/Stake-2.0.sol\":10785:10786  0 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":10744:10781  calculateWeek(staker.latestClaimDrop) */\n      tag_110\n        /* \"contracts/Stake-2.0.sol\":10758:10764  staker */\n      dup3\n        /* \"contracts/Stake-2.0.sol\":10758:10780  staker.latestClaimDrop */\n      0x06\n      add\n      sload\n        /* \"contracts/Stake-2.0.sol\":10744:10757  calculateWeek */\n      tag_67\n        /* \"contracts/Stake-2.0.sol\":10744:10781  calculateWeek(staker.latestClaimDrop) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/Stake-2.0.sol\":10744:10786  calculateWeek(staker.latestClaimDrop) == 0 */\n      eq\n        /* \"contracts/Stake-2.0.sol\":10740:10859  if (calculateWeek(staker.latestClaimDrop) == 0) {... */\n      iszero\n      tag_111\n      jumpi\n        /* \"contracts/Stake-2.0.sol\":10814:10843  Airdrop__claimableOnceAWeek() */\n      mload(0x40)\n      0xdd8456cc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stake-2.0.sol\":10740:10859  if (calculateWeek(staker.latestClaimDrop) == 0) {... */\n    tag_111:\n        /* \"contracts/Stake-2.0.sol\":10901:10902  0 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":10875:10881  staker */\n      dup2\n        /* \"contracts/Stake-2.0.sol\":10875:10898  staker.claimableAirdrop */\n      0x05\n      add\n        /* \"contracts/Stake-2.0.sol\":10875:10902  staker.claimableAirdrop = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake-2.0.sol\":10942:10957  block.timestamp */\n      timestamp\n        /* \"contracts/Stake-2.0.sol\":10917:10923  staker */\n      dup2\n        /* \"contracts/Stake-2.0.sol\":10917:10939  staker.latestClaimDrop */\n      0x06\n      add\n        /* \"contracts/Stake-2.0.sol\":10917:10957  staker.latestClaimDrop = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake-2.0.sol\":10974:11131  SafeERC20.safeTransfer(... */\n      tag_112\n        /* \"contracts/Stake-2.0.sol\":11022:11035  token_address */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stake-2.0.sol\":11055:11065  msg.sender */\n      caller\n        /* \"contracts/Stake-2.0.sol\":11084:11116  _calculateAirdrop(staker.amount) */\n      tag_113\n        /* \"contracts/Stake-2.0.sol\":11102:11108  staker */\n      dup5\n        /* \"contracts/Stake-2.0.sol\":11102:11115  staker.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Stake-2.0.sol\":11084:11101  _calculateAirdrop */\n      tag_106\n        /* \"contracts/Stake-2.0.sol\":11084:11116  _calculateAirdrop(staker.amount) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/Stake-2.0.sol\":10974:10996  SafeERC20.safeTransfer */\n      tag_114\n        /* \"contracts/Stake-2.0.sol\":10974:11131  SafeERC20.safeTransfer(... */\n      jump\t// in\n    tag_112:\n        /* \"contracts/Stake-2.0.sol\":10702:11143  if (staker.amount > 0) {... */\n    tag_109:\n        /* \"contracts/Stake-2.0.sol\":10578:11150  {... */\n      pop\n        /* \"contracts/Stake-2.0.sol\":10545:11150  function claimAirdrop() external {... */\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":1570:1596  uint256 public totalVoters */\n    tag_32:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":4457:5806  function stake(uint256 amount, uint256 stakePeriod) external nonReentrant {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake-2.0.sol\":4766:4767  0 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":4731:4743  stakeholders */\n      0x0c\n        /* \"contracts/Stake-2.0.sol\":4731:4755  stakeholders[msg.sender] */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":4744:4754  msg.sender */\n      caller\n        /* \"contracts/Stake-2.0.sol\":4731:4755  stakeholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stake-2.0.sol\":4731:4762  stakeholders[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Stake-2.0.sol\":4731:4767  stakeholders[msg.sender].amount != 0 */\n      eq\n        /* \"contracts/Stake-2.0.sol\":4727:4826  if (stakeholders[msg.sender].amount != 0) {... */\n      tag_130\n      jumpi\n        /* \"contracts/Stake-2.0.sol\":4791:4814  Staking__userIsStaker() */\n      mload(0x40)\n      0x04462d2700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stake-2.0.sol\":4727:4826  if (stakeholders[msg.sender].amount != 0) {... */\n    tag_130:\n        /* \"contracts/Stake-2.0.sol\":4873:4874  0 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":4842:4856  stakingPackage */\n      0x02\n        /* \"contracts/Stake-2.0.sol\":4842:4869  stakingPackage[stakePeriod] */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":4857:4868  stakePeriod */\n      dup4\n        /* \"contracts/Stake-2.0.sol\":4842:4869  stakingPackage[stakePeriod] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Stake-2.0.sol\":4842:4874  stakingPackage[stakePeriod] == 0 */\n      eq\n        /* \"contracts/Stake-2.0.sol\":4838:4941  if (stakingPackage[stakePeriod] == 0) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"contracts/Stake-2.0.sol\":4898:4929  Staking_noStakingPackageFound() */\n      mload(0x40)\n      0x95377be400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stake-2.0.sol\":4838:4941  if (stakingPackage[stakePeriod] == 0) {... */\n    tag_131:\n        /* \"contracts/Stake-2.0.sol\":4968:4969  1 */\n      0x01\n        /* \"contracts/Stake-2.0.sol\":4953:4964  totalVoters */\n      0x08\n      0x00\n        /* \"contracts/Stake-2.0.sol\":4953:4969  totalVoters += 1 */\n      dup3\n      dup3\n      sload\n      tag_132\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_132:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake-2.0.sol\":5013:5017  true */\n      0x01\n        /* \"contracts/Stake-2.0.sol\":4980:4986  voters */\n      0x09\n        /* \"contracts/Stake-2.0.sol\":4980:4998  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":4987:4997  msg.sender */\n      caller\n        /* \"contracts/Stake-2.0.sol\":4980:4998  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stake-2.0.sol\":4980:5010  voters[msg.sender].votingRight */\n      0x00\n      add\n      0x00\n        /* \"contracts/Stake-2.0.sol\":4980:5017  voters[msg.sender].votingRight = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake-2.0.sol\":5118:5135  uint256 timestamp */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":5138:5153  block.timestamp */\n      timestamp\n        /* \"contracts/Stake-2.0.sol\":5118:5153  uint256 timestamp = block.timestamp */\n      swap1\n      pop\n        /* \"contracts/Stake-2.0.sol\":5314:5505  Stake(... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Stake-2.0.sol\":5334:5340  amount */\n      dup5\n        /* \"contracts/Stake-2.0.sol\":5314:5505  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stake-2.0.sol\":5355:5364  timestamp */\n      dup3\n        /* \"contracts/Stake-2.0.sol\":5314:5505  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stake-2.0.sol\":5379:5393  stakingPackage */\n      0x02\n        /* \"contracts/Stake-2.0.sol\":5379:5406  stakingPackage[stakePeriod] */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":5394:5405  stakePeriod */\n      dup6\n        /* \"contracts/Stake-2.0.sol\":5379:5406  stakingPackage[stakePeriod] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Stake-2.0.sol\":5314:5505  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stake-2.0.sol\":5436:5445  timestamp */\n      dup3\n        /* \"contracts/Stake-2.0.sol\":5422:5433  stakePeriod */\n      dup5\n        /* \"contracts/Stake-2.0.sol\":5422:5445  stakePeriod + timestamp */\n      tag_133\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_133:\n        /* \"contracts/Stake-2.0.sol\":5314:5505  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stake-2.0.sol\":5461:5462  0 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":5314:5505  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stake-2.0.sol\":5477:5478  0 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":5314:5505  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stake-2.0.sol\":5493:5494  0 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":5314:5505  Stake(... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stake-2.0.sol\":5287:5299  stakeholders */\n      0x0c\n        /* \"contracts/Stake-2.0.sol\":5287:5311  stakeholders[msg.sender] */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":5300:5310  msg.sender */\n      caller\n        /* \"contracts/Stake-2.0.sol\":5287:5311  stakeholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stake-2.0.sol\":5287:5505  stakeholders[msg.sender] = Stake(... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/Stake-2.0.sol\":5518:5665  SafeERC20.safeTransferFrom(... */\n      tag_134\n        /* \"contracts/Stake-2.0.sol\":5566:5579  token_address */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stake-2.0.sol\":5595:5605  msg.sender */\n      caller\n        /* \"contracts/Stake-2.0.sol\":5628:5632  this */\n      address\n        /* \"contracts/Stake-2.0.sol\":5648:5654  amount */\n      dup7\n        /* \"contracts/Stake-2.0.sol\":5518:5544  SafeERC20.safeTransferFrom */\n      tag_135\n        /* \"contracts/Stake-2.0.sol\":5518:5665  SafeERC20.safeTransferFrom(... */\n      jump\t// in\n    tag_134:\n        /* \"contracts/Stake-2.0.sol\":5741:5751  msg.sender */\n      caller\n        /* \"contracts/Stake-2.0.sol\":5734:5798  Staked(msg.sender, amount, timestamp, (stakePeriod + timestamp)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed\n        /* \"contracts/Stake-2.0.sol\":5753:5759  amount */\n      dup5\n        /* \"contracts/Stake-2.0.sol\":5761:5770  timestamp */\n      dup4\n        /* \"contracts/Stake-2.0.sol\":5787:5796  timestamp */\n      dup5\n        /* \"contracts/Stake-2.0.sol\":5773:5784  stakePeriod */\n      dup7\n        /* \"contracts/Stake-2.0.sol\":5773:5796  stakePeriod + timestamp */\n      tag_136\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_136:\n        /* \"contracts/Stake-2.0.sol\":5734:5798  Staked(msg.sender, amount, timestamp, (stakePeriod + timestamp)) */\n      mload(0x40)\n      tag_137\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Stake-2.0.sol\":4531:5806  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake-2.0.sol\":4457:5806  function stake(uint256 amount, uint256 stakePeriod) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":1434:1460  uint256 public airdropRate */\n    tag_42:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":5814:6127  function changePenaltyFee(uint256 amount) external onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_121\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"contracts/Stake-2.0.sol\":5974:5976  30 */\n      0x1e\n        /* \"contracts/Stake-2.0.sol\":5965:5971  amount */\n      dup2\n        /* \"contracts/Stake-2.0.sol\":5965:5976  amount > 30 */\n      gt\n        /* \"contracts/Stake-2.0.sol\":5961:6044  if (amount > 30) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"contracts/Stake-2.0.sol\":6000:6032  Staking__penaltyExceed3Percent() */\n      mload(0x40)\n      0xf1a470d700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stake-2.0.sol\":5961:6044  if (amount > 30) {... */\n    tag_145:\n        /* \"contracts/Stake-2.0.sol\":6075:6081  amount */\n      dup1\n        /* \"contracts/Stake-2.0.sol\":6054:6072  stakingPenaltyRate */\n      0x03\n        /* \"contracts/Stake-2.0.sol\":6054:6081  stakingPenaltyRate = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake-2.0.sol\":6097:6119  PenaltyChanged(amount) */\n      0xcfa4f4cf1cd64d13a167a8e75605e0c0c9d6700e903d17c5dc11f593254a04a9\n        /* \"contracts/Stake-2.0.sol\":6112:6118  amount */\n      dup2\n        /* \"contracts/Stake-2.0.sol\":6097:6119  PenaltyChanged(amount) */\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Stake-2.0.sol\":5814:6127  function changePenaltyFee(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":1703:1731  address public token_address */\n    tag_49:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":1649:1694  mapping(uint256 => uint256) public votedUsers */\n    tag_57:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":1603:1642  mapping(address => Voter) public voters */\n    tag_62:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":10208:10344  function calculateWeek(uint256 timestamp) public view returns (uint256) {... */\n    tag_67:\n        /* \"contracts/Stake-2.0.sol\":10271:10278  uint256 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":10330:10336  7 days */\n      0x093a80\n        /* \"contracts/Stake-2.0.sol\":10317:10326  timestamp */\n      dup3\n        /* \"contracts/Stake-2.0.sol\":10299:10314  block.timestamp */\n      timestamp\n        /* \"contracts/Stake-2.0.sol\":10299:10326  block.timestamp - timestamp */\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"contracts/Stake-2.0.sol\":10298:10336  (block.timestamp - timestamp) / 7 days */\n      tag_151\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_151:\n        /* \"contracts/Stake-2.0.sol\":10291:10336  return (block.timestamp - timestamp) / 7 days */\n      swap1\n      pop\n        /* \"contracts/Stake-2.0.sol\":10208:10344  function calculateWeek(uint256 timestamp) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":1467:1494  uint256 public airdropSince */\n    tag_70:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":7567:8579  function withdrawStake() external nonReentrant {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_128\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake-2.0.sol\":7735:7758  Stake memory user_stake */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":7761:7773  stakeholders */\n      0x0c\n        /* \"contracts/Stake-2.0.sol\":7761:7785  stakeholders[msg.sender] */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":7774:7784  msg.sender */\n      caller\n        /* \"contracts/Stake-2.0.sol\":7761:7785  stakeholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stake-2.0.sol\":7735:7785  Stake memory user_stake = stakeholders[msg.sender] */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Stake-2.0.sol\":7796:7810  uint256 reward */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":7813:7846  _calculateStakeReward(user_stake) */\n      tag_156\n        /* \"contracts/Stake-2.0.sol\":7835:7845  user_stake */\n      dup3\n        /* \"contracts/Stake-2.0.sol\":7813:7834  _calculateStakeReward */\n      tag_93\n        /* \"contracts/Stake-2.0.sol\":7813:7846  _calculateStakeReward(user_stake) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/Stake-2.0.sol\":7796:7846  uint256 reward = _calculateStakeReward(user_stake) */\n      swap1\n      pop\n        /* \"contracts/Stake-2.0.sol\":7866:7878  stakeholders */\n      0x0c\n        /* \"contracts/Stake-2.0.sol\":7866:7890  stakeholders[msg.sender] */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":7879:7889  msg.sender */\n      caller\n        /* \"contracts/Stake-2.0.sol\":7866:7890  stakeholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stake-2.0.sol\":7859:7890  delete stakeholders[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x05\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x06\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Stake-2.0.sol\":7916:7917  1 */\n      0x01\n        /* \"contracts/Stake-2.0.sol\":7901:7912  totalVoters */\n      0x08\n      0x00\n        /* \"contracts/Stake-2.0.sol\":7901:7917  totalVoters -= 1 */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake-2.0.sol\":7935:7941  voters */\n      0x09\n        /* \"contracts/Stake-2.0.sol\":7935:7953  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":7942:7952  msg.sender */\n      caller\n        /* \"contracts/Stake-2.0.sol\":7935:7953  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stake-2.0.sol\":7935:7959  voters[msg.sender].voted */\n      0x01\n      add\n        /* \"contracts/Stake-2.0.sol\":7935:7970  voters[msg.sender].voted[_votingId] */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":7960:7969  _votingId */\n      sload(0x07)\n        /* \"contracts/Stake-2.0.sol\":7935:7970  voters[msg.sender].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stake-2.0.sol\":7928:7970  delete voters[msg.sender].voted[_votingId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/Stake-2.0.sol\":8012:8027  block.timestamp */\n      timestamp\n        /* \"contracts/Stake-2.0.sol\":7987:7997  user_stake */\n      dup3\n        /* \"contracts/Stake-2.0.sol\":7987:8009  user_stake.releaseTime */\n      0x60\n      add\n      mload\n        /* \"contracts/Stake-2.0.sol\":7987:8027  user_stake.releaseTime > block.timestamp */\n      gt\n        /* \"contracts/Stake-2.0.sol\":7983:8572  if (user_stake.releaseTime > block.timestamp) {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"contracts/Stake-2.0.sol\":8063:8085  uint256 amount_reduced */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":8104:8126  uint256 reward_reduced */\n      dup1\n        /* \"contracts/Stake-2.0.sol\":8144:8199  _calculateStakingWithPenalty(user_stake.amount, reward) */\n      tag_159\n        /* \"contracts/Stake-2.0.sol\":8173:8183  user_stake */\n      dup5\n        /* \"contracts/Stake-2.0.sol\":8173:8190  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stake-2.0.sol\":8192:8198  reward */\n      dup5\n        /* \"contracts/Stake-2.0.sol\":8144:8172  _calculateStakingWithPenalty */\n      tag_160\n        /* \"contracts/Stake-2.0.sol\":8144:8199  _calculateStakingWithPenalty(user_stake.amount, reward) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/Stake-2.0.sol\":8044:8199  (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Stake-2.0.sol\":8216:8374  SafeERC20.safeTransfer(... */\n      tag_161\n        /* \"contracts/Stake-2.0.sol\":8264:8277  token_address */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stake-2.0.sol\":8297:8307  msg.sender */\n      caller\n        /* \"contracts/Stake-2.0.sol\":8344:8358  reward_reduced */\n      dup4\n        /* \"contracts/Stake-2.0.sol\":8327:8341  amount_reduced */\n      dup6\n        /* \"contracts/Stake-2.0.sol\":8327:8358  amount_reduced + reward_reduced */\n      tag_162\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_162:\n        /* \"contracts/Stake-2.0.sol\":8216:8238  SafeERC20.safeTransfer */\n      tag_114\n        /* \"contracts/Stake-2.0.sol\":8216:8374  SafeERC20.safeTransfer(... */\n      jump\t// in\n    tag_161:\n        /* \"contracts/Stake-2.0.sol\":8029:8386  {... */\n      pop\n      pop\n        /* \"contracts/Stake-2.0.sol\":7983:8572  if (user_stake.releaseTime > block.timestamp) {... */\n      jump(tag_163)\n    tag_158:\n        /* \"contracts/Stake-2.0.sol\":8407:8560  SafeERC20.safeTransfer(... */\n      tag_164\n        /* \"contracts/Stake-2.0.sol\":8455:8468  token_address */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stake-2.0.sol\":8488:8498  msg.sender */\n      caller\n        /* \"contracts/Stake-2.0.sol\":8538:8544  reward */\n      dup4\n        /* \"contracts/Stake-2.0.sol\":8518:8528  user_stake */\n      dup6\n        /* \"contracts/Stake-2.0.sol\":8518:8535  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stake-2.0.sol\":8518:8544  user_stake.amount + reward */\n      tag_165\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_165:\n        /* \"contracts/Stake-2.0.sol\":8407:8429  SafeERC20.safeTransfer */\n      tag_114\n        /* \"contracts/Stake-2.0.sol\":8407:8560  SafeERC20.safeTransfer(... */\n      jump\t// in\n    tag_164:\n        /* \"contracts/Stake-2.0.sol\":7983:8572  if (user_stake.releaseTime > block.timestamp) {... */\n    tag_163:\n        /* \"contracts/Stake-2.0.sol\":7614:8579  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake-2.0.sol\":7567:8579  function withdrawStake() external nonReentrant {... */\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":10102:10200  function _blockTimestamp() public view returns (uint256) {... */\n    tag_75:\n        /* \"contracts/Stake-2.0.sol\":10150:10157  uint256 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":10177:10192  block.timestamp */\n      timestamp\n        /* \"contracts/Stake-2.0.sol\":10170:10192  return block.timestamp */\n      swap1\n      pop\n        /* \"contracts/Stake-2.0.sol\":10102:10200  function _blockTimestamp() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":1394:1427  uint256 public stakingPenaltyRate */\n    tag_78:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":9754:9846  function startAirdrop() external onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_121\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/Stake-2.0.sol\":9823:9838  block.timestamp */\n      timestamp\n        /* \"contracts/Stake-2.0.sol\":9808:9820  airdropSince */\n      0x05\n        /* \"contracts/Stake-2.0.sol\":9808:9838  airdropSince = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake-2.0.sol\":9754:9846  function startAirdrop() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":9854:10094  function changeAirdropPercentage(uint256 amount) external onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_121\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"contracts/Stake-2.0.sol\":9946:9949  200 */\n      0xc8\n        /* \"contracts/Stake-2.0.sol\":9937:9943  amount */\n      dup2\n        /* \"contracts/Stake-2.0.sol\":9937:9949  amount > 200 */\n      gt\n        /* \"contracts/Stake-2.0.sol\":9933:10018  if (amount > 200) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"contracts/Stake-2.0.sol\":9973:10006  Staking__airdropExceed20Percent() */\n      mload(0x40)\n      0xa552cf1000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stake-2.0.sol\":9933:10018  if (amount > 200) {... */\n    tag_179:\n        /* \"contracts/Stake-2.0.sol\":10042:10048  amount */\n      dup1\n        /* \"contracts/Stake-2.0.sol\":10028:10039  airdropRate */\n      0x04\n        /* \"contracts/Stake-2.0.sol\":10028:10048  airdropRate = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake-2.0.sol\":10064:10086  AirdropChanged(amount) */\n      0xcc672f1026b958c0cfbfdd89ebe8ddcbc127f16ec24da6c2c7a4de26a8b1857e\n        /* \"contracts/Stake-2.0.sol\":10079:10085  amount */\n      dup2\n        /* \"contracts/Stake-2.0.sol\":10064:10086  AirdropChanged(amount) */\n      mload(0x40)\n      tag_180\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Stake-2.0.sol\":9854:10094  function changeAirdropPercentage(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_121\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":6381:6831  function _calculateStakeReward(Stake memory user_stake)... */\n    tag_93:\n        /* \"contracts/Stake-2.0.sol\":6487:6494  uint256 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":6537:6538  0 */\n      dup1\n        /* \"contracts/Stake-2.0.sol\":6516:6526  user_stake */\n      dup3\n        /* \"contracts/Stake-2.0.sol\":6516:6533  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stake-2.0.sol\":6516:6538  user_stake.amount == 0 */\n      eq\n        /* \"contracts/Stake-2.0.sol\":6512:6575  if (user_stake.amount == 0) {... */\n      iszero\n      tag_192\n      jumpi\n        /* \"contracts/Stake-2.0.sol\":6562:6563  0 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":6555:6563  return 0 */\n      swap1\n      pop\n      jump(tag_191)\n        /* \"contracts/Stake-2.0.sol\":6512:6575  if (user_stake.amount == 0) {... */\n    tag_192:\n        /* \"contracts/Stake-2.0.sol\":6819:6823  1e26 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/Stake-2.0.sol\":6772:6815  _calculateStakingDuration(user_stake.since) */\n      tag_193\n        /* \"contracts/Stake-2.0.sol\":6798:6808  user_stake */\n      dup4\n        /* \"contracts/Stake-2.0.sol\":6798:6814  user_stake.since */\n      0x20\n      add\n      mload\n        /* \"contracts/Stake-2.0.sol\":6772:6797  _calculateStakingDuration */\n      tag_194\n        /* \"contracts/Stake-2.0.sol\":6772:6815  _calculateStakingDuration(user_stake.since) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/Stake-2.0.sol\":6732:6742  user_stake */\n      dup4\n        /* \"contracts/Stake-2.0.sol\":6732:6752  user_stake.rewardAPY */\n      0x40\n      add\n      mload\n        /* \"contracts/Stake-2.0.sol\":6695:6705  user_stake */\n      dup5\n        /* \"contracts/Stake-2.0.sol\":6695:6712  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stake-2.0.sol\":6695:6752  user_stake.amount *... */\n      tag_195\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_195:\n        /* \"contracts/Stake-2.0.sol\":6695:6815  user_stake.amount *... */\n      tag_196\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_196:\n        /* \"contracts/Stake-2.0.sol\":6694:6823  (user_stake.amount *... */\n      tag_197\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_197:\n        /* \"contracts/Stake-2.0.sol\":6674:6823  return... */\n      swap1\n      pop\n        /* \"contracts/Stake-2.0.sol\":6381:6831  function _calculateStakeReward(Stake memory user_stake)... */\n    tag_191:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":10352:10537  function _calculateAirdrop(uint256 stakeAmount)... */\n    tag_106:\n        /* \"contracts/Stake-2.0.sol\":10450:10457  uint256 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":10521:10529  52 weeks */\n      0x01dfe200\n        /* \"contracts/Stake-2.0.sol\":10513:10517  1000 */\n      0x03e8\n        /* \"contracts/Stake-2.0.sol\":10498:10509  airdropRate */\n      sload(0x04)\n        /* \"contracts/Stake-2.0.sol\":10484:10495  stakeAmount */\n      dup5\n        /* \"contracts/Stake-2.0.sol\":10484:10509  stakeAmount * airdropRate */\n      tag_199\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_199:\n        /* \"contracts/Stake-2.0.sol\":10483:10517  (stakeAmount * airdropRate) / 1000 */\n      tag_200\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_200:\n        /* \"contracts/Stake-2.0.sol\":10482:10529  ((stakeAmount * airdropRate) / 1000) / 52 weeks */\n      tag_201\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_201:\n        /* \"contracts/Stake-2.0.sol\":10475:10529  return ((stakeAmount * airdropRate) / 1000) / 52 weeks */\n      swap1\n      pop\n        /* \"contracts/Stake-2.0.sol\":10352:10537  function _calculateAirdrop(uint256 stakeAmount)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":833:838  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":863:886  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":888:890  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":892:897  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_204\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:832  _callOptionalReturn */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1070:1075  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1100:1127  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1129:1133  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1135:1137  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1144  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_211\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1069  _callOptionalReturn */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":6839:7210  function _calculateStakingWithPenalty(uint256 amount, uint256 reward)... */\n    tag_160:\n        /* \"contracts/Stake-2.0.sol\":6959:6966  uint256 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":6968:6975  uint256 */\n      dup1\n        /* \"contracts/Stake-2.0.sol\":7007:7008  0 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":6997:7003  amount */\n      dup5\n        /* \"contracts/Stake-2.0.sol\":6997:7008  amount == 0 */\n      eq\n        /* \"contracts/Stake-2.0.sol\":6993:7050  if (amount == 0) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"contracts/Stake-2.0.sol\":7033:7034  0 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":7036:7037  0 */\n      dup1\n        /* \"contracts/Stake-2.0.sol\":7025:7038  return (0, 0) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_213)\n        /* \"contracts/Stake-2.0.sol\":6993:7050  if (amount == 0) {... */\n    tag_214:\n        /* \"contracts/Stake-2.0.sol\":7124:7128  1000 */\n      0x03e8\n        /* \"contracts/Stake-2.0.sol\":7102:7120  stakingPenaltyRate */\n      sload(0x03)\n        /* \"contracts/Stake-2.0.sol\":7093:7099  amount */\n      dup6\n        /* \"contracts/Stake-2.0.sol\":7093:7120  amount * stakingPenaltyRate */\n      tag_215\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_215:\n        /* \"contracts/Stake-2.0.sol\":7092:7128  (amount * stakingPenaltyRate) / 1000 */\n      tag_216\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_216:\n        /* \"contracts/Stake-2.0.sol\":7082:7088  amount */\n      dup5\n        /* \"contracts/Stake-2.0.sol\":7082:7129  amount - ((amount * stakingPenaltyRate) / 1000) */\n      tag_217\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_217:\n        /* \"contracts/Stake-2.0.sol\":7186:7190  1000 */\n      0x03e8\n        /* \"contracts/Stake-2.0.sol\":7164:7182  stakingPenaltyRate */\n      sload(0x03)\n        /* \"contracts/Stake-2.0.sol\":7155:7161  reward */\n      dup6\n        /* \"contracts/Stake-2.0.sol\":7155:7182  reward * stakingPenaltyRate */\n      tag_218\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_218:\n        /* \"contracts/Stake-2.0.sol\":7154:7190  (reward * stakingPenaltyRate) / 1000 */\n      tag_219\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_219:\n        /* \"contracts/Stake-2.0.sol\":7144:7150  reward */\n      dup5\n        /* \"contracts/Stake-2.0.sol\":7144:7191  reward - ((reward * stakingPenaltyRate) / 1000) */\n      tag_220\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_220:\n        /* \"contracts/Stake-2.0.sol\":7060:7202  return (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Stake-2.0.sol\":6839:7210  function _calculateStakingWithPenalty(uint256 amount, uint256 reward)... */\n    tag_213:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stake-2.0.sol\":6135:6373  function _calculateStakingDuration(uint256 since)... */\n    tag_194:\n        /* \"contracts/Stake-2.0.sol\":6235:6242  uint256 */\n      0x00\n        /* \"contracts/Stake-2.0.sol\":6357:6365  365 days */\n      0x01e13380\n        /* \"contracts/Stake-2.0.sol\":6349:6353  1e24 */\n      0xd3c21bcecceda1000000\n        /* \"contracts/Stake-2.0.sol\":6340:6345  since */\n      dup4\n        /* \"contracts/Stake-2.0.sol\":6322:6337  block.timestamp */\n      timestamp\n        /* \"contracts/Stake-2.0.sol\":6322:6345  block.timestamp - since */\n      tag_222\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_222:\n        /* \"contracts/Stake-2.0.sol\":6321:6353  (block.timestamp - since) * 1e24 */\n      tag_223\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_223:\n        /* \"contracts/Stake-2.0.sol\":6320:6365  ((block.timestamp - since) * 1e24) / 365 days */\n      tag_224\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_224:\n        /* \"contracts/Stake-2.0.sol\":6313:6365  return ((block.timestamp - since) * 1e24) / 365 days */\n      swap1\n      pop\n        /* \"contracts/Stake-2.0.sol\":6135:6373  function _calculateStakingDuration(uint256 since)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3649  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3680:3684  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3660:3665  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3679  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_227\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3721  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3755:3756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3745  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3752  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3756  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n      iszero\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3830:3840  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3819:3849  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_229\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3277:3913  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_227:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_235\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_236\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_236:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_238:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_241\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_242\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_243:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_246\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_250\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_249)\n    tag_250:\n      0x60\n      swap2\n      pop\n    tag_249:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_251\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_252\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_252:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_254)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_254:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_89:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      tag_261\n      tag_262\n      jump\t// in\n    tag_261:\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_262:\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_263:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:198   */\n    tag_264:\n        /* \"#utility.yul\":167:191   */\n      tag_307\n        /* \"#utility.yul\":185:190   */\n      dup2\n        /* \"#utility.yul\":167:191   */\n      tag_263\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":162:165   */\n      dup3\n        /* \"#utility.yul\":155:192   */\n      mstore\n        /* \"#utility.yul\":90:198   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":252:1656   */\n    tag_265:\n        /* \"#utility.yul\":383:387   */\n      0xe0\n        /* \"#utility.yul\":378:381   */\n      dup3\n        /* \"#utility.yul\":374:388   */\n      add\n        /* \"#utility.yul\":472:476   */\n      0x00\n        /* \"#utility.yul\":465:470   */\n      dup3\n        /* \"#utility.yul\":461:477   */\n      add\n        /* \"#utility.yul\":455:478   */\n      mload\n        /* \"#utility.yul\":491:554   */\n      tag_309\n        /* \"#utility.yul\":548:552   */\n      0x00\n        /* \"#utility.yul\":543:546   */\n      dup6\n        /* \"#utility.yul\":539:553   */\n      add\n        /* \"#utility.yul\":525:537   */\n      dup3\n        /* \"#utility.yul\":491:554   */\n      tag_264\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":398:564   */\n      pop\n        /* \"#utility.yul\":647:651   */\n      0x20\n        /* \"#utility.yul\":640:645   */\n      dup3\n        /* \"#utility.yul\":636:652   */\n      add\n        /* \"#utility.yul\":630:653   */\n      mload\n        /* \"#utility.yul\":666:729   */\n      tag_310\n        /* \"#utility.yul\":723:727   */\n      0x20\n        /* \"#utility.yul\":718:721   */\n      dup6\n        /* \"#utility.yul\":714:728   */\n      add\n        /* \"#utility.yul\":700:712   */\n      dup3\n        /* \"#utility.yul\":666:729   */\n      tag_264\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":574:739   */\n      pop\n        /* \"#utility.yul\":826:830   */\n      0x40\n        /* \"#utility.yul\":819:824   */\n      dup3\n        /* \"#utility.yul\":815:831   */\n      add\n        /* \"#utility.yul\":809:832   */\n      mload\n        /* \"#utility.yul\":845:908   */\n      tag_311\n        /* \"#utility.yul\":902:906   */\n      0x40\n        /* \"#utility.yul\":897:900   */\n      dup6\n        /* \"#utility.yul\":893:907   */\n      add\n        /* \"#utility.yul\":879:891   */\n      dup3\n        /* \"#utility.yul\":845:908   */\n      tag_264\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":749:918   */\n      pop\n        /* \"#utility.yul\":1007:1011   */\n      0x60\n        /* \"#utility.yul\":1000:1005   */\n      dup3\n        /* \"#utility.yul\":996:1012   */\n      add\n        /* \"#utility.yul\":990:1013   */\n      mload\n        /* \"#utility.yul\":1026:1089   */\n      tag_312\n        /* \"#utility.yul\":1083:1087   */\n      0x60\n        /* \"#utility.yul\":1078:1081   */\n      dup6\n        /* \"#utility.yul\":1074:1088   */\n      add\n        /* \"#utility.yul\":1060:1072   */\n      dup3\n        /* \"#utility.yul\":1026:1089   */\n      tag_264\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":928:1099   */\n      pop\n        /* \"#utility.yul\":1186:1190   */\n      0x80\n        /* \"#utility.yul\":1179:1184   */\n      dup3\n        /* \"#utility.yul\":1175:1191   */\n      add\n        /* \"#utility.yul\":1169:1192   */\n      mload\n        /* \"#utility.yul\":1205:1268   */\n      tag_313\n        /* \"#utility.yul\":1262:1266   */\n      0x80\n        /* \"#utility.yul\":1257:1260   */\n      dup6\n        /* \"#utility.yul\":1253:1267   */\n      add\n        /* \"#utility.yul\":1239:1251   */\n      dup3\n        /* \"#utility.yul\":1205:1268   */\n      tag_264\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":1109:1278   */\n      pop\n        /* \"#utility.yul\":1372:1376   */\n      0xa0\n        /* \"#utility.yul\":1365:1370   */\n      dup3\n        /* \"#utility.yul\":1361:1377   */\n      add\n        /* \"#utility.yul\":1355:1378   */\n      mload\n        /* \"#utility.yul\":1391:1454   */\n      tag_314\n        /* \"#utility.yul\":1448:1452   */\n      0xa0\n        /* \"#utility.yul\":1443:1446   */\n      dup6\n        /* \"#utility.yul\":1439:1453   */\n      add\n        /* \"#utility.yul\":1425:1437   */\n      dup3\n        /* \"#utility.yul\":1391:1454   */\n      tag_264\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1288:1464   */\n      pop\n        /* \"#utility.yul\":1557:1561   */\n      0xc0\n        /* \"#utility.yul\":1550:1555   */\n      dup3\n        /* \"#utility.yul\":1546:1562   */\n      add\n        /* \"#utility.yul\":1540:1563   */\n      mload\n        /* \"#utility.yul\":1576:1639   */\n      tag_315\n        /* \"#utility.yul\":1633:1637   */\n      0xc0\n        /* \"#utility.yul\":1628:1631   */\n      dup6\n        /* \"#utility.yul\":1624:1638   */\n      add\n        /* \"#utility.yul\":1610:1622   */\n      dup3\n        /* \"#utility.yul\":1576:1639   */\n      tag_264\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1474:1649   */\n      pop\n        /* \"#utility.yul\":352:1656   */\n      pop\n        /* \"#utility.yul\":252:1656   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1728:2479   */\n    tag_266:\n        /* \"#utility.yul\":1887:1893   */\n      0x0120\n        /* \"#utility.yul\":1882:1885   */\n      dup3\n        /* \"#utility.yul\":1878:1894   */\n      add\n        /* \"#utility.yul\":1984:1988   */\n      0x00\n        /* \"#utility.yul\":1977:1982   */\n      dup3\n        /* \"#utility.yul\":1973:1989   */\n      add\n        /* \"#utility.yul\":1967:1990   */\n      mload\n        /* \"#utility.yul\":2003:2066   */\n      tag_317\n        /* \"#utility.yul\":2060:2064   */\n      0x00\n        /* \"#utility.yul\":2055:2058   */\n      dup6\n        /* \"#utility.yul\":2051:2065   */\n      add\n        /* \"#utility.yul\":2037:2049   */\n      dup3\n        /* \"#utility.yul\":2003:2066   */\n      tag_264\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1904:2076   */\n      pop\n        /* \"#utility.yul\":2161:2165   */\n      0x20\n        /* \"#utility.yul\":2154:2159   */\n      dup3\n        /* \"#utility.yul\":2150:2166   */\n      add\n        /* \"#utility.yul\":2144:2167   */\n      mload\n        /* \"#utility.yul\":2180:2243   */\n      tag_318\n        /* \"#utility.yul\":2237:2241   */\n      0x20\n        /* \"#utility.yul\":2232:2235   */\n      dup6\n        /* \"#utility.yul\":2228:2242   */\n      add\n        /* \"#utility.yul\":2214:2226   */\n      dup3\n        /* \"#utility.yul\":2180:2243   */\n      tag_264\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":2086:2253   */\n      pop\n        /* \"#utility.yul\":2336:2340   */\n      0x40\n        /* \"#utility.yul\":2329:2334   */\n      dup3\n        /* \"#utility.yul\":2325:2341   */\n      add\n        /* \"#utility.yul\":2319:2342   */\n      mload\n        /* \"#utility.yul\":2355:2462   */\n      tag_319\n        /* \"#utility.yul\":2456:2460   */\n      0x40\n        /* \"#utility.yul\":2451:2454   */\n      dup6\n        /* \"#utility.yul\":2447:2461   */\n      add\n        /* \"#utility.yul\":2433:2445   */\n      dup3\n        /* \"#utility.yul\":2355:2462   */\n      tag_265\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":2263:2472   */\n      pop\n        /* \"#utility.yul\":1856:2479   */\n      pop\n        /* \"#utility.yul\":1728:2479   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2485:2832   */\n    tag_28:\n        /* \"#utility.yul\":2640:2644   */\n      0x00\n        /* \"#utility.yul\":2678:2681   */\n      0x0120\n        /* \"#utility.yul\":2667:2676   */\n      dup3\n        /* \"#utility.yul\":2663:2682   */\n      add\n        /* \"#utility.yul\":2655:2682   */\n      swap1\n      pop\n        /* \"#utility.yul\":2692:2825   */\n      tag_321\n        /* \"#utility.yul\":2822:2823   */\n      0x00\n        /* \"#utility.yul\":2811:2820   */\n      dup4\n        /* \"#utility.yul\":2807:2824   */\n      add\n        /* \"#utility.yul\":2798:2804   */\n      dup5\n        /* \"#utility.yul\":2692:2825   */\n      tag_266\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2485:2832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2838:2956   */\n    tag_267:\n        /* \"#utility.yul\":2925:2949   */\n      tag_323\n        /* \"#utility.yul\":2943:2948   */\n      dup2\n        /* \"#utility.yul\":2925:2949   */\n      tag_263\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2920:2923   */\n      dup3\n        /* \"#utility.yul\":2913:2950   */\n      mstore\n        /* \"#utility.yul\":2838:2956   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2962:3184   */\n    tag_34:\n        /* \"#utility.yul\":3055:3059   */\n      0x00\n        /* \"#utility.yul\":3093:3095   */\n      0x20\n        /* \"#utility.yul\":3082:3091   */\n      dup3\n        /* \"#utility.yul\":3078:3096   */\n      add\n        /* \"#utility.yul\":3070:3096   */\n      swap1\n      pop\n        /* \"#utility.yul\":3106:3177   */\n      tag_325\n        /* \"#utility.yul\":3174:3175   */\n      0x00\n        /* \"#utility.yul\":3163:3172   */\n      dup4\n        /* \"#utility.yul\":3159:3176   */\n      add\n        /* \"#utility.yul\":3150:3156   */\n      dup5\n        /* \"#utility.yul\":3106:3177   */\n      tag_267\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2962:3184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3271:3388   */\n    tag_269:\n        /* \"#utility.yul\":3380:3381   */\n      0x00\n        /* \"#utility.yul\":3377:3378   */\n      dup1\n        /* \"#utility.yul\":3370:3382   */\n      revert\n        /* \"#utility.yul\":3517:3639   */\n    tag_271:\n        /* \"#utility.yul\":3590:3614   */\n      tag_330\n        /* \"#utility.yul\":3608:3613   */\n      dup2\n        /* \"#utility.yul\":3590:3614   */\n      tag_263\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":3583:3588   */\n      dup2\n        /* \"#utility.yul\":3580:3615   */\n      eq\n        /* \"#utility.yul\":3570:3633   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":3629:3630   */\n      0x00\n        /* \"#utility.yul\":3626:3627   */\n      dup1\n        /* \"#utility.yul\":3619:3631   */\n      revert\n        /* \"#utility.yul\":3570:3633   */\n    tag_331:\n        /* \"#utility.yul\":3517:3639   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3645:3784   */\n    tag_272:\n        /* \"#utility.yul\":3691:3696   */\n      0x00\n        /* \"#utility.yul\":3729:3735   */\n      dup2\n        /* \"#utility.yul\":3716:3736   */\n      calldataload\n        /* \"#utility.yul\":3707:3736   */\n      swap1\n      pop\n        /* \"#utility.yul\":3745:3778   */\n      tag_333\n        /* \"#utility.yul\":3772:3777   */\n      dup2\n        /* \"#utility.yul\":3745:3778   */\n      tag_271\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":3645:3784   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3790:4264   */\n    tag_39:\n        /* \"#utility.yul\":3858:3864   */\n      0x00\n        /* \"#utility.yul\":3866:3872   */\n      dup1\n        /* \"#utility.yul\":3915:3917   */\n      0x40\n        /* \"#utility.yul\":3903:3912   */\n      dup4\n        /* \"#utility.yul\":3894:3901   */\n      dup6\n        /* \"#utility.yul\":3890:3913   */\n      sub\n        /* \"#utility.yul\":3886:3918   */\n      slt\n        /* \"#utility.yul\":3883:4002   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":3921:4000   */\n      tag_336\n      tag_269\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3883:4002   */\n    tag_335:\n        /* \"#utility.yul\":4041:4042   */\n      0x00\n        /* \"#utility.yul\":4066:4119   */\n      tag_337\n        /* \"#utility.yul\":4111:4118   */\n      dup6\n        /* \"#utility.yul\":4102:4108   */\n      dup3\n        /* \"#utility.yul\":4091:4100   */\n      dup7\n        /* \"#utility.yul\":4087:4109   */\n      add\n        /* \"#utility.yul\":4066:4119   */\n      tag_272\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4056:4119   */\n      swap3\n      pop\n        /* \"#utility.yul\":4012:4129   */\n      pop\n        /* \"#utility.yul\":4168:4170   */\n      0x20\n        /* \"#utility.yul\":4194:4247   */\n      tag_338\n        /* \"#utility.yul\":4239:4246   */\n      dup6\n        /* \"#utility.yul\":4230:4236   */\n      dup3\n        /* \"#utility.yul\":4219:4228   */\n      dup7\n        /* \"#utility.yul\":4215:4237   */\n      add\n        /* \"#utility.yul\":4194:4247   */\n      tag_272\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4184:4247   */\n      swap2\n      pop\n        /* \"#utility.yul\":4139:4257   */\n      pop\n        /* \"#utility.yul\":3790:4264   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4270:4599   */\n    tag_46:\n        /* \"#utility.yul\":4329:4335   */\n      0x00\n        /* \"#utility.yul\":4378:4380   */\n      0x20\n        /* \"#utility.yul\":4366:4375   */\n      dup3\n        /* \"#utility.yul\":4357:4364   */\n      dup5\n        /* \"#utility.yul\":4353:4376   */\n      sub\n        /* \"#utility.yul\":4349:4381   */\n      slt\n        /* \"#utility.yul\":4346:4465   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":4384:4463   */\n      tag_341\n      tag_269\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":4346:4465   */\n    tag_340:\n        /* \"#utility.yul\":4504:4505   */\n      0x00\n        /* \"#utility.yul\":4529:4582   */\n      tag_342\n        /* \"#utility.yul\":4574:4581   */\n      dup5\n        /* \"#utility.yul\":4565:4571   */\n      dup3\n        /* \"#utility.yul\":4554:4563   */\n      dup6\n        /* \"#utility.yul\":4550:4572   */\n      add\n        /* \"#utility.yul\":4529:4582   */\n      tag_272\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":4519:4582   */\n      swap2\n      pop\n        /* \"#utility.yul\":4475:4592   */\n      pop\n        /* \"#utility.yul\":4270:4599   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4605:4731   */\n    tag_273:\n        /* \"#utility.yul\":4642:4649   */\n      0x00\n        /* \"#utility.yul\":4682:4724   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4675:4680   */\n      dup3\n        /* \"#utility.yul\":4671:4725   */\n      and\n        /* \"#utility.yul\":4660:4725   */\n      swap1\n      pop\n        /* \"#utility.yul\":4605:4731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4737:4833   */\n    tag_274:\n        /* \"#utility.yul\":4774:4781   */\n      0x00\n        /* \"#utility.yul\":4803:4827   */\n      tag_345\n        /* \"#utility.yul\":4821:4826   */\n      dup3\n        /* \"#utility.yul\":4803:4827   */\n      tag_273\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4792:4827   */\n      swap1\n      pop\n        /* \"#utility.yul\":4737:4833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4839:4957   */\n    tag_275:\n        /* \"#utility.yul\":4926:4950   */\n      tag_347\n        /* \"#utility.yul\":4944:4949   */\n      dup2\n        /* \"#utility.yul\":4926:4950   */\n      tag_274\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":4921:4924   */\n      dup3\n        /* \"#utility.yul\":4914:4951   */\n      mstore\n        /* \"#utility.yul\":4839:4957   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4963:5185   */\n    tag_51:\n        /* \"#utility.yul\":5056:5060   */\n      0x00\n        /* \"#utility.yul\":5094:5096   */\n      0x20\n        /* \"#utility.yul\":5083:5092   */\n      dup3\n        /* \"#utility.yul\":5079:5097   */\n      add\n        /* \"#utility.yul\":5071:5097   */\n      swap1\n      pop\n        /* \"#utility.yul\":5107:5178   */\n      tag_349\n        /* \"#utility.yul\":5175:5176   */\n      0x00\n        /* \"#utility.yul\":5164:5173   */\n      dup4\n        /* \"#utility.yul\":5160:5177   */\n      add\n        /* \"#utility.yul\":5151:5157   */\n      dup5\n        /* \"#utility.yul\":5107:5178   */\n      tag_275\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4963:5185   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5191:5313   */\n    tag_276:\n        /* \"#utility.yul\":5264:5288   */\n      tag_351\n        /* \"#utility.yul\":5282:5287   */\n      dup2\n        /* \"#utility.yul\":5264:5288   */\n      tag_274\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":5257:5262   */\n      dup2\n        /* \"#utility.yul\":5254:5289   */\n      eq\n        /* \"#utility.yul\":5244:5307   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":5303:5304   */\n      0x00\n        /* \"#utility.yul\":5300:5301   */\n      dup1\n        /* \"#utility.yul\":5293:5305   */\n      revert\n        /* \"#utility.yul\":5244:5307   */\n    tag_352:\n        /* \"#utility.yul\":5191:5313   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5319:5458   */\n    tag_277:\n        /* \"#utility.yul\":5365:5370   */\n      0x00\n        /* \"#utility.yul\":5403:5409   */\n      dup2\n        /* \"#utility.yul\":5390:5410   */\n      calldataload\n        /* \"#utility.yul\":5381:5410   */\n      swap1\n      pop\n        /* \"#utility.yul\":5419:5452   */\n      tag_354\n        /* \"#utility.yul\":5446:5451   */\n      dup2\n        /* \"#utility.yul\":5419:5452   */\n      tag_276\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":5319:5458   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5464:5793   */\n    tag_61:\n        /* \"#utility.yul\":5523:5529   */\n      0x00\n        /* \"#utility.yul\":5572:5574   */\n      0x20\n        /* \"#utility.yul\":5560:5569   */\n      dup3\n        /* \"#utility.yul\":5551:5558   */\n      dup5\n        /* \"#utility.yul\":5547:5570   */\n      sub\n        /* \"#utility.yul\":5543:5575   */\n      slt\n        /* \"#utility.yul\":5540:5659   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":5578:5657   */\n      tag_357\n      tag_269\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5540:5659   */\n    tag_356:\n        /* \"#utility.yul\":5698:5699   */\n      0x00\n        /* \"#utility.yul\":5723:5776   */\n      tag_358\n        /* \"#utility.yul\":5768:5775   */\n      dup5\n        /* \"#utility.yul\":5759:5765   */\n      dup3\n        /* \"#utility.yul\":5748:5757   */\n      dup6\n        /* \"#utility.yul\":5744:5766   */\n      add\n        /* \"#utility.yul\":5723:5776   */\n      tag_277\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":5713:5776   */\n      swap2\n      pop\n        /* \"#utility.yul\":5669:5786   */\n      pop\n        /* \"#utility.yul\":5464:5793   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5799:5889   */\n    tag_278:\n        /* \"#utility.yul\":5833:5840   */\n      0x00\n        /* \"#utility.yul\":5876:5881   */\n      dup2\n        /* \"#utility.yul\":5869:5882   */\n      iszero\n        /* \"#utility.yul\":5862:5883   */\n      iszero\n        /* \"#utility.yul\":5851:5883   */\n      swap1\n      pop\n        /* \"#utility.yul\":5799:5889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5895:6004   */\n    tag_279:\n        /* \"#utility.yul\":5976:5997   */\n      tag_361\n        /* \"#utility.yul\":5991:5996   */\n      dup2\n        /* \"#utility.yul\":5976:5997   */\n      tag_278\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":5971:5974   */\n      dup3\n        /* \"#utility.yul\":5964:5998   */\n      mstore\n        /* \"#utility.yul\":5895:6004   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6010:6220   */\n    tag_64:\n        /* \"#utility.yul\":6097:6101   */\n      0x00\n        /* \"#utility.yul\":6135:6137   */\n      0x20\n        /* \"#utility.yul\":6124:6133   */\n      dup3\n        /* \"#utility.yul\":6120:6138   */\n      add\n        /* \"#utility.yul\":6112:6138   */\n      swap1\n      pop\n        /* \"#utility.yul\":6148:6213   */\n      tag_363\n        /* \"#utility.yul\":6210:6211   */\n      0x00\n        /* \"#utility.yul\":6199:6208   */\n      dup4\n        /* \"#utility.yul\":6195:6212   */\n      add\n        /* \"#utility.yul\":6186:6192   */\n      dup5\n        /* \"#utility.yul\":6148:6213   */\n      tag_279\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":6010:6220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6226:6406   */\n    tag_280:\n        /* \"#utility.yul\":6274:6351   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6271:6272   */\n      0x00\n        /* \"#utility.yul\":6264:6352   */\n      mstore\n        /* \"#utility.yul\":6371:6375   */\n      0x11\n        /* \"#utility.yul\":6368:6369   */\n      0x04\n        /* \"#utility.yul\":6361:6376   */\n      mstore\n        /* \"#utility.yul\":6395:6399   */\n      0x24\n        /* \"#utility.yul\":6392:6393   */\n      0x00\n        /* \"#utility.yul\":6385:6400   */\n      revert\n        /* \"#utility.yul\":6412:6760   */\n    tag_96:\n        /* \"#utility.yul\":6452:6459   */\n      0x00\n        /* \"#utility.yul\":6475:6495   */\n      tag_366\n        /* \"#utility.yul\":6493:6494   */\n      dup3\n        /* \"#utility.yul\":6475:6495   */\n      tag_263\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6470:6495   */\n      swap2\n      pop\n        /* \"#utility.yul\":6509:6529   */\n      tag_367\n        /* \"#utility.yul\":6527:6528   */\n      dup4\n        /* \"#utility.yul\":6509:6529   */\n      tag_263\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":6504:6529   */\n      swap3\n      pop\n        /* \"#utility.yul\":6697:6698   */\n      dup2\n        /* \"#utility.yul\":6629:6695   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6625:6699   */\n      div\n        /* \"#utility.yul\":6622:6623   */\n      dup4\n        /* \"#utility.yul\":6619:6700   */\n      gt\n        /* \"#utility.yul\":6614:6615   */\n      dup3\n        /* \"#utility.yul\":6607:6616   */\n      iszero\n        /* \"#utility.yul\":6600:6617   */\n      iszero\n        /* \"#utility.yul\":6596:6701   */\n      and\n        /* \"#utility.yul\":6593:6724   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":6704:6722   */\n      tag_369\n      tag_280\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6593:6724   */\n    tag_368:\n        /* \"#utility.yul\":6752:6753   */\n      dup3\n        /* \"#utility.yul\":6749:6750   */\n      dup3\n        /* \"#utility.yul\":6745:6754   */\n      mul\n        /* \"#utility.yul\":6734:6754   */\n      swap1\n      pop\n        /* \"#utility.yul\":6412:6760   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6766:6946   */\n    tag_281:\n        /* \"#utility.yul\":6814:6891   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6811:6812   */\n      0x00\n        /* \"#utility.yul\":6804:6892   */\n      mstore\n        /* \"#utility.yul\":6911:6915   */\n      0x12\n        /* \"#utility.yul\":6908:6909   */\n      0x04\n        /* \"#utility.yul\":6901:6916   */\n      mstore\n        /* \"#utility.yul\":6935:6939   */\n      0x24\n        /* \"#utility.yul\":6932:6933   */\n      0x00\n        /* \"#utility.yul\":6925:6940   */\n      revert\n        /* \"#utility.yul\":6952:7137   */\n    tag_98:\n        /* \"#utility.yul\":6992:6993   */\n      0x00\n        /* \"#utility.yul\":7009:7029   */\n      tag_372\n        /* \"#utility.yul\":7027:7028   */\n      dup3\n        /* \"#utility.yul\":7009:7029   */\n      tag_263\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":7004:7029   */\n      swap2\n      pop\n        /* \"#utility.yul\":7043:7063   */\n      tag_373\n        /* \"#utility.yul\":7061:7062   */\n      dup4\n        /* \"#utility.yul\":7043:7063   */\n      tag_263\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":7038:7063   */\n      swap3\n      pop\n        /* \"#utility.yul\":7082:7083   */\n      dup3\n        /* \"#utility.yul\":7072:7107   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":7087:7105   */\n      tag_375\n      tag_281\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":7072:7107   */\n    tag_374:\n        /* \"#utility.yul\":7129:7130   */\n      dup3\n        /* \"#utility.yul\":7126:7127   */\n      dup3\n        /* \"#utility.yul\":7122:7131   */\n      div\n        /* \"#utility.yul\":7117:7131   */\n      swap1\n      pop\n        /* \"#utility.yul\":6952:7137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7143:7448   */\n    tag_102:\n        /* \"#utility.yul\":7183:7186   */\n      0x00\n        /* \"#utility.yul\":7202:7222   */\n      tag_377\n        /* \"#utility.yul\":7220:7221   */\n      dup3\n        /* \"#utility.yul\":7202:7222   */\n      tag_263\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7197:7222   */\n      swap2\n      pop\n        /* \"#utility.yul\":7236:7256   */\n      tag_378\n        /* \"#utility.yul\":7254:7255   */\n      dup4\n        /* \"#utility.yul\":7236:7256   */\n      tag_263\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":7231:7256   */\n      swap3\n      pop\n        /* \"#utility.yul\":7390:7391   */\n      dup3\n        /* \"#utility.yul\":7322:7388   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7318:7392   */\n      sub\n        /* \"#utility.yul\":7315:7316   */\n      dup3\n        /* \"#utility.yul\":7312:7393   */\n      gt\n        /* \"#utility.yul\":7309:7416   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":7396:7414   */\n      tag_380\n      tag_280\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7309:7416   */\n    tag_379:\n        /* \"#utility.yul\":7440:7441   */\n      dup3\n        /* \"#utility.yul\":7437:7438   */\n      dup3\n        /* \"#utility.yul\":7433:7442   */\n      add\n        /* \"#utility.yul\":7426:7442   */\n      swap1\n      pop\n        /* \"#utility.yul\":7143:7448   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7454:7623   */\n    tag_282:\n        /* \"#utility.yul\":7538:7549   */\n      0x00\n        /* \"#utility.yul\":7572:7578   */\n      dup3\n        /* \"#utility.yul\":7567:7570   */\n      dup3\n        /* \"#utility.yul\":7560:7579   */\n      mstore\n        /* \"#utility.yul\":7612:7616   */\n      0x20\n        /* \"#utility.yul\":7607:7610   */\n      dup3\n        /* \"#utility.yul\":7603:7617   */\n      add\n        /* \"#utility.yul\":7588:7617   */\n      swap1\n      pop\n        /* \"#utility.yul\":7454:7623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7629:7811   */\n    tag_283:\n        /* \"#utility.yul\":7769:7803   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7765:7766   */\n      0x00\n        /* \"#utility.yul\":7757:7763   */\n      dup3\n        /* \"#utility.yul\":7753:7767   */\n      add\n        /* \"#utility.yul\":7746:7804   */\n      mstore\n        /* \"#utility.yul\":7629:7811   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7817:8183   */\n    tag_284:\n        /* \"#utility.yul\":7959:7962   */\n      0x00\n        /* \"#utility.yul\":7980:8047   */\n      tag_384\n        /* \"#utility.yul\":8044:8046   */\n      0x20\n        /* \"#utility.yul\":8039:8042   */\n      dup4\n        /* \"#utility.yul\":7980:8047   */\n      tag_282\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7973:8047   */\n      swap2\n      pop\n        /* \"#utility.yul\":8056:8149   */\n      tag_385\n        /* \"#utility.yul\":8145:8148   */\n      dup3\n        /* \"#utility.yul\":8056:8149   */\n      tag_283\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":8174:8176   */\n      0x20\n        /* \"#utility.yul\":8169:8172   */\n      dup3\n        /* \"#utility.yul\":8165:8177   */\n      add\n        /* \"#utility.yul\":8158:8177   */\n      swap1\n      pop\n        /* \"#utility.yul\":7817:8183   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8189:8608   */\n    tag_121:\n        /* \"#utility.yul\":8355:8359   */\n      0x00\n        /* \"#utility.yul\":8393:8395   */\n      0x20\n        /* \"#utility.yul\":8382:8391   */\n      dup3\n        /* \"#utility.yul\":8378:8396   */\n      add\n        /* \"#utility.yul\":8370:8396   */\n      swap1\n      pop\n        /* \"#utility.yul\":8442:8451   */\n      dup2\n        /* \"#utility.yul\":8436:8440   */\n      dup2\n        /* \"#utility.yul\":8432:8452   */\n      sub\n        /* \"#utility.yul\":8428:8429   */\n      0x00\n        /* \"#utility.yul\":8417:8426   */\n      dup4\n        /* \"#utility.yul\":8413:8430   */\n      add\n        /* \"#utility.yul\":8406:8453   */\n      mstore\n        /* \"#utility.yul\":8470:8601   */\n      tag_387\n        /* \"#utility.yul\":8596:8600   */\n      dup2\n        /* \"#utility.yul\":8470:8601   */\n      tag_284\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":8462:8601   */\n      swap1\n      pop\n        /* \"#utility.yul\":8189:8608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8614:8795   */\n    tag_285:\n        /* \"#utility.yul\":8754:8787   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":8750:8751   */\n      0x00\n        /* \"#utility.yul\":8742:8748   */\n      dup3\n        /* \"#utility.yul\":8738:8752   */\n      add\n        /* \"#utility.yul\":8731:8788   */\n      mstore\n        /* \"#utility.yul\":8614:8795   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8801:9167   */\n    tag_286:\n        /* \"#utility.yul\":8943:8946   */\n      0x00\n        /* \"#utility.yul\":8964:9031   */\n      tag_390\n        /* \"#utility.yul\":9028:9030   */\n      0x1f\n        /* \"#utility.yul\":9023:9026   */\n      dup4\n        /* \"#utility.yul\":8964:9031   */\n      tag_282\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":8957:9031   */\n      swap2\n      pop\n        /* \"#utility.yul\":9040:9133   */\n      tag_391\n        /* \"#utility.yul\":9129:9132   */\n      dup3\n        /* \"#utility.yul\":9040:9133   */\n      tag_285\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":9158:9160   */\n      0x20\n        /* \"#utility.yul\":9153:9156   */\n      dup3\n        /* \"#utility.yul\":9149:9161   */\n      add\n        /* \"#utility.yul\":9142:9161   */\n      swap1\n      pop\n        /* \"#utility.yul\":8801:9167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9173:9592   */\n    tag_128:\n        /* \"#utility.yul\":9339:9343   */\n      0x00\n        /* \"#utility.yul\":9377:9379   */\n      0x20\n        /* \"#utility.yul\":9366:9375   */\n      dup3\n        /* \"#utility.yul\":9362:9380   */\n      add\n        /* \"#utility.yul\":9354:9380   */\n      swap1\n      pop\n        /* \"#utility.yul\":9426:9435   */\n      dup2\n        /* \"#utility.yul\":9420:9424   */\n      dup2\n        /* \"#utility.yul\":9416:9436   */\n      sub\n        /* \"#utility.yul\":9412:9413   */\n      0x00\n        /* \"#utility.yul\":9401:9410   */\n      dup4\n        /* \"#utility.yul\":9397:9414   */\n      add\n        /* \"#utility.yul\":9390:9437   */\n      mstore\n        /* \"#utility.yul\":9454:9585   */\n      tag_393\n        /* \"#utility.yul\":9580:9584   */\n      dup2\n        /* \"#utility.yul\":9454:9585   */\n      tag_286\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":9446:9585   */\n      swap1\n      pop\n        /* \"#utility.yul\":9173:9592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9598:10040   */\n    tag_138:\n        /* \"#utility.yul\":9747:9751   */\n      0x00\n        /* \"#utility.yul\":9785:9787   */\n      0x60\n        /* \"#utility.yul\":9774:9783   */\n      dup3\n        /* \"#utility.yul\":9770:9788   */\n      add\n        /* \"#utility.yul\":9762:9788   */\n      swap1\n      pop\n        /* \"#utility.yul\":9798:9869   */\n      tag_395\n        /* \"#utility.yul\":9866:9867   */\n      0x00\n        /* \"#utility.yul\":9855:9864   */\n      dup4\n        /* \"#utility.yul\":9851:9868   */\n      add\n        /* \"#utility.yul\":9842:9848   */\n      dup7\n        /* \"#utility.yul\":9798:9869   */\n      tag_267\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":9879:9951   */\n      tag_396\n        /* \"#utility.yul\":9947:9949   */\n      0x20\n        /* \"#utility.yul\":9936:9945   */\n      dup4\n        /* \"#utility.yul\":9932:9950   */\n      add\n        /* \"#utility.yul\":9923:9929   */\n      dup6\n        /* \"#utility.yul\":9879:9951   */\n      tag_267\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":9961:10033   */\n      tag_397\n        /* \"#utility.yul\":10029:10031   */\n      0x40\n        /* \"#utility.yul\":10018:10027   */\n      dup4\n        /* \"#utility.yul\":10014:10032   */\n      add\n        /* \"#utility.yul\":10005:10011   */\n      dup5\n        /* \"#utility.yul\":9961:10033   */\n      tag_267\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9598:10040   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10046:10237   */\n    tag_150:\n        /* \"#utility.yul\":10086:10090   */\n      0x00\n        /* \"#utility.yul\":10106:10126   */\n      tag_399\n        /* \"#utility.yul\":10124:10125   */\n      dup3\n        /* \"#utility.yul\":10106:10126   */\n      tag_263\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":10101:10126   */\n      swap2\n      pop\n        /* \"#utility.yul\":10140:10160   */\n      tag_400\n        /* \"#utility.yul\":10158:10159   */\n      dup4\n        /* \"#utility.yul\":10140:10160   */\n      tag_263\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":10135:10160   */\n      swap3\n      pop\n        /* \"#utility.yul\":10179:10180   */\n      dup3\n        /* \"#utility.yul\":10176:10177   */\n      dup3\n        /* \"#utility.yul\":10173:10181   */\n      lt\n        /* \"#utility.yul\":10170:10204   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":10184:10202   */\n      tag_402\n      tag_280\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":10170:10204   */\n    tag_401:\n        /* \"#utility.yul\":10229:10230   */\n      dup3\n        /* \"#utility.yul\":10226:10227   */\n      dup3\n        /* \"#utility.yul\":10222:10231   */\n      sub\n        /* \"#utility.yul\":10214:10231   */\n      swap1\n      pop\n        /* \"#utility.yul\":10046:10237   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10243:10468   */\n    tag_287:\n        /* \"#utility.yul\":10383:10417   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":10379:10380   */\n      0x00\n        /* \"#utility.yul\":10371:10377   */\n      dup3\n        /* \"#utility.yul\":10367:10381   */\n      add\n        /* \"#utility.yul\":10360:10418   */\n      mstore\n        /* \"#utility.yul\":10452:10460   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10447:10449   */\n      0x20\n        /* \"#utility.yul\":10439:10445   */\n      dup3\n        /* \"#utility.yul\":10435:10450   */\n      add\n        /* \"#utility.yul\":10428:10461   */\n      mstore\n        /* \"#utility.yul\":10243:10468   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10474:10840   */\n    tag_288:\n        /* \"#utility.yul\":10616:10619   */\n      0x00\n        /* \"#utility.yul\":10637:10704   */\n      tag_405\n        /* \"#utility.yul\":10701:10703   */\n      0x26\n        /* \"#utility.yul\":10696:10699   */\n      dup4\n        /* \"#utility.yul\":10637:10704   */\n      tag_282\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":10630:10704   */\n      swap2\n      pop\n        /* \"#utility.yul\":10713:10806   */\n      tag_406\n        /* \"#utility.yul\":10802:10805   */\n      dup3\n        /* \"#utility.yul\":10713:10806   */\n      tag_287\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":10831:10833   */\n      0x40\n        /* \"#utility.yul\":10826:10829   */\n      dup3\n        /* \"#utility.yul\":10822:10834   */\n      add\n        /* \"#utility.yul\":10815:10834   */\n      swap1\n      pop\n        /* \"#utility.yul\":10474:10840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10846:11265   */\n    tag_189:\n        /* \"#utility.yul\":11012:11016   */\n      0x00\n        /* \"#utility.yul\":11050:11052   */\n      0x20\n        /* \"#utility.yul\":11039:11048   */\n      dup3\n        /* \"#utility.yul\":11035:11053   */\n      add\n        /* \"#utility.yul\":11027:11053   */\n      swap1\n      pop\n        /* \"#utility.yul\":11099:11108   */\n      dup2\n        /* \"#utility.yul\":11093:11097   */\n      dup2\n        /* \"#utility.yul\":11089:11109   */\n      sub\n        /* \"#utility.yul\":11085:11086   */\n      0x00\n        /* \"#utility.yul\":11074:11083   */\n      dup4\n        /* \"#utility.yul\":11070:11087   */\n      add\n        /* \"#utility.yul\":11063:11110   */\n      mstore\n        /* \"#utility.yul\":11127:11258   */\n      tag_408\n        /* \"#utility.yul\":11253:11257   */\n      dup2\n        /* \"#utility.yul\":11127:11258   */\n      tag_288\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":11119:11258   */\n      swap1\n      pop\n        /* \"#utility.yul\":10846:11265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11271:11603   */\n    tag_205:\n        /* \"#utility.yul\":11392:11396   */\n      0x00\n        /* \"#utility.yul\":11430:11432   */\n      0x40\n        /* \"#utility.yul\":11419:11428   */\n      dup3\n        /* \"#utility.yul\":11415:11433   */\n      add\n        /* \"#utility.yul\":11407:11433   */\n      swap1\n      pop\n        /* \"#utility.yul\":11443:11514   */\n      tag_410\n        /* \"#utility.yul\":11511:11512   */\n      0x00\n        /* \"#utility.yul\":11500:11509   */\n      dup4\n        /* \"#utility.yul\":11496:11513   */\n      add\n        /* \"#utility.yul\":11487:11493   */\n      dup6\n        /* \"#utility.yul\":11443:11514   */\n      tag_275\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":11524:11596   */\n      tag_411\n        /* \"#utility.yul\":11592:11594   */\n      0x20\n        /* \"#utility.yul\":11581:11590   */\n      dup4\n        /* \"#utility.yul\":11577:11595   */\n      add\n        /* \"#utility.yul\":11568:11574   */\n      dup5\n        /* \"#utility.yul\":11524:11596   */\n      tag_267\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":11271:11603   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11609:12051   */\n    tag_212:\n        /* \"#utility.yul\":11758:11762   */\n      0x00\n        /* \"#utility.yul\":11796:11798   */\n      0x60\n        /* \"#utility.yul\":11785:11794   */\n      dup3\n        /* \"#utility.yul\":11781:11799   */\n      add\n        /* \"#utility.yul\":11773:11799   */\n      swap1\n      pop\n        /* \"#utility.yul\":11809:11880   */\n      tag_413\n        /* \"#utility.yul\":11877:11878   */\n      0x00\n        /* \"#utility.yul\":11866:11875   */\n      dup4\n        /* \"#utility.yul\":11862:11879   */\n      add\n        /* \"#utility.yul\":11853:11859   */\n      dup7\n        /* \"#utility.yul\":11809:11880   */\n      tag_275\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":11890:11962   */\n      tag_414\n        /* \"#utility.yul\":11958:11960   */\n      0x20\n        /* \"#utility.yul\":11947:11956   */\n      dup4\n        /* \"#utility.yul\":11943:11961   */\n      add\n        /* \"#utility.yul\":11934:11940   */\n      dup6\n        /* \"#utility.yul\":11890:11962   */\n      tag_275\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":11972:12044   */\n      tag_415\n        /* \"#utility.yul\":12040:12042   */\n      0x40\n        /* \"#utility.yul\":12029:12038   */\n      dup4\n        /* \"#utility.yul\":12025:12043   */\n      add\n        /* \"#utility.yul\":12016:12022   */\n      dup5\n        /* \"#utility.yul\":11972:12044   */\n      tag_267\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":11609:12051   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12057:12173   */\n    tag_289:\n        /* \"#utility.yul\":12127:12148   */\n      tag_417\n        /* \"#utility.yul\":12142:12147   */\n      dup2\n        /* \"#utility.yul\":12127:12148   */\n      tag_278\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":12120:12125   */\n      dup2\n        /* \"#utility.yul\":12117:12149   */\n      eq\n        /* \"#utility.yul\":12107:12167   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":12163:12164   */\n      0x00\n        /* \"#utility.yul\":12160:12161   */\n      dup1\n        /* \"#utility.yul\":12153:12165   */\n      revert\n        /* \"#utility.yul\":12107:12167   */\n    tag_418:\n        /* \"#utility.yul\":12057:12173   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12179:12316   */\n    tag_290:\n        /* \"#utility.yul\":12233:12238   */\n      0x00\n        /* \"#utility.yul\":12264:12270   */\n      dup2\n        /* \"#utility.yul\":12258:12271   */\n      mload\n        /* \"#utility.yul\":12249:12271   */\n      swap1\n      pop\n        /* \"#utility.yul\":12280:12310   */\n      tag_420\n        /* \"#utility.yul\":12304:12309   */\n      dup2\n        /* \"#utility.yul\":12280:12310   */\n      tag_289\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":12179:12316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12322:12667   */\n    tag_230:\n        /* \"#utility.yul\":12389:12395   */\n      0x00\n        /* \"#utility.yul\":12438:12440   */\n      0x20\n        /* \"#utility.yul\":12426:12435   */\n      dup3\n        /* \"#utility.yul\":12417:12424   */\n      dup5\n        /* \"#utility.yul\":12413:12436   */\n      sub\n        /* \"#utility.yul\":12409:12441   */\n      slt\n        /* \"#utility.yul\":12406:12525   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":12444:12523   */\n      tag_423\n      tag_269\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":12406:12525   */\n    tag_422:\n        /* \"#utility.yul\":12564:12565   */\n      0x00\n        /* \"#utility.yul\":12589:12650   */\n      tag_424\n        /* \"#utility.yul\":12642:12649   */\n      dup5\n        /* \"#utility.yul\":12633:12639   */\n      dup3\n        /* \"#utility.yul\":12622:12631   */\n      dup6\n        /* \"#utility.yul\":12618:12640   */\n      add\n        /* \"#utility.yul\":12589:12650   */\n      tag_290\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":12579:12650   */\n      swap2\n      pop\n        /* \"#utility.yul\":12535:12660   */\n      pop\n        /* \"#utility.yul\":12322:12667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12673:12902   */\n    tag_291:\n        /* \"#utility.yul\":12813:12847   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":12809:12810   */\n      0x00\n        /* \"#utility.yul\":12801:12807   */\n      dup3\n        /* \"#utility.yul\":12797:12811   */\n      add\n        /* \"#utility.yul\":12790:12848   */\n      mstore\n        /* \"#utility.yul\":12882:12894   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12877:12879   */\n      0x20\n        /* \"#utility.yul\":12869:12875   */\n      dup3\n        /* \"#utility.yul\":12865:12880   */\n      add\n        /* \"#utility.yul\":12858:12895   */\n      mstore\n        /* \"#utility.yul\":12673:12902   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12908:13274   */\n    tag_292:\n        /* \"#utility.yul\":13050:13053   */\n      0x00\n        /* \"#utility.yul\":13071:13138   */\n      tag_427\n        /* \"#utility.yul\":13135:13137   */\n      0x2a\n        /* \"#utility.yul\":13130:13133   */\n      dup4\n        /* \"#utility.yul\":13071:13138   */\n      tag_282\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":13064:13138   */\n      swap2\n      pop\n        /* \"#utility.yul\":13147:13240   */\n      tag_428\n        /* \"#utility.yul\":13236:13239   */\n      dup3\n        /* \"#utility.yul\":13147:13240   */\n      tag_291\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":13265:13267   */\n      0x40\n        /* \"#utility.yul\":13260:13263   */\n      dup3\n        /* \"#utility.yul\":13256:13268   */\n      add\n        /* \"#utility.yul\":13249:13268   */\n      swap1\n      pop\n        /* \"#utility.yul\":12908:13274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13280:13699   */\n    tag_233:\n        /* \"#utility.yul\":13446:13450   */\n      0x00\n        /* \"#utility.yul\":13484:13486   */\n      0x20\n        /* \"#utility.yul\":13473:13482   */\n      dup3\n        /* \"#utility.yul\":13469:13487   */\n      add\n        /* \"#utility.yul\":13461:13487   */\n      swap1\n      pop\n        /* \"#utility.yul\":13533:13542   */\n      dup2\n        /* \"#utility.yul\":13527:13531   */\n      dup2\n        /* \"#utility.yul\":13523:13543   */\n      sub\n        /* \"#utility.yul\":13519:13520   */\n      0x00\n        /* \"#utility.yul\":13508:13517   */\n      dup4\n        /* \"#utility.yul\":13504:13521   */\n      add\n        /* \"#utility.yul\":13497:13544   */\n      mstore\n        /* \"#utility.yul\":13561:13692   */\n      tag_430\n        /* \"#utility.yul\":13687:13691   */\n      dup2\n        /* \"#utility.yul\":13561:13692   */\n      tag_292\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":13553:13692   */\n      swap1\n      pop\n        /* \"#utility.yul\":13280:13699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13705:13930   */\n    tag_293:\n        /* \"#utility.yul\":13845:13879   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":13841:13842   */\n      0x00\n        /* \"#utility.yul\":13833:13839   */\n      dup3\n        /* \"#utility.yul\":13829:13843   */\n      add\n        /* \"#utility.yul\":13822:13880   */\n      mstore\n        /* \"#utility.yul\":13914:13922   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13909:13911   */\n      0x20\n        /* \"#utility.yul\":13901:13907   */\n      dup3\n        /* \"#utility.yul\":13897:13912   */\n      add\n        /* \"#utility.yul\":13890:13923   */\n      mstore\n        /* \"#utility.yul\":13705:13930   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13936:14302   */\n    tag_294:\n        /* \"#utility.yul\":14078:14081   */\n      0x00\n        /* \"#utility.yul\":14099:14166   */\n      tag_433\n        /* \"#utility.yul\":14163:14165   */\n      0x26\n        /* \"#utility.yul\":14158:14161   */\n      dup4\n        /* \"#utility.yul\":14099:14166   */\n      tag_282\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":14092:14166   */\n      swap2\n      pop\n        /* \"#utility.yul\":14175:14268   */\n      tag_434\n        /* \"#utility.yul\":14264:14267   */\n      dup3\n        /* \"#utility.yul\":14175:14268   */\n      tag_293\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":14293:14295   */\n      0x40\n        /* \"#utility.yul\":14288:14291   */\n      dup3\n        /* \"#utility.yul\":14284:14296   */\n      add\n        /* \"#utility.yul\":14277:14296   */\n      swap1\n      pop\n        /* \"#utility.yul\":13936:14302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14308:14727   */\n    tag_240:\n        /* \"#utility.yul\":14474:14478   */\n      0x00\n        /* \"#utility.yul\":14512:14514   */\n      0x20\n        /* \"#utility.yul\":14501:14510   */\n      dup3\n        /* \"#utility.yul\":14497:14515   */\n      add\n        /* \"#utility.yul\":14489:14515   */\n      swap1\n      pop\n        /* \"#utility.yul\":14561:14570   */\n      dup2\n        /* \"#utility.yul\":14555:14559   */\n      dup2\n        /* \"#utility.yul\":14551:14571   */\n      sub\n        /* \"#utility.yul\":14547:14548   */\n      0x00\n        /* \"#utility.yul\":14536:14545   */\n      dup4\n        /* \"#utility.yul\":14532:14549   */\n      add\n        /* \"#utility.yul\":14525:14572   */\n      mstore\n        /* \"#utility.yul\":14589:14720   */\n      tag_436\n        /* \"#utility.yul\":14715:14719   */\n      dup2\n        /* \"#utility.yul\":14589:14720   */\n      tag_294\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":14581:14720   */\n      swap1\n      pop\n        /* \"#utility.yul\":14308:14727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14733:14912   */\n    tag_295:\n        /* \"#utility.yul\":14873:14904   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":14869:14870   */\n      0x00\n        /* \"#utility.yul\":14861:14867   */\n      dup3\n        /* \"#utility.yul\":14857:14871   */\n      add\n        /* \"#utility.yul\":14850:14905   */\n      mstore\n        /* \"#utility.yul\":14733:14912   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14918:15284   */\n    tag_296:\n        /* \"#utility.yul\":15060:15063   */\n      0x00\n        /* \"#utility.yul\":15081:15148   */\n      tag_439\n        /* \"#utility.yul\":15145:15147   */\n      0x1d\n        /* \"#utility.yul\":15140:15143   */\n      dup4\n        /* \"#utility.yul\":15081:15148   */\n      tag_282\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":15074:15148   */\n      swap2\n      pop\n        /* \"#utility.yul\":15157:15250   */\n      tag_440\n        /* \"#utility.yul\":15246:15249   */\n      dup3\n        /* \"#utility.yul\":15157:15250   */\n      tag_295\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":15275:15277   */\n      0x20\n        /* \"#utility.yul\":15270:15273   */\n      dup3\n        /* \"#utility.yul\":15266:15278   */\n      add\n        /* \"#utility.yul\":15259:15278   */\n      swap1\n      pop\n        /* \"#utility.yul\":14918:15284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15290:15709   */\n    tag_245:\n        /* \"#utility.yul\":15456:15460   */\n      0x00\n        /* \"#utility.yul\":15494:15496   */\n      0x20\n        /* \"#utility.yul\":15483:15492   */\n      dup3\n        /* \"#utility.yul\":15479:15497   */\n      add\n        /* \"#utility.yul\":15471:15497   */\n      swap1\n      pop\n        /* \"#utility.yul\":15543:15552   */\n      dup2\n        /* \"#utility.yul\":15537:15541   */\n      dup2\n        /* \"#utility.yul\":15533:15553   */\n      sub\n        /* \"#utility.yul\":15529:15530   */\n      0x00\n        /* \"#utility.yul\":15518:15527   */\n      dup4\n        /* \"#utility.yul\":15514:15531   */\n      add\n        /* \"#utility.yul\":15507:15554   */\n      mstore\n        /* \"#utility.yul\":15571:15702   */\n      tag_442\n        /* \"#utility.yul\":15697:15701   */\n      dup2\n        /* \"#utility.yul\":15571:15702   */\n      tag_296\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":15563:15702   */\n      swap1\n      pop\n        /* \"#utility.yul\":15290:15709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15715:15813   */\n    tag_297:\n        /* \"#utility.yul\":15766:15772   */\n      0x00\n        /* \"#utility.yul\":15800:15805   */\n      dup2\n        /* \"#utility.yul\":15794:15806   */\n      mload\n        /* \"#utility.yul\":15784:15806   */\n      swap1\n      pop\n        /* \"#utility.yul\":15715:15813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15819:15966   */\n    tag_298:\n        /* \"#utility.yul\":15920:15931   */\n      0x00\n        /* \"#utility.yul\":15957:15960   */\n      dup2\n        /* \"#utility.yul\":15942:15960   */\n      swap1\n      pop\n        /* \"#utility.yul\":15819:15966   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15972:16279   */\n    tag_299:\n        /* \"#utility.yul\":16040:16041   */\n      0x00\n        /* \"#utility.yul\":16050:16163   */\n    tag_446:\n        /* \"#utility.yul\":16064:16070   */\n      dup4\n        /* \"#utility.yul\":16061:16062   */\n      dup2\n        /* \"#utility.yul\":16058:16071   */\n      lt\n        /* \"#utility.yul\":16050:16163   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":16149:16150   */\n      dup1\n        /* \"#utility.yul\":16144:16147   */\n      dup3\n        /* \"#utility.yul\":16140:16151   */\n      add\n        /* \"#utility.yul\":16134:16152   */\n      mload\n        /* \"#utility.yul\":16130:16131   */\n      dup2\n        /* \"#utility.yul\":16125:16128   */\n      dup5\n        /* \"#utility.yul\":16121:16132   */\n      add\n        /* \"#utility.yul\":16114:16153   */\n      mstore\n        /* \"#utility.yul\":16086:16088   */\n      0x20\n        /* \"#utility.yul\":16083:16084   */\n      dup2\n        /* \"#utility.yul\":16079:16089   */\n      add\n        /* \"#utility.yul\":16074:16089   */\n      swap1\n      pop\n        /* \"#utility.yul\":16050:16163   */\n      jump(tag_446)\n    tag_448:\n        /* \"#utility.yul\":16181:16187   */\n      dup4\n        /* \"#utility.yul\":16178:16179   */\n      dup2\n        /* \"#utility.yul\":16175:16188   */\n      gt\n        /* \"#utility.yul\":16172:16273   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":16261:16262   */\n      0x00\n        /* \"#utility.yul\":16252:16258   */\n      dup5\n        /* \"#utility.yul\":16247:16250   */\n      dup5\n        /* \"#utility.yul\":16243:16259   */\n      add\n        /* \"#utility.yul\":16236:16263   */\n      mstore\n        /* \"#utility.yul\":16172:16273   */\n    tag_449:\n        /* \"#utility.yul\":16021:16279   */\n      pop\n        /* \"#utility.yul\":15972:16279   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16285:16658   */\n    tag_300:\n        /* \"#utility.yul\":16389:16392   */\n      0x00\n        /* \"#utility.yul\":16417:16455   */\n      tag_451\n        /* \"#utility.yul\":16449:16454   */\n      dup3\n        /* \"#utility.yul\":16417:16455   */\n      tag_297\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":16471:16559   */\n      tag_452\n        /* \"#utility.yul\":16552:16558   */\n      dup2\n        /* \"#utility.yul\":16547:16550   */\n      dup6\n        /* \"#utility.yul\":16471:16559   */\n      tag_298\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":16464:16559   */\n      swap4\n      pop\n        /* \"#utility.yul\":16568:16620   */\n      tag_453\n        /* \"#utility.yul\":16613:16619   */\n      dup2\n        /* \"#utility.yul\":16608:16611   */\n      dup6\n        /* \"#utility.yul\":16601:16605   */\n      0x20\n        /* \"#utility.yul\":16594:16599   */\n      dup7\n        /* \"#utility.yul\":16590:16606   */\n      add\n        /* \"#utility.yul\":16568:16620   */\n      tag_299\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":16645:16651   */\n      dup1\n        /* \"#utility.yul\":16640:16643   */\n      dup5\n        /* \"#utility.yul\":16636:16652   */\n      add\n        /* \"#utility.yul\":16629:16652   */\n      swap2\n      pop\n        /* \"#utility.yul\":16393:16658   */\n      pop\n        /* \"#utility.yul\":16285:16658   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16664:16935   */\n    tag_247:\n        /* \"#utility.yul\":16794:16797   */\n      0x00\n        /* \"#utility.yul\":16816:16909   */\n      tag_455\n        /* \"#utility.yul\":16905:16908   */\n      dup3\n        /* \"#utility.yul\":16896:16902   */\n      dup5\n        /* \"#utility.yul\":16816:16909   */\n      tag_300\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":16809:16909   */\n      swap2\n      pop\n        /* \"#utility.yul\":16926:16929   */\n      dup2\n        /* \"#utility.yul\":16919:16929   */\n      swap1\n      pop\n        /* \"#utility.yul\":16664:16935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16941:17040   */\n    tag_301:\n        /* \"#utility.yul\":16993:16999   */\n      0x00\n        /* \"#utility.yul\":17027:17032   */\n      dup2\n        /* \"#utility.yul\":17021:17033   */\n      mload\n        /* \"#utility.yul\":17011:17033   */\n      swap1\n      pop\n        /* \"#utility.yul\":16941:17040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17046:17148   */\n    tag_302:\n        /* \"#utility.yul\":17087:17093   */\n      0x00\n        /* \"#utility.yul\":17138:17140   */\n      0x1f\n        /* \"#utility.yul\":17134:17141   */\n      not\n        /* \"#utility.yul\":17129:17131   */\n      0x1f\n        /* \"#utility.yul\":17122:17127   */\n      dup4\n        /* \"#utility.yul\":17118:17132   */\n      add\n        /* \"#utility.yul\":17114:17142   */\n      and\n        /* \"#utility.yul\":17104:17142   */\n      swap1\n      pop\n        /* \"#utility.yul\":17046:17148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17154:17518   */\n    tag_303:\n        /* \"#utility.yul\":17242:17245   */\n      0x00\n        /* \"#utility.yul\":17270:17309   */\n      tag_459\n        /* \"#utility.yul\":17303:17308   */\n      dup3\n        /* \"#utility.yul\":17270:17309   */\n      tag_301\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":17325:17396   */\n      tag_460\n        /* \"#utility.yul\":17389:17395   */\n      dup2\n        /* \"#utility.yul\":17384:17387   */\n      dup6\n        /* \"#utility.yul\":17325:17396   */\n      tag_282\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":17318:17396   */\n      swap4\n      pop\n        /* \"#utility.yul\":17405:17457   */\n      tag_461\n        /* \"#utility.yul\":17450:17456   */\n      dup2\n        /* \"#utility.yul\":17445:17448   */\n      dup6\n        /* \"#utility.yul\":17438:17442   */\n      0x20\n        /* \"#utility.yul\":17431:17436   */\n      dup7\n        /* \"#utility.yul\":17427:17443   */\n      add\n        /* \"#utility.yul\":17405:17457   */\n      tag_299\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":17482:17511   */\n      tag_462\n        /* \"#utility.yul\":17504:17510   */\n      dup2\n        /* \"#utility.yul\":17482:17511   */\n      tag_302\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":17477:17480   */\n      dup5\n        /* \"#utility.yul\":17473:17512   */\n      add\n        /* \"#utility.yul\":17466:17512   */\n      swap2\n      pop\n        /* \"#utility.yul\":17246:17518   */\n      pop\n        /* \"#utility.yul\":17154:17518   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17524:17837   */\n    tag_260:\n        /* \"#utility.yul\":17637:17641   */\n      0x00\n        /* \"#utility.yul\":17675:17677   */\n      0x20\n        /* \"#utility.yul\":17664:17673   */\n      dup3\n        /* \"#utility.yul\":17660:17678   */\n      add\n        /* \"#utility.yul\":17652:17678   */\n      swap1\n      pop\n        /* \"#utility.yul\":17724:17733   */\n      dup2\n        /* \"#utility.yul\":17718:17722   */\n      dup2\n        /* \"#utility.yul\":17714:17734   */\n      sub\n        /* \"#utility.yul\":17710:17711   */\n      0x00\n        /* \"#utility.yul\":17699:17708   */\n      dup4\n        /* \"#utility.yul\":17695:17712   */\n      add\n        /* \"#utility.yul\":17688:17735   */\n      mstore\n        /* \"#utility.yul\":17752:17830   */\n      tag_464\n        /* \"#utility.yul\":17825:17829   */\n      dup2\n        /* \"#utility.yul\":17816:17822   */\n      dup5\n        /* \"#utility.yul\":17752:17830   */\n      tag_303\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":17744:17830   */\n      swap1\n      pop\n        /* \"#utility.yul\":17524:17837   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122048b54b8f3606dd1f3abd2bd0ea6c3e2c3e3acbffd92273fafd65df71d99f8d6464736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_123": {
									"entryPoint": null,
									"id": 123,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_874": {
									"entryPoint": null,
									"id": 874,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_753": {
									"entryPoint": 268,
									"id": 753,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 276,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 474,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:7"
															},
															"nodeType": "YulIf",
															"src": "932:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:7",
														"type": ""
													}
												],
												"src": "845:351:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200224138038062002241833981810160405281019062000037919062000244565b60016000819055506200005f620000536200010c60201b60201c565b6200011460201b60201c565b600f600381905550605060048190555080600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506006600260006276a70081526020019081526020016000208190555060076002600062ed4e008152602001908152602001600020819055506008600260006301e133808152602001908152602001600020819055505062000276565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200020c82620001df565b9050919050565b6200021e81620001ff565b81146200022a57600080fd5b50565b6000815190506200023e8162000213565b92915050565b6000602082840312156200025d576200025c620001da565b5b60006200026d848285016200022d565b91505092915050565b611fbb80620002866000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063a143a5f2116100ad578063c63aa3e711610071578063c63aa3e7146102c0578063cb79c2e1146102de578063d2a569c3146102fc578063d5dbdf1b14610306578063f2fde38b1461032257610121565b8063a143a5f214610208578063a3ec138d14610238578063b5d9df8314610268578063b87da76d14610298578063bed9d861146102b657610121565b80637b0472f0116100f45780637b0472f0146101765780638891cf0d146101925780638c63f97f146101b05780638c8e8fee146101cc5780638da5cb5b146101ea57610121565b806310486b6a146101265780635b88349d146101445780635f5300ff1461014e578063715018a61461016c575b600080fd5b61012e61033e565b60405161013b9190611740565b60405180910390f35b61014c610513565b005b6101566105fa565b604051610163919061176b565b60405180910390f35b610174610600565b005b610190600480360381019061018b91906117b7565b610688565b005b61019a61098e565b6040516101a7919061176b565b60405180910390f35b6101ca60048036038101906101c591906117f7565b610994565b005b6101d4610a8c565b6040516101e19190611865565b60405180910390f35b6101f2610ab2565b6040516101ff9190611865565b60405180910390f35b610222600480360381019061021d91906117f7565b610adc565b60405161022f919061176b565b60405180910390f35b610252600480360381019061024d91906118ac565b610af4565b60405161025f91906118f4565b60405180910390f35b610282600480360381019061027d91906117f7565b610b1f565b60405161028f919061176b565b60405180910390f35b6102a0610b42565b6040516102ad919061176b565b60405180910390f35b6102be610b48565b005b6102c8610dd9565b6040516102d5919061176b565b60405180910390f35b6102e6610de1565b6040516102f3919061176b565b60405180910390f35b610304610de7565b005b610320600480360381019061031b91906117f7565b610e6c565b005b61033c600480360381019061033791906118ac565b610f64565b005b6103466115f2565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505090506000816000015111610418576040517fb018f08700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518060600160405280600081526020016000815260200183815250905060006104448361105c565b90504282604001516060015111156104a4576103e860035482610467919061193e565b61047191906119c7565b6103e86003548560000151610486919061193e565b61049091906119c7565b61049a91906119f8565b8260200181815250505b60006104b38460c00151610b1f565b11156104de5760006104c884600001516110bc565b905080836040015160a0018181525050506104ee565b6000826040015160a00181815250505b8082604001516080018181525050826000015182600001818152505081935050505090565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015411156105f75760006105728260060154610b1f565b14156105aa576040517fdd8456cc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081600501819055504281600601819055506105f6600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336105f184600001546110bc565b6110ef565b5b50565b60085481565b610608611175565b73ffffffffffffffffffffffffffffffffffffffff16610626610ab2565b73ffffffffffffffffffffffffffffffffffffffff161461067c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067390611aab565b60405180910390fd5b610686600061117d565b565b600260005414156106ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c590611b17565b60405180910390fd5b60026000819055506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414610752576040517f04462d2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260008381526020019081526020016000205414156107a0576040517f95377be400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600860008282546107b391906119f8565b925050819055506001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555060004290506040518060e0016040528084815260200182815260200160026000858152602001908152602001600020548152602001828461085691906119f8565b815260200160008152602001600081526020016000815250600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060155905050610924600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333086611243565b3373ffffffffffffffffffffffffffffffffffffffff167fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed8483848661096a91906119f8565b60405161097993929190611b37565b60405180910390a25060016000819055505050565b60045481565b61099c611175565b73ffffffffffffffffffffffffffffffffffffffff166109ba610ab2565b73ffffffffffffffffffffffffffffffffffffffff1614610a10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0790611aab565b60405180910390fd5b601e811115610a4b576040517ff1a470d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806003819055507fcfa4f4cf1cd64d13a167a8e75605e0c0c9d6700e903d17c5dc11f593254a04a981604051610a81919061176b565b60405180910390a150565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a6020528060005260406000206000915090505481565b60096020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b600062093a808242610b319190611b6e565b610b3b91906119c7565b9050919050565b60055481565b60026000541415610b8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8590611b17565b60405180910390fd5b60026000819055506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505090506000610c358261105c565b9050600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160009055600282016000905560038201600090556004820160009055600582016000905560068201600090555050600160086000828254610cc49190611b6e565b92505081905550600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600754815260200190815260200160002060006101000a81549060ff02191690554282606001511115610d9057600080610d4d8460000151846112cc565b91509150610d89600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16338385610d8491906119f8565b6110ef565b5050610dcd565b610dcc600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633838560000151610dc791906119f8565b6110ef565b5b50506001600081905550565b600042905090565b60035481565b610def611175565b73ffffffffffffffffffffffffffffffffffffffff16610e0d610ab2565b73ffffffffffffffffffffffffffffffffffffffff1614610e63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5a90611aab565b60405180910390fd5b42600581905550565b610e74611175565b73ffffffffffffffffffffffffffffffffffffffff16610e92610ab2565b73ffffffffffffffffffffffffffffffffffffffff1614610ee8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edf90611aab565b60405180910390fd5b60c8811115610f23576040517fa552cf1000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806004819055507fcc672f1026b958c0cfbfdd89ebe8ddcbc127f16ec24da6c2c7a4de26a8b1857e81604051610f59919061176b565b60405180910390a150565b610f6c611175565b73ffffffffffffffffffffffffffffffffffffffff16610f8a610ab2565b73ffffffffffffffffffffffffffffffffffffffff1614610fe0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd790611aab565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611050576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104790611c14565b60405180910390fd5b6110598161117d565b50565b6000808260000151141561107357600090506110b7565b6a52b7d2dcc80cd2e400000061108c836020015161133c565b836040015184600001516110a0919061193e565b6110aa919061193e565b6110b491906119c7565b90505b919050565b60006301dfe2006103e8600454846110d4919061193e565b6110de91906119c7565b6110e891906119c7565b9050919050565b6111708363a9059cbb60e01b848460405160240161110e929190611c34565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611375565b505050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6112c6846323b872dd60e01b85858560405160240161126493929190611c5d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611375565b50505050565b60008060008414156112e45760008091509150611335565b6103e8600354856112f5919061193e565b6112ff91906119c7565b8461130a9190611b6e565b6103e86003548561131b919061193e565b61132591906119c7565b846113309190611b6e565b915091505b9250929050565b60006301e1338069d3c21bcecceda1000000834261135a9190611b6e565b611364919061193e565b61136e91906119c7565b9050919050565b60006113d7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661143c9092919063ffffffff16565b905060008151111561143757808060200190518101906113f79190611cc0565b611436576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142d90611d5f565b60405180910390fd5b5b505050565b606061144b8484600085611454565b90509392505050565b606082471015611499576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149090611df1565b60405180910390fd5b6114a285611568565b6114e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d890611e5d565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161150a9190611ef7565b60006040518083038185875af1925050503d8060008114611547576040519150601f19603f3d011682016040523d82523d6000602084013e61154c565b606091505b509150915061155c82828661158b565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561159b578290506115eb565b6000835111156115ae5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e29190611f63565b60405180910390fd5b9392505050565b60405180606001604052806000815260200160008152602001611613611619565b81525090565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000819050919050565b61166981611656565b82525050565b60e0820160008201516116856000850182611660565b5060208201516116986020850182611660565b5060408201516116ab6040850182611660565b5060608201516116be6060850182611660565b5060808201516116d16080850182611660565b5060a08201516116e460a0850182611660565b5060c08201516116f760c0850182611660565b50505050565b610120820160008201516117146000850182611660565b5060208201516117276020850182611660565b50604082015161173a604085018261166f565b50505050565b60006101208201905061175660008301846116fd565b92915050565b61176581611656565b82525050565b6000602082019050611780600083018461175c565b92915050565b600080fd5b61179481611656565b811461179f57600080fd5b50565b6000813590506117b18161178b565b92915050565b600080604083850312156117ce576117cd611786565b5b60006117dc858286016117a2565b92505060206117ed858286016117a2565b9150509250929050565b60006020828403121561180d5761180c611786565b5b600061181b848285016117a2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061184f82611824565b9050919050565b61185f81611844565b82525050565b600060208201905061187a6000830184611856565b92915050565b61188981611844565b811461189457600080fd5b50565b6000813590506118a681611880565b92915050565b6000602082840312156118c2576118c1611786565b5b60006118d084828501611897565b91505092915050565b60008115159050919050565b6118ee816118d9565b82525050565b600060208201905061190960008301846118e5565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061194982611656565b915061195483611656565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561198d5761198c61190f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006119d282611656565b91506119dd83611656565b9250826119ed576119ec611998565b5b828204905092915050565b6000611a0382611656565b9150611a0e83611656565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a4357611a4261190f565b5b828201905092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611a95602083611a4e565b9150611aa082611a5f565b602082019050919050565b60006020820190508181036000830152611ac481611a88565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611b01601f83611a4e565b9150611b0c82611acb565b602082019050919050565b60006020820190508181036000830152611b3081611af4565b9050919050565b6000606082019050611b4c600083018661175c565b611b59602083018561175c565b611b66604083018461175c565b949350505050565b6000611b7982611656565b9150611b8483611656565b925082821015611b9757611b9661190f565b5b828203905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611bfe602683611a4e565b9150611c0982611ba2565b604082019050919050565b60006020820190508181036000830152611c2d81611bf1565b9050919050565b6000604082019050611c496000830185611856565b611c56602083018461175c565b9392505050565b6000606082019050611c726000830186611856565b611c7f6020830185611856565b611c8c604083018461175c565b949350505050565b611c9d816118d9565b8114611ca857600080fd5b50565b600081519050611cba81611c94565b92915050565b600060208284031215611cd657611cd5611786565b5b6000611ce484828501611cab565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611d49602a83611a4e565b9150611d5482611ced565b604082019050919050565b60006020820190508181036000830152611d7881611d3c565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611ddb602683611a4e565b9150611de682611d7f565b604082019050919050565b60006020820190508181036000830152611e0a81611dce565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611e47601d83611a4e565b9150611e5282611e11565b602082019050919050565b60006020820190508181036000830152611e7681611e3a565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611eb1578082015181840152602081019050611e96565b83811115611ec0576000848401525b50505050565b6000611ed182611e7d565b611edb8185611e88565b9350611eeb818560208601611e93565b80840191505092915050565b6000611f038284611ec6565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000611f3582611f0e565b611f3f8185611a4e565b9350611f4f818560208601611e93565b611f5881611f19565b840191505092915050565b60006020820190508181036000830152611f7d8184611f2a565b90509291505056fea264697066735822122048b54b8f3606dd1f3abd2bd0ea6c3e2c3e3acbffd92273fafd65df71d99f8d6464736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2241 CODESIZE SUB DUP1 PUSH3 0x2241 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x244 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH3 0x5F PUSH3 0x53 PUSH3 0x10C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x114 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xF PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x50 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x2 PUSH1 0x0 PUSH3 0x76A700 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x2 PUSH1 0x0 PUSH3 0xED4E00 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x2 PUSH1 0x0 PUSH4 0x1E13380 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH3 0x276 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20C DUP3 PUSH3 0x1DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x21E DUP2 PUSH3 0x1FF JUMP JUMPDEST DUP2 EQ PUSH3 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x23E DUP2 PUSH3 0x213 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x25D JUMPI PUSH3 0x25C PUSH3 0x1DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x26D DUP5 DUP3 DUP6 ADD PUSH3 0x22D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FBB DUP1 PUSH3 0x286 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA143A5F2 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC63AA3E7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC63AA3E7 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xD2A569C3 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xD5DBDF1B EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x322 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xB5D9DF83 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xBED9D861 EQ PUSH2 0x2B6 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x7B0472F0 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x8891CF0D EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x8C63F97F EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x8C8E8FEE EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EA JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x10486B6A EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x5B88349D EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x5F5300FF EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x16C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x33E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x600 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19A PUSH2 0x98E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D4 PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x1865 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1865 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST PUSH2 0xADC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x18AC JUMP JUMPDEST PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH2 0xB48 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C8 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH2 0xDE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST PUSH2 0xE6C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x18AC JUMP JUMPDEST PUSH2 0xF64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x346 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x418 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB018F08700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x444 DUP4 PUSH2 0x105C JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x4A4 JUMPI PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP3 PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x19F8 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0xB1F JUMP JUMPDEST GT ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 PUSH2 0x4C8 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x10BC JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP POP PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP2 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x0 PUSH2 0x572 DUP3 PUSH1 0x6 ADD SLOAD PUSH2 0xB1F JUMP JUMPDEST EQ ISZERO PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH32 0xDD8456CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x5F6 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x5F1 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x10EF JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x608 PUSH2 0x1175 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x626 PUSH2 0xAB2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x67C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x673 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x686 PUSH1 0x0 PUSH2 0x117D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C5 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4462D2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x7A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x95377BE400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7B3 SWAP2 SWAP1 PUSH2 0x19F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP5 PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x19F8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP PUSH2 0x924 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP7 PUSH2 0x1243 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP5 DUP4 DUP5 DUP7 PUSH2 0x96A SWAP2 SWAP1 PUSH2 0x19F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x979 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x99C PUSH2 0x1175 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9BA PUSH2 0xAB2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA07 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH32 0xF1A470D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xCFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9 DUP2 PUSH1 0x40 MLOAD PUSH2 0xA81 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93A80 DUP3 TIMESTAMP PUSH2 0xB31 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0xB3B SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xB8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB85 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xC35 DUP3 PUSH2 0x105C JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCC4 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE TIMESTAMP DUP3 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 PUSH2 0xD4D DUP5 PUSH1 0x0 ADD MLOAD DUP5 PUSH2 0x12CC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xD89 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 DUP6 PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x10EF JUMP JUMPDEST POP POP PUSH2 0xDCD JUMP JUMPDEST PUSH2 0xDCC PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x10EF JUMP JUMPDEST JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDEF PUSH2 0x1175 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE0D PUSH2 0xAB2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5A SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xE74 PUSH2 0x1175 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE92 PUSH2 0xAB2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDF SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC8 DUP2 GT ISZERO PUSH2 0xF23 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA552CF1000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xCC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E DUP2 PUSH1 0x40 MLOAD PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xF6C PUSH2 0x1175 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF8A PUSH2 0xAB2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD7 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1050 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1047 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1059 DUP2 PUSH2 0x117D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x1073 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x10B7 JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x108C DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x133C JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x10A0 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x10AA SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x10B4 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x4 SLOAD DUP5 PUSH2 0x10D4 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x10DE SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST PUSH2 0x10E8 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1170 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x110E SWAP3 SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1375 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x12C6 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1264 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1375 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x12E4 JUMPI PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x1335 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH2 0x12F5 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x12FF SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST DUP5 PUSH2 0x130A SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH2 0x131B SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x1325 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST DUP5 PUSH2 0x1330 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1E13380 PUSH10 0xD3C21BCECCEDA1000000 DUP4 TIMESTAMP PUSH2 0x135A SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1364 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D7 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x143C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1437 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x13F7 SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH2 0x1436 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142D SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x144B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1454 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1499 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1490 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14A2 DUP6 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x14E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D8 SWAP1 PUSH2 0x1E5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x150A SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1547 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x154C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x155C DUP3 DUP3 DUP7 PUSH2 0x158B JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x159B JUMPI DUP3 SWAP1 POP PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x15AE JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E2 SWAP2 SWAP1 PUSH2 0x1F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1613 PUSH2 0x1619 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1669 DUP2 PUSH2 0x1656 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1685 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1698 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x16AB PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x16BE PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x16D1 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x16E4 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x16F7 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1714 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1727 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x173A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x166F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x1756 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1765 DUP2 PUSH2 0x1656 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1780 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x175C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1794 DUP2 PUSH2 0x1656 JUMP JUMPDEST DUP2 EQ PUSH2 0x179F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17B1 DUP2 PUSH2 0x178B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CE JUMPI PUSH2 0x17CD PUSH2 0x1786 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17DC DUP6 DUP3 DUP7 ADD PUSH2 0x17A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17ED DUP6 DUP3 DUP7 ADD PUSH2 0x17A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180D JUMPI PUSH2 0x180C PUSH2 0x1786 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x181B DUP5 DUP3 DUP6 ADD PUSH2 0x17A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184F DUP3 PUSH2 0x1824 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x185F DUP2 PUSH2 0x1844 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x187A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1856 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1889 DUP2 PUSH2 0x1844 JUMP JUMPDEST DUP2 EQ PUSH2 0x1894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18A6 DUP2 PUSH2 0x1880 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C2 JUMPI PUSH2 0x18C1 PUSH2 0x1786 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18D0 DUP5 DUP3 DUP6 ADD PUSH2 0x1897 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18EE DUP2 PUSH2 0x18D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1909 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1949 DUP3 PUSH2 0x1656 JUMP JUMPDEST SWAP2 POP PUSH2 0x1954 DUP4 PUSH2 0x1656 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x198D JUMPI PUSH2 0x198C PUSH2 0x190F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19D2 DUP3 PUSH2 0x1656 JUMP JUMPDEST SWAP2 POP PUSH2 0x19DD DUP4 PUSH2 0x1656 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x19ED JUMPI PUSH2 0x19EC PUSH2 0x1998 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A03 DUP3 PUSH2 0x1656 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A0E DUP4 PUSH2 0x1656 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1A43 JUMPI PUSH2 0x1A42 PUSH2 0x190F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A95 PUSH1 0x20 DUP4 PUSH2 0x1A4E JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA0 DUP3 PUSH2 0x1A5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AC4 DUP2 PUSH2 0x1A88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B01 PUSH1 0x1F DUP4 PUSH2 0x1A4E JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0C DUP3 PUSH2 0x1ACB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B30 DUP2 PUSH2 0x1AF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B4C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x1B59 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x1B66 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x175C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B79 DUP3 PUSH2 0x1656 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B84 DUP4 PUSH2 0x1656 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1B97 JUMPI PUSH2 0x1B96 PUSH2 0x190F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BFE PUSH1 0x26 DUP4 PUSH2 0x1A4E JUMP JUMPDEST SWAP2 POP PUSH2 0x1C09 DUP3 PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C2D DUP2 PUSH2 0x1BF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C49 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1856 JUMP JUMPDEST PUSH2 0x1C56 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x175C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C72 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1856 JUMP JUMPDEST PUSH2 0x1C7F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1856 JUMP JUMPDEST PUSH2 0x1C8C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x175C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1C9D DUP2 PUSH2 0x18D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CBA DUP2 PUSH2 0x1C94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD6 JUMPI PUSH2 0x1CD5 PUSH2 0x1786 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CE4 DUP5 DUP3 DUP6 ADD PUSH2 0x1CAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D49 PUSH1 0x2A DUP4 PUSH2 0x1A4E JUMP JUMPDEST SWAP2 POP PUSH2 0x1D54 DUP3 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D78 DUP2 PUSH2 0x1D3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DDB PUSH1 0x26 DUP4 PUSH2 0x1A4E JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE6 DUP3 PUSH2 0x1D7F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E0A DUP2 PUSH2 0x1DCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E47 PUSH1 0x1D DUP4 PUSH2 0x1A4E JUMP JUMPDEST SWAP2 POP PUSH2 0x1E52 DUP3 PUSH2 0x1E11 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E76 DUP2 PUSH2 0x1E3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EB1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E96 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1EC0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED1 DUP3 PUSH2 0x1E7D JUMP JUMPDEST PUSH2 0x1EDB DUP2 DUP6 PUSH2 0x1E88 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EEB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E93 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F03 DUP3 DUP5 PUSH2 0x1EC6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F35 DUP3 PUSH2 0x1F0E JUMP JUMPDEST PUSH2 0x1F3F DUP2 DUP6 PUSH2 0x1A4E JUMP JUMPDEST SWAP4 POP PUSH2 0x1F4F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E93 JUMP JUMPDEST PUSH2 0x1F58 DUP2 PUSH2 0x1F19 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F7D DUP2 DUP5 PUSH2 0x1F2A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xB5 0x4B DUP16 CALLDATASIZE MOD 0xDD 0x1F GASPRICE 0xBD 0x2B 0xD0 0xEA PUSH13 0x3E2C3E3ACBFFD92273FAFD65DF PUSH18 0xD99F8D6464736F6C634300080B0033000000 ",
							"sourceMap": "1017:11982:6:-:0;;;1740:311;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:1;1806:7;:22;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1862:2:6;1841:18;:23;;;;1889:2;1875:11;:16;;;;1920:5;1904:13;;:21;;;;;;;;;;;;;;;;;;1964:1;1938:14;:23;1953:7;1938:23;;;;;;;;;;;:27;;;;2003:1;1976:14;:24;1991:8;1976:24;;;;;;;;;;;:28;;;;2042:1;2015:14;:24;2030:8;2015:24;;;;;;;;;;;:28;;;;1740:311;1017:11982;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1017:11982:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_blockTimestamp_1422": {
									"entryPoint": 3545,
									"id": 1422,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_calculateAirdrop_1456": {
									"entryPoint": 4284,
									"id": 1456,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateStakeReward_1133": {
									"entryPoint": 4188,
									"id": 1133,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateStakingDuration_1102": {
									"entryPoint": 4924,
									"id": 1102,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateStakingWithPenalty_1174": {
									"entryPoint": 4812,
									"id": 1174,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_callOptionalReturn_445": {
									"entryPoint": 4981,
									"id": 445,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_753": {
									"entryPoint": 4469,
									"id": 753,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 4477,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@airdropRate_819": {
									"entryPoint": 2446,
									"id": 819,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropSince_821": {
									"entryPoint": 2882,
									"id": 821,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateWeek_1438": {
									"entryPoint": 2847,
									"id": 1438,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changeAirdropPercentage_1413": {
									"entryPoint": 3692,
									"id": 1413,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changePenaltyFee_1083": {
									"entryPoint": 2452,
									"id": 1083,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimAirdrop_1512": {
									"entryPoint": 1299,
									"id": 1512,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_605": {
									"entryPoint": 5204,
									"id": 605,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_535": {
									"entryPoint": 5180,
									"id": 535,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@hasStake_1378": {
									"entryPoint": 830,
									"id": 1378,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_464": {
									"entryPoint": 5480,
									"id": 464,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 2738,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 1536,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_279": {
									"entryPoint": 4675,
									"id": 279,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_253": {
									"entryPoint": 4335,
									"id": 253,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stake_1059": {
									"entryPoint": 1672,
									"id": 1059,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakingPenaltyRate_817": {
									"entryPoint": 3553,
									"id": 817,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startAirdrop_1389": {
									"entryPoint": 3559,
									"id": 1389,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_address_838": {
									"entryPoint": 2700,
									"id": 838,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalVoters_827": {
									"entryPoint": 1530,
									"id": 827,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 3940,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResult_740": {
									"entryPoint": 5515,
									"id": 740,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@votedUsers_836": {
									"entryPoint": 2780,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@voters_832": {
									"entryPoint": 2804,
									"id": 832,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawStake_1261": {
									"entryPoint": 2888,
									"id": 1261,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$889_memory_ptr_to_t_struct$_Stake_$889_memory_ptr": {
									"entryPoint": 5743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_StakingSummary_$897_memory_ptr_to_t_struct$_StakingSummary_$897_memory_ptr_fromStack": {
									"entryPoint": 5885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7261,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7220,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_StakingSummary_$897_memory_ptr__to_t_struct$_StakingSummary_$897_memory_ptr__fromStack_reversed": {
									"entryPoint": 5952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6967,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 7827,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 6415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6022,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 7074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 7551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 7697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 7405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 6859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17840:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "145:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "162:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "185:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "167:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "167:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "155:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "155:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "133:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "140:3:7",
														"type": ""
													}
												],
												"src": "90:108:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "352:1304:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "362:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "378:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "383:4:7",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "374:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "374:14:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "366:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "398:166:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "435:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "465:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "472:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "461:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "461:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "455:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "455:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "439:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "525:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "543:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "548:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "539:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "539:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "491:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "491:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "491:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "574:165:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "610:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "640:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "647:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "636:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "636:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "630:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "630:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "614:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "700:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "718:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "723:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "714:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "714:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "666:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "666:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "666:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "749:169:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "789:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "819:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "826:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "815:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "815:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "809:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "809:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "793:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "879:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "897:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "902:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "893:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "893:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "845:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "845:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "845:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "928:171:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "970:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1000:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1007:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "990:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "990:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "974:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1060:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1078:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1083:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1074:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1074:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1026:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1026:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1026:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1109:169:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1149:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1179:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1186:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1175:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1175:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1169:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1169:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1153:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1239:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1257:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1262:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1253:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1253:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1205:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1205:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1288:176:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1335:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1365:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1372:4:7",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1361:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1361:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1355:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1339:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1425:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1443:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1448:4:7",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1439:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1439:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1391:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1391:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1391:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1474:175:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1520:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1550:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1557:4:7",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1546:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1546:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1540:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1540:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1524:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1610:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1628:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1633:4:7",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1624:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1624:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1576:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1576:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1576:63:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$889_memory_ptr_to_t_struct$_Stake_$889_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "339:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "346:3:7",
														"type": ""
													}
												],
												"src": "252:1404:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1856:623:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1866:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1887:6:7",
																		"type": "",
																		"value": "0x0120"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1878:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1878:16:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "1870:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1904:172:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1947:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1977:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1984:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1973:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1973:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1967:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1951:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2037:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2055:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2060:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2051:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2051:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2003:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2003:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2003:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:167:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2124:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2154:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2161:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2150:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2150:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2144:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2144:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2128:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2214:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2232:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2237:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2228:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2228:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2180:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2180:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2180:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2263:209:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2299:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2329:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2336:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2325:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2325:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2319:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2319:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2303:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2433:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2451:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2456:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2447:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2447:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_struct$_Stake_$889_memory_ptr_to_t_struct$_Stake_$889_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2355:77:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2355:107:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2355:107:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_StakingSummary_$897_memory_ptr_to_t_struct$_StakingSummary_$897_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1843:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1850:3:7",
														"type": ""
													}
												],
												"src": "1728:751:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2645:187:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2655:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2667:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2678:3:7",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2663:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2663:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2655:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2798:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2811:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2822:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2807:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2807:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_StakingSummary_$897_memory_ptr_to_t_struct$_StakingSummary_$897_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2692:105:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2692:133:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2692:133:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_StakingSummary_$897_memory_ptr__to_t_struct$_StakingSummary_$897_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2617:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2629:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2640:4:7",
														"type": ""
													}
												],
												"src": "2485:347:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2903:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2920:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2943:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2925:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2925:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2913:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2913:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2913:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2891:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2898:3:7",
														"type": ""
													}
												],
												"src": "2838:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3060:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3070:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3082:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3093:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3078:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3070:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3150:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3163:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3174:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3159:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3159:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3106:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3106:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3106:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3032:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3044:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3055:4:7",
														"type": ""
													}
												],
												"src": "2962:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3230:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3240:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3256:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3250:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3250:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3240:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3223:6:7",
														"type": ""
													}
												],
												"src": "3190:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3360:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3377:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3380:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3370:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3370:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3370:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3271:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3483:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3500:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3503:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3493:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3493:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3493:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3394:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3560:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3617:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3626:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3629:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3619:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3619:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3619:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3583:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3608:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3590:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3590:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3580:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3580:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3573:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3573:43:7"
															},
															"nodeType": "YulIf",
															"src": "3570:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3553:5:7",
														"type": ""
													}
												],
												"src": "3517:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3697:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3707:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3729:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3716:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3716:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3707:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3772:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3745:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3745:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3745:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3675:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3683:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3691:5:7",
														"type": ""
													}
												],
												"src": "3645:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3873:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3919:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3921:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3921:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3921:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3894:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3903:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3890:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3890:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3915:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3886:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3886:32:7"
															},
															"nodeType": "YulIf",
															"src": "3883:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4012:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4027:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4041:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4031:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4056:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4091:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4102:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4087:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4087:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4111:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4066:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4066:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4056:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4139:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4154:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4158:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4184:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4219:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4230:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4215:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4215:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4239:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4194:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4194:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4184:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3835:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3846:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3858:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3866:6:7",
														"type": ""
													}
												],
												"src": "3790:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4336:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4382:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4384:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4384:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4384:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4357:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4366:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4353:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4353:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4378:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4349:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4349:32:7"
															},
															"nodeType": "YulIf",
															"src": "4346:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4475:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4490:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4504:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4494:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4519:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4554:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4565:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4550:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4550:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4574:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4529:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4529:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4519:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4306:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4317:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4329:6:7",
														"type": ""
													}
												],
												"src": "4270:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4650:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4660:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4675:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4682:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4671:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4671:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4660:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4632:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4642:7:7",
														"type": ""
													}
												],
												"src": "4605:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4782:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4792:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4821:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4803:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4803:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4792:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4764:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4774:7:7",
														"type": ""
													}
												],
												"src": "4737:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4904:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4921:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4944:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4926:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4926:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4914:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4914:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4914:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4892:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4899:3:7",
														"type": ""
													}
												],
												"src": "4839:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5061:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5071:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5083:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5094:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5079:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5079:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5071:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5151:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5164:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5175:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5160:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5160:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5107:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5107:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5107:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5033:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5045:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5056:4:7",
														"type": ""
													}
												],
												"src": "4963:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5234:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5291:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5300:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5303:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5293:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5293:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5293:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5257:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5282:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5264:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5264:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5254:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5254:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5247:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5247:43:7"
															},
															"nodeType": "YulIf",
															"src": "5244:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5227:5:7",
														"type": ""
													}
												],
												"src": "5191:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5371:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5381:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5403:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5390:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5390:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5381:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5446:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5419:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5419:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5419:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5349:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5357:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5365:5:7",
														"type": ""
													}
												],
												"src": "5319:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5530:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5576:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5578:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5578:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5578:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5551:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5560:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5547:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5547:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5572:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5543:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5543:32:7"
															},
															"nodeType": "YulIf",
															"src": "5540:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5669:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5684:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5698:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5688:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5713:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5748:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5759:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5744:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5744:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5768:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5723:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5723:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5713:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5500:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5511:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5523:6:7",
														"type": ""
													}
												],
												"src": "5464:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5841:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5851:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5876:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5869:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5869:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5862:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5862:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5851:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5823:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5833:7:7",
														"type": ""
													}
												],
												"src": "5799:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5954:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5971:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5991:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5976:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5976:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5964:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5964:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5964:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5942:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5949:3:7",
														"type": ""
													}
												],
												"src": "5895:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6102:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6112:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6124:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6135:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6120:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6120:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6112:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6186:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6199:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6210:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6195:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6195:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6148:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6148:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6148:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6074:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6086:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6097:4:7",
														"type": ""
													}
												],
												"src": "6010:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6254:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6271:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6274:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6264:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6264:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6264:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6368:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6371:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6361:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6361:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6392:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6395:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6385:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6385:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6385:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6226:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6460:300:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6470:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6493:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6475:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6475:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6470:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6504:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6527:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6509:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6509:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6504:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6702:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6704:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6704:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6704:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6614:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6607:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6607:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6600:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6600:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6622:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6629:66:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6697:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6625:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6625:74:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6619:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6619:81:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6596:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6596:105:7"
															},
															"nodeType": "YulIf",
															"src": "6593:131:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6734:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6749:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6752:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6745:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6745:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6734:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6443:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6446:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6452:7:7",
														"type": ""
													}
												],
												"src": "6412:348:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6794:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6811:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6814:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6804:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6804:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6804:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6908:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6911:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6901:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6901:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6901:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6932:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6935:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6925:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6925:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6925:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6766:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6994:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7004:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7027:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7009:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7009:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7004:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7038:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7061:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7043:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7043:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7038:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7085:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7087:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7087:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7087:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7082:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7075:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7075:9:7"
															},
															"nodeType": "YulIf",
															"src": "7072:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7117:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7126:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7129:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7122:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7122:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7117:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6983:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6986:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6992:1:7",
														"type": ""
													}
												],
												"src": "6952:185:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7187:261:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7197:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7220:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7202:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7202:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7197:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7231:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7254:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7236:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7236:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7231:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7394:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7396:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7396:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7396:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7315:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7322:66:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7390:1:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7318:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7318:74:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7312:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7312:81:7"
															},
															"nodeType": "YulIf",
															"src": "7309:107:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7426:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7437:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7440:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7433:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7426:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7174:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7177:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7183:3:7",
														"type": ""
													}
												],
												"src": "7143:305:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7550:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7567:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7572:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7560:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7560:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7560:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7588:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7607:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7612:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7603:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7603:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7588:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7522:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7527:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7538:11:7",
														"type": ""
													}
												],
												"src": "7454:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7735:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7757:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7765:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7753:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7753:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7769:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7746:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7727:6:7",
														"type": ""
													}
												],
												"src": "7629:182:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7963:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7973:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8039:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8044:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7980:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7980:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7973:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8145:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "8056:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8056:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8056:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8158:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8169:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8174:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8165:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8165:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8158:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7951:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7959:3:7",
														"type": ""
													}
												],
												"src": "7817:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8360:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8370:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8382:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8393:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8378:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8378:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8370:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8417:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8428:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8413:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8413:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8436:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8442:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8432:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8432:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8406:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8406:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8406:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8462:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8596:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8470:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8470:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8462:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8340:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8355:4:7",
														"type": ""
													}
												],
												"src": "8189:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8720:75:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8742:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8750:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8738:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8738:14:7"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8754:33:7",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8731:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8731:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8731:57:7"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8712:6:7",
														"type": ""
													}
												],
												"src": "8614:181:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8947:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8957:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9023:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9028:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8964:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8964:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8957:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9129:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "9040:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9040:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9040:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9142:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9153:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9158:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9149:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9149:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9142:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8935:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8943:3:7",
														"type": ""
													}
												],
												"src": "8801:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9344:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9354:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9366:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9377:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9362:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9362:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9354:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9401:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9412:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9397:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9397:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9420:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9426:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9416:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9416:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9390:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9390:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9390:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9446:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9580:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9454:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9454:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9446:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9324:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9339:4:7",
														"type": ""
													}
												],
												"src": "9173:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9752:288:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9762:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9774:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9785:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9770:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9770:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9762:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9842:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9855:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9866:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9851:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9851:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9798:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9798:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9798:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9923:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9936:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9947:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9932:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9932:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9879:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9879:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9879:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10005:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10018:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10029:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10014:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10014:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9961:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9961:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9961:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9708:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9720:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9728:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9736:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9747:4:7",
														"type": ""
													}
												],
												"src": "9598:442:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10091:146:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10101:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10124:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10106:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10106:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10101:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10135:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10158:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10140:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10140:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10135:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10182:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10184:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10184:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10184:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10176:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10179:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10173:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10173:8:7"
															},
															"nodeType": "YulIf",
															"src": "10170:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10214:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10226:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10229:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10222:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10222:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10214:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10077:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10080:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10086:4:7",
														"type": ""
													}
												],
												"src": "10046:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10349:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10371:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10379:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10367:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10367:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10383:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10360:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10360:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10360:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10439:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10447:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10435:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10435:15:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10452:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10428:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10428:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10428:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10341:6:7",
														"type": ""
													}
												],
												"src": "10243:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10620:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10630:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10696:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10701:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10637:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10637:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10630:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10802:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "10713:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10713:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10713:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10815:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10826:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10831:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10822:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10822:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10815:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10608:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10616:3:7",
														"type": ""
													}
												],
												"src": "10474:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11017:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11027:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11039:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11050:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11035:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11035:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11027:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11074:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11085:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11070:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11070:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11093:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11099:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11089:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11089:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11063:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11063:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11063:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11119:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11253:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11127:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11127:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11119:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10997:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11012:4:7",
														"type": ""
													}
												],
												"src": "10846:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11397:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11407:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11419:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11430:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11415:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11415:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11407:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11487:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11500:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11511:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11496:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11496:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11443:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11443:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11443:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11568:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11581:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11592:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11577:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11577:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11524:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11524:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11524:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11361:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11373:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11381:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11392:4:7",
														"type": ""
													}
												],
												"src": "11271:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11763:288:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11773:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11785:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11796:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11781:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11781:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11773:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11853:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11866:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11877:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11862:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11862:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11809:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11809:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11809:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11934:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11947:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11958:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11943:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11943:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11890:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11890:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11890:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12016:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12029:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12040:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12025:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12025:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11972:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11972:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11972:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11719:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11731:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11739:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11747:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11758:4:7",
														"type": ""
													}
												],
												"src": "11609:442:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12097:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12151:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12160:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12163:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12153:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12153:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12153:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12120:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12142:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "12127:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12127:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12117:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12117:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12110:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12110:40:7"
															},
															"nodeType": "YulIf",
															"src": "12107:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12090:5:7",
														"type": ""
													}
												],
												"src": "12057:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12239:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12249:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12264:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12258:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12258:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12249:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12304:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "12280:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12280:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12280:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12217:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12225:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12233:5:7",
														"type": ""
													}
												],
												"src": "12179:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12396:271:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12442:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12444:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12444:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12444:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12417:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12426:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12413:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12413:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12438:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12409:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12409:32:7"
															},
															"nodeType": "YulIf",
															"src": "12406:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "12535:125:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12550:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12564:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12554:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12579:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12622:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12633:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12618:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12618:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12642:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "12589:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12589:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12579:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12366:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12377:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12389:6:7",
														"type": ""
													}
												],
												"src": "12322:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12779:123:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12801:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12809:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12797:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12797:14:7"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12813:34:7",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12790:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12790:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12790:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12869:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12877:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12865:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12865:15:7"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12882:12:7",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12858:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12858:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12858:37:7"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12771:6:7",
														"type": ""
													}
												],
												"src": "12673:229:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13054:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13064:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13130:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13135:2:7",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13071:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13071:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13064:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13236:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "13147:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13147:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13147:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13249:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13260:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13265:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13256:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13256:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13249:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13042:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13050:3:7",
														"type": ""
													}
												],
												"src": "12908:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13451:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13461:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13473:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13484:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13469:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13469:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13461:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13508:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13519:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13504:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13504:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13527:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13533:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13523:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13523:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13497:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13497:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13497:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13553:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13687:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13561:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13561:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13553:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13431:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13446:4:7",
														"type": ""
													}
												],
												"src": "13280:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13811:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13833:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13841:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13829:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13829:14:7"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13845:34:7",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13822:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13822:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13822:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13901:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13909:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13897:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13897:15:7"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13914:8:7",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13890:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13890:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13890:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13803:6:7",
														"type": ""
													}
												],
												"src": "13705:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14082:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14092:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14158:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14163:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14099:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14099:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14092:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14264:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "14175:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14175:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14175:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14277:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14288:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14293:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14284:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14284:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14277:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14070:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14078:3:7",
														"type": ""
													}
												],
												"src": "13936:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14479:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14489:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14501:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14512:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14497:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14497:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14489:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14536:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14547:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14532:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14532:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14555:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14561:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14551:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14551:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14525:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14525:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14525:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14581:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14715:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14589:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14589:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14581:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14459:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14474:4:7",
														"type": ""
													}
												],
												"src": "14308:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14839:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14861:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14869:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14857:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14857:14:7"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14873:31:7",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14850:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14850:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14850:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14831:6:7",
														"type": ""
													}
												],
												"src": "14733:179:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15064:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15074:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15140:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15145:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15081:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15081:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15074:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15246:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "15157:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15157:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15157:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15259:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15270:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15275:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15266:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15266:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15259:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15052:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15060:3:7",
														"type": ""
													}
												],
												"src": "14918:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15461:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15471:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15483:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15494:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15479:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15479:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15471:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15518:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15529:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15514:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15514:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15537:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15543:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15533:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15533:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15507:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15507:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15507:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15563:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15697:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15571:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15571:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15563:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15441:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15456:4:7",
														"type": ""
													}
												],
												"src": "15290:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15773:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15784:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15800:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15794:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15794:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "15784:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15756:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15766:6:7",
														"type": ""
													}
												],
												"src": "15715:98:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15932:34:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15942:18:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "15957:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "15942:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15904:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15909:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15920:11:7",
														"type": ""
													}
												],
												"src": "15819:147:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16021:258:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16031:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16040:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "16035:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16100:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "16125:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "16130:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "16121:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16121:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "16144:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "16149:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "16140:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16140:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "16134:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16134:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16114:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16114:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16114:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16061:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16064:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16058:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16058:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "16072:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16074:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "16083:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16086:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16079:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16079:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "16074:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "16054:3:7",
																"statements": []
															},
															"src": "16050:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16197:76:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "16247:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "16252:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "16243:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16243:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16261:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16236:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16236:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16236:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16178:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16181:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16175:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16175:13:7"
															},
															"nodeType": "YulIf",
															"src": "16172:101:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "16003:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "16008:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16013:6:7",
														"type": ""
													}
												],
												"src": "15972:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16393:265:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16403:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16449:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16417:31:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16417:38:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16407:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16464:95:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16547:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16552:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16471:75:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16471:88:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16464:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16594:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16601:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16590:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16590:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16608:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16613:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "16568:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16568:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16568:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16629:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16640:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16645:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16636:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16636:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16629:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16374:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16381:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16389:3:7",
														"type": ""
													}
												],
												"src": "16285:373:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16798:137:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16809:100:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16896:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16905:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16816:79:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16816:93:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16809:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16919:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16926:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16919:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16777:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16783:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16794:3:7",
														"type": ""
													}
												],
												"src": "16664:271:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17000:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17011:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17027:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17021:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17021:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17011:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16983:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16993:6:7",
														"type": ""
													}
												],
												"src": "16941:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17094:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17104:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17122:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17129:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17118:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17118:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17138:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "17134:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17134:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17114:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17114:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "17104:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17077:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "17087:6:7",
														"type": ""
													}
												],
												"src": "17046:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17246:272:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17256:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17303:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "17270:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17270:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "17260:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17318:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17384:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17389:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17325:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17325:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17318:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17431:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17438:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17427:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17427:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17445:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17450:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "17405:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17405:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17405:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17466:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17477:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "17504:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "17482:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17482:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17473:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17473:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17466:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17227:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17234:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17242:3:7",
														"type": ""
													}
												],
												"src": "17154:364:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17642:195:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17652:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17664:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17675:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17660:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17660:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17652:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17699:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17710:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17695:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17695:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17718:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17724:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17714:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17714:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17688:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17688:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17688:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17744:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17816:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17825:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17752:63:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17752:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17744:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17614:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17626:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17637:4:7",
														"type": ""
													}
												],
												"src": "17524:313:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct Stake.Stake -> struct Stake.Stake\n    function abi_encode_t_struct$_Stake_$889_memory_ptr_to_t_struct$_Stake_$889_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // since\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // rewardAPY\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // releaseTime\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // claimable\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // claimableAirdrop\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // latestClaimDrop\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n    }\n\n    // struct Stake.StakingSummary -> struct Stake.StakingSummary\n    function abi_encode_t_struct$_StakingSummary_$897_memory_ptr_to_t_struct$_StakingSummary_$897_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0120)\n\n        {\n            // total_amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // penalty\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // stake\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_struct$_Stake_$889_memory_ptr_to_t_struct$_Stake_$889_memory_ptr(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_StakingSummary_$897_memory_ptr__to_t_struct$_StakingSummary_$897_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_struct$_StakingSummary_$897_memory_ptr_to_t_struct$_StakingSummary_$897_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c8063a143a5f2116100ad578063c63aa3e711610071578063c63aa3e7146102c0578063cb79c2e1146102de578063d2a569c3146102fc578063d5dbdf1b14610306578063f2fde38b1461032257610121565b8063a143a5f214610208578063a3ec138d14610238578063b5d9df8314610268578063b87da76d14610298578063bed9d861146102b657610121565b80637b0472f0116100f45780637b0472f0146101765780638891cf0d146101925780638c63f97f146101b05780638c8e8fee146101cc5780638da5cb5b146101ea57610121565b806310486b6a146101265780635b88349d146101445780635f5300ff1461014e578063715018a61461016c575b600080fd5b61012e61033e565b60405161013b9190611740565b60405180910390f35b61014c610513565b005b6101566105fa565b604051610163919061176b565b60405180910390f35b610174610600565b005b610190600480360381019061018b91906117b7565b610688565b005b61019a61098e565b6040516101a7919061176b565b60405180910390f35b6101ca60048036038101906101c591906117f7565b610994565b005b6101d4610a8c565b6040516101e19190611865565b60405180910390f35b6101f2610ab2565b6040516101ff9190611865565b60405180910390f35b610222600480360381019061021d91906117f7565b610adc565b60405161022f919061176b565b60405180910390f35b610252600480360381019061024d91906118ac565b610af4565b60405161025f91906118f4565b60405180910390f35b610282600480360381019061027d91906117f7565b610b1f565b60405161028f919061176b565b60405180910390f35b6102a0610b42565b6040516102ad919061176b565b60405180910390f35b6102be610b48565b005b6102c8610dd9565b6040516102d5919061176b565b60405180910390f35b6102e6610de1565b6040516102f3919061176b565b60405180910390f35b610304610de7565b005b610320600480360381019061031b91906117f7565b610e6c565b005b61033c600480360381019061033791906118ac565b610f64565b005b6103466115f2565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505090506000816000015111610418576040517fb018f08700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518060600160405280600081526020016000815260200183815250905060006104448361105c565b90504282604001516060015111156104a4576103e860035482610467919061193e565b61047191906119c7565b6103e86003548560000151610486919061193e565b61049091906119c7565b61049a91906119f8565b8260200181815250505b60006104b38460c00151610b1f565b11156104de5760006104c884600001516110bc565b905080836040015160a0018181525050506104ee565b6000826040015160a00181815250505b8082604001516080018181525050826000015182600001818152505081935050505090565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015411156105f75760006105728260060154610b1f565b14156105aa576040517fdd8456cc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081600501819055504281600601819055506105f6600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336105f184600001546110bc565b6110ef565b5b50565b60085481565b610608611175565b73ffffffffffffffffffffffffffffffffffffffff16610626610ab2565b73ffffffffffffffffffffffffffffffffffffffff161461067c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067390611aab565b60405180910390fd5b610686600061117d565b565b600260005414156106ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c590611b17565b60405180910390fd5b60026000819055506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414610752576040517f04462d2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260008381526020019081526020016000205414156107a0576040517f95377be400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600860008282546107b391906119f8565b925050819055506001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555060004290506040518060e0016040528084815260200182815260200160026000858152602001908152602001600020548152602001828461085691906119f8565b815260200160008152602001600081526020016000815250600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060155905050610924600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333086611243565b3373ffffffffffffffffffffffffffffffffffffffff167fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed8483848661096a91906119f8565b60405161097993929190611b37565b60405180910390a25060016000819055505050565b60045481565b61099c611175565b73ffffffffffffffffffffffffffffffffffffffff166109ba610ab2565b73ffffffffffffffffffffffffffffffffffffffff1614610a10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0790611aab565b60405180910390fd5b601e811115610a4b576040517ff1a470d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806003819055507fcfa4f4cf1cd64d13a167a8e75605e0c0c9d6700e903d17c5dc11f593254a04a981604051610a81919061176b565b60405180910390a150565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a6020528060005260406000206000915090505481565b60096020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b600062093a808242610b319190611b6e565b610b3b91906119c7565b9050919050565b60055481565b60026000541415610b8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8590611b17565b60405180910390fd5b60026000819055506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505090506000610c358261105c565b9050600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160009055600282016000905560038201600090556004820160009055600582016000905560068201600090555050600160086000828254610cc49190611b6e565b92505081905550600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600754815260200190815260200160002060006101000a81549060ff02191690554282606001511115610d9057600080610d4d8460000151846112cc565b91509150610d89600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16338385610d8491906119f8565b6110ef565b5050610dcd565b610dcc600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633838560000151610dc791906119f8565b6110ef565b5b50506001600081905550565b600042905090565b60035481565b610def611175565b73ffffffffffffffffffffffffffffffffffffffff16610e0d610ab2565b73ffffffffffffffffffffffffffffffffffffffff1614610e63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5a90611aab565b60405180910390fd5b42600581905550565b610e74611175565b73ffffffffffffffffffffffffffffffffffffffff16610e92610ab2565b73ffffffffffffffffffffffffffffffffffffffff1614610ee8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edf90611aab565b60405180910390fd5b60c8811115610f23576040517fa552cf1000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806004819055507fcc672f1026b958c0cfbfdd89ebe8ddcbc127f16ec24da6c2c7a4de26a8b1857e81604051610f59919061176b565b60405180910390a150565b610f6c611175565b73ffffffffffffffffffffffffffffffffffffffff16610f8a610ab2565b73ffffffffffffffffffffffffffffffffffffffff1614610fe0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd790611aab565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611050576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104790611c14565b60405180910390fd5b6110598161117d565b50565b6000808260000151141561107357600090506110b7565b6a52b7d2dcc80cd2e400000061108c836020015161133c565b836040015184600001516110a0919061193e565b6110aa919061193e565b6110b491906119c7565b90505b919050565b60006301dfe2006103e8600454846110d4919061193e565b6110de91906119c7565b6110e891906119c7565b9050919050565b6111708363a9059cbb60e01b848460405160240161110e929190611c34565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611375565b505050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6112c6846323b872dd60e01b85858560405160240161126493929190611c5d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611375565b50505050565b60008060008414156112e45760008091509150611335565b6103e8600354856112f5919061193e565b6112ff91906119c7565b8461130a9190611b6e565b6103e86003548561131b919061193e565b61132591906119c7565b846113309190611b6e565b915091505b9250929050565b60006301e1338069d3c21bcecceda1000000834261135a9190611b6e565b611364919061193e565b61136e91906119c7565b9050919050565b60006113d7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661143c9092919063ffffffff16565b905060008151111561143757808060200190518101906113f79190611cc0565b611436576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142d90611d5f565b60405180910390fd5b5b505050565b606061144b8484600085611454565b90509392505050565b606082471015611499576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149090611df1565b60405180910390fd5b6114a285611568565b6114e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d890611e5d565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161150a9190611ef7565b60006040518083038185875af1925050503d8060008114611547576040519150601f19603f3d011682016040523d82523d6000602084013e61154c565b606091505b509150915061155c82828661158b565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561159b578290506115eb565b6000835111156115ae5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e29190611f63565b60405180910390fd5b9392505050565b60405180606001604052806000815260200160008152602001611613611619565b81525090565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000819050919050565b61166981611656565b82525050565b60e0820160008201516116856000850182611660565b5060208201516116986020850182611660565b5060408201516116ab6040850182611660565b5060608201516116be6060850182611660565b5060808201516116d16080850182611660565b5060a08201516116e460a0850182611660565b5060c08201516116f760c0850182611660565b50505050565b610120820160008201516117146000850182611660565b5060208201516117276020850182611660565b50604082015161173a604085018261166f565b50505050565b60006101208201905061175660008301846116fd565b92915050565b61176581611656565b82525050565b6000602082019050611780600083018461175c565b92915050565b600080fd5b61179481611656565b811461179f57600080fd5b50565b6000813590506117b18161178b565b92915050565b600080604083850312156117ce576117cd611786565b5b60006117dc858286016117a2565b92505060206117ed858286016117a2565b9150509250929050565b60006020828403121561180d5761180c611786565b5b600061181b848285016117a2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061184f82611824565b9050919050565b61185f81611844565b82525050565b600060208201905061187a6000830184611856565b92915050565b61188981611844565b811461189457600080fd5b50565b6000813590506118a681611880565b92915050565b6000602082840312156118c2576118c1611786565b5b60006118d084828501611897565b91505092915050565b60008115159050919050565b6118ee816118d9565b82525050565b600060208201905061190960008301846118e5565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061194982611656565b915061195483611656565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561198d5761198c61190f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006119d282611656565b91506119dd83611656565b9250826119ed576119ec611998565b5b828204905092915050565b6000611a0382611656565b9150611a0e83611656565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a4357611a4261190f565b5b828201905092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611a95602083611a4e565b9150611aa082611a5f565b602082019050919050565b60006020820190508181036000830152611ac481611a88565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611b01601f83611a4e565b9150611b0c82611acb565b602082019050919050565b60006020820190508181036000830152611b3081611af4565b9050919050565b6000606082019050611b4c600083018661175c565b611b59602083018561175c565b611b66604083018461175c565b949350505050565b6000611b7982611656565b9150611b8483611656565b925082821015611b9757611b9661190f565b5b828203905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611bfe602683611a4e565b9150611c0982611ba2565b604082019050919050565b60006020820190508181036000830152611c2d81611bf1565b9050919050565b6000604082019050611c496000830185611856565b611c56602083018461175c565b9392505050565b6000606082019050611c726000830186611856565b611c7f6020830185611856565b611c8c604083018461175c565b949350505050565b611c9d816118d9565b8114611ca857600080fd5b50565b600081519050611cba81611c94565b92915050565b600060208284031215611cd657611cd5611786565b5b6000611ce484828501611cab565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611d49602a83611a4e565b9150611d5482611ced565b604082019050919050565b60006020820190508181036000830152611d7881611d3c565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611ddb602683611a4e565b9150611de682611d7f565b604082019050919050565b60006020820190508181036000830152611e0a81611dce565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611e47601d83611a4e565b9150611e5282611e11565b602082019050919050565b60006020820190508181036000830152611e7681611e3a565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611eb1578082015181840152602081019050611e96565b83811115611ec0576000848401525b50505050565b6000611ed182611e7d565b611edb8185611e88565b9350611eeb818560208601611e93565b80840191505092915050565b6000611f038284611ec6565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000611f3582611f0e565b611f3f8185611a4e565b9350611f4f818560208601611e93565b611f5881611f19565b840191505092915050565b60006020820190508181036000830152611f7d8184611f2a565b90509291505056fea264697066735822122048b54b8f3606dd1f3abd2bd0ea6c3e2c3e3acbffd92273fafd65df71d99f8d6464736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA143A5F2 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC63AA3E7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC63AA3E7 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xD2A569C3 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xD5DBDF1B EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x322 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xB5D9DF83 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xBED9D861 EQ PUSH2 0x2B6 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x7B0472F0 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x8891CF0D EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x8C63F97F EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x8C8E8FEE EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EA JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x10486B6A EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x5B88349D EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x5F5300FF EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x16C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x33E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x600 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19A PUSH2 0x98E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D4 PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x1865 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1865 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST PUSH2 0xADC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x18AC JUMP JUMPDEST PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH2 0xB48 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C8 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH2 0xDE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST PUSH2 0xE6C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x18AC JUMP JUMPDEST PUSH2 0xF64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x346 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x418 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB018F08700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x444 DUP4 PUSH2 0x105C JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x4A4 JUMPI PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP3 PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x19F8 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0xB1F JUMP JUMPDEST GT ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 PUSH2 0x4C8 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x10BC JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP POP PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP2 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x0 PUSH2 0x572 DUP3 PUSH1 0x6 ADD SLOAD PUSH2 0xB1F JUMP JUMPDEST EQ ISZERO PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH32 0xDD8456CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x5F6 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x5F1 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x10EF JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x608 PUSH2 0x1175 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x626 PUSH2 0xAB2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x67C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x673 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x686 PUSH1 0x0 PUSH2 0x117D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C5 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4462D2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x7A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x95377BE400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7B3 SWAP2 SWAP1 PUSH2 0x19F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP5 PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x19F8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP PUSH2 0x924 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP7 PUSH2 0x1243 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP5 DUP4 DUP5 DUP7 PUSH2 0x96A SWAP2 SWAP1 PUSH2 0x19F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x979 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x99C PUSH2 0x1175 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9BA PUSH2 0xAB2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA07 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH32 0xF1A470D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xCFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9 DUP2 PUSH1 0x40 MLOAD PUSH2 0xA81 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93A80 DUP3 TIMESTAMP PUSH2 0xB31 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0xB3B SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xB8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB85 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xC35 DUP3 PUSH2 0x105C JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCC4 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE TIMESTAMP DUP3 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 PUSH2 0xD4D DUP5 PUSH1 0x0 ADD MLOAD DUP5 PUSH2 0x12CC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xD89 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 DUP6 PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x10EF JUMP JUMPDEST POP POP PUSH2 0xDCD JUMP JUMPDEST PUSH2 0xDCC PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x10EF JUMP JUMPDEST JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDEF PUSH2 0x1175 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE0D PUSH2 0xAB2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5A SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xE74 PUSH2 0x1175 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE92 PUSH2 0xAB2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDF SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC8 DUP2 GT ISZERO PUSH2 0xF23 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA552CF1000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xCC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E DUP2 PUSH1 0x40 MLOAD PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xF6C PUSH2 0x1175 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF8A PUSH2 0xAB2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD7 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1050 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1047 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1059 DUP2 PUSH2 0x117D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x1073 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x10B7 JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x108C DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x133C JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x10A0 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x10AA SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x10B4 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x4 SLOAD DUP5 PUSH2 0x10D4 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x10DE SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST PUSH2 0x10E8 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1170 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x110E SWAP3 SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1375 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x12C6 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1264 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1375 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x12E4 JUMPI PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x1335 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH2 0x12F5 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x12FF SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST DUP5 PUSH2 0x130A SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH2 0x131B SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x1325 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST DUP5 PUSH2 0x1330 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1E13380 PUSH10 0xD3C21BCECCEDA1000000 DUP4 TIMESTAMP PUSH2 0x135A SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1364 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D7 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x143C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1437 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x13F7 SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH2 0x1436 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142D SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x144B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1454 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1499 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1490 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14A2 DUP6 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x14E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D8 SWAP1 PUSH2 0x1E5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x150A SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1547 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x154C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x155C DUP3 DUP3 DUP7 PUSH2 0x158B JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x159B JUMPI DUP3 SWAP1 POP PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x15AE JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E2 SWAP2 SWAP1 PUSH2 0x1F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1613 PUSH2 0x1619 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1669 DUP2 PUSH2 0x1656 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1685 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1698 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x16AB PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x16BE PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x16D1 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x16E4 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x16F7 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1714 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1727 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x173A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x166F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x1756 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1765 DUP2 PUSH2 0x1656 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1780 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x175C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1794 DUP2 PUSH2 0x1656 JUMP JUMPDEST DUP2 EQ PUSH2 0x179F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17B1 DUP2 PUSH2 0x178B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CE JUMPI PUSH2 0x17CD PUSH2 0x1786 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17DC DUP6 DUP3 DUP7 ADD PUSH2 0x17A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17ED DUP6 DUP3 DUP7 ADD PUSH2 0x17A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180D JUMPI PUSH2 0x180C PUSH2 0x1786 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x181B DUP5 DUP3 DUP6 ADD PUSH2 0x17A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184F DUP3 PUSH2 0x1824 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x185F DUP2 PUSH2 0x1844 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x187A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1856 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1889 DUP2 PUSH2 0x1844 JUMP JUMPDEST DUP2 EQ PUSH2 0x1894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18A6 DUP2 PUSH2 0x1880 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C2 JUMPI PUSH2 0x18C1 PUSH2 0x1786 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18D0 DUP5 DUP3 DUP6 ADD PUSH2 0x1897 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18EE DUP2 PUSH2 0x18D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1909 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1949 DUP3 PUSH2 0x1656 JUMP JUMPDEST SWAP2 POP PUSH2 0x1954 DUP4 PUSH2 0x1656 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x198D JUMPI PUSH2 0x198C PUSH2 0x190F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19D2 DUP3 PUSH2 0x1656 JUMP JUMPDEST SWAP2 POP PUSH2 0x19DD DUP4 PUSH2 0x1656 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x19ED JUMPI PUSH2 0x19EC PUSH2 0x1998 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A03 DUP3 PUSH2 0x1656 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A0E DUP4 PUSH2 0x1656 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1A43 JUMPI PUSH2 0x1A42 PUSH2 0x190F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A95 PUSH1 0x20 DUP4 PUSH2 0x1A4E JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA0 DUP3 PUSH2 0x1A5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AC4 DUP2 PUSH2 0x1A88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B01 PUSH1 0x1F DUP4 PUSH2 0x1A4E JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0C DUP3 PUSH2 0x1ACB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B30 DUP2 PUSH2 0x1AF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B4C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x1B59 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x1B66 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x175C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B79 DUP3 PUSH2 0x1656 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B84 DUP4 PUSH2 0x1656 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1B97 JUMPI PUSH2 0x1B96 PUSH2 0x190F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BFE PUSH1 0x26 DUP4 PUSH2 0x1A4E JUMP JUMPDEST SWAP2 POP PUSH2 0x1C09 DUP3 PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C2D DUP2 PUSH2 0x1BF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C49 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1856 JUMP JUMPDEST PUSH2 0x1C56 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x175C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C72 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1856 JUMP JUMPDEST PUSH2 0x1C7F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1856 JUMP JUMPDEST PUSH2 0x1C8C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x175C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1C9D DUP2 PUSH2 0x18D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CBA DUP2 PUSH2 0x1C94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD6 JUMPI PUSH2 0x1CD5 PUSH2 0x1786 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CE4 DUP5 DUP3 DUP6 ADD PUSH2 0x1CAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D49 PUSH1 0x2A DUP4 PUSH2 0x1A4E JUMP JUMPDEST SWAP2 POP PUSH2 0x1D54 DUP3 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D78 DUP2 PUSH2 0x1D3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DDB PUSH1 0x26 DUP4 PUSH2 0x1A4E JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE6 DUP3 PUSH2 0x1D7F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E0A DUP2 PUSH2 0x1DCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E47 PUSH1 0x1D DUP4 PUSH2 0x1A4E JUMP JUMPDEST SWAP2 POP PUSH2 0x1E52 DUP3 PUSH2 0x1E11 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E76 DUP2 PUSH2 0x1E3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EB1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E96 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1EC0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED1 DUP3 PUSH2 0x1E7D JUMP JUMPDEST PUSH2 0x1EDB DUP2 DUP6 PUSH2 0x1E88 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EEB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E93 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F03 DUP3 DUP5 PUSH2 0x1EC6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F35 DUP3 PUSH2 0x1F0E JUMP JUMPDEST PUSH2 0x1F3F DUP2 DUP6 PUSH2 0x1A4E JUMP JUMPDEST SWAP4 POP PUSH2 0x1F4F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E93 JUMP JUMPDEST PUSH2 0x1F58 DUP2 PUSH2 0x1F19 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F7D DUP2 DUP5 PUSH2 0x1F2A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xB5 0x4B DUP16 CALLDATASIZE MOD 0xDD 0x1F GASPRICE 0xBD 0x2B 0xD0 0xEA PUSH13 0x3E2C3E3ACBFFD92273FAFD65DF PUSH18 0xD99F8D6464736F6C634300080B0033000000 ",
							"sourceMap": "1017:11982:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8587:1051;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10545:605;;;:::i;:::-;;1570:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:0;;;:::i;:::-;;4457:1349:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1434:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5814:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1703:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1649:45:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1603:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10208:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1467:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7567:1012;;;:::i;:::-;;10102:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1394:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9754:92;;;:::i;:::-;;9854:240;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8587:1051:6;8630:21;;:::i;:::-;8664:23;8690:12;:24;8703:10;8690:24;;;;;;;;;;;;;;;8664:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8812:1;8791:10;:17;;;:22;8787:87;;8837:25;;;;;;;;;;;;;;8787:87;8884:29;8916:32;;;;;;;;8931:1;8916:32;;;;8934:1;8916:32;;;;8937:10;8916:32;;;8884:64;;8961:14;8978:33;9000:10;8978:21;:33::i;:::-;8961:50;;9056:15;9028:7;:13;;;:25;;;:43;9024:218;;;9225:4;9203:18;;9194:6;:27;;;;:::i;:::-;9193:36;;;;:::i;:::-;9167:4;9145:18;;9125:10;:17;;;:38;;;;:::i;:::-;9124:47;;;;:::i;:::-;9123:107;;;;:::i;:::-;9088:7;:15;;:142;;;;;9024:218;9302:1;9258:41;9272:10;:26;;;9258:13;:41::i;:::-;:45;9254:254;;;9320:15;9338:36;9356:10;:17;;;9338;:36::i;:::-;9320:54;;9422:7;9389;:13;;;:30;;:40;;;;;9305:136;9254:254;;;9495:1;9462:7;:13;;;:30;;:34;;;;;9254:254;9546:6;9520:7;:13;;;:23;;:32;;;;;9586:10;:17;;;9563:7;:20;;:40;;;;;9623:7;9616:14;;;;;8587:1051;:::o;10545:605::-;10642:20;10665:12;:24;10678:10;10665:24;;;;;;;;;;;;;;;10642:47;;10722:1;10706:6;:13;;;:17;10702:441;;;10785:1;10744:37;10758:6;:22;;;10744:13;:37::i;:::-;:42;10740:119;;;10814:29;;;;;;;;;;;;;;10740:119;10901:1;10875:6;:23;;:27;;;;10942:15;10917:6;:22;;:40;;;;10974:157;11022:13;;;;;;;;;;;11055:10;11084:32;11102:6;:13;;;11084:17;:32::i;:::-;10974:22;:157::i;:::-;10702:441;10578:572;10545:605::o;1570:26::-;;;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;4457:1349:6:-;1744:1:1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;4766:1:6::1;4731:12;:24;4744:10;4731:24;;;;;;;;;;;;;;;:31;;;:36;4727:99;;4791:23;;;;;;;;;;;;;;4727:99;4873:1;4842:14;:27;4857:11;4842:27;;;;;;;;;;;;:32;4838:103;;;4898:31;;;;;;;;;;;;;;4838:103;4968:1;4953:11;;:16;;;;;;;:::i;:::-;;;;;;;;5013:4;4980:6;:18;4987:10;4980:18;;;;;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;5118:17;5138:15;5118:35;;5314:191;;;;;;;;5334:6;5314:191;;;;5355:9;5314:191;;;;5379:14;:27;5394:11;5379:27;;;;;;;;;;;;5314:191;;;;5436:9;5422:11;:23;;;;:::i;:::-;5314:191;;;;5461:1;5314:191;;;;5477:1;5314:191;;;;5493:1;5314:191;;::::0;5287:12:::1;:24;5300:10;5287:24;;;;;;;;;;;;;;;:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5518:147;5566:13;;;;;;;;;;;5595:10;5628:4;5648:6;5518:26;:147::i;:::-;5741:10;5734:64;;;5753:6;5761:9;5787;5773:11;:23;;;;:::i;:::-;5734:64;;;;;;;;:::i;:::-;;;;;;;;4531:1275;1701:1:1::0;2628:7;:22;;;;4457:1349:6;;:::o;1434:26::-;;;;:::o;5814:313::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5974:2:6::1;5965:6;:11;5961:83;;;6000:32;;;;;;;;;;;;;;5961:83;6075:6;6054:18;:27;;;;6097:22;6112:6;6097:22;;;;;;:::i;:::-;;;;;;;;5814:313:::0;:::o;1703:28::-;;;;;;;;;;;;;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1649:45:6:-;;;;;;;;;;;;;;;;;:::o;1603:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10208:136::-;10271:7;10330:6;10317:9;10299:15;:27;;;;:::i;:::-;10298:38;;;;:::i;:::-;10291:45;;10208:136;;;:::o;1467:27::-;;;;:::o;7567:1012::-;1744:1:1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;7735:23:6::1;7761:12;:24;7774:10;7761:24;;;;;;;;;;;;;;;7735:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;7796:14;7813:33;7835:10;7813:21;:33::i;:::-;7796:50;;7866:12;:24;7879:10;7866:24;;;;;;;;;;;;;;;;7859:31:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7916:1;7901:11;;:16;;;;;;;:::i;:::-;;;;;;;;7935:6;:18;7942:10;7935:18;;;;;;;;;;;;;;;:24;;:35;7960:9;;7935:35;;;;;;;;;;;;7928:42;;;;;;;;;;;8012:15;7987:10;:22;;;:40;7983:589;;;8063:22;8104::::0;8144:55:::1;8173:10;:17;;;8192:6;8144:28;:55::i;:::-;8044:155;;;;8216:158;8264:13;;;;;;;;;;;8297:10;8344:14;8327;:31;;;;:::i;:::-;8216:22;:158::i;:::-;8029:357;;7983:589;;;8407:153;8455:13;;;;;;;;;;;8488:10;8538:6;8518:10;:17;;;:26;;;;:::i;:::-;8407:22;:153::i;:::-;7983:589;7614:965;;1701:1:1::0;2628:7;:22;;;;7567:1012:6:o;10102:98::-;10150:7;10177:15;10170:22;;10102:98;:::o;1394:33::-;;;;:::o;9754:92::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9823:15:6::1;9808:12;:30;;;;9754:92::o:0;9854:240::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9946:3:6::1;9937:6;:12;9933:85;;;9973:33;;;;;;;;;;;;;;9933:85;10042:6;10028:11;:20;;;;10064:22;10079:6;10064:22;;;;;;:::i;:::-;;;;;;;;9854:240:::0;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6381:450:6:-;6487:7;6537:1;6516:10;:17;;;:22;6512:63;;;6562:1;6555:8;;;;6512:63;6819:4;6772:43;6798:10;:16;;;6772:25;:43::i;:::-;6732:10;:20;;;6695:10;:17;;;:57;;;;:::i;:::-;:120;;;;:::i;:::-;6694:129;;;;:::i;:::-;6674:149;;6381:450;;;;:::o;10352:185::-;10450:7;10521:8;10513:4;10498:11;;10484;:25;;;;:::i;:::-;10483:34;;;;:::i;:::-;10482:47;;;;:::i;:::-;10475:54;;10352:185;;;:::o;701:205:3:-;813:86;833:5;863:23;;;888:2;892:5;840:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;912:241:3:-;1050:96;1070:5;1100:27;;;1129:4;1135:2;1139:5;1077:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;6839:371:6:-;6959:7;6968;7007:1;6997:6;:11;6993:57;;;7033:1;7036;7025:13;;;;;;6993:57;7124:4;7102:18;;7093:6;:27;;;;:::i;:::-;7092:36;;;;:::i;:::-;7082:6;:47;;;;:::i;:::-;7186:4;7164:18;;7155:6;:27;;;;:::i;:::-;7154:36;;;;:::i;:::-;7144:6;:47;;;;:::i;:::-;7060:142;;;;6839:371;;;;;;:::o;6135:238::-;6235:7;6357:8;6349:4;6340:5;6322:15;:23;;;;:::i;:::-;6321:32;;;;:::i;:::-;6320:45;;;;:::i;:::-;6313:52;;6135:238;;;:::o;3207:706:3:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;3652:27;;;;:69;;;;;:::i;:::-;3626:95;;3755:1;3735:10;:17;:21;3731:176;;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3731:176;3277:636;3207:706;;:::o;3861:223:4:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:108::-;167:24;185:5;167:24;:::i;:::-;162:3;155:37;90:108;;:::o;252:1404::-;383:4;378:3;374:14;472:4;465:5;461:16;455:23;491:63;548:4;543:3;539:14;525:12;491:63;:::i;:::-;398:166;647:4;640:5;636:16;630:23;666:63;723:4;718:3;714:14;700:12;666:63;:::i;:::-;574:165;826:4;819:5;815:16;809:23;845:63;902:4;897:3;893:14;879:12;845:63;:::i;:::-;749:169;1007:4;1000:5;996:16;990:23;1026:63;1083:4;1078:3;1074:14;1060:12;1026:63;:::i;:::-;928:171;1186:4;1179:5;1175:16;1169:23;1205:63;1262:4;1257:3;1253:14;1239:12;1205:63;:::i;:::-;1109:169;1372:4;1365:5;1361:16;1355:23;1391:63;1448:4;1443:3;1439:14;1425:12;1391:63;:::i;:::-;1288:176;1557:4;1550:5;1546:16;1540:23;1576:63;1633:4;1628:3;1624:14;1610:12;1576:63;:::i;:::-;1474:175;352:1304;252:1404;;:::o;1728:751::-;1887:6;1882:3;1878:16;1984:4;1977:5;1973:16;1967:23;2003:63;2060:4;2055:3;2051:14;2037:12;2003:63;:::i;:::-;1904:172;2161:4;2154:5;2150:16;2144:23;2180:63;2237:4;2232:3;2228:14;2214:12;2180:63;:::i;:::-;2086:167;2336:4;2329:5;2325:16;2319:23;2355:107;2456:4;2451:3;2447:14;2433:12;2355:107;:::i;:::-;2263:209;1856:623;1728:751;;:::o;2485:347::-;2640:4;2678:3;2667:9;2663:19;2655:27;;2692:133;2822:1;2811:9;2807:17;2798:6;2692:133;:::i;:::-;2485:347;;;;:::o;2838:118::-;2925:24;2943:5;2925:24;:::i;:::-;2920:3;2913:37;2838:118;;:::o;2962:222::-;3055:4;3093:2;3082:9;3078:18;3070:26;;3106:71;3174:1;3163:9;3159:17;3150:6;3106:71;:::i;:::-;2962:222;;;;:::o;3271:117::-;3380:1;3377;3370:12;3517:122;3590:24;3608:5;3590:24;:::i;:::-;3583:5;3580:35;3570:63;;3629:1;3626;3619:12;3570:63;3517:122;:::o;3645:139::-;3691:5;3729:6;3716:20;3707:29;;3745:33;3772:5;3745:33;:::i;:::-;3645:139;;;;:::o;3790:474::-;3858:6;3866;3915:2;3903:9;3894:7;3890:23;3886:32;3883:119;;;3921:79;;:::i;:::-;3883:119;4041:1;4066:53;4111:7;4102:6;4091:9;4087:22;4066:53;:::i;:::-;4056:63;;4012:117;4168:2;4194:53;4239:7;4230:6;4219:9;4215:22;4194:53;:::i;:::-;4184:63;;4139:118;3790:474;;;;;:::o;4270:329::-;4329:6;4378:2;4366:9;4357:7;4353:23;4349:32;4346:119;;;4384:79;;:::i;:::-;4346:119;4504:1;4529:53;4574:7;4565:6;4554:9;4550:22;4529:53;:::i;:::-;4519:63;;4475:117;4270:329;;;;:::o;4605:126::-;4642:7;4682:42;4675:5;4671:54;4660:65;;4605:126;;;:::o;4737:96::-;4774:7;4803:24;4821:5;4803:24;:::i;:::-;4792:35;;4737:96;;;:::o;4839:118::-;4926:24;4944:5;4926:24;:::i;:::-;4921:3;4914:37;4839:118;;:::o;4963:222::-;5056:4;5094:2;5083:9;5079:18;5071:26;;5107:71;5175:1;5164:9;5160:17;5151:6;5107:71;:::i;:::-;4963:222;;;;:::o;5191:122::-;5264:24;5282:5;5264:24;:::i;:::-;5257:5;5254:35;5244:63;;5303:1;5300;5293:12;5244:63;5191:122;:::o;5319:139::-;5365:5;5403:6;5390:20;5381:29;;5419:33;5446:5;5419:33;:::i;:::-;5319:139;;;;:::o;5464:329::-;5523:6;5572:2;5560:9;5551:7;5547:23;5543:32;5540:119;;;5578:79;;:::i;:::-;5540:119;5698:1;5723:53;5768:7;5759:6;5748:9;5744:22;5723:53;:::i;:::-;5713:63;;5669:117;5464:329;;;;:::o;5799:90::-;5833:7;5876:5;5869:13;5862:21;5851:32;;5799:90;;;:::o;5895:109::-;5976:21;5991:5;5976:21;:::i;:::-;5971:3;5964:34;5895:109;;:::o;6010:210::-;6097:4;6135:2;6124:9;6120:18;6112:26;;6148:65;6210:1;6199:9;6195:17;6186:6;6148:65;:::i;:::-;6010:210;;;;:::o;6226:180::-;6274:77;6271:1;6264:88;6371:4;6368:1;6361:15;6395:4;6392:1;6385:15;6412:348;6452:7;6475:20;6493:1;6475:20;:::i;:::-;6470:25;;6509:20;6527:1;6509:20;:::i;:::-;6504:25;;6697:1;6629:66;6625:74;6622:1;6619:81;6614:1;6607:9;6600:17;6596:105;6593:131;;;6704:18;;:::i;:::-;6593:131;6752:1;6749;6745:9;6734:20;;6412:348;;;;:::o;6766:180::-;6814:77;6811:1;6804:88;6911:4;6908:1;6901:15;6935:4;6932:1;6925:15;6952:185;6992:1;7009:20;7027:1;7009:20;:::i;:::-;7004:25;;7043:20;7061:1;7043:20;:::i;:::-;7038:25;;7082:1;7072:35;;7087:18;;:::i;:::-;7072:35;7129:1;7126;7122:9;7117:14;;6952:185;;;;:::o;7143:305::-;7183:3;7202:20;7220:1;7202:20;:::i;:::-;7197:25;;7236:20;7254:1;7236:20;:::i;:::-;7231:25;;7390:1;7322:66;7318:74;7315:1;7312:81;7309:107;;;7396:18;;:::i;:::-;7309:107;7440:1;7437;7433:9;7426:16;;7143:305;;;;:::o;7454:169::-;7538:11;7572:6;7567:3;7560:19;7612:4;7607:3;7603:14;7588:29;;7454:169;;;;:::o;7629:182::-;7769:34;7765:1;7757:6;7753:14;7746:58;7629:182;:::o;7817:366::-;7959:3;7980:67;8044:2;8039:3;7980:67;:::i;:::-;7973:74;;8056:93;8145:3;8056:93;:::i;:::-;8174:2;8169:3;8165:12;8158:19;;7817:366;;;:::o;8189:419::-;8355:4;8393:2;8382:9;8378:18;8370:26;;8442:9;8436:4;8432:20;8428:1;8417:9;8413:17;8406:47;8470:131;8596:4;8470:131;:::i;:::-;8462:139;;8189:419;;;:::o;8614:181::-;8754:33;8750:1;8742:6;8738:14;8731:57;8614:181;:::o;8801:366::-;8943:3;8964:67;9028:2;9023:3;8964:67;:::i;:::-;8957:74;;9040:93;9129:3;9040:93;:::i;:::-;9158:2;9153:3;9149:12;9142:19;;8801:366;;;:::o;9173:419::-;9339:4;9377:2;9366:9;9362:18;9354:26;;9426:9;9420:4;9416:20;9412:1;9401:9;9397:17;9390:47;9454:131;9580:4;9454:131;:::i;:::-;9446:139;;9173:419;;;:::o;9598:442::-;9747:4;9785:2;9774:9;9770:18;9762:26;;9798:71;9866:1;9855:9;9851:17;9842:6;9798:71;:::i;:::-;9879:72;9947:2;9936:9;9932:18;9923:6;9879:72;:::i;:::-;9961;10029:2;10018:9;10014:18;10005:6;9961:72;:::i;:::-;9598:442;;;;;;:::o;10046:191::-;10086:4;10106:20;10124:1;10106:20;:::i;:::-;10101:25;;10140:20;10158:1;10140:20;:::i;:::-;10135:25;;10179:1;10176;10173:8;10170:34;;;10184:18;;:::i;:::-;10170:34;10229:1;10226;10222:9;10214:17;;10046:191;;;;:::o;10243:225::-;10383:34;10379:1;10371:6;10367:14;10360:58;10452:8;10447:2;10439:6;10435:15;10428:33;10243:225;:::o;10474:366::-;10616:3;10637:67;10701:2;10696:3;10637:67;:::i;:::-;10630:74;;10713:93;10802:3;10713:93;:::i;:::-;10831:2;10826:3;10822:12;10815:19;;10474:366;;;:::o;10846:419::-;11012:4;11050:2;11039:9;11035:18;11027:26;;11099:9;11093:4;11089:20;11085:1;11074:9;11070:17;11063:47;11127:131;11253:4;11127:131;:::i;:::-;11119:139;;10846:419;;;:::o;11271:332::-;11392:4;11430:2;11419:9;11415:18;11407:26;;11443:71;11511:1;11500:9;11496:17;11487:6;11443:71;:::i;:::-;11524:72;11592:2;11581:9;11577:18;11568:6;11524:72;:::i;:::-;11271:332;;;;;:::o;11609:442::-;11758:4;11796:2;11785:9;11781:18;11773:26;;11809:71;11877:1;11866:9;11862:17;11853:6;11809:71;:::i;:::-;11890:72;11958:2;11947:9;11943:18;11934:6;11890:72;:::i;:::-;11972;12040:2;12029:9;12025:18;12016:6;11972:72;:::i;:::-;11609:442;;;;;;:::o;12057:116::-;12127:21;12142:5;12127:21;:::i;:::-;12120:5;12117:32;12107:60;;12163:1;12160;12153:12;12107:60;12057:116;:::o;12179:137::-;12233:5;12264:6;12258:13;12249:22;;12280:30;12304:5;12280:30;:::i;:::-;12179:137;;;;:::o;12322:345::-;12389:6;12438:2;12426:9;12417:7;12413:23;12409:32;12406:119;;;12444:79;;:::i;:::-;12406:119;12564:1;12589:61;12642:7;12633:6;12622:9;12618:22;12589:61;:::i;:::-;12579:71;;12535:125;12322:345;;;;:::o;12673:229::-;12813:34;12809:1;12801:6;12797:14;12790:58;12882:12;12877:2;12869:6;12865:15;12858:37;12673:229;:::o;12908:366::-;13050:3;13071:67;13135:2;13130:3;13071:67;:::i;:::-;13064:74;;13147:93;13236:3;13147:93;:::i;:::-;13265:2;13260:3;13256:12;13249:19;;12908:366;;;:::o;13280:419::-;13446:4;13484:2;13473:9;13469:18;13461:26;;13533:9;13527:4;13523:20;13519:1;13508:9;13504:17;13497:47;13561:131;13687:4;13561:131;:::i;:::-;13553:139;;13280:419;;;:::o;13705:225::-;13845:34;13841:1;13833:6;13829:14;13822:58;13914:8;13909:2;13901:6;13897:15;13890:33;13705:225;:::o;13936:366::-;14078:3;14099:67;14163:2;14158:3;14099:67;:::i;:::-;14092:74;;14175:93;14264:3;14175:93;:::i;:::-;14293:2;14288:3;14284:12;14277:19;;13936:366;;;:::o;14308:419::-;14474:4;14512:2;14501:9;14497:18;14489:26;;14561:9;14555:4;14551:20;14547:1;14536:9;14532:17;14525:47;14589:131;14715:4;14589:131;:::i;:::-;14581:139;;14308:419;;;:::o;14733:179::-;14873:31;14869:1;14861:6;14857:14;14850:55;14733:179;:::o;14918:366::-;15060:3;15081:67;15145:2;15140:3;15081:67;:::i;:::-;15074:74;;15157:93;15246:3;15157:93;:::i;:::-;15275:2;15270:3;15266:12;15259:19;;14918:366;;;:::o;15290:419::-;15456:4;15494:2;15483:9;15479:18;15471:26;;15543:9;15537:4;15533:20;15529:1;15518:9;15514:17;15507:47;15571:131;15697:4;15571:131;:::i;:::-;15563:139;;15290:419;;;:::o;15715:98::-;15766:6;15800:5;15794:12;15784:22;;15715:98;;;:::o;15819:147::-;15920:11;15957:3;15942:18;;15819:147;;;;:::o;15972:307::-;16040:1;16050:113;16064:6;16061:1;16058:13;16050:113;;;16149:1;16144:3;16140:11;16134:18;16130:1;16125:3;16121:11;16114:39;16086:2;16083:1;16079:10;16074:15;;16050:113;;;16181:6;16178:1;16175:13;16172:101;;;16261:1;16252:6;16247:3;16243:16;16236:27;16172:101;16021:258;15972:307;;;:::o;16285:373::-;16389:3;16417:38;16449:5;16417:38;:::i;:::-;16471:88;16552:6;16547:3;16471:88;:::i;:::-;16464:95;;16568:52;16613:6;16608:3;16601:4;16594:5;16590:16;16568:52;:::i;:::-;16645:6;16640:3;16636:16;16629:23;;16393:265;16285:373;;;;:::o;16664:271::-;16794:3;16816:93;16905:3;16896:6;16816:93;:::i;:::-;16809:100;;16926:3;16919:10;;16664:271;;;;:::o;16941:99::-;16993:6;17027:5;17021:12;17011:22;;16941:99;;;:::o;17046:102::-;17087:6;17138:2;17134:7;17129:2;17122:5;17118:14;17114:28;17104:38;;17046:102;;;:::o;17154:364::-;17242:3;17270:39;17303:5;17270:39;:::i;:::-;17325:71;17389:6;17384:3;17325:71;:::i;:::-;17318:78;;17405:52;17450:6;17445:3;17438:4;17431:5;17427:16;17405:52;:::i;:::-;17482:29;17504:6;17482:29;:::i;:::-;17477:3;17473:39;17466:46;;17246:272;17154:364;;;;:::o;17524:313::-;17637:4;17675:2;17664:9;17660:18;17652:26;;17724:9;17718:4;17714:20;17710:1;17699:9;17695:17;17688:47;17752:78;17825:4;17816:6;17752:78;:::i;:::-;17744:86;;17524:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1624600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_blockTimestamp()": "358",
								"airdropRate()": "2474",
								"airdropSince()": "2518",
								"calculateWeek(uint256)": "infinite",
								"changeAirdropPercentage(uint256)": "infinite",
								"changePenaltyFee(uint256)": "infinite",
								"claimAirdrop()": "infinite",
								"hasStake()": "infinite",
								"owner()": "2633",
								"renounceOwnership()": "30464",
								"stake(uint256,uint256)": "infinite",
								"stakingPenaltyRate()": "2473",
								"startAirdrop()": "24563",
								"token_address()": "2603",
								"totalVoters()": "2497",
								"transferOwnership(address)": "30833",
								"votedUsers(uint256)": "infinite",
								"voters(address)": "2915",
								"withdrawStake()": "infinite"
							},
							"internal": {
								"_calculateAirdrop(uint256)": "infinite",
								"_calculateStakeReward(struct Stake.Stake memory)": "infinite",
								"_calculateStakingDuration(uint256)": "infinite",
								"_calculateStakingWithPenalty(uint256,uint256)": "infinite",
								"_checkVotingStatus()": "infinite",
								"_isVoter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1017,
									"end": 12999,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1017,
									"end": 12999,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1017,
									"end": 12999,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1862,
									"end": 1864,
									"name": "PUSH",
									"source": 6,
									"value": "F"
								},
								{
									"begin": 1841,
									"end": 1859,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1841,
									"end": 1864,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1841,
									"end": 1864,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1841,
									"end": 1864,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1841,
									"end": 1864,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1889,
									"end": 1891,
									"name": "PUSH",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1875,
									"end": 1886,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1875,
									"end": 1891,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1875,
									"end": 1891,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1875,
									"end": 1891,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1875,
									"end": 1891,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1920,
									"end": 1925,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1917,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1904,
									"end": 1917,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1925,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1964,
									"end": 1965,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1938,
									"end": 1961,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1953,
									"end": 1960,
									"name": "PUSH",
									"source": 6,
									"value": "76A700"
								},
								{
									"begin": 1938,
									"end": 1961,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1961,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1961,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1961,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1961,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1961,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1961,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1961,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1961,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1961,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1938,
									"end": 1961,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1965,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1965,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1965,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1965,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2003,
									"end": 2004,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1976,
									"end": 1990,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1976,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1991,
									"end": 1999,
									"name": "PUSH",
									"source": 6,
									"value": "ED4E00"
								},
								{
									"begin": 1976,
									"end": 2000,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2000,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2000,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2000,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2000,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2000,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2000,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2000,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2004,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2004,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2004,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2004,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2042,
									"end": 2043,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2015,
									"end": 2029,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2015,
									"end": 2039,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2030,
									"end": 2038,
									"name": "PUSH",
									"source": 6,
									"value": "1E13380"
								},
								{
									"begin": 2015,
									"end": 2039,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2039,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2039,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2015,
									"end": 2039,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2039,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2039,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2039,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2039,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2015,
									"end": 2039,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2039,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2015,
									"end": 2039,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2043,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2043,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2043,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2043,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 2051,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 12999,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1017,
									"end": 12999,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1017,
									"end": 12999,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1017,
									"end": 12999,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 12999,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1017,
									"end": 12999,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 12999,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1017,
									"end": 12999,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1017,
									"end": 12999,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 12999,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1017,
									"end": 12999,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048b54b8f3606dd1f3abd2bd0ea6c3e2c3e3acbffd92273fafd65df71d99f8d6464736f6c634300080b0033",
									".code": [
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "A143A5F2"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "C63AA3E7"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "C63AA3E7"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "CB79C2E1"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "D2A569C3"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "D5DBDF1B"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "A143A5F2"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "A3EC138D"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "B5D9DF83"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "B87DA76D"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "BED9D861"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "7B0472F0"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "7B0472F0"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "8891CF0D"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "8C63F97F"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "8C8E8FEE"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "10486B6A"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "5B88349D"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "5F5300FF"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 12999,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 10545,
											"end": 11150,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10545,
											"end": 11150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10545,
											"end": 11150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 10545,
											"end": 11150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 10545,
											"end": 11150,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10545,
											"end": 11150,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 10545,
											"end": 11150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10545,
											"end": 11150,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 8579,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 7567,
											"end": 8579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 8579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 7567,
											"end": 8579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 7567,
											"end": 8579,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7567,
											"end": 8579,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 7567,
											"end": 8579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 8579,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 9754,
											"end": 9846,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 9754,
											"end": 9846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9754,
											"end": 9846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 9754,
											"end": 9846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 9754,
											"end": 9846,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9754,
											"end": 9846,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 9754,
											"end": 9846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9754,
											"end": 9846,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8630,
											"end": 8651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 8630,
											"end": 8651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 8630,
											"end": 8651,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8630,
											"end": 8651,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 8630,
											"end": 8651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8690,
											"end": 8702,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 8690,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8703,
											"end": 8713,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8690,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8690,
											"end": 8714,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8690,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8690,
											"end": 8714,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8690,
											"end": 8714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8690,
											"end": 8714,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8690,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8690,
											"end": 8714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8690,
											"end": 8714,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8690,
											"end": 8714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8690,
											"end": 8714,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8690,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8690,
											"end": 8714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8690,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8690,
											"end": 8714,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8714,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8812,
											"end": 8813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8791,
											"end": 8801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8791,
											"end": 8808,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8791,
											"end": 8808,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8791,
											"end": 8808,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8791,
											"end": 8813,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8787,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 8787,
											"end": 8874,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 8862,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8837,
											"end": 8862,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 8862,
											"name": "PUSH",
											"source": 6,
											"value": "B018F08700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8837,
											"end": 8862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 8862,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 8862,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8837,
											"end": 8862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 8862,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8837,
											"end": 8862,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 8862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 8862,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 8862,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 8862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 8862,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8787,
											"end": 8874,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 8787,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8884,
											"end": 8913,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8931,
											"end": 8932,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8937,
											"end": 8947,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8884,
											"end": 8948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8884,
											"end": 8948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8961,
											"end": 8975,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8978,
											"end": 9011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 9000,
											"end": 9010,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8978,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 8978,
											"end": 9011,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8978,
											"end": 9011,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 8978,
											"end": 9011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8961,
											"end": 9011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8961,
											"end": 9011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9056,
											"end": 9071,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 9028,
											"end": 9035,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9028,
											"end": 9041,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9028,
											"end": 9041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9028,
											"end": 9041,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9028,
											"end": 9053,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9028,
											"end": 9053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9028,
											"end": 9053,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9028,
											"end": 9071,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9024,
											"end": 9242,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9024,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 9024,
											"end": 9242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9225,
											"end": 9229,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 9203,
											"end": 9221,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9203,
											"end": 9221,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9194,
											"end": 9200,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9194,
											"end": 9221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 9194,
											"end": 9221,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9194,
											"end": 9221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9194,
											"end": 9221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 9194,
											"end": 9221,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9194,
											"end": 9221,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 9194,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9193,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 9193,
											"end": 9229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9193,
											"end": 9229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9193,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 9193,
											"end": 9229,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9193,
											"end": 9229,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 9193,
											"end": 9229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9167,
											"end": 9171,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 9145,
											"end": 9163,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9145,
											"end": 9163,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9125,
											"end": 9135,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9125,
											"end": 9142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9125,
											"end": 9142,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9125,
											"end": 9142,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9125,
											"end": 9163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 9125,
											"end": 9163,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9125,
											"end": 9163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9125,
											"end": 9163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 9125,
											"end": 9163,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9125,
											"end": 9163,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 9125,
											"end": 9163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9124,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9124,
											"end": 9171,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9124,
											"end": 9171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9124,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 9124,
											"end": 9171,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9124,
											"end": 9171,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9124,
											"end": 9171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 9123,
											"end": 9230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 9123,
											"end": 9230,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9123,
											"end": 9230,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 9123,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9088,
											"end": 9095,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9088,
											"end": 9103,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9088,
											"end": 9103,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9088,
											"end": 9230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9088,
											"end": 9230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9088,
											"end": 9230,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9088,
											"end": 9230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9088,
											"end": 9230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9024,
											"end": 9242,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 9024,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 9272,
											"end": 9282,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9272,
											"end": 9298,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 9272,
											"end": 9298,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9272,
											"end": 9298,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9258,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 9258,
											"end": 9299,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9258,
											"end": 9299,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 9258,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9258,
											"end": 9303,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9254,
											"end": 9508,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9254,
											"end": 9508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 9254,
											"end": 9508,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9320,
											"end": 9335,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9338,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 9356,
											"end": 9366,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9356,
											"end": 9373,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9356,
											"end": 9373,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9356,
											"end": 9373,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 9338,
											"end": 9374,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9338,
											"end": 9374,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 9338,
											"end": 9374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9320,
											"end": 9374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9320,
											"end": 9374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9422,
											"end": 9429,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9402,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9389,
											"end": 9402,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9402,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9419,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 9389,
											"end": 9419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9429,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9429,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9429,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9305,
											"end": 9441,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9254,
											"end": 9508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 9254,
											"end": 9508,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9254,
											"end": 9508,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 9254,
											"end": 9508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9462,
											"end": 9469,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9475,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9462,
											"end": 9475,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9475,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9492,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 9462,
											"end": 9492,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9496,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9496,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9496,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9496,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9496,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9254,
											"end": 9508,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 9254,
											"end": 9508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9546,
											"end": 9552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9527,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9533,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9520,
											"end": 9533,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9533,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9543,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 9520,
											"end": 9543,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9552,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9586,
											"end": 9596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9586,
											"end": 9603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9586,
											"end": 9603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9586,
											"end": 9603,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 9570,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 9603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 9603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 9603,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 9603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 9603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9623,
											"end": 9630,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9616,
											"end": 9630,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9616,
											"end": 9630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9616,
											"end": 9630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9616,
											"end": 9630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9616,
											"end": 9630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 9638,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10545,
											"end": 11150,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 10545,
											"end": 11150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10642,
											"end": 10662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10665,
											"end": 10677,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 10665,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10678,
											"end": 10688,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10665,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10665,
											"end": 10689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10665,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10665,
											"end": 10689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10665,
											"end": 10689,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10665,
											"end": 10689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10665,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10665,
											"end": 10689,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10665,
											"end": 10689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10665,
											"end": 10689,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10665,
											"end": 10689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10665,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10665,
											"end": 10689,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10665,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10665,
											"end": 10689,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10642,
											"end": 10689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10642,
											"end": 10689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10722,
											"end": 10723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10706,
											"end": 10712,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10706,
											"end": 10719,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10706,
											"end": 10719,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10706,
											"end": 10719,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10706,
											"end": 10723,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10702,
											"end": 11143,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10702,
											"end": 11143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 10702,
											"end": 11143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10744,
											"end": 10781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10758,
											"end": 10780,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 10758,
											"end": 10780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10758,
											"end": 10780,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 10744,
											"end": 10781,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10744,
											"end": 10781,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 10744,
											"end": 10781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10786,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10859,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 10740,
											"end": 10859,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10814,
											"end": 10843,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10814,
											"end": 10843,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10814,
											"end": 10843,
											"name": "PUSH",
											"source": 6,
											"value": "DD8456CC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10814,
											"end": 10843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10814,
											"end": 10843,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10814,
											"end": 10843,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10814,
											"end": 10843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10814,
											"end": 10843,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10814,
											"end": 10843,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10814,
											"end": 10843,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10814,
											"end": 10843,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10814,
											"end": 10843,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10814,
											"end": 10843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10814,
											"end": 10843,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10859,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 10740,
											"end": 10859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10901,
											"end": 10902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10875,
											"end": 10881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10898,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10875,
											"end": 10898,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10902,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10902,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10942,
											"end": 10957,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10917,
											"end": 10923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10917,
											"end": 10939,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 10917,
											"end": 10939,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10917,
											"end": 10957,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10917,
											"end": 10957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10917,
											"end": 10957,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10917,
											"end": 10957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10974,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 11022,
											"end": 11035,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 11022,
											"end": 11035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11022,
											"end": 11035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11022,
											"end": 11035,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11022,
											"end": 11035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11022,
											"end": 11035,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11022,
											"end": 11035,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11022,
											"end": 11035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11022,
											"end": 11035,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11022,
											"end": 11035,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11022,
											"end": 11035,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11055,
											"end": 11065,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 11084,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 11102,
											"end": 11108,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11102,
											"end": 11115,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11102,
											"end": 11115,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11102,
											"end": 11115,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11084,
											"end": 11101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 11084,
											"end": 11116,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11084,
											"end": 11116,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 11084,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10974,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 10974,
											"end": 11131,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10974,
											"end": 11131,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 10974,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10702,
											"end": 11143,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 10702,
											"end": 11143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10578,
											"end": 11150,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10545,
											"end": 11150,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4766,
											"end": 4767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4743,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4754,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4762,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4762,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4762,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4767,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4727,
											"end": 4826,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4814,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4791,
											"end": 4814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4814,
											"name": "PUSH",
											"source": 6,
											"value": "4462D2700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4791,
											"end": 4814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4814,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4791,
											"end": 4814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4814,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4791,
											"end": 4814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4814,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4814,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4826,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4727,
											"end": 4826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4874,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4856,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4842,
											"end": 4869,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4868,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4869,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4869,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4869,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4869,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4869,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4869,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4869,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4869,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4869,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4869,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4869,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4869,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4874,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4941,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4838,
											"end": 4941,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4929,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4898,
											"end": 4929,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4929,
											"name": "PUSH",
											"source": 6,
											"value": "95377BE400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4898,
											"end": 4929,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4929,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4929,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4898,
											"end": 4929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4929,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4898,
											"end": 4929,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4929,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4929,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4929,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4929,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4941,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4838,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4953,
											"end": 4964,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4953,
											"end": 4964,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5013,
											"end": 5017,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4980,
											"end": 4986,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 4997,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5010,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4980,
											"end": 5010,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5010,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5017,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5118,
											"end": 5135,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5138,
											"end": 5153,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5118,
											"end": 5153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5118,
											"end": 5153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5340,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5364,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5393,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5379,
											"end": 5406,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5394,
											"end": 5405,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5406,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5406,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5379,
											"end": 5406,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5406,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5406,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5379,
											"end": 5406,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5406,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5379,
											"end": 5406,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5406,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5436,
											"end": 5445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5433,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5422,
											"end": 5445,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 5422,
											"end": 5445,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5422,
											"end": 5445,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5422,
											"end": 5445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5477,
											"end": 5478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5494,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5300,
											"end": 5310,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5518,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5566,
											"end": 5579,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 5566,
											"end": 5579,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5579,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5579,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5566,
											"end": 5579,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5579,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5579,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5566,
											"end": 5579,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5605,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5632,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5654,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5518,
											"end": 5665,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5518,
											"end": 5665,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5518,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5751,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "PUSH",
											"source": 6,
											"value": "B4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED"
										},
										{
											"begin": 5753,
											"end": 5759,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5761,
											"end": 5770,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5787,
											"end": 5796,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5773,
											"end": 5784,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5773,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5773,
											"end": 5796,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5773,
											"end": 5796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5773,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 5773,
											"end": 5796,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5773,
											"end": 5796,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5773,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5798,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 5806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 5806,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1460,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5974,
											"end": 5976,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 5965,
											"end": 5971,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5965,
											"end": 5976,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 6044,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5961,
											"end": 6044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6000,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6000,
											"end": 6032,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6000,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "F1A470D700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6000,
											"end": 6032,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6000,
											"end": 6032,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6000,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6000,
											"end": 6032,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6000,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6000,
											"end": 6032,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6000,
											"end": 6032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6000,
											"end": 6032,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6000,
											"end": 6032,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6000,
											"end": 6032,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6000,
											"end": 6032,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 6044,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5961,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6075,
											"end": 6081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6054,
											"end": 6072,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6054,
											"end": 6081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6054,
											"end": 6081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6054,
											"end": 6081,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6054,
											"end": 6081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "PUSH",
											"source": 6,
											"value": "CFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9"
										},
										{
											"begin": 6112,
											"end": 6118,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6119,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1731,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1694,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1642,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10271,
											"end": 10278,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10330,
											"end": 10336,
											"name": "PUSH",
											"source": 6,
											"value": "93A80"
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10314,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10298,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 10298,
											"end": 10336,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10298,
											"end": 10336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10298,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 10298,
											"end": 10336,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10298,
											"end": 10336,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 10298,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10291,
											"end": 10336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10291,
											"end": 10336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10344,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1494,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7567,
											"end": 8579,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 7567,
											"end": 8579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7735,
											"end": 7758,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7773,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 7761,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7774,
											"end": 7784,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7761,
											"end": 7785,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7761,
											"end": 7785,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7761,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7761,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7785,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7796,
											"end": 7810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7813,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 7835,
											"end": 7845,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7813,
											"end": 7834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 7813,
											"end": 7846,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7813,
											"end": 7846,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 7813,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7796,
											"end": 7846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7796,
											"end": 7846,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7889,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 7917,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7901,
											"end": 7912,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 7901,
											"end": 7912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7901,
											"end": 7917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7941,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7952,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7959,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7935,
											"end": 7959,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7960,
											"end": 7969,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7960,
											"end": 7969,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7970,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7970,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7935,
											"end": 7970,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7970,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7970,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7935,
											"end": 7970,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7935,
											"end": 7970,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7928,
											"end": 7970,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7928,
											"end": 7970,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 7970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 7970,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 7970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 7970,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7928,
											"end": 7970,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 7970,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 7970,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 7970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 7970,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8012,
											"end": 8027,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7987,
											"end": 7997,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7987,
											"end": 8009,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7987,
											"end": 8009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7987,
											"end": 8009,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7987,
											"end": 8027,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7983,
											"end": 8572,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7983,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7983,
											"end": 8572,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8063,
											"end": 8085,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8104,
											"end": 8126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8144,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 8173,
											"end": 8183,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8173,
											"end": 8190,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8173,
											"end": 8190,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8173,
											"end": 8190,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8192,
											"end": 8198,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8144,
											"end": 8172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 8144,
											"end": 8199,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8144,
											"end": 8199,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 8144,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8216,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 8264,
											"end": 8277,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 8264,
											"end": 8277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8264,
											"end": 8277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8264,
											"end": 8277,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8264,
											"end": 8277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8264,
											"end": 8277,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8264,
											"end": 8277,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8264,
											"end": 8277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8264,
											"end": 8277,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8264,
											"end": 8277,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8264,
											"end": 8277,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8297,
											"end": 8307,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8344,
											"end": 8358,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8327,
											"end": 8341,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8327,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 8327,
											"end": 8358,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8327,
											"end": 8358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8327,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 8327,
											"end": 8358,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8327,
											"end": 8358,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 8327,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8216,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 8216,
											"end": 8374,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8216,
											"end": 8374,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 8216,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8029,
											"end": 8386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8029,
											"end": 8386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7983,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7983,
											"end": 8572,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7983,
											"end": 8572,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7983,
											"end": 8572,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8407,
											"end": 8560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 8455,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 8455,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8455,
											"end": 8468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8455,
											"end": 8468,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8455,
											"end": 8468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8455,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8455,
											"end": 8468,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8455,
											"end": 8468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8455,
											"end": 8468,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8455,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8455,
											"end": 8468,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8488,
											"end": 8498,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8538,
											"end": 8544,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8518,
											"end": 8528,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8518,
											"end": 8535,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8518,
											"end": 8535,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8518,
											"end": 8535,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8518,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8518,
											"end": 8544,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8518,
											"end": 8544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8518,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 8518,
											"end": 8544,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8518,
											"end": 8544,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8518,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8407,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 8407,
											"end": 8560,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8407,
											"end": 8560,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 8407,
											"end": 8560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7983,
											"end": 8572,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7983,
											"end": 8572,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7614,
											"end": 8579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7614,
											"end": 8579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7567,
											"end": 8579,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10177,
											"end": 10192,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10170,
											"end": 10192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10170,
											"end": 10192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10102,
											"end": 10200,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9754,
											"end": 9846,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 9754,
											"end": 9846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9823,
											"end": 9838,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 9808,
											"end": 9820,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9808,
											"end": 9838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9808,
											"end": 9838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9808,
											"end": 9838,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9808,
											"end": 9838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9754,
											"end": 9846,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9946,
											"end": 9949,
											"name": "PUSH",
											"source": 6,
											"value": "C8"
										},
										{
											"begin": 9937,
											"end": 9943,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9937,
											"end": 9949,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9933,
											"end": 10018,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9933,
											"end": 10018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 9933,
											"end": 10018,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 10006,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9973,
											"end": 10006,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 10006,
											"name": "PUSH",
											"source": 6,
											"value": "A552CF1000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9973,
											"end": 10006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 10006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 10006,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9973,
											"end": 10006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 10006,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9973,
											"end": 10006,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 10006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 10006,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 10006,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 10006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 10006,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9933,
											"end": 10018,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 9933,
											"end": 10018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10042,
											"end": 10048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10028,
											"end": 10039,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10028,
											"end": 10048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10028,
											"end": 10048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10028,
											"end": 10048,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10028,
											"end": 10048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "PUSH",
											"source": 6,
											"value": "CC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E"
										},
										{
											"begin": 10079,
											"end": 10085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9854,
											"end": 10094,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6381,
											"end": 6831,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 6381,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6494,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6537,
											"end": 6538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6516,
											"end": 6526,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6516,
											"end": 6533,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6516,
											"end": 6533,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6516,
											"end": 6533,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6516,
											"end": 6538,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6512,
											"end": 6575,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6512,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6512,
											"end": 6575,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6555,
											"end": 6563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 6555,
											"end": 6563,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6512,
											"end": 6575,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6512,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6819,
											"end": 6823,
											"name": "PUSH",
											"source": 6,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 6772,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 6798,
											"end": 6808,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6798,
											"end": 6814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6798,
											"end": 6814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6798,
											"end": 6814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6772,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 6772,
											"end": 6815,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6772,
											"end": 6815,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 6772,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6742,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6752,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6732,
											"end": 6752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6752,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6695,
											"end": 6705,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6695,
											"end": 6712,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6695,
											"end": 6712,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6695,
											"end": 6712,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6695,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 6695,
											"end": 6752,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6695,
											"end": 6752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6695,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6695,
											"end": 6752,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6695,
											"end": 6752,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 6695,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6695,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 6695,
											"end": 6815,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6695,
											"end": 6815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6695,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6695,
											"end": 6815,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6695,
											"end": 6815,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 6695,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6694,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 6694,
											"end": 6823,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6694,
											"end": 6823,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6694,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6694,
											"end": 6823,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6694,
											"end": 6823,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 6694,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6674,
											"end": 6823,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6674,
											"end": 6823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6831,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 6381,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6831,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6831,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6831,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10352,
											"end": 10537,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 10352,
											"end": 10537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10450,
											"end": 10457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10521,
											"end": 10529,
											"name": "PUSH",
											"source": 6,
											"value": "1DFE200"
										},
										{
											"begin": 10513,
											"end": 10517,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 10498,
											"end": 10509,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10498,
											"end": 10509,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10484,
											"end": 10495,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10484,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 10484,
											"end": 10509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10484,
											"end": 10509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10484,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 10484,
											"end": 10509,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10484,
											"end": 10509,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 10484,
											"end": 10509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10483,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 10483,
											"end": 10517,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10483,
											"end": 10517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10483,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 10483,
											"end": 10517,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10483,
											"end": 10517,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 10483,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10482,
											"end": 10529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 10482,
											"end": 10529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10482,
											"end": 10529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10482,
											"end": 10529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 10482,
											"end": 10529,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10482,
											"end": 10529,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 10482,
											"end": 10529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10475,
											"end": 10529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10475,
											"end": 10529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10352,
											"end": 10537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10352,
											"end": 10537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10352,
											"end": 10537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10352,
											"end": 10537,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 813,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 833,
											"end": 838,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 863,
											"end": 886,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 863,
											"end": 886,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 863,
											"end": 886,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 888,
											"end": 890,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 892,
											"end": 897,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 813,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1129,
											"end": 1133,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1137,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1144,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6839,
											"end": 7210,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 6839,
											"end": 7210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6959,
											"end": 6966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6968,
											"end": 6975,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7007,
											"end": 7008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6997,
											"end": 7003,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6997,
											"end": 7008,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7050,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 6993,
											"end": 7050,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7036,
											"end": 7037,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7050,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 6993,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7124,
											"end": 7128,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 7102,
											"end": 7120,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7102,
											"end": 7120,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7093,
											"end": 7099,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7093,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 7093,
											"end": 7120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7093,
											"end": 7120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7093,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 7093,
											"end": 7120,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7093,
											"end": 7120,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 7093,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7092,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 7092,
											"end": 7128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7092,
											"end": 7128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7092,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 7092,
											"end": 7128,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7092,
											"end": 7128,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 7092,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 7082,
											"end": 7129,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 7082,
											"end": 7129,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7082,
											"end": 7129,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 7082,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7186,
											"end": 7190,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 7164,
											"end": 7182,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7164,
											"end": 7182,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7155,
											"end": 7161,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7155,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 7155,
											"end": 7182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7155,
											"end": 7182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7155,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 7155,
											"end": 7182,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7155,
											"end": 7182,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 7155,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7154,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 7154,
											"end": 7190,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7154,
											"end": 7190,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7154,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 7154,
											"end": 7190,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7154,
											"end": 7190,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 7154,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7144,
											"end": 7150,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7144,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 7144,
											"end": 7191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7144,
											"end": 7191,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7144,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 7144,
											"end": 7191,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7144,
											"end": 7191,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 7144,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7060,
											"end": 7202,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7060,
											"end": 7202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7060,
											"end": 7202,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7060,
											"end": 7202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 7210,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6839,
											"end": 7210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 7210,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 7210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 7210,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 7210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 7210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 7210,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6135,
											"end": 6373,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 6135,
											"end": 6373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6235,
											"end": 6242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6365,
											"name": "PUSH",
											"source": 6,
											"value": "1E13380"
										},
										{
											"begin": 6349,
											"end": 6353,
											"name": "PUSH",
											"source": 6,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 6340,
											"end": 6345,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6322,
											"end": 6337,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6322,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 6322,
											"end": 6345,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6322,
											"end": 6345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6322,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 6322,
											"end": 6345,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6322,
											"end": 6345,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 6322,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 6321,
											"end": 6353,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6321,
											"end": 6353,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6321,
											"end": 6353,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 6321,
											"end": 6353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6320,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 6320,
											"end": 6365,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6320,
											"end": 6365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6320,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6320,
											"end": 6365,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6320,
											"end": 6365,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 6320,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6313,
											"end": 6365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6313,
											"end": 6365,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6135,
											"end": 6373,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6135,
											"end": 6373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6135,
											"end": 6373,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6135,
											"end": 6373,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3649,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3755,
											"end": 3756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3756,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3830,
											"end": 3840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "261"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "262"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "261"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "262"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 198,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 90,
											"end": 198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 167,
											"end": 191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 185,
											"end": 190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 167,
											"end": 191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 167,
											"end": 191,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 167,
											"end": 191,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 167,
											"end": 191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 162,
											"end": 165,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 155,
											"end": 192,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 198,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 252,
											"end": 1656,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 252,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 383,
											"end": 387,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 378,
											"end": 381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 388,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 472,
											"end": 476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 470,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 461,
											"end": 477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 455,
											"end": 478,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 491,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 548,
											"end": 552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 546,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 539,
											"end": 553,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 525,
											"end": 537,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 491,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 491,
											"end": 554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 398,
											"end": 564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 651,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 636,
											"end": 652,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 630,
											"end": 653,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 666,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 723,
											"end": 727,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 721,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 714,
											"end": 728,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 700,
											"end": 712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 666,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 666,
											"end": 729,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 666,
											"end": 729,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 666,
											"end": 729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 574,
											"end": 739,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 826,
											"end": 830,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 815,
											"end": 831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 809,
											"end": 832,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 845,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 902,
											"end": 906,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 897,
											"end": 900,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 893,
											"end": 907,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 879,
											"end": 891,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 845,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 845,
											"end": 908,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 845,
											"end": 908,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 845,
											"end": 908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1011,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1000,
											"end": 1005,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1012,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1013,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 1083,
											"end": 1087,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1078,
											"end": 1081,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1060,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 928,
											"end": 1099,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 1190,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1191,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1192,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 1262,
											"end": 1266,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1257,
											"end": 1260,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1253,
											"end": 1267,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1372,
											"end": 1376,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 1365,
											"end": 1370,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1361,
											"end": 1377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1378,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 1448,
											"end": 1452,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 1443,
											"end": 1446,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1453,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1437,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1391,
											"end": 1454,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1391,
											"end": 1454,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 1391,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1561,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 1550,
											"end": 1555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1562,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1563,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1576,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 1633,
											"end": 1637,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 1628,
											"end": 1631,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1622,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1576,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1576,
											"end": 1639,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1576,
											"end": 1639,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 1576,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 352,
											"end": 1656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 252,
											"end": 1656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 252,
											"end": 1656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 252,
											"end": 1656,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1728,
											"end": 2479,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 1728,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1878,
											"end": 1894,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 1988,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 2060,
											"end": 2064,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2058,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2065,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2037,
											"end": 2049,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1904,
											"end": 2076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2165,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2159,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2167,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2180,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 2237,
											"end": 2241,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2232,
											"end": 2235,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2180,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2180,
											"end": 2243,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2243,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 2180,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2086,
											"end": 2253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2340,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2325,
											"end": 2341,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2342,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 2456,
											"end": 2460,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2454,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2461,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2433,
											"end": 2445,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2355,
											"end": 2462,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2355,
											"end": 2462,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 2355,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 2479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 2479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 2479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 2479,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2485,
											"end": 2832,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2485,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2640,
											"end": 2644,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2681,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2682,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2682,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2682,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2822,
											"end": 2823,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2820,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2824,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2804,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 2692,
											"end": 2825,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2692,
											"end": 2825,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2692,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2832,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2832,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2832,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2838,
											"end": 2956,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2838,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2943,
											"end": 2948,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 2925,
											"end": 2949,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2925,
											"end": 2949,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2925,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2920,
											"end": 2923,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2950,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2838,
											"end": 2956,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2838,
											"end": 2956,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2838,
											"end": 2956,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2962,
											"end": 3184,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 2962,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3095,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3091,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3096,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3106,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 3174,
											"end": 3175,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3172,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3106,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3106,
											"end": 3177,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3106,
											"end": 3177,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 3106,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 3184,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 3184,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 3184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 3184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 3184,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3271,
											"end": 3388,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3271,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3377,
											"end": 3378,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3382,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3517,
											"end": 3639,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 3517,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3608,
											"end": 3613,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 3590,
											"end": 3614,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3590,
											"end": 3614,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3590,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3588,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3615,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 3570,
											"end": 3633,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3629,
											"end": 3630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3626,
											"end": 3627,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3631,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3633,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 3570,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3517,
											"end": 3639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3517,
											"end": 3639,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3645,
											"end": 3784,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 3645,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3696,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3735,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3736,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3707,
											"end": 3736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3707,
											"end": 3736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3745,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 3772,
											"end": 3777,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3745,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 3745,
											"end": 3778,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3745,
											"end": 3778,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 3745,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3645,
											"end": 3784,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3645,
											"end": 3784,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3645,
											"end": 3784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3645,
											"end": 3784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3645,
											"end": 3784,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3790,
											"end": 4264,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3790,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3866,
											"end": 3872,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3903,
											"end": 3912,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 3913,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3886,
											"end": 3918,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 4002,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3883,
											"end": 4002,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 3921,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3921,
											"end": 4000,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3921,
											"end": 4000,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 3921,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 4002,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3883,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4042,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 4111,
											"end": 4118,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4108,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4100,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4087,
											"end": 4109,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4066,
											"end": 4119,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4066,
											"end": 4119,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 4066,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4119,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 4239,
											"end": 4246,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4228,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4215,
											"end": 4237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4194,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4194,
											"end": 4247,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4194,
											"end": 4247,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 4194,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4184,
											"end": 4247,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4184,
											"end": 4247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4257,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 4264,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 4264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 4264,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 4264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 4264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 4264,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4270,
											"end": 4599,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 4270,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4335,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4380,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4357,
											"end": 4364,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4376,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4381,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4346,
											"end": 4465,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4346,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 4346,
											"end": 4465,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 4384,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 4384,
											"end": 4463,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4384,
											"end": 4463,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 4384,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4346,
											"end": 4465,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 4346,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4505,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4554,
											"end": 4563,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4550,
											"end": 4572,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4529,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4529,
											"end": 4582,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4529,
											"end": 4582,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 4529,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4519,
											"end": 4582,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4519,
											"end": 4582,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4475,
											"end": 4592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4599,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4599,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4599,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4605,
											"end": 4731,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 4605,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4649,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4682,
											"end": 4724,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4671,
											"end": 4725,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4660,
											"end": 4725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4660,
											"end": 4725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4605,
											"end": 4731,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4605,
											"end": 4731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4605,
											"end": 4731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4605,
											"end": 4731,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4737,
											"end": 4833,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 4737,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4774,
											"end": 4781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4821,
											"end": 4826,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4803,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 4803,
											"end": 4827,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4803,
											"end": 4827,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4803,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4792,
											"end": 4827,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4792,
											"end": 4827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4833,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4833,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4839,
											"end": 4957,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 4839,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4926,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4944,
											"end": 4949,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4926,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 4926,
											"end": 4950,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4926,
											"end": 4950,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4926,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4921,
											"end": 4924,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4914,
											"end": 4951,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4839,
											"end": 4957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4839,
											"end": 4957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4839,
											"end": 4957,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4963,
											"end": 5185,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4963,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5094,
											"end": 5096,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5083,
											"end": 5092,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5079,
											"end": 5097,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 5175,
											"end": 5176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5164,
											"end": 5173,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5177,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5157,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 5107,
											"end": 5178,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5107,
											"end": 5178,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 5107,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4963,
											"end": 5185,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4963,
											"end": 5185,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4963,
											"end": 5185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4963,
											"end": 5185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4963,
											"end": 5185,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5191,
											"end": 5313,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5191,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5264,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 5282,
											"end": 5287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5264,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 5264,
											"end": 5288,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5264,
											"end": 5288,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 5264,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5257,
											"end": 5262,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5254,
											"end": 5289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 5244,
											"end": 5307,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5304,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5300,
											"end": 5301,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5305,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5307,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 5244,
											"end": 5307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5191,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5191,
											"end": 5313,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5319,
											"end": 5458,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 5319,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5390,
											"end": 5410,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5381,
											"end": 5410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5381,
											"end": 5410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 5446,
											"end": 5451,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5419,
											"end": 5452,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5419,
											"end": 5452,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 5419,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5319,
											"end": 5458,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5319,
											"end": 5458,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5319,
											"end": 5458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5319,
											"end": 5458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5319,
											"end": 5458,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5464,
											"end": 5793,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 5464,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5572,
											"end": 5574,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5558,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5570,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5575,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5659,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 5540,
											"end": 5659,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 5578,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 5578,
											"end": 5657,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5578,
											"end": 5657,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 5578,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5659,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 5540,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5698,
											"end": 5699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5723,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 5768,
											"end": 5775,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5765,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 5757,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5744,
											"end": 5766,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5723,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 5723,
											"end": 5776,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5723,
											"end": 5776,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 5723,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5776,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5776,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5669,
											"end": 5786,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 5793,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 5793,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 5793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 5793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 5793,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5799,
											"end": 5889,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 5799,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5833,
											"end": 5840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5876,
											"end": 5881,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5869,
											"end": 5882,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5862,
											"end": 5883,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5851,
											"end": 5883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5851,
											"end": 5883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5889,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5895,
											"end": 6004,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 5895,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 5991,
											"end": 5996,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 5976,
											"end": 5997,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5976,
											"end": 5997,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 5976,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5971,
											"end": 5974,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5964,
											"end": 5998,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5895,
											"end": 6004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5895,
											"end": 6004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5895,
											"end": 6004,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6010,
											"end": 6220,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6010,
											"end": 6220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6135,
											"end": 6137,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6124,
											"end": 6133,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6120,
											"end": 6138,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6138,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6148,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 6210,
											"end": 6211,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6208,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6212,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6186,
											"end": 6192,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6148,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 6148,
											"end": 6213,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6148,
											"end": 6213,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 6148,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6220,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6220,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6220,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6226,
											"end": 6406,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 6226,
											"end": 6406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6351,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6271,
											"end": 6272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6264,
											"end": 6352,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6371,
											"end": 6375,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6368,
											"end": 6369,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6361,
											"end": 6376,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6399,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6392,
											"end": 6393,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6385,
											"end": 6400,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6412,
											"end": 6760,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 6412,
											"end": 6760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6459,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 6493,
											"end": 6494,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 6475,
											"end": 6495,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6475,
											"end": 6495,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 6475,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6470,
											"end": 6495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6470,
											"end": 6495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6509,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 6527,
											"end": 6528,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6509,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 6509,
											"end": 6529,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6509,
											"end": 6529,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 6509,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6504,
											"end": 6529,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6504,
											"end": 6529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6697,
											"end": 6698,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6629,
											"end": 6695,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6625,
											"end": 6699,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6623,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6619,
											"end": 6700,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6614,
											"end": 6615,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6607,
											"end": 6616,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6617,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6596,
											"end": 6701,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6724,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 6593,
											"end": 6724,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6724,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 6593,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6753,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6749,
											"end": 6750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6745,
											"end": 6754,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6734,
											"end": 6754,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6734,
											"end": 6754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6412,
											"end": 6760,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6412,
											"end": 6760,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6412,
											"end": 6760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6412,
											"end": 6760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6412,
											"end": 6760,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6766,
											"end": 6946,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 6766,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6814,
											"end": 6891,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6811,
											"end": 6812,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6804,
											"end": 6892,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6911,
											"end": 6915,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 6908,
											"end": 6909,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6901,
											"end": 6916,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6935,
											"end": 6939,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6932,
											"end": 6933,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6940,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7137,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6952,
											"end": 7137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6992,
											"end": 6993,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7009,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 7027,
											"end": 7028,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7009,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7009,
											"end": 7029,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7009,
											"end": 7029,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 7009,
											"end": 7029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7004,
											"end": 7029,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7004,
											"end": 7029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 7061,
											"end": 7062,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7043,
											"end": 7063,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7043,
											"end": 7063,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 7043,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7082,
											"end": 7083,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7072,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 7072,
											"end": 7107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 7087,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 7087,
											"end": 7105,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7087,
											"end": 7105,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 7087,
											"end": 7105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7072,
											"end": 7107,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 7072,
											"end": 7107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7129,
											"end": 7130,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7127,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7131,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7117,
											"end": 7131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7137,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7137,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7137,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7143,
											"end": 7448,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 7143,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7183,
											"end": 7186,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7202,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 7220,
											"end": 7221,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7202,
											"end": 7222,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7202,
											"end": 7222,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 7202,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7197,
											"end": 7222,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7197,
											"end": 7222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7236,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 7254,
											"end": 7255,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7236,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7236,
											"end": 7256,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7236,
											"end": 7256,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 7236,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7231,
											"end": 7256,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7231,
											"end": 7256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7390,
											"end": 7391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7322,
											"end": 7388,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7318,
											"end": 7392,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7315,
											"end": 7316,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7312,
											"end": 7393,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7309,
											"end": 7416,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7309,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 7309,
											"end": 7416,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7396,
											"end": 7414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 7396,
											"end": 7414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 7396,
											"end": 7414,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7396,
											"end": 7414,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 7396,
											"end": 7414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7309,
											"end": 7416,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 7309,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7440,
											"end": 7441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7437,
											"end": 7438,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7433,
											"end": 7442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7442,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7448,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7448,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7454,
											"end": 7623,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 7454,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7538,
											"end": 7549,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7567,
											"end": 7570,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7579,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7612,
											"end": 7616,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7607,
											"end": 7610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7603,
											"end": 7617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7588,
											"end": 7617,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7588,
											"end": 7617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7454,
											"end": 7623,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7454,
											"end": 7623,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7454,
											"end": 7623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7454,
											"end": 7623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7454,
											"end": 7623,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7629,
											"end": 7811,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 7629,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7769,
											"end": 7803,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7765,
											"end": 7766,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7757,
											"end": 7763,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7753,
											"end": 7767,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7746,
											"end": 7804,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7629,
											"end": 7811,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7629,
											"end": 7811,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7817,
											"end": 8183,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 7817,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7959,
											"end": 7962,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7980,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 8044,
											"end": 8046,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8039,
											"end": 8042,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7980,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 7980,
											"end": 8047,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7980,
											"end": 8047,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 7980,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 8047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 8047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8056,
											"end": 8149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 8145,
											"end": 8148,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8056,
											"end": 8149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 8056,
											"end": 8149,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8056,
											"end": 8149,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 8056,
											"end": 8149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8174,
											"end": 8176,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8169,
											"end": 8172,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8165,
											"end": 8177,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7817,
											"end": 8183,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7817,
											"end": 8183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7817,
											"end": 8183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7817,
											"end": 8183,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8189,
											"end": 8608,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 8189,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8355,
											"end": 8359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8393,
											"end": 8395,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8382,
											"end": 8391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8378,
											"end": 8396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 8396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 8396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8442,
											"end": 8451,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8440,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8432,
											"end": 8452,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8417,
											"end": 8426,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8413,
											"end": 8430,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8406,
											"end": 8453,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8470,
											"end": 8601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 8596,
											"end": 8600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8470,
											"end": 8601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 8470,
											"end": 8601,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8470,
											"end": 8601,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 8470,
											"end": 8601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8462,
											"end": 8601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8462,
											"end": 8601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8189,
											"end": 8608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8189,
											"end": 8608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8189,
											"end": 8608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8189,
											"end": 8608,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8614,
											"end": 8795,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 8614,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8754,
											"end": 8787,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 8750,
											"end": 8751,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8742,
											"end": 8748,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8738,
											"end": 8752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8731,
											"end": 8788,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8614,
											"end": 8795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8614,
											"end": 8795,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8801,
											"end": 9167,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 8801,
											"end": 9167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8943,
											"end": 8946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8964,
											"end": 9031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 9028,
											"end": 9030,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9023,
											"end": 9026,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8964,
											"end": 9031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 8964,
											"end": 9031,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8964,
											"end": 9031,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 8964,
											"end": 9031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8957,
											"end": 9031,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8957,
											"end": 9031,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9040,
											"end": 9133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 9129,
											"end": 9132,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9040,
											"end": 9133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 9040,
											"end": 9133,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9040,
											"end": 9133,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 9040,
											"end": 9133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9158,
											"end": 9160,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9153,
											"end": 9156,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9149,
											"end": 9161,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9142,
											"end": 9161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9142,
											"end": 9161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8801,
											"end": 9167,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8801,
											"end": 9167,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8801,
											"end": 9167,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8801,
											"end": 9167,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9173,
											"end": 9592,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 9173,
											"end": 9592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9339,
											"end": 9343,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9377,
											"end": 9379,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9366,
											"end": 9375,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9362,
											"end": 9380,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9354,
											"end": 9380,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9354,
											"end": 9380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9435,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9420,
											"end": 9424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9416,
											"end": 9436,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9413,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9401,
											"end": 9410,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9397,
											"end": 9414,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9390,
											"end": 9437,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9454,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 9580,
											"end": 9584,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9454,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 9454,
											"end": 9585,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9454,
											"end": 9585,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 9454,
											"end": 9585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9446,
											"end": 9585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9446,
											"end": 9585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9173,
											"end": 9592,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9173,
											"end": 9592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9173,
											"end": 9592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9173,
											"end": 9592,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9598,
											"end": 10040,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 9598,
											"end": 10040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9747,
											"end": 9751,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9785,
											"end": 9787,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9774,
											"end": 9783,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9770,
											"end": 9788,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9762,
											"end": 9788,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9762,
											"end": 9788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 9866,
											"end": 9867,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9864,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9842,
											"end": 9848,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9798,
											"end": 9869,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9798,
											"end": 9869,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 9798,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9879,
											"end": 9951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 9947,
											"end": 9949,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9936,
											"end": 9945,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9932,
											"end": 9950,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9923,
											"end": 9929,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9879,
											"end": 9951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9879,
											"end": 9951,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9879,
											"end": 9951,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 9879,
											"end": 9951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9961,
											"end": 10033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 10029,
											"end": 10031,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10018,
											"end": 10027,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10005,
											"end": 10011,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9961,
											"end": 10033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9961,
											"end": 10033,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9961,
											"end": 10033,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 9961,
											"end": 10033,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9598,
											"end": 10040,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9598,
											"end": 10040,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9598,
											"end": 10040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9598,
											"end": 10040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9598,
											"end": 10040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9598,
											"end": 10040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9598,
											"end": 10040,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10046,
											"end": 10237,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 10046,
											"end": 10237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10086,
											"end": 10090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10106,
											"end": 10126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 10124,
											"end": 10125,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10106,
											"end": 10126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 10106,
											"end": 10126,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10106,
											"end": 10126,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 10106,
											"end": 10126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10101,
											"end": 10126,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10101,
											"end": 10126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10140,
											"end": 10160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 10158,
											"end": 10159,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10140,
											"end": 10160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 10140,
											"end": 10160,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10140,
											"end": 10160,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 10140,
											"end": 10160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10135,
											"end": 10160,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10135,
											"end": 10160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10179,
											"end": 10180,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10176,
											"end": 10177,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10173,
											"end": 10181,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10170,
											"end": 10204,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10170,
											"end": 10204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 10170,
											"end": 10204,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10184,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 10184,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 10184,
											"end": 10202,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10184,
											"end": 10202,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 10184,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10170,
											"end": 10204,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 10170,
											"end": 10204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10229,
											"end": 10230,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10226,
											"end": 10227,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10222,
											"end": 10231,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10214,
											"end": 10231,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10214,
											"end": 10231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10046,
											"end": 10237,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10046,
											"end": 10237,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10046,
											"end": 10237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10046,
											"end": 10237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10046,
											"end": 10237,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10243,
											"end": 10468,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 10243,
											"end": 10468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10383,
											"end": 10417,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 10379,
											"end": 10380,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10367,
											"end": 10381,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10418,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10452,
											"end": 10460,
											"name": "PUSH",
											"source": 7,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10447,
											"end": 10449,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10439,
											"end": 10445,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10435,
											"end": 10450,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10428,
											"end": 10461,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10243,
											"end": 10468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10243,
											"end": 10468,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10474,
											"end": 10840,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 10474,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10616,
											"end": 10619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10637,
											"end": 10704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 10701,
											"end": 10703,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 10696,
											"end": 10699,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10637,
											"end": 10704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 10637,
											"end": 10704,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10637,
											"end": 10704,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 10637,
											"end": 10704,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10630,
											"end": 10704,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10630,
											"end": 10704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10713,
											"end": 10806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 10802,
											"end": 10805,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10713,
											"end": 10806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 10713,
											"end": 10806,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10713,
											"end": 10806,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 10713,
											"end": 10806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10831,
											"end": 10833,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10826,
											"end": 10829,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10822,
											"end": 10834,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10815,
											"end": 10834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10815,
											"end": 10834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10474,
											"end": 10840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10474,
											"end": 10840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10474,
											"end": 10840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10474,
											"end": 10840,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10846,
											"end": 11265,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 10846,
											"end": 11265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11012,
											"end": 11016,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11050,
											"end": 11052,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11039,
											"end": 11048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11035,
											"end": 11053,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11099,
											"end": 11108,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11093,
											"end": 11097,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11089,
											"end": 11109,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11085,
											"end": 11086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11074,
											"end": 11083,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11070,
											"end": 11087,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11063,
											"end": 11110,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11127,
											"end": 11258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 11253,
											"end": 11257,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11127,
											"end": 11258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 11127,
											"end": 11258,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11127,
											"end": 11258,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 11127,
											"end": 11258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11119,
											"end": 11258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11119,
											"end": 11258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10846,
											"end": 11265,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10846,
											"end": 11265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10846,
											"end": 11265,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10846,
											"end": 11265,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11271,
											"end": 11603,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 11271,
											"end": 11603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11392,
											"end": 11396,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11430,
											"end": 11432,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11419,
											"end": 11428,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11415,
											"end": 11433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11407,
											"end": 11433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11407,
											"end": 11433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11443,
											"end": 11514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 11511,
											"end": 11512,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11500,
											"end": 11509,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11496,
											"end": 11513,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11487,
											"end": 11493,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11443,
											"end": 11514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11443,
											"end": 11514,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11443,
											"end": 11514,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 11443,
											"end": 11514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11524,
											"end": 11596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 11592,
											"end": 11594,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11581,
											"end": 11590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11577,
											"end": 11595,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11568,
											"end": 11574,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11524,
											"end": 11596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 11524,
											"end": 11596,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11524,
											"end": 11596,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 11524,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11271,
											"end": 11603,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11271,
											"end": 11603,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11271,
											"end": 11603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11271,
											"end": 11603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11271,
											"end": 11603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11271,
											"end": 11603,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11609,
											"end": 12051,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 11609,
											"end": 12051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11758,
											"end": 11762,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11796,
											"end": 11798,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11785,
											"end": 11794,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11781,
											"end": 11799,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11773,
											"end": 11799,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11773,
											"end": 11799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11809,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 11877,
											"end": 11878,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11866,
											"end": 11875,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11862,
											"end": 11879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11853,
											"end": 11859,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11809,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11809,
											"end": 11880,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11809,
											"end": 11880,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 11809,
											"end": 11880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11890,
											"end": 11962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 11958,
											"end": 11960,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11947,
											"end": 11956,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11943,
											"end": 11961,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11934,
											"end": 11940,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11890,
											"end": 11962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11890,
											"end": 11962,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11890,
											"end": 11962,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 11890,
											"end": 11962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11972,
											"end": 12044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 12040,
											"end": 12042,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12029,
											"end": 12038,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12025,
											"end": 12043,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12016,
											"end": 12022,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11972,
											"end": 12044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 11972,
											"end": 12044,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11972,
											"end": 12044,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 11972,
											"end": 12044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11609,
											"end": 12051,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 11609,
											"end": 12051,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11609,
											"end": 12051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11609,
											"end": 12051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11609,
											"end": 12051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11609,
											"end": 12051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11609,
											"end": 12051,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12057,
											"end": 12173,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 12057,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12127,
											"end": 12148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 12142,
											"end": 12147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12127,
											"end": 12148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 12127,
											"end": 12148,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12127,
											"end": 12148,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 12127,
											"end": 12148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12120,
											"end": 12125,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12117,
											"end": 12149,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12107,
											"end": 12167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 12107,
											"end": 12167,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12163,
											"end": 12164,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12160,
											"end": 12161,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12153,
											"end": 12165,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12107,
											"end": 12167,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 12107,
											"end": 12167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12057,
											"end": 12173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12057,
											"end": 12173,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12179,
											"end": 12316,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 12179,
											"end": 12316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12233,
											"end": 12238,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12264,
											"end": 12270,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12258,
											"end": 12271,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12249,
											"end": 12271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12249,
											"end": 12271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12280,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 12304,
											"end": 12309,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12280,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 12280,
											"end": 12310,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12280,
											"end": 12310,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 12280,
											"end": 12310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12179,
											"end": 12316,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12179,
											"end": 12316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12179,
											"end": 12316,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12179,
											"end": 12316,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12179,
											"end": 12316,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12322,
											"end": 12667,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 12322,
											"end": 12667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12389,
											"end": 12395,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12438,
											"end": 12440,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12426,
											"end": 12435,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12417,
											"end": 12424,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12413,
											"end": 12436,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12409,
											"end": 12441,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 12406,
											"end": 12525,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12406,
											"end": 12525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 12406,
											"end": 12525,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12444,
											"end": 12523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 12444,
											"end": 12523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 12444,
											"end": 12523,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12444,
											"end": 12523,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 12444,
											"end": 12523,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12406,
											"end": 12525,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 12406,
											"end": 12525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12564,
											"end": 12565,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12589,
											"end": 12650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 12642,
											"end": 12649,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12633,
											"end": 12639,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12622,
											"end": 12631,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12618,
											"end": 12640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12589,
											"end": 12650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 12589,
											"end": 12650,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12589,
											"end": 12650,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 12589,
											"end": 12650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12579,
											"end": 12650,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12579,
											"end": 12650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12535,
											"end": 12660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12322,
											"end": 12667,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12322,
											"end": 12667,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12322,
											"end": 12667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12322,
											"end": 12667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12322,
											"end": 12667,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12673,
											"end": 12902,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 12673,
											"end": 12902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12813,
											"end": 12847,
											"name": "PUSH",
											"source": 7,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 12809,
											"end": 12810,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12801,
											"end": 12807,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12797,
											"end": 12811,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12790,
											"end": 12848,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12882,
											"end": 12894,
											"name": "PUSH",
											"source": 7,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 12877,
											"end": 12879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12869,
											"end": 12875,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12865,
											"end": 12880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12858,
											"end": 12895,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12673,
											"end": 12902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12673,
											"end": 12902,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13050,
											"end": 13053,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13071,
											"end": 13138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 13135,
											"end": 13137,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 13130,
											"end": 13133,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13071,
											"end": 13138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 13071,
											"end": 13138,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13071,
											"end": 13138,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 13071,
											"end": 13138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13064,
											"end": 13138,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13064,
											"end": 13138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13147,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 13236,
											"end": 13239,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13147,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 13147,
											"end": 13240,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13147,
											"end": 13240,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 13147,
											"end": 13240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13265,
											"end": 13267,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13260,
											"end": 13263,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13256,
											"end": 13268,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13249,
											"end": 13268,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13249,
											"end": 13268,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12908,
											"end": 13274,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13280,
											"end": 13699,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 13280,
											"end": 13699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13446,
											"end": 13450,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13484,
											"end": 13486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13473,
											"end": 13482,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13461,
											"end": 13487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13461,
											"end": 13487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13533,
											"end": 13542,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13527,
											"end": 13531,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13523,
											"end": 13543,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13519,
											"end": 13520,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13508,
											"end": 13517,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13504,
											"end": 13521,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13497,
											"end": 13544,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13561,
											"end": 13692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 13687,
											"end": 13691,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13561,
											"end": 13692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 13561,
											"end": 13692,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13561,
											"end": 13692,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 13561,
											"end": 13692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13553,
											"end": 13692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13553,
											"end": 13692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13280,
											"end": 13699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13280,
											"end": 13699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13280,
											"end": 13699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13280,
											"end": 13699,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13705,
											"end": 13930,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 13705,
											"end": 13930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13845,
											"end": 13879,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 13841,
											"end": 13842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13833,
											"end": 13839,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13829,
											"end": 13843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13822,
											"end": 13880,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13914,
											"end": 13922,
											"name": "PUSH",
											"source": 7,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13909,
											"end": 13911,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13901,
											"end": 13907,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13897,
											"end": 13912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13890,
											"end": 13923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13705,
											"end": 13930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13705,
											"end": 13930,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13936,
											"end": 14302,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 13936,
											"end": 14302,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14078,
											"end": 14081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14099,
											"end": 14166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 14163,
											"end": 14165,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 14158,
											"end": 14161,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14099,
											"end": 14166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 14099,
											"end": 14166,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14099,
											"end": 14166,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 14099,
											"end": 14166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14092,
											"end": 14166,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14092,
											"end": 14166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14175,
											"end": 14268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 14264,
											"end": 14267,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14175,
											"end": 14268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 14175,
											"end": 14268,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14175,
											"end": 14268,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 14175,
											"end": 14268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14293,
											"end": 14295,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14288,
											"end": 14291,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14284,
											"end": 14296,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14277,
											"end": 14296,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14277,
											"end": 14296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13936,
											"end": 14302,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13936,
											"end": 14302,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13936,
											"end": 14302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13936,
											"end": 14302,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14308,
											"end": 14727,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 14308,
											"end": 14727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14474,
											"end": 14478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14512,
											"end": 14514,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14501,
											"end": 14510,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14497,
											"end": 14515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14489,
											"end": 14515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14489,
											"end": 14515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14561,
											"end": 14570,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14555,
											"end": 14559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14551,
											"end": 14571,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14547,
											"end": 14548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14536,
											"end": 14545,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14532,
											"end": 14549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14525,
											"end": 14572,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14589,
											"end": 14720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 14715,
											"end": 14719,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14589,
											"end": 14720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 14589,
											"end": 14720,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14589,
											"end": 14720,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 14589,
											"end": 14720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14581,
											"end": 14720,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14581,
											"end": 14720,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14308,
											"end": 14727,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14308,
											"end": 14727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14308,
											"end": 14727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14308,
											"end": 14727,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14733,
											"end": 14912,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 14733,
											"end": 14912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14873,
											"end": 14904,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 14869,
											"end": 14870,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14861,
											"end": 14867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14857,
											"end": 14871,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14850,
											"end": 14905,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14733,
											"end": 14912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14733,
											"end": 14912,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14918,
											"end": 15284,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 14918,
											"end": 15284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15060,
											"end": 15063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15081,
											"end": 15148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 15145,
											"end": 15147,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 15140,
											"end": 15143,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15081,
											"end": 15148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 15081,
											"end": 15148,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15081,
											"end": 15148,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 15081,
											"end": 15148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15074,
											"end": 15148,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15074,
											"end": 15148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15157,
											"end": 15250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 15246,
											"end": 15249,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15157,
											"end": 15250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 15157,
											"end": 15250,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15157,
											"end": 15250,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 15157,
											"end": 15250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15275,
											"end": 15277,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15270,
											"end": 15273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15266,
											"end": 15278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15259,
											"end": 15278,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15259,
											"end": 15278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14918,
											"end": 15284,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14918,
											"end": 15284,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14918,
											"end": 15284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14918,
											"end": 15284,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 15290,
											"end": 15709,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 15290,
											"end": 15709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15456,
											"end": 15460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15494,
											"end": 15496,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15483,
											"end": 15492,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15479,
											"end": 15497,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15471,
											"end": 15497,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15471,
											"end": 15497,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15543,
											"end": 15552,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15537,
											"end": 15541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15533,
											"end": 15553,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15529,
											"end": 15530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15518,
											"end": 15527,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15514,
											"end": 15531,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15507,
											"end": 15554,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15571,
											"end": 15702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 15697,
											"end": 15701,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15571,
											"end": 15702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 15571,
											"end": 15702,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15571,
											"end": 15702,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 15571,
											"end": 15702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15563,
											"end": 15702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15563,
											"end": 15702,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15290,
											"end": 15709,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15290,
											"end": 15709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15290,
											"end": 15709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15290,
											"end": 15709,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 15715,
											"end": 15813,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 15715,
											"end": 15813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15766,
											"end": 15772,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15800,
											"end": 15805,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15794,
											"end": 15806,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15784,
											"end": 15806,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15784,
											"end": 15806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15715,
											"end": 15813,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15715,
											"end": 15813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15715,
											"end": 15813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15715,
											"end": 15813,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 15819,
											"end": 15966,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 15819,
											"end": 15966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15920,
											"end": 15931,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15957,
											"end": 15960,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15942,
											"end": 15960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15942,
											"end": 15960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15819,
											"end": 15966,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15819,
											"end": 15966,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15819,
											"end": 15966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15819,
											"end": 15966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15819,
											"end": 15966,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 15972,
											"end": 16279,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 15972,
											"end": 16279,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16040,
											"end": 16041,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16050,
											"end": 16163,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 16050,
											"end": 16163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16064,
											"end": 16070,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16061,
											"end": 16062,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16058,
											"end": 16071,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 16050,
											"end": 16163,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16050,
											"end": 16163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 16050,
											"end": 16163,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16149,
											"end": 16150,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16144,
											"end": 16147,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16140,
											"end": 16151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16134,
											"end": 16152,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16130,
											"end": 16131,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16125,
											"end": 16128,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16121,
											"end": 16132,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16114,
											"end": 16153,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16086,
											"end": 16088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16083,
											"end": 16084,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16079,
											"end": 16089,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16074,
											"end": 16089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16074,
											"end": 16089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16050,
											"end": 16163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 16050,
											"end": 16163,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16050,
											"end": 16163,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 16050,
											"end": 16163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16181,
											"end": 16187,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16178,
											"end": 16179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16175,
											"end": 16188,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16172,
											"end": 16273,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16172,
											"end": 16273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 16172,
											"end": 16273,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16261,
											"end": 16262,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16252,
											"end": 16258,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16247,
											"end": 16250,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16243,
											"end": 16259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16236,
											"end": 16263,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16172,
											"end": 16273,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 16172,
											"end": 16273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16021,
											"end": 16279,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15972,
											"end": 16279,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15972,
											"end": 16279,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15972,
											"end": 16279,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15972,
											"end": 16279,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16285,
											"end": 16658,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 16285,
											"end": 16658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16389,
											"end": 16392,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16417,
											"end": 16455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 16449,
											"end": 16454,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16417,
											"end": 16455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 16417,
											"end": 16455,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16417,
											"end": 16455,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 16417,
											"end": 16455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16471,
											"end": 16559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 16552,
											"end": 16558,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16547,
											"end": 16550,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16471,
											"end": 16559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 16471,
											"end": 16559,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16471,
											"end": 16559,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 16471,
											"end": 16559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16464,
											"end": 16559,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 16464,
											"end": 16559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16568,
											"end": 16620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 16613,
											"end": 16619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16608,
											"end": 16611,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16601,
											"end": 16605,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16594,
											"end": 16599,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16590,
											"end": 16606,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16568,
											"end": 16620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 16568,
											"end": 16620,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16568,
											"end": 16620,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 16568,
											"end": 16620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16645,
											"end": 16651,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16640,
											"end": 16643,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16636,
											"end": 16652,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16629,
											"end": 16652,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16629,
											"end": 16652,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16393,
											"end": 16658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16285,
											"end": 16658,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16285,
											"end": 16658,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16285,
											"end": 16658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16285,
											"end": 16658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16285,
											"end": 16658,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16664,
											"end": 16935,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 16664,
											"end": 16935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16794,
											"end": 16797,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16816,
											"end": 16909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 16905,
											"end": 16908,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16896,
											"end": 16902,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16816,
											"end": 16909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 16816,
											"end": 16909,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16816,
											"end": 16909,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 16816,
											"end": 16909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16809,
											"end": 16909,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16809,
											"end": 16909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16926,
											"end": 16929,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16919,
											"end": 16929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16919,
											"end": 16929,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16664,
											"end": 16935,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16664,
											"end": 16935,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16664,
											"end": 16935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16664,
											"end": 16935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16664,
											"end": 16935,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16941,
											"end": 17040,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 16941,
											"end": 17040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16993,
											"end": 16999,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17027,
											"end": 17032,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17021,
											"end": 17033,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17011,
											"end": 17033,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17011,
											"end": 17033,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16941,
											"end": 17040,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16941,
											"end": 17040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16941,
											"end": 17040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16941,
											"end": 17040,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 17046,
											"end": 17148,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 17046,
											"end": 17148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17087,
											"end": 17093,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17138,
											"end": 17140,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17134,
											"end": 17141,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 17129,
											"end": 17131,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17122,
											"end": 17127,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17118,
											"end": 17132,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17114,
											"end": 17142,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17104,
											"end": 17142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17104,
											"end": 17142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17046,
											"end": 17148,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17046,
											"end": 17148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17046,
											"end": 17148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17046,
											"end": 17148,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 17154,
											"end": 17518,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 17154,
											"end": 17518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17242,
											"end": 17245,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17270,
											"end": 17309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 17303,
											"end": 17308,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17270,
											"end": 17309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 17270,
											"end": 17309,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17270,
											"end": 17309,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 17270,
											"end": 17309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17325,
											"end": 17396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 17389,
											"end": 17395,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17384,
											"end": 17387,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17325,
											"end": 17396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 17325,
											"end": 17396,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17325,
											"end": 17396,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 17325,
											"end": 17396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17318,
											"end": 17396,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17318,
											"end": 17396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17405,
											"end": 17457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 17450,
											"end": 17456,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17445,
											"end": 17448,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17438,
											"end": 17442,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17436,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17427,
											"end": 17443,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17405,
											"end": 17457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 17405,
											"end": 17457,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17405,
											"end": 17457,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 17405,
											"end": 17457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17482,
											"end": 17511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 17504,
											"end": 17510,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17482,
											"end": 17511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 17482,
											"end": 17511,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17482,
											"end": 17511,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 17482,
											"end": 17511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17477,
											"end": 17480,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17473,
											"end": 17512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17466,
											"end": 17512,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17466,
											"end": 17512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17246,
											"end": 17518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17154,
											"end": 17518,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17154,
											"end": 17518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17154,
											"end": 17518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17154,
											"end": 17518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17154,
											"end": 17518,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 17524,
											"end": 17837,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 17524,
											"end": 17837,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17637,
											"end": 17641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17675,
											"end": 17677,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17664,
											"end": 17673,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17660,
											"end": 17678,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17652,
											"end": 17678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17652,
											"end": 17678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17724,
											"end": 17733,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17718,
											"end": 17722,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17714,
											"end": 17734,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17710,
											"end": 17711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17699,
											"end": 17708,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17695,
											"end": 17712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17688,
											"end": 17735,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17752,
											"end": 17830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 17825,
											"end": 17829,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17816,
											"end": 17822,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17752,
											"end": 17830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 17752,
											"end": 17830,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17752,
											"end": 17830,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 17752,
											"end": 17830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17744,
											"end": 17830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17744,
											"end": 17830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17524,
											"end": 17837,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17524,
											"end": 17837,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17524,
											"end": 17837,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17524,
											"end": 17837,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17524,
											"end": 17837,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_blockTimestamp()": "c63aa3e7",
							"airdropRate()": "8891cf0d",
							"airdropSince()": "b87da76d",
							"calculateWeek(uint256)": "b5d9df83",
							"changeAirdropPercentage(uint256)": "d5dbdf1b",
							"changePenaltyFee(uint256)": "8c63f97f",
							"claimAirdrop()": "5b88349d",
							"hasStake()": "10486b6a",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stake(uint256,uint256)": "7b0472f0",
							"stakingPenaltyRate()": "cb79c2e1",
							"startAirdrop()": "d2a569c3",
							"token_address()": "8c8e8fee",
							"totalVoters()": "5f5300ff",
							"transferOwnership(address)": "f2fde38b",
							"votedUsers(uint256)": "a143a5f2",
							"voters(address)": "a3ec138d",
							"withdrawStake()": "bed9d861"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Airdrop__claimableOnceAWeek\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__airdropExceed20Percent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__noStakingFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__penaltyExceed3Percent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__userIsStaker\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking_noStakingPackageFound\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PenaltyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_blockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropSince\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"calculateWeek\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeAirdropPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changePenaltyFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimableAirdrop\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"latestClaimDrop\",\"type\":\"uint256\"}],\"internalType\":\"struct Stake.Stake\",\"name\":\"stake\",\"type\":\"tuple\"}],\"internalType\":\"struct Stake.StakingSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakePeriod\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPenaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token_address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVoters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votedUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"votingRight\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"Airdrop__claimableOnceAWeek()\":[{\"notice\":\"Error handling message for Airdrop functions\"}]},\"events\":{\"Staked(address,uint256,uint256,uint256)\":{\"notice\":\"Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\"}},\"kind\":\"user\",\"methods\":{\"stake(uint256,uint256)\":{\"notice\":\"_Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container StakeID\"},\"withdrawStake()\":{\"notice\":\"withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake Notice index of the stake is the users stake counter, starting at 0 for the first stake Will return the amount to MINT onto the account Will also _calculateStakeReward and reset timer\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Stake-2.0.sol\":\"Stake\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Stake-2.0.sol\":{\"keccak256\":\"0x4e3f69fede049842ba0d5f9bf7f878f71636add8f4559802a140d2c8de7bdd61\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://99490caa3e342d4630483757b44aec167577bb0e52d87ec03e9b1b879b616547\",\"dweb:/ipfs/QmT6po6bjct9y8dSoW26C3yxwTVJDaT4d79dspE8mpTbuh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 115,
								"contract": "contracts/Stake-2.0.sol:Stake",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/Stake-2.0.sol:Stake",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 815,
								"contract": "contracts/Stake-2.0.sol:Stake",
								"label": "stakingPackage",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 817,
								"contract": "contracts/Stake-2.0.sol:Stake",
								"label": "stakingPenaltyRate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 819,
								"contract": "contracts/Stake-2.0.sol:Stake",
								"label": "airdropRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 821,
								"contract": "contracts/Stake-2.0.sol:Stake",
								"label": "airdropSince",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 823,
								"contract": "contracts/Stake-2.0.sol:Stake",
								"label": "_votingStatus",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 825,
								"contract": "contracts/Stake-2.0.sol:Stake",
								"label": "_votingId",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 827,
								"contract": "contracts/Stake-2.0.sol:Stake",
								"label": "totalVoters",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 832,
								"contract": "contracts/Stake-2.0.sol:Stake",
								"label": "voters",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_struct(Voter)811_storage)"
							},
							{
								"astId": 836,
								"contract": "contracts/Stake-2.0.sol:Stake",
								"label": "votedUsers",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 838,
								"contract": "contracts/Stake-2.0.sol:Stake",
								"label": "token_address",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 903,
								"contract": "contracts/Stake-2.0.sol:Stake",
								"label": "stakeholders",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_struct(Stake)889_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Stake)889_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Stake.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)889_storage"
							},
							"t_mapping(t_address,t_struct(Voter)811_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Stake.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)811_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)889_storage": {
								"encoding": "inplace",
								"label": "struct Stake.Stake",
								"members": [
									{
										"astId": 876,
										"contract": "contracts/Stake-2.0.sol:Stake",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 878,
										"contract": "contracts/Stake-2.0.sol:Stake",
										"label": "since",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 880,
										"contract": "contracts/Stake-2.0.sol:Stake",
										"label": "rewardAPY",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 882,
										"contract": "contracts/Stake-2.0.sol:Stake",
										"label": "releaseTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 884,
										"contract": "contracts/Stake-2.0.sol:Stake",
										"label": "claimable",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 886,
										"contract": "contracts/Stake-2.0.sol:Stake",
										"label": "claimableAirdrop",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 888,
										"contract": "contracts/Stake-2.0.sol:Stake",
										"label": "latestClaimDrop",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(Voter)811_storage": {
								"encoding": "inplace",
								"label": "struct Stake.Voter",
								"members": [
									{
										"astId": 806,
										"contract": "contracts/Stake-2.0.sol:Stake",
										"label": "votingRight",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 810,
										"contract": "contracts/Stake-2.0.sol:Stake",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_uint256,t_bool)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"Airdrop__claimableOnceAWeek()": [
								{
									"notice": "Error handling message for Airdrop functions"
								}
							]
						},
						"events": {
							"Staked(address,uint256,uint256,uint256)": {
								"notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
							}
						},
						"kind": "user",
						"methods": {
							"stake(uint256,uint256)": {
								"notice": "_Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container StakeID"
							},
							"withdrawStake()": {
								"notice": "withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake Notice index of the stake is the users stake counter, starting at 0 for the first stake Will return the amount to MINT onto the account Will also _calculateStakeReward and reset timer"
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/Stake-2.0.sol:81:5:\n   |\n81 |     struct Stake {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\nNote: The shadowed declaration is here:\n  --> contracts/Stake-2.0.sol:38:1:\n   |\n38 | contract Stake is ReentrancyGuard, Ownable {\n   | ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 12999,
						"file": "contracts/Stake-2.0.sol",
						"message": "The shadowed declaration is here:",
						"start": 1017
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 2617,
					"file": "contracts/Stake-2.0.sol",
					"start": 2292
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							763
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 764,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 763,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								763
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 753,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							144
						]
					},
					"id": 145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 144,
							"linearizedBaseContracts": [
								144
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 110,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 108,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 113,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 115,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 114,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 118,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 119,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 123,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 144,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 127,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 128,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 133,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 134,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 138,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 139,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 143,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 145,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							222
						]
					},
					"id": 223,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 222,
							"linearizedBaseContracts": [
								222
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:2"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "342:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:2"
									},
									"scope": 222,
									"src": "296:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "453:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:2"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:2"
									},
									"scope": 222,
									"src": "434:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "733:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "745:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:2"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "779:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:2"
									},
									"scope": 222,
									"src": "715:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1079:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1094:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:2"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1134:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:2"
									},
									"scope": 222,
									"src": "1060:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1813:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1830:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:2"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1864:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:2"
									},
									"scope": 222,
									"src": "1796:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2199:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2241:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:2"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2280:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:2"
									},
									"scope": 222,
									"src": "2168:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 212,
									"name": "Transfer",
									"nameLocation": "2461:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2470:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2492:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2512:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:2"
									},
									"src": "2455:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 221,
									"name": "Approval",
									"nameLocation": "2692:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2701:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2724:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2749:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:2"
									},
									"src": "2686:78:2"
								}
							],
							"scope": 223,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							741
						],
						"IERC20": [
							222
						],
						"SafeERC20": [
							446
						]
					},
					"id": 447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 224,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 447,
							"sourceUnit": 223,
							"src": "125:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 226,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 447,
							"sourceUnit": 742,
							"src": "149:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 227,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 446,
							"linearizedBaseContracts": [
								446
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 230,
									"libraryName": {
										"id": 228,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 741,
										"src": "675:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:3",
									"typeName": {
										"id": 229,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "803:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 241,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "833:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 244,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 233,
																			"src": "863:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 171,
																		"src": "863:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 247,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "888:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 248,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "892:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 242,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 240,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "813:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "813:86:3"
											}
										]
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "732:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 232,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 231,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "732:6:3"
													},
													"referencedDeclaration": 222,
													"src": "732:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "754:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "774:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:3"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:3"
									},
									"scope": 446,
									"src": "701:205:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "1040:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 266,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "1070:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 269,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 256,
																			"src": "1100:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 203,
																		"src": "1100:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 272,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "1129:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 273,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "1135:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 274,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "1139:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 267,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 265,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1050:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:3"
											}
										]
									},
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "947:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 255,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 254,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "947:6:3"
													},
													"referencedDeclaration": 222,
													"src": "947:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "969:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "991:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "1011:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:3"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:3"
									},
									"scope": 446,
									"src": "912:241:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "1519:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 291,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1768:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 294,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 299,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$446",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$446",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 297,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 300,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 301,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 285,
																					"src": "1815:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 283,
																					"src": "1784:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$222",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 181,
																				"src": "1784:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 305,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 311,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "1939:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 314,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "1969:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 191,
																		"src": "1969:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 317,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "1993:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 318,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "2002:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 312,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 310,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1919:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:3"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1443:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 282,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 281,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "1443:6:3"
													},
													"referencedDeclaration": 222,
													"src": "1443:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1465:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:3"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:3"
									},
									"scope": 446,
									"src": "1413:603:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "2138:194:3",
										"statements": [
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 358,
														"src": "2148:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 333,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 345,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 339,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$446",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$446",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 337,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 341,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "2202:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 335,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "2171:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$222",
																	"typeString": "contract IERC20"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "2171:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 343,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "2213:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 347,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "2248:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 350,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 326,
																			"src": "2278:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 191,
																		"src": "2278:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 353,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "2302:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 354,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "2311:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 348,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 346,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "2228:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:3"
											}
										]
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2062:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 325,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 324,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "2062:6:3"
													},
													"referencedDeclaration": 222,
													"src": "2062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2084:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2109:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:3"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:3"
									},
									"scope": 446,
									"src": "2022:310:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "2454:370:3",
										"statements": [
											{
												"id": 405,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:3",
												"statements": [
													{
														"assignments": [
															370
														],
														"declarations": [
															{
																"constant": false,
																"id": 370,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 405,
																"src": "2488:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 369,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 379,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 375,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$446",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$446",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 373,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 377,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "2542:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 371,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "2511:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "2511:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 381,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "2572:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 382,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "2588:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 380,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 386,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:3"
													},
													{
														"assignments": [
															388
														],
														"declarations": [
															{
																"constant": false,
																"id": 388,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 405,
																"src": "2653:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 387,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 392,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 389,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "2676:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 390,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "2691:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 394,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "2730:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 397,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 362,
																					"src": "2760:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$222",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 398,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 191,
																				"src": "2760:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 400,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 364,
																			"src": "2784:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 401,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "2793:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 395,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 393,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "2710:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 404,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:3"
													}
												]
											}
										]
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2378:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 361,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 360,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "2378:6:3"
													},
													"referencedDeclaration": 222,
													"src": "2378:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2400:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2425:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:3"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:3"
									},
									"scope": 446,
									"src": "2338:486:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "3277:636:3",
										"statements": [
											{
												"assignments": [
													417
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "3626:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 416,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 426,
												"initialValue": {
													"arguments": [
														{
															"id": 423,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "3680:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3660:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 418,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 535,
														"src": "3652:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 427,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3735:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 443,
												"nodeType": "IfStatement",
												"src": "3731:176:3",
												"trueBody": {
													"id": 442,
													"nodeType": "Block",
													"src": "3758:149:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 434,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 417,
																				"src": "3830:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 436,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 435,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 437,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 432,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 431,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 441,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3236:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 410,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 409,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "3236:6:3"
													},
													"referencedDeclaration": 222,
													"src": "3236:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3250:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:3"
									},
									"scope": 446,
									"src": "3207:706:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 447,
							"src": "645:3270:3",
							"usedErrors": []
						}
					],
					"src": "100:3816:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							741
						]
					},
					"id": 742,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 449,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 741,
							"linearizedBaseContracts": [
								741
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 457,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 456,
												"id": 462,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 454,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 741,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "2483:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 475,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$741",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$741",
																				"typeString": "library Address"
																			}
																		],
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 473,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 478,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "2526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:4"
											},
											{
												"assignments": [
													484,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "2578:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 483,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 491,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 485,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "2596:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 487,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "2618:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 493,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "2647:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "2431:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "2458:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:4"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 741,
									"src": "2412:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "3555:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "3585:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "3593:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 508,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															515,
															535
														],
														"referencedDeclaration": 535,
														"src": "3572:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 507,
												"id": 513,
												"nodeType": "Return",
												"src": "3565:67:4"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3504:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 502,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:4"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3541:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 505,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:4"
									},
									"scope": 741,
									"src": "3466:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "4008:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 528,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4047:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4055:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 531,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4064:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 527,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															555,
															605
														],
														"referencedDeclaration": 605,
														"src": "4025:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 526,
												"id": 533,
												"nodeType": "Return",
												"src": "4018:59:4"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3892:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3916:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3943:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:4"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3994:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:4"
									},
									"scope": 741,
									"src": "3861:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "4589:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 548,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "4628:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "4636:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 550,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4642:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 547,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															555,
															605
														],
														"referencedDeclaration": 605,
														"src": "4606:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 546,
												"id": 553,
												"nodeType": "Return",
												"src": "4599:94:4"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4486:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4510:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4537:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:4"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4575:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 544,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:4"
									},
									"scope": 741,
									"src": "4446:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "5127:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 572,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$741",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$741",
																				"typeString": "library Address"
																			}
																		],
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 570,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 575,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "5170:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 569,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 582,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "5247:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 581,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "5236:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 580,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:4"
											},
											{
												"assignments": [
													588,
													590
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "5300:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 587,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 590,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "5314:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 589,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"initialValue": {
													"arguments": [
														{
															"id": 595,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "5367:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 591,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "5341:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 593,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "5360:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 599,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "5406:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 600,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "5415:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 601,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5427:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 598,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "5389:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 568,
												"id": 603,
												"nodeType": "Return",
												"src": "5382:58:4"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "4988:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5012:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 559,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5062:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 563,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:4"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5113:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:4"
									},
									"scope": 741,
									"src": "4948:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "5724:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5760:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "5768:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 615,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															622,
															657
														],
														"referencedDeclaration": 657,
														"src": "5741:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 614,
												"id": 620,
												"nodeType": "Return",
												"src": "5734:80:4"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "5652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "5668:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:4"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "5710:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:4"
									},
									"scope": 741,
									"src": "5624:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "6163:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 636,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "6192:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 635,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "6181:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:4"
											},
											{
												"assignments": [
													642,
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "6252:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 641,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "6266:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 643,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 647,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "6311:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 645,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "6293:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 651,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "6350:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 652,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "6359:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 653,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "6371:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 650,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "6333:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 633,
												"id": 655,
												"nodeType": "Return",
												"src": "6326:58:4"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6042:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6066:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 626,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6093:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:4"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6149:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:4"
									},
									"scope": 741,
									"src": "6005:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "6667:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 668,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "6705:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 669,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "6713:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 667,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															674,
															709
														],
														"referencedDeclaration": 709,
														"src": "6684:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 666,
												"id": 672,
												"nodeType": "Return",
												"src": "6677:84:4"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "6600:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 661,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:4"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "6653:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:4"
									},
									"scope": 741,
									"src": "6570:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "7109:232:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 688,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "7138:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 687,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "7127:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 686,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:4"
											},
											{
												"assignments": [
													694,
													696
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 708,
														"src": "7200:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 693,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 696,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 708,
														"src": "7214:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 695,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 701,
												"initialValue": {
													"arguments": [
														{
															"id": 699,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "7261:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 697,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "7241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "7300:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 704,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "7309:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 705,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "7321:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 702,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "7283:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 685,
												"id": 707,
												"nodeType": "Return",
												"src": "7276:58:4"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "6993:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "7017:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "7044:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 680,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:4"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "7095:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:4"
									},
									"scope": 741,
									"src": "6954:387:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "7721:532:4",
										"statements": [
											{
												"condition": {
													"id": 721,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 712,
													"src": "7735:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 737,
													"nodeType": "Block",
													"src": "7792:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 725,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 714,
																		"src": "7876:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 735,
																"nodeType": "Block",
																"src": "8184:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 732,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 716,
																					"src": "8209:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 731,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 734,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:4"
																	}
																]
															},
															"id": 736,
															"nodeType": "IfStatement",
															"src": "7872:365:4",
															"trueBody": {
																"id": 730,
																"nodeType": "Block",
																"src": "7899:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:4"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 714,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 714,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 729,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 738,
												"nodeType": "IfStatement",
												"src": "7731:516:4",
												"trueBody": {
													"id": 724,
													"nodeType": "Block",
													"src": "7744:42:4",
													"statements": [
														{
															"expression": {
																"id": 722,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "7765:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 720,
															"id": 723,
															"nodeType": "Return",
															"src": "7758:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7596:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7618:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7651:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 715,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:4"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7707:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 718,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:4"
									},
									"scope": 741,
									"src": "7561:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 742,
							"src": "194:8061:4",
							"usedErrors": []
						}
					],
					"src": "101:8155:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							763
						]
					},
					"id": 764,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 743,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 744,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 763,
							"linearizedBaseContracts": [
								763
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 749,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 748,
												"id": 751,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 763,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 758,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 757,
												"id": 760,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 755,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 763,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 764,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"contracts/Stake-2.0.sol": {
				"ast": {
					"absolutePath": "contracts/Stake-2.0.sol",
					"exportedSymbols": {
						"Address": [
							741
						],
						"Airdrop__claimableOnceAWeek": [
							791
						],
						"Context": [
							763
						],
						"Function__notAVoter": [
							773
						],
						"Function__notAuthorized": [
							771
						],
						"Function__votingNotAvailable": [
							775
						],
						"IERC20": [
							222
						],
						"Ownable": [
							104
						],
						"ReentrancyGuard": [
							144
						],
						"SafeERC20": [
							446
						],
						"Stake": [
							1513
						],
						"Staking__airdropExceed20Percent": [
							784
						],
						"Staking__cannotStakeNothing": [
							778
						],
						"Staking__noStakingFound": [
							786
						],
						"Staking__penaltyExceed3Percent": [
							782
						],
						"Staking__userIsStaker": [
							780
						],
						"Staking_noStakingPackageFound": [
							788
						],
						"Voting__alreadyVoted": [
							796
						],
						"Voting__notEnoughVoters": [
							800
						],
						"Voting__notYetVoted": [
							798
						],
						"Voting__votingIsRunning": [
							794
						]
					},
					"id": 1514,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 765,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1514,
							"sourceUnit": 447,
							"src": "67:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 767,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1514,
							"sourceUnit": 145,
							"src": "134:62:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1514,
							"sourceUnit": 105,
							"src": "198:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"documentation": {
								"id": 769,
								"nodeType": "StructuredDocumentation",
								"src": "254:56:6",
								"text": " @notice Error handling message for Modifier"
							},
							"id": 771,
							"name": "Function__notAuthorized",
							"nameLocation": "318:23:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 770,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "341:2:6"
							},
							"src": "312:32:6"
						},
						{
							"id": 773,
							"name": "Function__notAVoter",
							"nameLocation": "352:19:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 772,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "371:2:6"
							},
							"src": "346:28:6"
						},
						{
							"id": 775,
							"name": "Function__votingNotAvailable",
							"nameLocation": "382:28:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 774,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "410:2:6"
							},
							"src": "376:37:6"
						},
						{
							"documentation": {
								"id": 776,
								"nodeType": "StructuredDocumentation",
								"src": "417:65:6",
								"text": " @notice Error handling message for Staking functions"
							},
							"id": 778,
							"name": "Staking__cannotStakeNothing",
							"nameLocation": "490:27:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 777,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "517:2:6"
							},
							"src": "484:36:6"
						},
						{
							"id": 780,
							"name": "Staking__userIsStaker",
							"nameLocation": "528:21:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 779,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "549:2:6"
							},
							"src": "522:30:6"
						},
						{
							"id": 782,
							"name": "Staking__penaltyExceed3Percent",
							"nameLocation": "560:30:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 781,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "590:2:6"
							},
							"src": "554:39:6"
						},
						{
							"id": 784,
							"name": "Staking__airdropExceed20Percent",
							"nameLocation": "601:31:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 783,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "632:2:6"
							},
							"src": "595:40:6"
						},
						{
							"id": 786,
							"name": "Staking__noStakingFound",
							"nameLocation": "643:23:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 785,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "666:2:6"
							},
							"src": "637:32:6"
						},
						{
							"id": 788,
							"name": "Staking_noStakingPackageFound",
							"nameLocation": "677:29:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 787,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "706:2:6"
							},
							"src": "671:38:6"
						},
						{
							"documentation": {
								"id": 789,
								"nodeType": "StructuredDocumentation",
								"src": "713:65:6",
								"text": " @notice Error handling message for Airdrop functions"
							},
							"id": 791,
							"name": "Airdrop__claimableOnceAWeek",
							"nameLocation": "786:27:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 790,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "813:2:6"
							},
							"src": "780:36:6"
						},
						{
							"documentation": {
								"id": 792,
								"nodeType": "StructuredDocumentation",
								"src": "820:64:6",
								"text": " @notice Error handling message for Voting functions"
							},
							"id": 794,
							"name": "Voting__votingIsRunning",
							"nameLocation": "892:23:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 793,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "915:2:6"
							},
							"src": "886:32:6"
						},
						{
							"id": 796,
							"name": "Voting__alreadyVoted",
							"nameLocation": "926:20:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 795,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "946:2:6"
							},
							"src": "920:29:6"
						},
						{
							"id": 798,
							"name": "Voting__notYetVoted",
							"nameLocation": "957:19:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 797,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "976:2:6"
							},
							"src": "951:28:6"
						},
						{
							"id": 800,
							"name": "Voting__notEnoughVoters",
							"nameLocation": "987:23:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 799,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1010:2:6"
							},
							"src": "981:32:6"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 801,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 144,
										"src": "1035:15:6"
									},
									"id": 802,
									"nodeType": "InheritanceSpecifier",
									"src": "1035:15:6"
								},
								{
									"baseName": {
										"id": 803,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "1052:7:6"
									},
									"id": 804,
									"nodeType": "InheritanceSpecifier",
									"src": "1052:7:6"
								}
							],
							"canonicalName": "Stake",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1513,
							"linearizedBaseContracts": [
								1513,
								104,
								763,
								144
							],
							"name": "Stake",
							"nameLocation": "1026:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Stake.Voter",
									"id": 811,
									"members": [
										{
											"constant": false,
											"id": 806,
											"mutability": "mutable",
											"name": "votingRight",
											"nameLocation": "1266:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 811,
											"src": "1261:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 805,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1261:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 810,
											"mutability": "mutable",
											"name": "voted",
											"nameLocation": "1313:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 811,
											"src": "1288:30:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 809,
												"keyType": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1288:24:6",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueType": {
													"id": 808,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1307:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "1244:5:6",
									"nodeType": "StructDefinition",
									"scope": 1513,
									"src": "1237:89:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 815,
									"mutability": "mutable",
									"name": "stakingPackage",
									"nameLocation": "1371:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1513,
									"src": "1334:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 814,
										"keyType": {
											"id": 812,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1342:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1334:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 813,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1353:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "cb79c2e1",
									"id": 817,
									"mutability": "mutable",
									"name": "stakingPenaltyRate",
									"nameLocation": "1409:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1513,
									"src": "1394:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 816,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1394:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8891cf0d",
									"id": 819,
									"mutability": "mutable",
									"name": "airdropRate",
									"nameLocation": "1449:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1513,
									"src": "1434:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 818,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1434:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b87da76d",
									"id": 821,
									"mutability": "mutable",
									"name": "airdropSince",
									"nameLocation": "1482:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1513,
									"src": "1467:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 820,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1467:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 823,
									"mutability": "mutable",
									"name": "_votingStatus",
									"nameLocation": "1517:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1513,
									"src": "1503:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 822,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1503:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 825,
									"mutability": "mutable",
									"name": "_votingId",
									"nameLocation": "1554:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1513,
									"src": "1537:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 824,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1537:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "5f5300ff",
									"id": 827,
									"mutability": "mutable",
									"name": "totalVoters",
									"nameLocation": "1585:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1513,
									"src": "1570:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 826,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1570:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3ec138d",
									"id": 832,
									"mutability": "mutable",
									"name": "voters",
									"nameLocation": "1636:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1513,
									"src": "1603:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$811_storage_$",
										"typeString": "mapping(address => struct Stake.Voter)"
									},
									"typeName": {
										"id": 831,
										"keyType": {
											"id": 828,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1611:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1603:25:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$811_storage_$",
											"typeString": "mapping(address => struct Stake.Voter)"
										},
										"valueType": {
											"id": 830,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 829,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 811,
												"src": "1622:5:6"
											},
											"referencedDeclaration": 811,
											"src": "1622:5:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$811_storage_ptr",
												"typeString": "struct Stake.Voter"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a143a5f2",
									"id": 836,
									"mutability": "mutable",
									"name": "votedUsers",
									"nameLocation": "1684:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1513,
									"src": "1649:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 835,
										"keyType": {
											"id": 833,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1657:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1649:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 834,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1668:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8c8e8fee",
									"id": 838,
									"mutability": "mutable",
									"name": "token_address",
									"nameLocation": "1718:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1513,
									"src": "1703:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 837,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1703:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "1767:284:6",
										"statements": [
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 843,
														"name": "stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "1841:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3135",
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1862:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "1841:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "1841:23:6"
											},
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 847,
														"name": "airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "1875:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3830",
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1889:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_80_by_1",
															"typeString": "int_const 80"
														},
														"value": "80"
													},
													"src": "1875:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "1875:16:6"
											},
											{
												"expression": {
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 851,
														"name": "token_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "1904:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 852,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "1920:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1904:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "1904:21:6"
											},
											{
												"expression": {
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 855,
															"name": "stakingPackage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "1938:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 857,
														"indexExpression": {
															"hexValue": "3930",
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1953:7:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7776000_by_1",
																"typeString": "int_const 7776000"
															},
															"value": "90"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1938:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "36",
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1964:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "1938:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "1938:27:6"
											},
											{
												"expression": {
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 861,
															"name": "stakingPackage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "1976:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 863,
														"indexExpression": {
															"hexValue": "313830",
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1991:8:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15552000_by_1",
																"typeString": "int_const 15552000"
															},
															"value": "180"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1976:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37",
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2003:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7_by_1",
															"typeString": "int_const 7"
														},
														"value": "7"
													},
													"src": "1976:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "1976:28:6"
											},
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 867,
															"name": "stakingPackage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "2015:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 869,
														"indexExpression": {
															"hexValue": "333635",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:8:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															"value": "365"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2015:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "38",
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2042:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "2015:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "2015:28:6"
											}
										]
									},
									"id": 874,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1760:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "1752:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:15:6"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1767:0:6"
									},
									"scope": 1513,
									"src": "1740:311:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Stake.Stake",
									"id": 889,
									"members": [
										{
											"constant": false,
											"id": 876,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "2324:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 889,
											"src": "2316:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 875,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2316:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 878,
											"mutability": "mutable",
											"name": "since",
											"nameLocation": "2349:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 889,
											"src": "2341:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 877,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2341:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 880,
											"mutability": "mutable",
											"name": "rewardAPY",
											"nameLocation": "2373:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 889,
											"src": "2365:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 879,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2365:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 882,
											"mutability": "mutable",
											"name": "releaseTime",
											"nameLocation": "2401:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 889,
											"src": "2393:19:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 881,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2393:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 884,
											"mutability": "mutable",
											"name": "claimable",
											"nameLocation": "2531:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 889,
											"src": "2523:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 883,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2523:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 886,
											"mutability": "mutable",
											"name": "claimableAirdrop",
											"nameLocation": "2559:16:6",
											"nodeType": "VariableDeclaration",
											"scope": 889,
											"src": "2551:24:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 885,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2551:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 888,
											"mutability": "mutable",
											"name": "latestClaimDrop",
											"nameLocation": "2594:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 889,
											"src": "2586:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 887,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2586:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "2299:5:6",
									"nodeType": "StructDefinition",
									"scope": 1513,
									"src": "2292:325:6",
									"visibility": "public"
								},
								{
									"canonicalName": "Stake.StakingSummary",
									"id": 897,
									"members": [
										{
											"constant": false,
											"id": 891,
											"mutability": "mutable",
											"name": "total_amount",
											"nameLocation": "2801:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 897,
											"src": "2793:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 890,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2793:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 893,
											"mutability": "mutable",
											"name": "penalty",
											"nameLocation": "2832:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 897,
											"src": "2824:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 892,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2824:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 896,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "2856:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 897,
											"src": "2850:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
												"typeString": "struct Stake.Stake"
											},
											"typeName": {
												"id": 895,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 894,
													"name": "Stake",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 889,
													"src": "2850:5:6"
												},
												"referencedDeclaration": 889,
												"src": "2850:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
													"typeString": "struct Stake.Stake"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingSummary",
									"nameLocation": "2767:14:6",
									"nodeType": "StructDefinition",
									"scope": 1513,
									"src": "2760:109:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "2877:114:6",
										"text": " @notice\n stakes is used to keep track of the INDEX for the stakers in the stakes array"
									},
									"id": 903,
									"mutability": "mutable",
									"name": "stakeholders",
									"nameLocation": "3032:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1513,
									"src": "2997:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$889_storage_$",
										"typeString": "mapping(address => struct Stake.Stake)"
									},
									"typeName": {
										"id": 902,
										"keyType": {
											"id": 899,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3005:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2997:25:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$889_storage_$",
											"typeString": "mapping(address => struct Stake.Stake)"
										},
										"valueType": {
											"id": 901,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 900,
												"name": "Stake",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 889,
												"src": "3016:5:6"
											},
											"referencedDeclaration": 889,
											"src": "3016:5:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
												"typeString": "struct Stake.Stake"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "3053:126:6",
										"text": " @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
									},
									"id": 914,
									"name": "Staked",
									"nameLocation": "3191:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3224:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3208:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3247:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3239:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3239:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3272:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3264:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3264:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"indexed": false,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "3300:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3292:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3292:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3197:121:6"
									},
									"src": "3185:134:6"
								},
								{
									"anonymous": false,
									"id": 918,
									"name": "PenaltyChanged",
									"nameLocation": "3333:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3356:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "3348:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3348:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3347:16:6"
									},
									"src": "3327:37:6"
								},
								{
									"anonymous": false,
									"id": 922,
									"name": "AirdropChanged",
									"nameLocation": "3376:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3399:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "3391:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3391:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3390:16:6"
									},
									"src": "3370:37:6"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "3557:202:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 925,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "3656:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$811_storage_$",
																	"typeString": "mapping(address => struct Stake.Voter storage ref)"
																}
															},
															"id": 928,
															"indexExpression": {
																"expression": {
																	"id": 926,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3663:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3663:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3656:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$811_storage",
																"typeString": "struct Stake.Voter storage ref"
															}
														},
														"id": 929,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "votingRight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 806,
														"src": "3656:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3690:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3656:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 936,
												"nodeType": "IfStatement",
												"src": "3652:100:6",
												"trueBody": {
													"id": 935,
													"nodeType": "Block",
													"src": "3697:55:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 932,
																	"name": "Function__notAVoter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "3719:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3719:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 934,
															"nodeType": "RevertStatement",
															"src": "3712:28:6"
														}
													]
												}
											}
										]
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isVoter",
									"nameLocation": "3532:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3540:2:6"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3557:0:6"
									},
									"scope": 1513,
									"src": "3523:236:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "3786:41:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 940,
														"name": "_isVoter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "3797:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3797:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "3797:10:6"
											},
											{
												"id": 943,
												"nodeType": "PlaceholderStatement",
												"src": "3818:1:6"
											}
										]
									},
									"id": 945,
									"name": "isVoter",
									"nameLocation": "3776:7:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3783:2:6"
									},
									"src": "3767:60:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "3879:165:6",
										"statements": [
											{
												"condition": {
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3957:14:6",
													"subExpression": {
														"id": 948,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "3958:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 954,
												"nodeType": "IfStatement",
												"src": "3953:84:6",
												"trueBody": {
													"id": 953,
													"nodeType": "Block",
													"src": "3973:64:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 950,
																	"name": "Function__votingNotAvailable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 775,
																	"src": "3995:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3995:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 952,
															"nodeType": "RevertStatement",
															"src": "3988:37:6"
														}
													]
												}
											}
										]
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkVotingStatus",
									"nameLocation": "3844:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3862:2:6"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3879:0:6"
									},
									"scope": 1513,
									"src": "3835:209:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "4080:51:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 958,
														"name": "_checkVotingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "4091:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "4091:20:6"
											},
											{
												"id": 961,
												"nodeType": "PlaceholderStatement",
												"src": "4122:1:6"
											}
										]
									},
									"id": 963,
									"name": "votingStatusTrue",
									"nameLocation": "4061:16:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4077:2:6"
									},
									"src": "4052:79:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "4531:1275:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 973,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "4731:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$889_storage_$",
																	"typeString": "mapping(address => struct Stake.Stake storage ref)"
																}
															},
															"id": 976,
															"indexExpression": {
																"expression": {
																	"id": 974,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4744:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4744:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4731:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_storage",
																"typeString": "struct Stake.Stake storage ref"
															}
														},
														"id": 977,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "4731:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4766:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4731:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "4727:99:6",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "4769:57:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 980,
																	"name": "Staking__userIsStaker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "4791:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4791:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 982,
															"nodeType": "RevertStatement",
															"src": "4784:30:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 985,
															"name": "stakingPackage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "4842:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 987,
														"indexExpression": {
															"id": 986,
															"name": "stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "4857:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4842:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4873:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4842:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "4838:103:6",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "4876:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 990,
																	"name": "Staking_noStakingPackageFound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "4898:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4898:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 992,
															"nodeType": "RevertStatement",
															"src": "4891:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 995,
														"name": "totalVoters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "4953:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4953:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "4953:16:6"
											},
											{
												"expression": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 999,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "4980:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$811_storage_$",
																	"typeString": "mapping(address => struct Stake.Voter storage ref)"
																}
															},
															"id": 1002,
															"indexExpression": {
																"expression": {
																	"id": 1000,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4987:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4987:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4980:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$811_storage",
																"typeString": "struct Stake.Voter storage ref"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "votingRight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 806,
														"src": "4980:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5013:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4980:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "4980:37:6"
											},
											{
												"assignments": [
													1008
												],
												"declarations": [
													{
														"constant": false,
														"id": 1008,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "5126:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1058,
														"src": "5118:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1007,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5118:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1011,
												"initialValue": {
													"expression": {
														"id": 1009,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "5138:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "5138:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5118:35:6"
											},
											{
												"expression": {
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1012,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "5287:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$889_storage_$",
																"typeString": "mapping(address => struct Stake.Stake storage ref)"
															}
														},
														"id": 1015,
														"indexExpression": {
															"expression": {
																"id": 1013,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5300:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5300:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5287:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$889_storage",
															"typeString": "struct Stake.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1017,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "5334:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1018,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "5355:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"baseExpression": {
																	"id": 1019,
																	"name": "stakingPackage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "5379:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1021,
																"indexExpression": {
																	"id": 1020,
																	"name": "stakePeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "5394:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5379:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1022,
																			"name": "stakePeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 968,
																			"src": "5422:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1023,
																			"name": "timestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "5436:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5422:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1025,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5421:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5461:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5477:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5493:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1016,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "5314:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$889_storage_ptr_$",
																"typeString": "type(struct Stake.Stake storage pointer)"
															}
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5314:191:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
															"typeString": "struct Stake.Stake memory"
														}
													},
													"src": "5287:218:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$889_storage",
														"typeString": "struct Stake.Stake storage ref"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "5287:218:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1036,
																	"name": "token_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "5566:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1035,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "5559:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5559:21:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"expression": {
																"id": 1038,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5595:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5595:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1042,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5628:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Stake_$1513",
																		"typeString": "contract Stake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Stake_$1513",
																		"typeString": "contract Stake"
																	}
																],
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5620:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1040,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5620:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5620:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "5648:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1032,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "5518:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$446_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "5518:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5518:147:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "5518:147:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1048,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5741:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5741:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "5753:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1051,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "5761:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1052,
																		"name": "stakePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "5773:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1053,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1008,
																		"src": "5787:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5773:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1055,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5772:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1047,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "5734:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5734:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "EmitStatement",
												"src": "5729:69:6"
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "4247:204:6",
										"text": " @notice\n _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n StakeID"
									},
									"functionSelector": "7b0472f0",
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 971,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 970,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "4518:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4518:12:6"
										}
									],
									"name": "stake",
									"nameLocation": "4466:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4480:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "4472:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4472:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "stakePeriod",
												"nameLocation": "4496:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "4488:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4471:37:6"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4531:0:6"
									},
									"scope": 1513,
									"src": "4457:1349:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "5875:252:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1066,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "5965:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3330",
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5974:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_30_by_1",
															"typeString": "int_const 30"
														},
														"value": "30"
													},
													"src": "5965:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1073,
												"nodeType": "IfStatement",
												"src": "5961:83:6",
												"trueBody": {
													"id": 1072,
													"nodeType": "Block",
													"src": "5978:66:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1069,
																	"name": "Staking__penaltyExceed3Percent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "6000:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6000:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1071,
															"nodeType": "RevertStatement",
															"src": "5993:39:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1074,
														"name": "stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "6054:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1075,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "6075:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6054:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "6054:27:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1079,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "6112:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1078,
														"name": "PenaltyChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "6097:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6097:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "EmitStatement",
												"src": "6092:27:6"
											}
										]
									},
									"functionSelector": "8c63f97f",
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1064,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1063,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5865:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5865:9:6"
										}
									],
									"name": "changePenaltyFee",
									"nameLocation": "5823:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5848:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5840:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:16:6"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5875:0:6"
									},
									"scope": 1513,
									"src": "5814:313:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "6249:124:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1090,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "6322:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1091,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "6322:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1092,
																				"name": "since",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "6340:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6322:23:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1094,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6321:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653234",
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6349:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000000000"
																	},
																	"value": "1e24"
																},
																"src": "6321:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1097,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6320:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "333635",
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6357:8:6",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														},
														"value": "365"
													},
													"src": "6320:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1089,
												"id": 1100,
												"nodeType": "Return",
												"src": "6313:52:6"
											}
										]
									},
									"id": 1102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakingDuration",
									"nameLocation": "6144:25:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "since",
												"nameLocation": "6178:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "6170:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6170:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6169:15:6"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "6235:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6235:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6234:9:6"
									},
									"scope": 1513,
									"src": "6135:238:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "6501:330:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1110,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "6516:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Stake.Stake memory"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "6516:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6537:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6516:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1117,
												"nodeType": "IfStatement",
												"src": "6512:63:6",
												"trueBody": {
													"id": 1116,
													"nodeType": "Block",
													"src": "6540:35:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6562:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1109,
															"id": 1115,
															"nodeType": "Return",
															"src": "6555:8:6"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1118,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1105,
																			"src": "6695:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																				"typeString": "struct Stake.Stake memory"
																			}
																		},
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 876,
																		"src": "6695:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 1120,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1105,
																			"src": "6732:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																				"typeString": "struct Stake.Stake memory"
																			}
																		},
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardAPY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 880,
																		"src": "6732:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6695:57:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1124,
																				"name": "user_stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1105,
																				"src": "6798:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																					"typeString": "struct Stake.Stake memory"
																				}
																			},
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "since",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 878,
																			"src": "6798:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1123,
																		"name": "_calculateStakingDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "6772:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6772:43:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6695:120:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1128,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6694:122:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653236",
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6819:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000000"
														},
														"value": "1e26"
													},
													"src": "6694:129:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1109,
												"id": 1131,
												"nodeType": "Return",
												"src": "6674:149:6"
											}
										]
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakeReward",
									"nameLocation": "6390:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "user_stake",
												"nameLocation": "6425:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "6412:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
													"typeString": "struct Stake.Stake"
												},
												"typeName": {
													"id": 1104,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1103,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 889,
														"src": "6412:5:6"
													},
													"referencedDeclaration": 889,
													"src": "6412:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
														"typeString": "struct Stake.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6411:25:6"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "6487:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6487:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6486:9:6"
									},
									"scope": 1513,
									"src": "6381:450:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "6982:228:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1144,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "6997:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7007:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6997:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1152,
												"nodeType": "IfStatement",
												"src": "6993:57:6",
												"trueBody": {
													"id": 1151,
													"nodeType": "Block",
													"src": "7010:40:6",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7033:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7036:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7032:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 1143,
															"id": 1150,
															"nodeType": "Return",
															"src": "7025:13:6"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1153,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1135,
																"src": "7082:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1156,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1154,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1135,
																						"src": "7093:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1155,
																						"name": "stakingPenaltyRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 817,
																						"src": "7102:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7093:27:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1157,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "7092:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31303030",
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7124:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"src": "7092:36:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7091:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7082:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1162,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "7144:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1165,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1163,
																						"name": "reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1137,
																						"src": "7155:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1164,
																						"name": "stakingPenaltyRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 817,
																						"src": "7164:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7155:27:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1166,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "7154:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31303030",
																			"id": 1167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7186:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"src": "7154:36:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1169,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7153:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7144:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1171,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7067:135:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1143,
												"id": 1172,
												"nodeType": "Return",
												"src": "7060:142:6"
											}
										]
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakingWithPenalty",
									"nameLocation": "6848:28:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6885:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "6877:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6877:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "6901:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "6893:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6893:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6876:32:6"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "6959:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6959:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "6968:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6958:18:6"
									},
									"scope": 1513,
									"src": "6839:371:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "7614:965:6",
										"statements": [
											{
												"assignments": [
													1182
												],
												"declarations": [
													{
														"constant": false,
														"id": 1182,
														"mutability": "mutable",
														"name": "user_stake",
														"nameLocation": "7748:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "7735:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
															"typeString": "struct Stake.Stake"
														},
														"typeName": {
															"id": 1181,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1180,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 889,
																"src": "7735:5:6"
															},
															"referencedDeclaration": 889,
															"src": "7735:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
																"typeString": "struct Stake.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1187,
												"initialValue": {
													"baseExpression": {
														"id": 1183,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "7761:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$889_storage_$",
															"typeString": "mapping(address => struct Stake.Stake storage ref)"
														}
													},
													"id": 1186,
													"indexExpression": {
														"expression": {
															"id": 1184,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7774:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7774:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7761:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$889_storage",
														"typeString": "struct Stake.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7735:50:6"
											},
											{
												"assignments": [
													1189
												],
												"declarations": [
													{
														"constant": false,
														"id": 1189,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "7804:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "7796:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7796:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1193,
												"initialValue": {
													"arguments": [
														{
															"id": 1191,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "7835:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Stake.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Stake.Stake memory"
															}
														],
														"id": 1190,
														"name": "_calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "7813:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$889_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct Stake.Stake memory) view returns (uint256)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7813:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7796:50:6"
											},
											{
												"expression": {
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "7859:31:6",
													"subExpression": {
														"baseExpression": {
															"id": 1194,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "7866:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$889_storage_$",
																"typeString": "mapping(address => struct Stake.Stake storage ref)"
															}
														},
														"id": 1197,
														"indexExpression": {
															"expression": {
																"id": 1195,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7879:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7879:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7866:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$889_storage",
															"typeString": "struct Stake.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "7859:31:6"
											},
											{
												"expression": {
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1200,
														"name": "totalVoters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "7901:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7916:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7901:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "7901:16:6"
											},
											{
												"expression": {
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "7928:42:6",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1204,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "7935:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$811_storage_$",
																		"typeString": "mapping(address => struct Stake.Voter storage ref)"
																	}
																},
																"id": 1207,
																"indexExpression": {
																	"expression": {
																		"id": 1205,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7942:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7942:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7935:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$811_storage",
																	"typeString": "struct Stake.Voter storage ref"
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 810,
															"src": "7935:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1210,
														"indexExpression": {
															"id": 1209,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "7960:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7935:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "7928:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1213,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "7987:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Stake.Stake memory"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 882,
														"src": "7987:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1215,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8012:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8012:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7987:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1258,
													"nodeType": "Block",
													"src": "8392:180:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1247,
																				"name": "token_address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 838,
																				"src": "8455:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1246,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "8448:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8448:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"expression": {
																			"id": 1249,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8488:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8488:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1251,
																						"name": "user_stake",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1182,
																						"src": "8518:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																							"typeString": "struct Stake.Stake memory"
																						}
																					},
																					"id": 1252,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 876,
																					"src": "8518:17:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1253,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1189,
																					"src": "8538:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8518:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1255,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8517:28:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1243,
																		"name": "SafeERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "8407:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeERC20_$446_$",
																			"typeString": "type(library SafeERC20)"
																		}
																	},
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 253,
																	"src": "8407:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8407:153:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1257,
															"nodeType": "ExpressionStatement",
															"src": "8407:153:6"
														}
													]
												},
												"id": 1259,
												"nodeType": "IfStatement",
												"src": "7983:589:6",
												"trueBody": {
													"id": 1242,
													"nodeType": "Block",
													"src": "8029:357:6",
													"statements": [
														{
															"assignments": [
																1219,
																1221
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1219,
																	"mutability": "mutable",
																	"name": "amount_reduced",
																	"nameLocation": "8071:14:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1242,
																	"src": "8063:22:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1218,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8063:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1221,
																	"mutability": "mutable",
																	"name": "reward_reduced",
																	"nameLocation": "8112:14:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1242,
																	"src": "8104:22:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1220,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8104:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1227,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1223,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1182,
																			"src": "8173:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																				"typeString": "struct Stake.Stake memory"
																			}
																		},
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 876,
																		"src": "8173:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1225,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "8192:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1222,
																	"name": "_calculateStakingWithPenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1174,
																	"src": "8144:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8144:55:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8044:155:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1232,
																				"name": "token_address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 838,
																				"src": "8264:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1231,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "8257:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8257:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"expression": {
																			"id": 1234,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8297:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8297:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1236,
																					"name": "amount_reduced",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1219,
																					"src": "8327:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1237,
																					"name": "reward_reduced",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1221,
																					"src": "8344:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8327:31:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1239,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8326:33:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1228,
																		"name": "SafeERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "8216:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeERC20_$446_$",
																			"typeString": "type(library SafeERC20)"
																		}
																	},
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 253,
																	"src": "8216:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8216:158:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1241,
															"nodeType": "ExpressionStatement",
															"src": "8216:158:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "7218:341:6",
										"text": " @notice\n withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n Notice index of the stake is the users stake counter, starting at 0 for the first stake\n Will return the amount to MINT onto the account\n Will also _calculateStakeReward and reset timer"
									},
									"functionSelector": "bed9d861",
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1177,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "7601:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7601:12:6"
										}
									],
									"name": "withdrawStake",
									"nameLocation": "7576:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7589:2:6"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7614:0:6"
									},
									"scope": 1513,
									"src": "7567:1012:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1377,
										"nodeType": "Block",
										"src": "8653:985:6",
										"statements": [
											{
												"assignments": [
													1269
												],
												"declarations": [
													{
														"constant": false,
														"id": 1269,
														"mutability": "mutable",
														"name": "user_stake",
														"nameLocation": "8677:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1377,
														"src": "8664:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
															"typeString": "struct Stake.Stake"
														},
														"typeName": {
															"id": 1268,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1267,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 889,
																"src": "8664:5:6"
															},
															"referencedDeclaration": 889,
															"src": "8664:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
																"typeString": "struct Stake.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1274,
												"initialValue": {
													"baseExpression": {
														"id": 1270,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "8690:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$889_storage_$",
															"typeString": "mapping(address => struct Stake.Stake storage ref)"
														}
													},
													"id": 1273,
													"indexExpression": {
														"expression": {
															"id": 1271,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8703:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8703:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8690:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$889_storage",
														"typeString": "struct Stake.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8664:50:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1275,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "8791:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Stake.Stake memory"
															}
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "8791:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8812:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8791:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1283,
												"nodeType": "IfStatement",
												"src": "8787:87:6",
												"trueBody": {
													"id": 1282,
													"nodeType": "Block",
													"src": "8815:59:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1279,
																	"name": "Staking__noStakingFound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "8837:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8837:25:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1281,
															"nodeType": "RevertStatement",
															"src": "8830:32:6"
														}
													]
												}
											},
											{
												"assignments": [
													1286
												],
												"declarations": [
													{
														"constant": false,
														"id": 1286,
														"mutability": "mutable",
														"name": "summary",
														"nameLocation": "8906:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1377,
														"src": "8884:29:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
															"typeString": "struct Stake.StakingSummary"
														},
														"typeName": {
															"id": 1285,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1284,
																"name": "StakingSummary",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 897,
																"src": "8884:14:6"
															},
															"referencedDeclaration": 897,
															"src": "8884:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$897_storage_ptr",
																"typeString": "struct Stake.StakingSummary"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1292,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8931:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8934:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1290,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "8937:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Stake.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Stake.Stake memory"
															}
														],
														"id": 1287,
														"name": "StakingSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "8916:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakingSummary_$897_storage_ptr_$",
															"typeString": "type(struct Stake.StakingSummary storage pointer)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8916:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
														"typeString": "struct Stake.StakingSummary memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8884:64:6"
											},
											{
												"assignments": [
													1294
												],
												"declarations": [
													{
														"constant": false,
														"id": 1294,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "8969:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1377,
														"src": "8961:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1293,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8961:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1298,
												"initialValue": {
													"arguments": [
														{
															"id": 1296,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "9000:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Stake.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Stake.Stake memory"
															}
														],
														"id": 1295,
														"name": "_calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "8978:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$889_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct Stake.Stake memory) view returns (uint256)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8978:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8961:50:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1299,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1286,
																"src": "9028:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
																	"typeString": "struct Stake.StakingSummary memory"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 896,
															"src": "9028:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Stake.Stake memory"
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 882,
														"src": "9028:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1302,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9056:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9056:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9028:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1327,
												"nodeType": "IfStatement",
												"src": "9024:218:6",
												"trueBody": {
													"id": 1326,
													"nodeType": "Block",
													"src": "9073:169:6",
													"statements": [
														{
															"expression": {
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1305,
																		"name": "summary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1286,
																		"src": "9088:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
																			"typeString": "struct Stake.StakingSummary memory"
																		}
																	},
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "penalty",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 893,
																	"src": "9088:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1311,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 1308,
																									"name": "user_stake",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1269,
																									"src": "9125:10:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																										"typeString": "struct Stake.Stake memory"
																									}
																								},
																								"id": 1309,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "amount",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 876,
																								"src": "9125:17:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1310,
																								"name": "stakingPenaltyRate",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 817,
																								"src": "9145:18:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "9125:38:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1312,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "9124:40:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "31303030",
																					"id": 1313,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9167:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				},
																				"src": "9124:47:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1315,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9123:49:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1318,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1316,
																								"name": "reward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1294,
																								"src": "9194:6:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1317,
																								"name": "stakingPenaltyRate",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 817,
																								"src": "9203:18:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "9194:27:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1319,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "9193:29:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "31303030",
																					"id": 1320,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9225:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				},
																				"src": "9193:36:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1322,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9192:38:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9123:107:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9088:142:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1325,
															"nodeType": "ExpressionStatement",
															"src": "9088:142:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1329,
																	"name": "user_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "9272:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																		"typeString": "struct Stake.Stake memory"
																	}
																},
																"id": 1330,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "latestClaimDrop",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 888,
																"src": "9272:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1328,
															"name": "calculateWeek",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "9258:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9258:41:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9302:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9258:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1358,
													"nodeType": "Block",
													"src": "9447:61:6",
													"statements": [
														{
															"expression": {
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1350,
																			"name": "summary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1286,
																			"src": "9462:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
																				"typeString": "struct Stake.StakingSummary memory"
																			}
																		},
																		"id": 1353,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stake",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 896,
																		"src": "9462:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																			"typeString": "struct Stake.Stake memory"
																		}
																	},
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimableAirdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 886,
																	"src": "9462:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9495:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9462:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1357,
															"nodeType": "ExpressionStatement",
															"src": "9462:34:6"
														}
													]
												},
												"id": 1359,
												"nodeType": "IfStatement",
												"src": "9254:254:6",
												"trueBody": {
													"id": 1349,
													"nodeType": "Block",
													"src": "9305:136:6",
													"statements": [
														{
															"assignments": [
																1335
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1335,
																	"mutability": "mutable",
																	"name": "airdrop",
																	"nameLocation": "9328:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1349,
																	"src": "9320:15:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1334,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9320:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1340,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1337,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "9356:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																				"typeString": "struct Stake.Stake memory"
																			}
																		},
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 876,
																		"src": "9356:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1336,
																	"name": "_calculateAirdrop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "9338:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9338:36:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9320:54:6"
														},
														{
															"expression": {
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1341,
																			"name": "summary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1286,
																			"src": "9389:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
																				"typeString": "struct Stake.StakingSummary memory"
																			}
																		},
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stake",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 896,
																		"src": "9389:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																			"typeString": "struct Stake.Stake memory"
																		}
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimableAirdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 886,
																	"src": "9389:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1346,
																	"name": "airdrop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "9422:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9389:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1348,
															"nodeType": "ExpressionStatement",
															"src": "9389:40:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1360,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1286,
																"src": "9520:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
																	"typeString": "struct Stake.StakingSummary memory"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 896,
															"src": "9520:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Stake.Stake memory"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimable",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 884,
														"src": "9520:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1365,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "9546:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9520:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "9520:32:6"
											},
											{
												"expression": {
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1368,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "9563:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
																"typeString": "struct Stake.StakingSummary memory"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 891,
														"src": "9563:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1371,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "9586:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_memory_ptr",
																"typeString": "struct Stake.Stake memory"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "9586:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9563:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1374,
												"nodeType": "ExpressionStatement",
												"src": "9563:40:6"
											},
											{
												"expression": {
													"id": 1375,
													"name": "summary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1286,
													"src": "9623:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
														"typeString": "struct Stake.StakingSummary memory"
													}
												},
												"functionReturnParameters": 1266,
												"id": 1376,
												"nodeType": "Return",
												"src": "9616:14:6"
											}
										]
									},
									"functionSelector": "10486b6a",
									"id": 1378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasStake",
									"nameLocation": "8596:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8604:2:6"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "8630:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingSummary_$897_memory_ptr",
													"typeString": "struct Stake.StakingSummary"
												},
												"typeName": {
													"id": 1264,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1263,
														"name": "StakingSummary",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 897,
														"src": "8630:14:6"
													},
													"referencedDeclaration": 897,
													"src": "8630:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$897_storage_ptr",
														"typeString": "struct Stake.StakingSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8629:23:6"
									},
									"scope": 1513,
									"src": "8587:1051:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "9797:49:6",
										"statements": [
											{
												"expression": {
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1383,
														"name": "airdropSince",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "9808:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1384,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9823:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9823:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9808:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "9808:30:6"
											}
										]
									},
									"functionSelector": "d2a569c3",
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1381,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1380,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "9787:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "9787:9:6"
										}
									],
									"name": "startAirdrop",
									"nameLocation": "9763:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9775:2:6"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9797:0:6"
									},
									"scope": 1513,
									"src": "9754:92:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "9922:172:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1396,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "9937:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "323030",
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9946:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "9937:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1403,
												"nodeType": "IfStatement",
												"src": "9933:85:6",
												"trueBody": {
													"id": 1402,
													"nodeType": "Block",
													"src": "9951:67:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1399,
																	"name": "Staking__airdropExceed20Percent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "9973:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9973:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1401,
															"nodeType": "RevertStatement",
															"src": "9966:40:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1404,
														"name": "airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "10028:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1405,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "10042:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10028:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1407,
												"nodeType": "ExpressionStatement",
												"src": "10028:20:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1409,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "10079:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1408,
														"name": "AirdropChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "10064:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10064:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1411,
												"nodeType": "EmitStatement",
												"src": "10059:27:6"
											}
										]
									},
									"functionSelector": "d5dbdf1b",
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1394,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1393,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "9912:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "9912:9:6"
										}
									],
									"name": "changeAirdropPercentage",
									"nameLocation": "9863:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9895:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "9887:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9887:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9886:16:6"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9922:0:6"
									},
									"scope": 1513,
									"src": "9854:240:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1421,
										"nodeType": "Block",
										"src": "10159:41:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1418,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "10177:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "10177:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1417,
												"id": 1420,
												"nodeType": "Return",
												"src": "10170:22:6"
											}
										]
									},
									"functionSelector": "c63aa3e7",
									"id": 1422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_blockTimestamp",
									"nameLocation": "10111:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10126:2:6"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "10150:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10150:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10149:9:6"
									},
									"scope": 1513,
									"src": "10102:98:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "10280:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1429,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "10299:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "10299:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1431,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "10317:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10299:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1433,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10298:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "37",
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10330:6:6",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "7"
													},
													"src": "10298:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1428,
												"id": 1436,
												"nodeType": "Return",
												"src": "10291:45:6"
											}
										]
									},
									"functionSelector": "b5d9df83",
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateWeek",
									"nameLocation": "10217:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "10239:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "10231:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10231:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10230:19:6"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "10271:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10271:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10270:9:6"
									},
									"scope": 1513,
									"src": "10208:136:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "10464:73:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1445,
																				"name": "stakeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1440,
																				"src": "10484:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1446,
																				"name": "airdropRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 819,
																				"src": "10498:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10484:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1448,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10483:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 1449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10513:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "10483:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1451,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10482:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3532",
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10521:8:6",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31449600_by_1",
															"typeString": "int_const 31449600"
														},
														"value": "52"
													},
													"src": "10482:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1444,
												"id": 1454,
												"nodeType": "Return",
												"src": "10475:54:6"
											}
										]
									},
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateAirdrop",
									"nameLocation": "10361:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "stakeAmount",
												"nameLocation": "10387:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "10379:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10379:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10378:21:6"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "10450:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10450:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10449:9:6"
									},
									"scope": 1513,
									"src": "10352:185:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1511,
										"nodeType": "Block",
										"src": "10578:572:6",
										"statements": [
											{
												"assignments": [
													1461
												],
												"declarations": [
													{
														"constant": false,
														"id": 1461,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "10656:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1511,
														"src": "10642:20:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
															"typeString": "struct Stake.Stake"
														},
														"typeName": {
															"id": 1460,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1459,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 889,
																"src": "10642:5:6"
															},
															"referencedDeclaration": 889,
															"src": "10642:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
																"typeString": "struct Stake.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1466,
												"initialValue": {
													"baseExpression": {
														"id": 1462,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "10665:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$889_storage_$",
															"typeString": "mapping(address => struct Stake.Stake storage ref)"
														}
													},
													"id": 1465,
													"indexExpression": {
														"expression": {
															"id": 1463,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10678:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "10678:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10665:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$889_storage",
														"typeString": "struct Stake.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10642:47:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1467,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "10706:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
																"typeString": "struct Stake.Stake storage pointer"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "10706:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10722:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10706:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1510,
												"nodeType": "IfStatement",
												"src": "10702:441:6",
												"trueBody": {
													"id": 1509,
													"nodeType": "Block",
													"src": "10725:418:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1472,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1461,
																				"src": "10758:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
																					"typeString": "struct Stake.Stake storage pointer"
																				}
																			},
																			"id": 1473,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "latestClaimDrop",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 888,
																			"src": "10758:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1471,
																		"name": "calculateWeek",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1438,
																		"src": "10744:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10744:37:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10785:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10744:42:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1481,
															"nodeType": "IfStatement",
															"src": "10740:119:6",
															"trueBody": {
																"id": 1480,
																"nodeType": "Block",
																"src": "10788:71:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1477,
																				"name": "Airdrop__claimableOnceAWeek",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 791,
																				"src": "10814:27:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10814:29:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1479,
																		"nodeType": "RevertStatement",
																		"src": "10807:36:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1482,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1461,
																		"src": "10875:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
																			"typeString": "struct Stake.Stake storage pointer"
																		}
																	},
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimableAirdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 886,
																	"src": "10875:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10901:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10875:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1487,
															"nodeType": "ExpressionStatement",
															"src": "10875:27:6"
														},
														{
															"expression": {
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1488,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1461,
																		"src": "10917:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
																			"typeString": "struct Stake.Stake storage pointer"
																		}
																	},
																	"id": 1490,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "latestClaimDrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 888,
																	"src": "10917:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1491,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "10942:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "10942:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10917:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1494,
															"nodeType": "ExpressionStatement",
															"src": "10917:40:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1499,
																				"name": "token_address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 838,
																				"src": "11022:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1498,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "11015:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11015:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"expression": {
																			"id": 1501,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11055:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11055:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1504,
																					"name": "staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1461,
																					"src": "11102:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$889_storage_ptr",
																						"typeString": "struct Stake.Stake storage pointer"
																					}
																				},
																				"id": 1505,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 876,
																				"src": "11102:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1503,
																			"name": "_calculateAirdrop",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1456,
																			"src": "11084:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) view returns (uint256)"
																			}
																		},
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11084:32:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1495,
																		"name": "SafeERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "10974:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeERC20_$446_$",
																			"typeString": "type(library SafeERC20)"
																		}
																	},
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 253,
																	"src": "10974:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10974:157:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1508,
															"nodeType": "ExpressionStatement",
															"src": "10974:157:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "5b88349d",
									"id": 1512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimAirdrop",
									"nameLocation": "10554:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10566:2:6"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10578:0:6"
									},
									"scope": 1513,
									"src": "10545:605:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1514,
							"src": "1017:11982:6",
							"usedErrors": [
								780,
								782,
								784,
								786,
								788,
								791
							]
						}
					],
					"src": "40:12961:6"
				},
				"id": 6
			}
		}
	}
}