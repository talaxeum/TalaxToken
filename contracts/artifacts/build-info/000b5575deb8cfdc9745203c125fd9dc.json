{
	"id": "000b5575deb8cfdc9745203c125fd9dc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Stakable.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.11;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract Stakable {\r\n    /**\r\n     * @notice Constructor since this contract is not ment to be used without inheritance\r\n     * push once to stakeholders for it to work proplerly\r\n     */\r\n\r\n    uint256 private _stakingPenalty;\r\n\r\n    constructor(uint256 stakingPenalty_) {\r\n        // This push is needed so we avoid index 0 causing bug of index-1\r\n        stakeholders.push();\r\n\r\n        //Staking penalty in percentage\r\n        _stakingPenalty = stakingPenalty_;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * A stake struct is used to represent the way we store stakes,\r\n     * A Stake will contain the users address, the amount staked and a timestamp,\r\n     * Since which is when the stake was made\r\n     */\r\n    struct Stake {\r\n        address user;\r\n        uint256 amount;\r\n        uint256 since;\r\n        // This claimable field is new and used to tell how big of a reward is currently available\r\n        uint256 claimable;\r\n        uint256 rewardAPY;\r\n        uint256 releaseTime;\r\n    }\r\n    /**\r\n     * @notice Stakeholder is a staker that has active stakes\r\n     */\r\n    struct Stakeholder {\r\n        address user;\r\n        Stake[] address_stakes;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * StakingSummary is a struct that is used to contain all stakes performed by a certain account\r\n     */\r\n    struct StakingSummary {\r\n        uint256 total_amount;\r\n        Stake[] stakes;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     *   This is a array where we store all Stakes that are performed on the Contract\r\n     *   The stakes for each address are stored at a certain index, the index can be found using the stakes mapping\r\n     */\r\n    Stakeholder[] internal stakeholders;\r\n    /**\r\n     * @notice\r\n     * stakes is used to keep track of the INDEX for the stakers in the stakes array\r\n     */\r\n    mapping(address => uint256) internal stakes;\r\n\r\n    /**\r\n     * @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\r\n     */\r\n    event Staked(\r\n        address indexed user,\r\n        uint256 amount,\r\n        uint256 index,\r\n        uint256 timestamp,\r\n        uint256 releaseTime\r\n    );\r\n\r\n    event PenaltyChanged(uint256 amount);\r\n\r\n    /**\r\n     * @notice _addStakeholder takes care of adding a stakeholder to the stakeholders array\r\n     */\r\n    function _addStakeholder(address staker) internal returns (uint256) {\r\n        // Push a empty item to the Array to make space for our new stakeholder\r\n        stakeholders.push();\r\n        // Calculate the index of the last item in the array by Len-1\r\n        uint256 userIndex = stakeholders.length - 1;\r\n        // Assign the address to the new index\r\n        stakeholders[userIndex].user = staker;\r\n        // Add index to the stakeHolders\r\n        stakes[staker] = userIndex;\r\n        return userIndex;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\r\n     * StakeID\r\n     */\r\n    function _stake(\r\n        uint256 _amount,\r\n        uint256 _stakePeriod,\r\n        uint256 _rewardRate\r\n    ) internal {\r\n        // Simple check so that user does not stake 0\r\n        require(_amount > 0, \"Stakable: Cannot stake nothing\");\r\n        // require(_amount > 1e18, \"Minimum stake is 1 TALAX\");\r\n\r\n        // Mappings in solidity creates all values, but empty, so we can just check the address\r\n        uint256 index = stakes[msg.sender];\r\n        // block.timestamp = timestamp of the current block in seconds since the epoch\r\n        uint256 timestamp = block.timestamp;\r\n        // See if the staker already has a staked index or if its the first time\r\n        if (index == 0) {\r\n            // This stakeholder stakes for the first time\r\n            // We need to add him to the stakeHolders and also map it into the Index of the stakes\r\n            // The index returned will be the index of the stakeholder in the stakeholders array\r\n            index = _addStakeholder(msg.sender);\r\n        }\r\n\r\n        // Use the index to push a new Stake\r\n        // push a newly created Stake with the current block timestamp.\r\n        stakeholders[index].address_stakes.push(\r\n            Stake(\r\n                msg.sender,\r\n                _amount,\r\n                timestamp,\r\n                0,\r\n                _rewardRate,\r\n                (_stakePeriod + timestamp)\r\n            )\r\n        );\r\n        // Emit an event that the stake has occured\r\n        emit Staked(\r\n            msg.sender,\r\n            _amount,\r\n            index,\r\n            timestamp,\r\n            (_stakePeriod + timestamp)\r\n        );\r\n    }\r\n\r\n    function _changePenaltyFee(uint256 amount_) internal {\r\n        require(amount_ <= 30, \"Stakable: Penalty fee cannot exceed 5 percent.\");\r\n        _stakingPenalty = amount_;\r\n        emit PenaltyChanged(amount_);\r\n    }\r\n\r\n    function penaltyFee() public view returns(uint256){\r\n        return _stakingPenalty;\r\n    }\r\n\r\n    function calculateStakingDuration(uint256 since_)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        require(since_ > 0, \"Stakable: Error timestamp 0\");\r\n        return\r\n            SafeMath.div(\r\n                (block.timestamp - since_) * 1e24,\r\n                365 days,\r\n                \"Stakable: Error cannot divide timestamp\"\r\n            );\r\n    }\r\n\r\n    function calculateStakeReward(Stake memory _current_stake, uint256 _amount)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        if (_current_stake.amount == 0) {\r\n            return 0;\r\n        }\r\n\r\n        return\r\n            (_amount *\r\n                _current_stake.rewardAPY *\r\n                calculateStakingDuration(_current_stake.since)) / 1e26;\r\n    }\r\n\r\n    function stakeSummary(address user_)\r\n        public\r\n        view\r\n        returns (StakingSummary memory)\r\n    {\r\n        StakingSummary memory summary = StakingSummary(\r\n            0,\r\n            stakeholders[stakes[user_]].address_stakes\r\n        );\r\n\r\n        return summary;\r\n    }\r\n\r\n    function calculateStakingWithPenalty(uint256 amount, uint256 reward)\r\n        internal\r\n        view\r\n        returns (uint256, uint256)\r\n    {\r\n        if (amount == 0) {\r\n            return (0, 0);\r\n        }\r\n\r\n        return (\r\n            SafeMath.sub(\r\n                amount,\r\n                SafeMath.mul(amount, SafeMath.div(_stakingPenalty, 1000))\r\n            ),\r\n            SafeMath.sub(\r\n                reward,\r\n                SafeMath.mul(reward, SafeMath.div(_stakingPenalty, 1000))\r\n            )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\r\n     * Notice index of the stake is the users stake counter, starting at 0 for the first stake\r\n     * Will return the amount to MINT onto the acount\r\n     * Will also calculateStakeReward and reset timer\r\n     */\r\n    function _withdrawStake(uint256 amount, uint256 index)\r\n        internal\r\n        returns (uint256, uint256)\r\n    {\r\n        // Grab user_index which is the index to use to grab the Stake[]\r\n        uint256 user_index = stakes[msg.sender];\r\n        Stake memory current_stake = stakeholders[user_index].address_stakes[\r\n            index\r\n        ];\r\n\r\n        // require(\r\n        //     current_stake.releaseTime <= block.timestamp,\r\n        //     \"Stakable: Cannot withdraw before the release time\"\r\n        // );\r\n\r\n        require(\r\n            current_stake.amount >= amount,\r\n            \"Stakable: Cannot withdraw more than you have staked\"\r\n        );\r\n\r\n        // Calculate available Reward first before we start modifying data\r\n        uint256 reward = calculateStakeReward(current_stake, amount);\r\n\r\n        /**\r\n         * @notice This is penalty given for early withdrawal before the designated time\r\n         */\r\n\r\n        if (current_stake.releaseTime < block.timestamp) {\r\n            return calculateStakingWithPenalty(amount, reward);\r\n        }\r\n\r\n        uint256 stakeDuration = current_stake.releaseTime - current_stake.since;\r\n        // Remove by subtracting the money unstaked\r\n        current_stake.amount = current_stake.amount - amount;\r\n        // If stake is empty, 0, then remove it from the array of stakes\r\n        if (current_stake.amount == 0) {\r\n            delete stakeholders[user_index].address_stakes[index];\r\n        } else {\r\n            stakeholders[user_index]\r\n                .address_stakes[index]\r\n                .amount = current_stake.amount;\r\n            // Reset timer of stake\r\n            stakeholders[user_index].address_stakes[index].since = block\r\n                .timestamp;\r\n            stakeholders[user_index].address_stakes[index].releaseTime =\r\n                block.timestamp +\r\n                stakeDuration;\r\n        }\r\n\r\n        return (amount, reward);\r\n    }\r\n\r\n    function _withdrawAllStake(uint256 index)\r\n        internal\r\n        returns (uint256, uint256)\r\n    {\r\n        // Grab user_index which is the index to use to grab the Stake[]\r\n        uint256 user_index = stakes[msg.sender];\r\n        Stake memory current_stake = stakeholders[user_index].address_stakes[\r\n            index\r\n        ];\r\n\r\n        // require(\r\n        //     current_stake.releaseTime <= block.timestamp,\r\n        //     \"Stakable: Cannot withdraw before the release time\"\r\n        // );\r\n\r\n        require(\r\n            current_stake.amount > 0,\r\n            \"Stakable: Cannot withdraw, you don't have any stake in this Index\"\r\n        );\r\n\r\n        // Calculate available Reward first before we start modifying data\r\n        uint256 amount = current_stake.amount;\r\n        uint256 reward = calculateStakeReward(current_stake, amount);\r\n\r\n        /**\r\n         * @notice This is penalty given for early withdrawal before the designated time\r\n         */\r\n\r\n        if (current_stake.releaseTime < block.timestamp) {\r\n            return calculateStakingWithPenalty(amount, reward);\r\n        }\r\n\r\n        delete stakeholders[user_index].address_stakes[index];\r\n\r\n        return (amount, reward);\r\n    }\r\n\r\n    function hasStake(address _staker)\r\n        public\r\n        view\r\n        returns (StakingSummary memory)\r\n    {\r\n        uint256 totalStakeAmount;\r\n\r\n        StakingSummary memory summary = StakingSummary(\r\n            0,\r\n            stakeholders[stakes[_staker]].address_stakes\r\n        );\r\n        require(\r\n            summary.stakes.length != 0,\r\n            \"Stakable: This address does not have any stakes\"\r\n        );\r\n\r\n        for (uint256 s = 0; s < summary.stakes.length; s += 1) {\r\n            uint256 availableReward = calculateStakeReward(\r\n                summary.stakes[s],\r\n                summary.stakes[s].amount\r\n            );\r\n            summary.stakes[s].claimable = availableReward;\r\n            totalStakeAmount = totalStakeAmount + summary.stakes[s].amount;\r\n        }\r\n\r\n        summary.total_amount = totalStakeAmount;\r\n        return summary;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 ADD SSTORE DUP15 CALL BYTE BASEFEE 0xAA CREATE GAS AND PUSH22 0xB79EEBEEBC9986DDA7DC9FFF4A6F2A14C0B05CA86473 PUSH16 0x6C634300080B00330000000000000000 ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 ADD SSTORE DUP15 CALL BYTE BASEFEE 0xAA CREATE GAS AND PUSH22 0xB79EEBEEBC9986DDA7DC9FFF4A6F2A14C0B05CA86473 PUSH16 0x6C634300080B00330000000000000000 ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Stakable.sol": {
				"Stakable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakingPenalty_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PenaltyChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "hasStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "total_amount",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "user",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "since",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "rewardAPY",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "releaseTime",
													"type": "uint256"
												}
											],
											"internalType": "struct Stakable.Stake[]",
											"name": "stakes",
											"type": "tuple[]"
										}
									],
									"internalType": "struct Stakable.StakingSummary",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "penaltyFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_",
									"type": "address"
								}
							],
							"name": "stakeSummary",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "total_amount",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "user",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "since",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "rewardAPY",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "releaseTime",
													"type": "uint256"
												}
											],
											"internalType": "struct Stakable.Stake[]",
											"name": "stakes",
											"type": "tuple[]"
										}
									],
									"internalType": "struct Stakable.StakingSummary",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Stakable.sol\":128:11141  contract Stakable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Stakable.sol\":363:600  constructor(uint256 stakingPenalty_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Stakable.sol\":486:498  stakeholders */\n  0x01\n    /* \"contracts/Stakable.sol\":486:505  stakeholders.push() */\n  dup1\n  dup2\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  pop\n  pop\n    /* \"contracts/Stakable.sol\":577:592  stakingPenalty_ */\n  dup1\n    /* \"contracts/Stakable.sol\":559:574  _stakingPenalty */\n  0x00\n    /* \"contracts/Stakable.sol\":559:592  _stakingPenalty = stakingPenalty_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stakable.sol\":363:600  constructor(uint256 stakingPenalty_) {... */\n  pop\n    /* \"contracts/Stakable.sol\":128:11141  contract Stakable {... */\n  jump(tag_7)\n    /* \"#utility.yul\":88:205   */\ntag_9:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_11:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_12:\n    /* \"#utility.yul\":490:514   */\n  tag_20\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_11\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_21:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_13:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_23\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_12\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_26\n  tag_9\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":781:900   */\ntag_25:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_27\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_13\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Stakable.sol\":128:11141  contract Stakable {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Stakable.sol\":128:11141  contract Stakable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3dc10ad4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb09d4b4e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe73e14bf\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Stakable.sol\":5030:5121  function penaltyFee() public view returns(uint256){... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":5909:6198  function stakeSummary(address user_)... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":10257:11138  function hasStake(address _staker)... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":5030:5121  function penaltyFee() public view returns(uint256){... */\n    tag_7:\n        /* \"contracts/Stakable.sol\":5072:5079  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":5098:5113  _stakingPenalty */\n      dup1\n      sload\n        /* \"contracts/Stakable.sol\":5091:5113  return _stakingPenalty */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":5030:5121  function penaltyFee() public view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stakable.sol\":5909:6198  function stakeSummary(address user_)... */\n    tag_13:\n        /* \"contracts/Stakable.sol\":5994:6015  StakingSummary memory */\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"contracts/Stakable.sol\":6033:6062  StakingSummary memory summary */\n      0x00\n        /* \"contracts/Stakable.sol\":6065:6163  StakingSummary(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Stakable.sol\":6094:6095  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":6065:6163  StakingSummary(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":6110:6122  stakeholders */\n      0x01\n        /* \"contracts/Stakable.sol\":6123:6129  stakes */\n      0x02\n        /* \"contracts/Stakable.sol\":6123:6136  stakes[user_] */\n      0x00\n        /* \"contracts/Stakable.sol\":6130:6135  user_ */\n      dup8\n        /* \"contracts/Stakable.sol\":6123:6136  stakes[user_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Stakable.sol\":6110:6137  stakeholders[stakes[user_]] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_24\n      jumpi\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n    tag_24:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/Stakable.sol\":6110:6152  stakeholders[stakes[user_]].address_stakes */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":6065:6163  StakingSummary(... */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_28:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_29\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_28)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":6033:6163  StakingSummary memory summary = StakingSummary(... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":6183:6190  summary */\n      dup1\n        /* \"contracts/Stakable.sol\":6176:6190  return summary */\n      swap2\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":5909:6198  function stakeSummary(address user_)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":10257:11138  function hasStake(address _staker)... */\n    tag_18:\n        /* \"contracts/Stakable.sol\":10340:10361  StakingSummary memory */\n      tag_31\n      tag_22\n      jump\t// in\n    tag_31:\n        /* \"contracts/Stakable.sol\":10379:10403  uint256 totalStakeAmount */\n      0x00\n        /* \"contracts/Stakable.sol\":10416:10445  StakingSummary memory summary */\n      dup1\n        /* \"contracts/Stakable.sol\":10448:10548  StakingSummary(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Stakable.sol\":10477:10478  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":10448:10548  StakingSummary(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":10493:10505  stakeholders */\n      0x01\n        /* \"contracts/Stakable.sol\":10506:10512  stakes */\n      0x02\n        /* \"contracts/Stakable.sol\":10506:10521  stakes[_staker] */\n      0x00\n        /* \"contracts/Stakable.sol\":10513:10520  _staker */\n      dup9\n        /* \"contracts/Stakable.sol\":10506:10521  stakes[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Stakable.sol\":10493:10522  stakeholders[stakes[_staker]] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_33\n      jumpi\n      tag_34\n      tag_26\n      jump\t// in\n    tag_34:\n    tag_33:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/Stakable.sol\":10493:10537  stakeholders[stakes[_staker]].address_stakes */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":10448:10548  StakingSummary(... */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_36:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_37\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_36)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":10416:10548  StakingSummary memory summary = StakingSummary(... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":10606:10607  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":10581:10588  summary */\n      dup2\n        /* \"contracts/Stakable.sol\":10581:10595  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":10581:10602  summary.stakes.length */\n      mload\n        /* \"contracts/Stakable.sol\":10581:10607  summary.stakes.length != 0 */\n      eq\n      iszero\n        /* \"contracts/Stakable.sol\":10559:10682  require(... */\n      tag_39\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_39:\n        /* \"contracts/Stakable.sol\":10700:10709  uint256 s */\n      0x00\n        /* \"contracts/Stakable.sol\":10695:11054  for (uint256 s = 0; s < summary.stakes.length; s += 1) {... */\n    tag_42:\n        /* \"contracts/Stakable.sol\":10719:10726  summary */\n      dup2\n        /* \"contracts/Stakable.sol\":10719:10733  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":10719:10740  summary.stakes.length */\n      mload\n        /* \"contracts/Stakable.sol\":10715:10716  s */\n      dup2\n        /* \"contracts/Stakable.sol\":10715:10740  s < summary.stakes.length */\n      lt\n        /* \"contracts/Stakable.sol\":10695:11054  for (uint256 s = 0; s < summary.stakes.length; s += 1) {... */\n      iszero\n      tag_43\n      jumpi\n        /* \"contracts/Stakable.sol\":10765:10788  uint256 availableReward */\n      0x00\n        /* \"contracts/Stakable.sol\":10791:10905  calculateStakeReward(... */\n      tag_45\n        /* \"contracts/Stakable.sol\":10830:10837  summary */\n      dup4\n        /* \"contracts/Stakable.sol\":10830:10844  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":10845:10846  s */\n      dup4\n        /* \"contracts/Stakable.sol\":10830:10847  summary.stakes[s] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_46\n      jumpi\n      tag_47\n      tag_26\n      jump\t// in\n    tag_47:\n    tag_46:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Stakable.sol\":10866:10873  summary */\n      dup5\n        /* \"contracts/Stakable.sol\":10866:10880  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":10881:10882  s */\n      dup5\n        /* \"contracts/Stakable.sol\":10866:10883  summary.stakes[s] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_48\n      jumpi\n      tag_49\n      tag_26\n      jump\t// in\n    tag_49:\n    tag_48:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Stakable.sol\":10866:10890  summary.stakes[s].amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":10791:10811  calculateStakeReward */\n      tag_50\n        /* \"contracts/Stakable.sol\":10791:10905  calculateStakeReward(... */\n      jump\t// in\n    tag_45:\n        /* \"contracts/Stakable.sol\":10765:10905  uint256 availableReward = calculateStakeReward(... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":10950:10965  availableReward */\n      dup1\n        /* \"contracts/Stakable.sol\":10920:10927  summary */\n      dup4\n        /* \"contracts/Stakable.sol\":10920:10934  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":10935:10936  s */\n      dup4\n        /* \"contracts/Stakable.sol\":10920:10937  summary.stakes[s] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_51\n      jumpi\n      tag_52\n      tag_26\n      jump\t// in\n    tag_52:\n    tag_51:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Stakable.sol\":10920:10947  summary.stakes[s].claimable */\n      0x60\n      add\n        /* \"contracts/Stakable.sol\":10920:10965  summary.stakes[s].claimable = availableReward */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":11018:11025  summary */\n      dup3\n        /* \"contracts/Stakable.sol\":11018:11032  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":11033:11034  s */\n      dup3\n        /* \"contracts/Stakable.sol\":11018:11035  summary.stakes[s] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_53\n      jumpi\n      tag_54\n      tag_26\n      jump\t// in\n    tag_54:\n    tag_53:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Stakable.sol\":11018:11042  summary.stakes[s].amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":10999:11015  totalStakeAmount */\n      dup5\n        /* \"contracts/Stakable.sol\":10999:11042  totalStakeAmount + summary.stakes[s].amount */\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"contracts/Stakable.sol\":10980:11042  totalStakeAmount = totalStakeAmount + summary.stakes[s].amount */\n      swap4\n      pop\n        /* \"contracts/Stakable.sol\":10750:11054  {... */\n      pop\n        /* \"contracts/Stakable.sol\":10747:10748  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":10742:10748  s += 1 */\n      dup2\n      tag_57\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_57:\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":10695:11054  for (uint256 s = 0; s < summary.stakes.length; s += 1) {... */\n      jump(tag_42)\n    tag_43:\n      pop\n        /* \"contracts/Stakable.sol\":11089:11105  totalStakeAmount */\n      dup2\n        /* \"contracts/Stakable.sol\":11066:11073  summary */\n      dup2\n        /* \"contracts/Stakable.sol\":11066:11086  summary.total_amount */\n      0x00\n      add\n        /* \"contracts/Stakable.sol\":11066:11105  summary.total_amount = totalStakeAmount */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":11123:11130  summary */\n      dup1\n        /* \"contracts/Stakable.sol\":11116:11130  return summary */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":10257:11138  function hasStake(address _staker)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":5517:5901  function calculateStakeReward(Stake memory _current_stake, uint256 _amount)... */\n    tag_50:\n        /* \"contracts/Stakable.sol\":5643:5650  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":5697:5698  0 */\n      dup1\n        /* \"contracts/Stakable.sol\":5672:5686  _current_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":5672:5693  _current_stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":5672:5698  _current_stake.amount == 0 */\n      eq\n        /* \"contracts/Stakable.sol\":5668:5735  if (_current_stake.amount == 0) {... */\n      iszero\n      tag_59\n      jumpi\n        /* \"contracts/Stakable.sol\":5722:5723  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":5715:5723  return 0 */\n      swap1\n      pop\n      jump(tag_58)\n        /* \"contracts/Stakable.sol\":5668:5735  if (_current_stake.amount == 0) {... */\n    tag_59:\n        /* \"contracts/Stakable.sol\":5889:5893  1e26 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/Stakable.sol\":5839:5885  calculateStakingDuration(_current_stake.since) */\n      tag_60\n        /* \"contracts/Stakable.sol\":5864:5878  _current_stake */\n      dup5\n        /* \"contracts/Stakable.sol\":5864:5884  _current_stake.since */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":5839:5863  calculateStakingDuration */\n      tag_61\n        /* \"contracts/Stakable.sol\":5839:5885  calculateStakingDuration(_current_stake.since) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/Stakable.sol\":5795:5809  _current_stake */\n      dup5\n        /* \"contracts/Stakable.sol\":5795:5819  _current_stake.rewardAPY */\n      0x80\n      add\n      mload\n        /* \"contracts/Stakable.sol\":5768:5775  _amount */\n      dup5\n        /* \"contracts/Stakable.sol\":5768:5819  _amount *... */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/Stakable.sol\":5768:5885  _amount *... */\n      tag_64\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_64:\n        /* \"contracts/Stakable.sol\":5767:5893  (_amount *... */\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"contracts/Stakable.sol\":5747:5893  return... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":5517:5901  function calculateStakeReward(Stake memory _current_stake, uint256 _amount)... */\n    tag_58:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":5129:5509  function calculateStakingDuration(uint256 since_)... */\n    tag_61:\n        /* \"contracts/Stakable.sol\":5229:5236  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":5271:5272  0 */\n      dup1\n        /* \"contracts/Stakable.sol\":5262:5268  since_ */\n      dup3\n        /* \"contracts/Stakable.sol\":5262:5272  since_ > 0 */\n      gt\n        /* \"contracts/Stakable.sol\":5254:5304  require(since_ > 0, \"Stakable: Error timestamp 0\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"contracts/Stakable.sol\":5335:5501  SafeMath.div(... */\n      tag_71\n        /* \"contracts/Stakable.sol\":5395:5399  1e24 */\n      0xd3c21bcecceda1000000\n        /* \"contracts/Stakable.sol\":5385:5391  since_ */\n      dup4\n        /* \"contracts/Stakable.sol\":5367:5382  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":5367:5391  block.timestamp - since_ */\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"contracts/Stakable.sol\":5366:5399  (block.timestamp - since_) * 1e24 */\n      tag_74\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_74:\n        /* \"contracts/Stakable.sol\":5418:5426  365 days */\n      0x01e13380\n        /* \"contracts/Stakable.sol\":5335:5501  SafeMath.div(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_10b867070097d898ae15cd1bc384e389b4a7d91f05c0759c198c193c7fd91787\n      0x27\n      swap2\n      codecopy\n        /* \"contracts/Stakable.sol\":5335:5347  SafeMath.div */\n      tag_75\n        /* \"contracts/Stakable.sol\":5335:5501  SafeMath.div(... */\n      jump\t// in\n    tag_71:\n        /* \"contracts/Stakable.sol\":5315:5501  return... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":5129:5509  function calculateStakingDuration(uint256 since_)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n    tag_75:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5776:5783  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5831:5832  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5827:5828  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5827:5832  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5834:5846  errorMessage */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5819:5847  require(b > 0, errorMessage) */\n      swap1\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5872:5873  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5869  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5873  a / b */\n      dup2\n      tag_80\n      jumpi\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n    tag_80:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5861:5873  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_22:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_83:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_84:\n        /* \"#utility.yul\":177:201   */\n      tag_115\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_83\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_9:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_117\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_84\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_86:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_88:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_89:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_123\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_88\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_90:\n        /* \"#utility.yul\":1076:1100   */\n      tag_125\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_89\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_126\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_126:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_91:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_128\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_90\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_12:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_131\n      tag_86\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1352:1471   */\n    tag_130:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_132\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_91\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1719   */\n    tag_92:\n        /* \"#utility.yul\":1688:1712   */\n      tag_134\n        /* \"#utility.yul\":1706:1711   */\n      dup2\n        /* \"#utility.yul\":1688:1712   */\n      tag_83\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1683:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1713   */\n      mstore\n        /* \"#utility.yul\":1611:1719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1725:1861   */\n    tag_93:\n        /* \"#utility.yul\":1814:1820   */\n      0x00\n        /* \"#utility.yul\":1848:1853   */\n      dup2\n        /* \"#utility.yul\":1842:1854   */\n      mload\n        /* \"#utility.yul\":1832:1854   */\n      swap1\n      pop\n        /* \"#utility.yul\":1725:1861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1867:2063   */\n    tag_94:\n        /* \"#utility.yul\":1978:1989   */\n      0x00\n        /* \"#utility.yul\":2012:2018   */\n      dup3\n        /* \"#utility.yul\":2007:2010   */\n      dup3\n        /* \"#utility.yul\":2000:2019   */\n      mstore\n        /* \"#utility.yul\":2052:2056   */\n      0x20\n        /* \"#utility.yul\":2047:2050   */\n      dup3\n        /* \"#utility.yul\":2043:2057   */\n      add\n        /* \"#utility.yul\":2028:2057   */\n      swap1\n      pop\n        /* \"#utility.yul\":1867:2063   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2069:2223   */\n    tag_95:\n        /* \"#utility.yul\":2158:2162   */\n      0x00\n        /* \"#utility.yul\":2181:2184   */\n      dup2\n        /* \"#utility.yul\":2173:2184   */\n      swap1\n      pop\n        /* \"#utility.yul\":2211:2215   */\n      0x20\n        /* \"#utility.yul\":2206:2209   */\n      dup3\n        /* \"#utility.yul\":2202:2216   */\n      add\n        /* \"#utility.yul\":2194:2216   */\n      swap1\n      pop\n        /* \"#utility.yul\":2069:2223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2229:2337   */\n    tag_96:\n        /* \"#utility.yul\":2306:2330   */\n      tag_139\n        /* \"#utility.yul\":2324:2329   */\n      dup2\n        /* \"#utility.yul\":2306:2330   */\n      tag_89\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2301:2304   */\n      dup3\n        /* \"#utility.yul\":2294:2331   */\n      mstore\n        /* \"#utility.yul\":2229:2337   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2397:3604   */\n    tag_97:\n        /* \"#utility.yul\":2528:2532   */\n      0xc0\n        /* \"#utility.yul\":2523:2526   */\n      dup3\n        /* \"#utility.yul\":2519:2533   */\n      add\n        /* \"#utility.yul\":2615:2619   */\n      0x00\n        /* \"#utility.yul\":2608:2613   */\n      dup3\n        /* \"#utility.yul\":2604:2620   */\n      add\n        /* \"#utility.yul\":2598:2621   */\n      mload\n        /* \"#utility.yul\":2634:2697   */\n      tag_141\n        /* \"#utility.yul\":2691:2695   */\n      0x00\n        /* \"#utility.yul\":2686:2689   */\n      dup6\n        /* \"#utility.yul\":2682:2696   */\n      add\n        /* \"#utility.yul\":2668:2680   */\n      dup3\n        /* \"#utility.yul\":2634:2697   */\n      tag_96\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2543:2707   */\n      pop\n        /* \"#utility.yul\":2791:2795   */\n      0x20\n        /* \"#utility.yul\":2784:2789   */\n      dup3\n        /* \"#utility.yul\":2780:2796   */\n      add\n        /* \"#utility.yul\":2774:2797   */\n      mload\n        /* \"#utility.yul\":2810:2873   */\n      tag_142\n        /* \"#utility.yul\":2867:2871   */\n      0x20\n        /* \"#utility.yul\":2862:2865   */\n      dup6\n        /* \"#utility.yul\":2858:2872   */\n      add\n        /* \"#utility.yul\":2844:2856   */\n      dup3\n        /* \"#utility.yul\":2810:2873   */\n      tag_92\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2717:2883   */\n      pop\n        /* \"#utility.yul\":2966:2970   */\n      0x40\n        /* \"#utility.yul\":2959:2964   */\n      dup3\n        /* \"#utility.yul\":2955:2971   */\n      add\n        /* \"#utility.yul\":2949:2972   */\n      mload\n        /* \"#utility.yul\":2985:3048   */\n      tag_143\n        /* \"#utility.yul\":3042:3046   */\n      0x40\n        /* \"#utility.yul\":3037:3040   */\n      dup6\n        /* \"#utility.yul\":3033:3047   */\n      add\n        /* \"#utility.yul\":3019:3031   */\n      dup3\n        /* \"#utility.yul\":2985:3048   */\n      tag_92\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2893:3058   */\n      pop\n        /* \"#utility.yul\":3145:3149   */\n      0x60\n        /* \"#utility.yul\":3138:3143   */\n      dup3\n        /* \"#utility.yul\":3134:3150   */\n      add\n        /* \"#utility.yul\":3128:3151   */\n      mload\n        /* \"#utility.yul\":3164:3227   */\n      tag_144\n        /* \"#utility.yul\":3221:3225   */\n      0x60\n        /* \"#utility.yul\":3216:3219   */\n      dup6\n        /* \"#utility.yul\":3212:3226   */\n      add\n        /* \"#utility.yul\":3198:3210   */\n      dup3\n        /* \"#utility.yul\":3164:3227   */\n      tag_92\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3068:3237   */\n      pop\n        /* \"#utility.yul\":3324:3328   */\n      0x80\n        /* \"#utility.yul\":3317:3322   */\n      dup3\n        /* \"#utility.yul\":3313:3329   */\n      add\n        /* \"#utility.yul\":3307:3330   */\n      mload\n        /* \"#utility.yul\":3343:3406   */\n      tag_145\n        /* \"#utility.yul\":3400:3404   */\n      0x80\n        /* \"#utility.yul\":3395:3398   */\n      dup6\n        /* \"#utility.yul\":3391:3405   */\n      add\n        /* \"#utility.yul\":3377:3389   */\n      dup3\n        /* \"#utility.yul\":3343:3406   */\n      tag_92\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3247:3416   */\n      pop\n        /* \"#utility.yul\":3505:3509   */\n      0xa0\n        /* \"#utility.yul\":3498:3503   */\n      dup3\n        /* \"#utility.yul\":3494:3510   */\n      add\n        /* \"#utility.yul\":3488:3511   */\n      mload\n        /* \"#utility.yul\":3524:3587   */\n      tag_146\n        /* \"#utility.yul\":3581:3585   */\n      0xa0\n        /* \"#utility.yul\":3576:3579   */\n      dup6\n        /* \"#utility.yul\":3572:3586   */\n      add\n        /* \"#utility.yul\":3558:3570   */\n      dup3\n        /* \"#utility.yul\":3524:3587   */\n      tag_92\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3426:3597   */\n      pop\n        /* \"#utility.yul\":2497:3604   */\n      pop\n        /* \"#utility.yul\":2397:3604   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3610:3877   */\n    tag_98:\n        /* \"#utility.yul\":3723:3733   */\n      0x00\n        /* \"#utility.yul\":3744:3834   */\n      tag_148\n        /* \"#utility.yul\":3830:3833   */\n      dup4\n        /* \"#utility.yul\":3822:3828   */\n      dup4\n        /* \"#utility.yul\":3744:3834   */\n      tag_97\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":3866:3870   */\n      0xc0\n        /* \"#utility.yul\":3861:3864   */\n      dup4\n        /* \"#utility.yul\":3857:3871   */\n      add\n        /* \"#utility.yul\":3843:3871   */\n      swap1\n      pop\n        /* \"#utility.yul\":3610:3877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3883:4018   */\n    tag_99:\n        /* \"#utility.yul\":3975:3979   */\n      0x00\n        /* \"#utility.yul\":4007:4011   */\n      0x20\n        /* \"#utility.yul\":4002:4005   */\n      dup3\n        /* \"#utility.yul\":3998:4012   */\n      add\n        /* \"#utility.yul\":3990:4012   */\n      swap1\n      pop\n        /* \"#utility.yul\":3883:4018   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4082:4970   */\n    tag_100:\n        /* \"#utility.yul\":4235:4238   */\n      0x00\n        /* \"#utility.yul\":4264:4340   */\n      tag_151\n        /* \"#utility.yul\":4334:4339   */\n      dup3\n        /* \"#utility.yul\":4264:4340   */\n      tag_93\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4356:4454   */\n      tag_152\n        /* \"#utility.yul\":4447:4453   */\n      dup2\n        /* \"#utility.yul\":4442:4445   */\n      dup6\n        /* \"#utility.yul\":4356:4454   */\n      tag_94\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":4349:4454   */\n      swap4\n      pop\n        /* \"#utility.yul\":4478:4556   */\n      tag_153\n        /* \"#utility.yul\":4550:4555   */\n      dup4\n        /* \"#utility.yul\":4478:4556   */\n      tag_95\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4579:4586   */\n      dup1\n        /* \"#utility.yul\":4610:4611   */\n      0x00\n        /* \"#utility.yul\":4595:4945   */\n    tag_154:\n        /* \"#utility.yul\":4620:4626   */\n      dup4\n        /* \"#utility.yul\":4617:4618   */\n      dup2\n        /* \"#utility.yul\":4614:4627   */\n      lt\n        /* \"#utility.yul\":4595:4945   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":4696:4702   */\n      dup2\n        /* \"#utility.yul\":4690:4703   */\n      mload\n        /* \"#utility.yul\":4723:4830   */\n      tag_157\n        /* \"#utility.yul\":4826:4829   */\n      dup9\n        /* \"#utility.yul\":4811:4824   */\n      dup3\n        /* \"#utility.yul\":4723:4830   */\n      tag_98\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":4716:4830   */\n      swap8\n      pop\n        /* \"#utility.yul\":4853:4935   */\n      tag_158\n        /* \"#utility.yul\":4928:4934   */\n      dup4\n        /* \"#utility.yul\":4853:4935   */\n      tag_99\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":4843:4935   */\n      swap3\n      pop\n        /* \"#utility.yul\":4655:4945   */\n      pop\n        /* \"#utility.yul\":4642:4643   */\n      0x01\n        /* \"#utility.yul\":4639:4640   */\n      dup2\n        /* \"#utility.yul\":4635:4644   */\n      add\n        /* \"#utility.yul\":4630:4644   */\n      swap1\n      pop\n        /* \"#utility.yul\":4595:4945   */\n      jump(tag_154)\n    tag_156:\n        /* \"#utility.yul\":4599:4613   */\n      pop\n        /* \"#utility.yul\":4961:4964   */\n      dup6\n        /* \"#utility.yul\":4954:4964   */\n      swap4\n      pop\n        /* \"#utility.yul\":4240:4970   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4082:4970   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5048:5750   */\n    tag_101:\n        /* \"#utility.yul\":5179:5182   */\n      0x00\n        /* \"#utility.yul\":5215:5219   */\n      0x40\n        /* \"#utility.yul\":5210:5213   */\n      dup4\n        /* \"#utility.yul\":5206:5220   */\n      add\n        /* \"#utility.yul\":5310:5314   */\n      0x00\n        /* \"#utility.yul\":5303:5308   */\n      dup4\n        /* \"#utility.yul\":5299:5315   */\n      add\n        /* \"#utility.yul\":5293:5316   */\n      mload\n        /* \"#utility.yul\":5329:5392   */\n      tag_160\n        /* \"#utility.yul\":5386:5390   */\n      0x00\n        /* \"#utility.yul\":5381:5384   */\n      dup7\n        /* \"#utility.yul\":5377:5391   */\n      add\n        /* \"#utility.yul\":5363:5375   */\n      dup3\n        /* \"#utility.yul\":5329:5392   */\n      tag_92\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":5230:5402   */\n      pop\n        /* \"#utility.yul\":5486:5490   */\n      0x20\n        /* \"#utility.yul\":5479:5484   */\n      dup4\n        /* \"#utility.yul\":5475:5491   */\n      add\n        /* \"#utility.yul\":5469:5492   */\n      mload\n        /* \"#utility.yul\":5539:5542   */\n      dup5\n        /* \"#utility.yul\":5533:5537   */\n      dup3\n        /* \"#utility.yul\":5529:5543   */\n      sub\n        /* \"#utility.yul\":5522:5526   */\n      0x20\n        /* \"#utility.yul\":5517:5520   */\n      dup7\n        /* \"#utility.yul\":5513:5527   */\n      add\n        /* \"#utility.yul\":5506:5544   */\n      mstore\n        /* \"#utility.yul\":5565:5712   */\n      tag_161\n        /* \"#utility.yul\":5707:5711   */\n      dup3\n        /* \"#utility.yul\":5693:5705   */\n      dup3\n        /* \"#utility.yul\":5565:5712   */\n      tag_100\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":5557:5712   */\n      swap2\n      pop\n        /* \"#utility.yul\":5412:5723   */\n      pop\n        /* \"#utility.yul\":5740:5744   */\n      dup1\n        /* \"#utility.yul\":5733:5744   */\n      swap2\n      pop\n        /* \"#utility.yul\":5184:5750   */\n      pop\n        /* \"#utility.yul\":5048:5750   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5756:6153   */\n    tag_15:\n        /* \"#utility.yul\":5911:5915   */\n      0x00\n        /* \"#utility.yul\":5949:5951   */\n      0x20\n        /* \"#utility.yul\":5938:5947   */\n      dup3\n        /* \"#utility.yul\":5934:5952   */\n      add\n        /* \"#utility.yul\":5926:5952   */\n      swap1\n      pop\n        /* \"#utility.yul\":5998:6007   */\n      dup2\n        /* \"#utility.yul\":5992:5996   */\n      dup2\n        /* \"#utility.yul\":5988:6008   */\n      sub\n        /* \"#utility.yul\":5984:5985   */\n      0x00\n        /* \"#utility.yul\":5973:5982   */\n      dup4\n        /* \"#utility.yul\":5969:5986   */\n      add\n        /* \"#utility.yul\":5962:6009   */\n      mstore\n        /* \"#utility.yul\":6026:6146   */\n      tag_163\n        /* \"#utility.yul\":6141:6145   */\n      dup2\n        /* \"#utility.yul\":6132:6138   */\n      dup5\n        /* \"#utility.yul\":6026:6146   */\n      tag_101\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":6018:6146   */\n      swap1\n      pop\n        /* \"#utility.yul\":5756:6153   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6159:6339   */\n    tag_26:\n        /* \"#utility.yul\":6207:6284   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6204:6205   */\n      0x00\n        /* \"#utility.yul\":6197:6285   */\n      mstore\n        /* \"#utility.yul\":6304:6308   */\n      0x32\n        /* \"#utility.yul\":6301:6302   */\n      0x04\n        /* \"#utility.yul\":6294:6309   */\n      mstore\n        /* \"#utility.yul\":6328:6332   */\n      0x24\n        /* \"#utility.yul\":6325:6326   */\n      0x00\n        /* \"#utility.yul\":6318:6333   */\n      revert\n        /* \"#utility.yul\":6345:6514   */\n    tag_102:\n        /* \"#utility.yul\":6429:6440   */\n      0x00\n        /* \"#utility.yul\":6463:6469   */\n      dup3\n        /* \"#utility.yul\":6458:6461   */\n      dup3\n        /* \"#utility.yul\":6451:6470   */\n      mstore\n        /* \"#utility.yul\":6503:6507   */\n      0x20\n        /* \"#utility.yul\":6498:6501   */\n      dup3\n        /* \"#utility.yul\":6494:6508   */\n      add\n        /* \"#utility.yul\":6479:6508   */\n      swap1\n      pop\n        /* \"#utility.yul\":6345:6514   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6520:6754   */\n    tag_103:\n        /* \"#utility.yul\":6660:6694   */\n      0x5374616b61626c653a2054686973206164647265737320646f6573206e6f7420\n        /* \"#utility.yul\":6656:6657   */\n      0x00\n        /* \"#utility.yul\":6648:6654   */\n      dup3\n        /* \"#utility.yul\":6644:6658   */\n      add\n        /* \"#utility.yul\":6637:6695   */\n      mstore\n        /* \"#utility.yul\":6729:6746   */\n      0x6861766520616e79207374616b65730000000000000000000000000000000000\n        /* \"#utility.yul\":6724:6726   */\n      0x20\n        /* \"#utility.yul\":6716:6722   */\n      dup3\n        /* \"#utility.yul\":6712:6727   */\n      add\n        /* \"#utility.yul\":6705:6747   */\n      mstore\n        /* \"#utility.yul\":6520:6754   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:7126   */\n    tag_104:\n        /* \"#utility.yul\":6902:6905   */\n      0x00\n        /* \"#utility.yul\":6923:6990   */\n      tag_168\n        /* \"#utility.yul\":6987:6989   */\n      0x2f\n        /* \"#utility.yul\":6982:6985   */\n      dup4\n        /* \"#utility.yul\":6923:6990   */\n      tag_102\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":6916:6990   */\n      swap2\n      pop\n        /* \"#utility.yul\":6999:7092   */\n      tag_169\n        /* \"#utility.yul\":7088:7091   */\n      dup3\n        /* \"#utility.yul\":6999:7092   */\n      tag_103\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":7117:7119   */\n      0x40\n        /* \"#utility.yul\":7112:7115   */\n      dup3\n        /* \"#utility.yul\":7108:7120   */\n      add\n        /* \"#utility.yul\":7101:7120   */\n      swap1\n      pop\n        /* \"#utility.yul\":6760:7126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7132:7551   */\n    tag_41:\n        /* \"#utility.yul\":7298:7302   */\n      0x00\n        /* \"#utility.yul\":7336:7338   */\n      0x20\n        /* \"#utility.yul\":7325:7334   */\n      dup3\n        /* \"#utility.yul\":7321:7339   */\n      add\n        /* \"#utility.yul\":7313:7339   */\n      swap1\n      pop\n        /* \"#utility.yul\":7385:7394   */\n      dup2\n        /* \"#utility.yul\":7379:7383   */\n      dup2\n        /* \"#utility.yul\":7375:7395   */\n      sub\n        /* \"#utility.yul\":7371:7372   */\n      0x00\n        /* \"#utility.yul\":7360:7369   */\n      dup4\n        /* \"#utility.yul\":7356:7373   */\n      add\n        /* \"#utility.yul\":7349:7396   */\n      mstore\n        /* \"#utility.yul\":7413:7544   */\n      tag_171\n        /* \"#utility.yul\":7539:7543   */\n      dup2\n        /* \"#utility.yul\":7413:7544   */\n      tag_104\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":7405:7544   */\n      swap1\n      pop\n        /* \"#utility.yul\":7132:7551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7557:7737   */\n    tag_105:\n        /* \"#utility.yul\":7605:7682   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7602:7603   */\n      0x00\n        /* \"#utility.yul\":7595:7683   */\n      mstore\n        /* \"#utility.yul\":7702:7706   */\n      0x11\n        /* \"#utility.yul\":7699:7700   */\n      0x04\n        /* \"#utility.yul\":7692:7707   */\n      mstore\n        /* \"#utility.yul\":7726:7730   */\n      0x24\n        /* \"#utility.yul\":7723:7724   */\n      0x00\n        /* \"#utility.yul\":7716:7731   */\n      revert\n        /* \"#utility.yul\":7743:8048   */\n    tag_56:\n        /* \"#utility.yul\":7783:7786   */\n      0x00\n        /* \"#utility.yul\":7802:7822   */\n      tag_174\n        /* \"#utility.yul\":7820:7821   */\n      dup3\n        /* \"#utility.yul\":7802:7822   */\n      tag_83\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":7797:7822   */\n      swap2\n      pop\n        /* \"#utility.yul\":7836:7856   */\n      tag_175\n        /* \"#utility.yul\":7854:7855   */\n      dup4\n        /* \"#utility.yul\":7836:7856   */\n      tag_83\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":7831:7856   */\n      swap3\n      pop\n        /* \"#utility.yul\":7990:7991   */\n      dup3\n        /* \"#utility.yul\":7922:7988   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7918:7992   */\n      sub\n        /* \"#utility.yul\":7915:7916   */\n      dup3\n        /* \"#utility.yul\":7912:7993   */\n      gt\n        /* \"#utility.yul\":7909:8016   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":7996:8014   */\n      tag_177\n      tag_105\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7909:8016   */\n    tag_176:\n        /* \"#utility.yul\":8040:8041   */\n      dup3\n        /* \"#utility.yul\":8037:8038   */\n      dup3\n        /* \"#utility.yul\":8033:8042   */\n      add\n        /* \"#utility.yul\":8026:8042   */\n      swap1\n      pop\n        /* \"#utility.yul\":7743:8048   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8054:8402   */\n    tag_63:\n        /* \"#utility.yul\":8094:8101   */\n      0x00\n        /* \"#utility.yul\":8117:8137   */\n      tag_179\n        /* \"#utility.yul\":8135:8136   */\n      dup3\n        /* \"#utility.yul\":8117:8137   */\n      tag_83\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":8112:8137   */\n      swap2\n      pop\n        /* \"#utility.yul\":8151:8171   */\n      tag_180\n        /* \"#utility.yul\":8169:8170   */\n      dup4\n        /* \"#utility.yul\":8151:8171   */\n      tag_83\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":8146:8171   */\n      swap3\n      pop\n        /* \"#utility.yul\":8339:8340   */\n      dup2\n        /* \"#utility.yul\":8271:8337   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8267:8341   */\n      div\n        /* \"#utility.yul\":8264:8265   */\n      dup4\n        /* \"#utility.yul\":8261:8342   */\n      gt\n        /* \"#utility.yul\":8256:8257   */\n      dup3\n        /* \"#utility.yul\":8249:8258   */\n      iszero\n        /* \"#utility.yul\":8242:8259   */\n      iszero\n        /* \"#utility.yul\":8238:8343   */\n      and\n        /* \"#utility.yul\":8235:8366   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":8346:8364   */\n      tag_182\n      tag_105\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":8235:8366   */\n    tag_181:\n        /* \"#utility.yul\":8394:8395   */\n      dup3\n        /* \"#utility.yul\":8391:8392   */\n      dup3\n        /* \"#utility.yul\":8387:8396   */\n      mul\n        /* \"#utility.yul\":8376:8396   */\n      swap1\n      pop\n        /* \"#utility.yul\":8054:8402   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8408:8588   */\n    tag_82:\n        /* \"#utility.yul\":8456:8533   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8453:8454   */\n      0x00\n        /* \"#utility.yul\":8446:8534   */\n      mstore\n        /* \"#utility.yul\":8553:8557   */\n      0x12\n        /* \"#utility.yul\":8550:8551   */\n      0x04\n        /* \"#utility.yul\":8543:8558   */\n      mstore\n        /* \"#utility.yul\":8577:8581   */\n      0x24\n        /* \"#utility.yul\":8574:8575   */\n      0x00\n        /* \"#utility.yul\":8567:8582   */\n      revert\n        /* \"#utility.yul\":8594:8779   */\n    tag_66:\n        /* \"#utility.yul\":8634:8635   */\n      0x00\n        /* \"#utility.yul\":8651:8671   */\n      tag_185\n        /* \"#utility.yul\":8669:8670   */\n      dup3\n        /* \"#utility.yul\":8651:8671   */\n      tag_83\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":8646:8671   */\n      swap2\n      pop\n        /* \"#utility.yul\":8685:8705   */\n      tag_186\n        /* \"#utility.yul\":8703:8704   */\n      dup4\n        /* \"#utility.yul\":8685:8705   */\n      tag_83\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":8680:8705   */\n      swap3\n      pop\n        /* \"#utility.yul\":8724:8725   */\n      dup3\n        /* \"#utility.yul\":8714:8749   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":8729:8747   */\n      tag_188\n      tag_82\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":8714:8749   */\n    tag_187:\n        /* \"#utility.yul\":8771:8772   */\n      dup3\n        /* \"#utility.yul\":8768:8769   */\n      dup3\n        /* \"#utility.yul\":8764:8773   */\n      div\n        /* \"#utility.yul\":8759:8773   */\n      swap1\n      pop\n        /* \"#utility.yul\":8594:8779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8785:8962   */\n    tag_106:\n        /* \"#utility.yul\":8925:8954   */\n      0x5374616b61626c653a204572726f722074696d657374616d7020300000000000\n        /* \"#utility.yul\":8921:8922   */\n      0x00\n        /* \"#utility.yul\":8913:8919   */\n      dup3\n        /* \"#utility.yul\":8909:8923   */\n      add\n        /* \"#utility.yul\":8902:8955   */\n      mstore\n        /* \"#utility.yul\":8785:8962   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8968:9334   */\n    tag_107:\n        /* \"#utility.yul\":9110:9113   */\n      0x00\n        /* \"#utility.yul\":9131:9198   */\n      tag_191\n        /* \"#utility.yul\":9195:9197   */\n      0x1b\n        /* \"#utility.yul\":9190:9193   */\n      dup4\n        /* \"#utility.yul\":9131:9198   */\n      tag_102\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":9124:9198   */\n      swap2\n      pop\n        /* \"#utility.yul\":9207:9300   */\n      tag_192\n        /* \"#utility.yul\":9296:9299   */\n      dup3\n        /* \"#utility.yul\":9207:9300   */\n      tag_106\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":9325:9327   */\n      0x20\n        /* \"#utility.yul\":9320:9323   */\n      dup3\n        /* \"#utility.yul\":9316:9328   */\n      add\n        /* \"#utility.yul\":9309:9328   */\n      swap1\n      pop\n        /* \"#utility.yul\":8968:9334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9340:9759   */\n    tag_70:\n        /* \"#utility.yul\":9506:9510   */\n      0x00\n        /* \"#utility.yul\":9544:9546   */\n      0x20\n        /* \"#utility.yul\":9533:9542   */\n      dup3\n        /* \"#utility.yul\":9529:9547   */\n      add\n        /* \"#utility.yul\":9521:9547   */\n      swap1\n      pop\n        /* \"#utility.yul\":9593:9602   */\n      dup2\n        /* \"#utility.yul\":9587:9591   */\n      dup2\n        /* \"#utility.yul\":9583:9603   */\n      sub\n        /* \"#utility.yul\":9579:9580   */\n      0x00\n        /* \"#utility.yul\":9568:9577   */\n      dup4\n        /* \"#utility.yul\":9564:9581   */\n      add\n        /* \"#utility.yul\":9557:9604   */\n      mstore\n        /* \"#utility.yul\":9621:9752   */\n      tag_194\n        /* \"#utility.yul\":9747:9751   */\n      dup2\n        /* \"#utility.yul\":9621:9752   */\n      tag_107\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":9613:9752   */\n      swap1\n      pop\n        /* \"#utility.yul\":9340:9759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9765:9956   */\n    tag_73:\n        /* \"#utility.yul\":9805:9809   */\n      0x00\n        /* \"#utility.yul\":9825:9845   */\n      tag_196\n        /* \"#utility.yul\":9843:9844   */\n      dup3\n        /* \"#utility.yul\":9825:9845   */\n      tag_83\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":9820:9845   */\n      swap2\n      pop\n        /* \"#utility.yul\":9859:9879   */\n      tag_197\n        /* \"#utility.yul\":9877:9878   */\n      dup4\n        /* \"#utility.yul\":9859:9879   */\n      tag_83\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":9854:9879   */\n      swap3\n      pop\n        /* \"#utility.yul\":9898:9899   */\n      dup3\n        /* \"#utility.yul\":9895:9896   */\n      dup3\n        /* \"#utility.yul\":9892:9900   */\n      lt\n        /* \"#utility.yul\":9889:9923   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":9903:9921   */\n      tag_199\n      tag_105\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":9889:9923   */\n    tag_198:\n        /* \"#utility.yul\":9948:9949   */\n      dup3\n        /* \"#utility.yul\":9945:9946   */\n      dup3\n        /* \"#utility.yul\":9941:9950   */\n      sub\n        /* \"#utility.yul\":9933:9950   */\n      swap1\n      pop\n        /* \"#utility.yul\":9765:9956   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9962:10061   */\n    tag_108:\n        /* \"#utility.yul\":10014:10020   */\n      0x00\n        /* \"#utility.yul\":10048:10053   */\n      dup2\n        /* \"#utility.yul\":10042:10054   */\n      mload\n        /* \"#utility.yul\":10032:10054   */\n      swap1\n      pop\n        /* \"#utility.yul\":9962:10061   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10067:10374   */\n    tag_109:\n        /* \"#utility.yul\":10135:10136   */\n      0x00\n        /* \"#utility.yul\":10145:10258   */\n    tag_202:\n        /* \"#utility.yul\":10159:10165   */\n      dup4\n        /* \"#utility.yul\":10156:10157   */\n      dup2\n        /* \"#utility.yul\":10153:10166   */\n      lt\n        /* \"#utility.yul\":10145:10258   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":10244:10245   */\n      dup1\n        /* \"#utility.yul\":10239:10242   */\n      dup3\n        /* \"#utility.yul\":10235:10246   */\n      add\n        /* \"#utility.yul\":10229:10247   */\n      mload\n        /* \"#utility.yul\":10225:10226   */\n      dup2\n        /* \"#utility.yul\":10220:10223   */\n      dup5\n        /* \"#utility.yul\":10216:10227   */\n      add\n        /* \"#utility.yul\":10209:10248   */\n      mstore\n        /* \"#utility.yul\":10181:10183   */\n      0x20\n        /* \"#utility.yul\":10178:10179   */\n      dup2\n        /* \"#utility.yul\":10174:10184   */\n      add\n        /* \"#utility.yul\":10169:10184   */\n      swap1\n      pop\n        /* \"#utility.yul\":10145:10258   */\n      jump(tag_202)\n    tag_204:\n        /* \"#utility.yul\":10276:10282   */\n      dup4\n        /* \"#utility.yul\":10273:10274   */\n      dup2\n        /* \"#utility.yul\":10270:10283   */\n      gt\n        /* \"#utility.yul\":10267:10368   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":10356:10357   */\n      0x00\n        /* \"#utility.yul\":10347:10353   */\n      dup5\n        /* \"#utility.yul\":10342:10345   */\n      dup5\n        /* \"#utility.yul\":10338:10354   */\n      add\n        /* \"#utility.yul\":10331:10358   */\n      mstore\n        /* \"#utility.yul\":10267:10368   */\n    tag_205:\n        /* \"#utility.yul\":10116:10374   */\n      pop\n        /* \"#utility.yul\":10067:10374   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10380:10482   */\n    tag_110:\n        /* \"#utility.yul\":10421:10427   */\n      0x00\n        /* \"#utility.yul\":10472:10474   */\n      0x1f\n        /* \"#utility.yul\":10468:10475   */\n      not\n        /* \"#utility.yul\":10463:10465   */\n      0x1f\n        /* \"#utility.yul\":10456:10461   */\n      dup4\n        /* \"#utility.yul\":10452:10466   */\n      add\n        /* \"#utility.yul\":10448:10476   */\n      and\n        /* \"#utility.yul\":10438:10476   */\n      swap1\n      pop\n        /* \"#utility.yul\":10380:10482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10488:10852   */\n    tag_111:\n        /* \"#utility.yul\":10576:10579   */\n      0x00\n        /* \"#utility.yul\":10604:10643   */\n      tag_208\n        /* \"#utility.yul\":10637:10642   */\n      dup3\n        /* \"#utility.yul\":10604:10643   */\n      tag_108\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":10659:10730   */\n      tag_209\n        /* \"#utility.yul\":10723:10729   */\n      dup2\n        /* \"#utility.yul\":10718:10721   */\n      dup6\n        /* \"#utility.yul\":10659:10730   */\n      tag_102\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":10652:10730   */\n      swap4\n      pop\n        /* \"#utility.yul\":10739:10791   */\n      tag_210\n        /* \"#utility.yul\":10784:10790   */\n      dup2\n        /* \"#utility.yul\":10779:10782   */\n      dup6\n        /* \"#utility.yul\":10772:10776   */\n      0x20\n        /* \"#utility.yul\":10765:10770   */\n      dup7\n        /* \"#utility.yul\":10761:10777   */\n      add\n        /* \"#utility.yul\":10739:10791   */\n      tag_109\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":10816:10845   */\n      tag_211\n        /* \"#utility.yul\":10838:10844   */\n      dup2\n        /* \"#utility.yul\":10816:10845   */\n      tag_110\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":10811:10814   */\n      dup5\n        /* \"#utility.yul\":10807:10846   */\n      add\n        /* \"#utility.yul\":10800:10846   */\n      swap2\n      pop\n        /* \"#utility.yul\":10580:10852   */\n      pop\n        /* \"#utility.yul\":10488:10852   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10858:11171   */\n    tag_79:\n        /* \"#utility.yul\":10971:10975   */\n      0x00\n        /* \"#utility.yul\":11009:11011   */\n      0x20\n        /* \"#utility.yul\":10998:11007   */\n      dup3\n        /* \"#utility.yul\":10994:11012   */\n      add\n        /* \"#utility.yul\":10986:11012   */\n      swap1\n      pop\n        /* \"#utility.yul\":11058:11067   */\n      dup2\n        /* \"#utility.yul\":11052:11056   */\n      dup2\n        /* \"#utility.yul\":11048:11068   */\n      sub\n        /* \"#utility.yul\":11044:11045   */\n      0x00\n        /* \"#utility.yul\":11033:11042   */\n      dup4\n        /* \"#utility.yul\":11029:11046   */\n      add\n        /* \"#utility.yul\":11022:11069   */\n      mstore\n        /* \"#utility.yul\":11086:11164   */\n      tag_213\n        /* \"#utility.yul\":11159:11163   */\n      dup2\n        /* \"#utility.yul\":11150:11156   */\n      dup5\n        /* \"#utility.yul\":11086:11164   */\n      tag_111\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":11078:11164   */\n      swap1\n      pop\n        /* \"#utility.yul\":10858:11171   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_10b867070097d898ae15cd1bc384e389b4a7d91f05c0759c198c193c7fd91787 5374616b61626c653a204572726f722063616e6e6f74206469766964652074696d657374616d70\n\n    auxdata: 0xa2646970667358221220c120de9ce4b7a5af32243aeef2c80a3c46a27649fcc8c2b560e78e6dbd21bc7164736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_332": {
									"entryPoint": null,
									"id": 332,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 97,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 92,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1048:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:2",
														"type": ""
													}
												],
												"src": "545:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "817:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:32:2"
															},
															"nodeType": "YulIf",
															"src": "781:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "910:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "929:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "954:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "741:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "752:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "764:6:2",
														"type": ""
													}
												],
												"src": "694:351:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610d27380380610d2783398181016040528101906100329190610097565b600180816001815401808255809150500390600052602060002090505080600081905550506100c4565b600080fd5b6000819050919050565b61007481610061565b811461007f57600080fd5b50565b6000815190506100918161006b565b92915050565b6000602082840312156100ad576100ac61005c565b5b60006100bb84828501610082565b91505092915050565b610c54806100d36000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633dc10ad414610046578063b09d4b4e14610064578063e73e14bf14610094575b600080fd5b61004e6100c4565b60405161005b919061064a565b60405180910390f35b61007e600480360381019061007991906106c8565b6100cd565b60405161008b919061087a565b60405180910390f35b6100ae60048036038101906100a991906106c8565b610239565b6040516100bb919061087a565b60405180910390f35b60008054905090565b6100d5610617565b60006040518060400160405280600081526020016001600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548154811061013c5761013b61089c565b5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b8282101561022757838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001906001019061016d565b50505050815250905080915050919050565b610241610617565b6000806040518060400160405280600081526020016001600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815481106102a9576102a861089c565b5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b8282101561039457838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481525050815260200190600101906102da565b505050508152509050600081602001515114156103e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dd9061094e565b60405180910390fd5b60005b8160200151518110156104b1576000610442836020015183815181106104125761041161089c565b5b6020026020010151846020015184815181106104315761043061089c565b5b6020026020010151602001516104c6565b9050808360200151838151811061045c5761045b61089c565b5b60200260200101516060018181525050826020015182815181106104835761048261089c565b5b6020026020010151602001518461049a919061099d565b9350506001816104aa919061099d565b90506103e9565b50818160000181815250508092505050919050565b600080836020015114156104dd576000905061051d565b6a52b7d2dcc80cd2e40000006104f68460400151610523565b84608001518461050691906109f3565b61051091906109f3565b61051a9190610a7c565b90505b92915050565b6000808211610567576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055e90610af9565b60405180910390fd5b6105ae69d3c21bcecceda100000083426105819190610b19565b61058b91906109f3565b6301e13380604051806060016040528060278152602001610bf8602791396105b5565b9050919050565b600080831182906105fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f39190610bd5565b60405180910390fd5b5082848161060d5761060c610a4d565b5b0490509392505050565b604051806040016040528060008152602001606081525090565b6000819050919050565b61064481610631565b82525050565b600060208201905061065f600083018461063b565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106958261066a565b9050919050565b6106a58161068a565b81146106b057600080fd5b50565b6000813590506106c28161069c565b92915050565b6000602082840312156106de576106dd610665565b5b60006106ec848285016106b3565b91505092915050565b6106fe81610631565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6107398161068a565b82525050565b60c0820160008201516107556000850182610730565b50602082015161076860208501826106f5565b50604082015161077b60408501826106f5565b50606082015161078e60608501826106f5565b5060808201516107a160808501826106f5565b5060a08201516107b460a08501826106f5565b50505050565b60006107c6838361073f565b60c08301905092915050565b6000602082019050919050565b60006107ea82610704565b6107f4818561070f565b93506107ff83610720565b8060005b8381101561083057815161081788826107ba565b9750610822836107d2565b925050600181019050610803565b5085935050505092915050565b600060408301600083015161085560008601826106f5565b506020830151848203602086015261086d82826107df565b9150508091505092915050565b60006020820190508181036000830152610894818461083d565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f5374616b61626c653a2054686973206164647265737320646f6573206e6f742060008201527f6861766520616e79207374616b65730000000000000000000000000000000000602082015250565b6000610938602f836108cb565b9150610943826108dc565b604082019050919050565b600060208201905081810360008301526109678161092b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109a882610631565b91506109b383610631565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109e8576109e761096e565b5b828201905092915050565b60006109fe82610631565b9150610a0983610631565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a4257610a4161096e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a8782610631565b9150610a9283610631565b925082610aa257610aa1610a4d565b5b828204905092915050565b7f5374616b61626c653a204572726f722074696d657374616d7020300000000000600082015250565b6000610ae3601b836108cb565b9150610aee82610aad565b602082019050919050565b60006020820190508181036000830152610b1281610ad6565b9050919050565b6000610b2482610631565b9150610b2f83610631565b925082821015610b4257610b4161096e565b5b828203905092915050565b600081519050919050565b60005b83811015610b76578082015181840152602081019050610b5b565b83811115610b85576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ba782610b4d565b610bb181856108cb565b9350610bc1818560208601610b58565b610bca81610b8b565b840191505092915050565b60006020820190508181036000830152610bef8184610b9c565b90509291505056fe5374616b61626c653a204572726f722063616e6e6f74206469766964652074696d657374616d70a2646970667358221220c120de9ce4b7a5af32243aeef2c80a3c46a27649fcc8c2b560e78e6dbd21bc7164736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD27 CODESIZE SUB DUP1 PUSH2 0xD27 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x97 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP POP DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x74 DUP2 PUSH2 0x61 JUMP JUMPDEST DUP2 EQ PUSH2 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x91 DUP2 PUSH2 0x6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD JUMPI PUSH2 0xAC PUSH2 0x5C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP5 DUP3 DUP6 ADD PUSH2 0x82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC54 DUP1 PUSH2 0xD3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3DC10AD4 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xB09D4B4E EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xE73E14BF EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x87A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x87A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD5 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x13C JUMPI PUSH2 0x13B PUSH2 0x89C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x227 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x16D JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x241 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2A9 JUMPI PUSH2 0x2A8 PUSH2 0x89C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x394 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2DA JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD MLOAD EQ ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0x94E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 PUSH2 0x442 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x412 JUMPI PUSH2 0x411 PUSH2 0x89C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x431 JUMPI PUSH2 0x430 PUSH2 0x89C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x4C6 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x45C JUMPI PUSH2 0x45B PUSH2 0x89C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x483 JUMPI PUSH2 0x482 PUSH2 0x89C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP5 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x1 DUP2 PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x51D JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x4F6 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x523 JUMP JUMPDEST DUP5 PUSH1 0x80 ADD MLOAD DUP5 PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x51A SWAP2 SWAP1 PUSH2 0xA7C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0xAF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5AE PUSH10 0xD3C21BCECCEDA1000000 DUP4 TIMESTAMP PUSH2 0x581 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x9F3 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF8 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x5B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x60D JUMPI PUSH2 0x60C PUSH2 0xA4D JUMP JUMPDEST JUMPDEST DIV SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x644 DUP2 PUSH2 0x631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x65F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x63B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x695 DUP3 PUSH2 0x66A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A5 DUP2 PUSH2 0x68A JUMP JUMPDEST DUP2 EQ PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6C2 DUP2 PUSH2 0x69C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DE JUMPI PUSH2 0x6DD PUSH2 0x665 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6EC DUP5 DUP3 DUP6 ADD PUSH2 0x6B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6FE DUP2 PUSH2 0x631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x739 DUP2 PUSH2 0x68A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x755 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x730 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x768 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x6F5 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x77B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x6F5 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x78E PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x6F5 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x7A1 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x6F5 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x7B4 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x6F5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C6 DUP4 DUP4 PUSH2 0x73F JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x7F4 DUP2 DUP6 PUSH2 0x70F JUMP JUMPDEST SWAP4 POP PUSH2 0x7FF DUP4 PUSH2 0x720 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x830 JUMPI DUP2 MLOAD PUSH2 0x817 DUP9 DUP3 PUSH2 0x7BA JUMP JUMPDEST SWAP8 POP PUSH2 0x822 DUP4 PUSH2 0x7D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x803 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x855 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x6F5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x86D DUP3 DUP3 PUSH2 0x7DF JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x894 DUP2 DUP5 PUSH2 0x83D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B61626C653A2054686973206164647265737320646F6573206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6861766520616E79207374616B65730000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x938 PUSH1 0x2F DUP4 PUSH2 0x8CB JUMP JUMPDEST SWAP2 POP PUSH2 0x943 DUP3 PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x967 DUP2 PUSH2 0x92B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9A8 DUP3 PUSH2 0x631 JUMP JUMPDEST SWAP2 POP PUSH2 0x9B3 DUP4 PUSH2 0x631 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x9E8 JUMPI PUSH2 0x9E7 PUSH2 0x96E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FE DUP3 PUSH2 0x631 JUMP JUMPDEST SWAP2 POP PUSH2 0xA09 DUP4 PUSH2 0x631 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA42 JUMPI PUSH2 0xA41 PUSH2 0x96E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA87 DUP3 PUSH2 0x631 JUMP JUMPDEST SWAP2 POP PUSH2 0xA92 DUP4 PUSH2 0x631 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xAA2 JUMPI PUSH2 0xAA1 PUSH2 0xA4D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B61626C653A204572726F722074696D657374616D7020300000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE3 PUSH1 0x1B DUP4 PUSH2 0x8CB JUMP JUMPDEST SWAP2 POP PUSH2 0xAEE DUP3 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB12 DUP2 PUSH2 0xAD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB24 DUP3 PUSH2 0x631 JUMP JUMPDEST SWAP2 POP PUSH2 0xB2F DUP4 PUSH2 0x631 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xB42 JUMPI PUSH2 0xB41 PUSH2 0x96E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB76 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB5B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA7 DUP3 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0xBB1 DUP2 DUP6 PUSH2 0x8CB JUMP JUMPDEST SWAP4 POP PUSH2 0xBC1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB58 JUMP JUMPDEST PUSH2 0xBCA DUP2 PUSH2 0xB8B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBEF DUP2 DUP5 PUSH2 0xB9C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID MSTORE8 PUSH21 0x616B61626C653A204572726F722063616E6E6F7420 PUSH5 0x6976696465 KECCAK256 PUSH21 0x696D657374616D70A2646970667358221220C120DE SWAP13 0xE4 0xB7 0xA5 0xAF ORIGIN 0x24 GASPRICE 0xEE CALLCODE 0xC8 EXP EXTCODECOPY CHAINID LOG2 PUSH23 0x49FCC8C2B560E78E6DBD21BC7164736F6C634300080B00 CALLER ",
							"sourceMap": "128:11013:1:-:0;;;363:237;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;486:12;:19;;;;;;;;;;;;;;;;;;;;;;;577:15;559;:33;;;;363:237;128:11013;;88:117:2;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;128:11013:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@calculateStakeReward_584": {
									"entryPoint": 1222,
									"id": 584,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateStakingDuration_552": {
									"entryPoint": 1315,
									"id": 552,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_285": {
									"entryPoint": 1461,
									"id": 285,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@hasStake_946": {
									"entryPoint": 569,
									"id": 946,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@penaltyFee_524": {
									"entryPoint": 196,
									"id": 524,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@stakeSummary_608": {
									"entryPoint": 205,
									"id": 608,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr": {
									"entryPoint": 1978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_StakingSummary_$359_memory_ptr_to_t_struct$_StakingSummary_$359_memory_ptr_fromStack": {
									"entryPoint": 2109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_StakingSummary_$359_memory_ptr__to_t_struct$_StakingSummary_$359_memory_ptr__fromStack_reversed": {
									"entryPoint": 2170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 2002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 2904,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2414,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2637,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2204,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1637,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337": {
									"entryPoint": 2268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd": {
									"entryPoint": 2733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11174:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:2",
														"type": ""
													}
												],
												"src": "90:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:2",
														"type": ""
													}
												],
												"src": "214:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:2",
														"type": ""
													}
												],
												"src": "442:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "814:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "824:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "846:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "796:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "806:7:2",
														"type": ""
													}
												],
												"src": "769:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "946:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "956:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "928:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "938:7:2",
														"type": ""
													}
												],
												"src": "901:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1103:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:43:2"
															},
															"nodeType": "YulIf",
															"src": "1056:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1039:5:2",
														"type": ""
													}
												],
												"src": "1003:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1193:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1161:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1169:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1177:5:2",
														"type": ""
													}
												],
												"src": "1131:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1342:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1388:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:32:2"
															},
															"nodeType": "YulIf",
															"src": "1352:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1481:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1525:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1312:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1323:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1335:6:2",
														"type": ""
													}
												],
												"src": "1276:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1666:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1706:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1688:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1688:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1676:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1676:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1654:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1661:3:2",
														"type": ""
													}
												],
												"src": "1611:108:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1821:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1832:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1848:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1842:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1842:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1832:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1804:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1814:6:2",
														"type": ""
													}
												],
												"src": "1725:136:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1990:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2007:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2012:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2000:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2000:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2028:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2047:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2052:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2043:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2028:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1962:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1967:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1978:11:2",
														"type": ""
													}
												],
												"src": "1867:196:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2163:60:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2173:11:2",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2181:3:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2173:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2194:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2206:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2202:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2202:14:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2194:4:2"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2150:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2158:4:2",
														"type": ""
													}
												],
												"src": "2069:154:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2284:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2301:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2324:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2306:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2272:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2279:3:2",
														"type": ""
													}
												],
												"src": "2229:108:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2497:1107:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2507:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2523:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2528:4:2",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2519:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2519:14:2"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "2511:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2543:164:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2578:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2608:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2615:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2604:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2604:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2598:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2598:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2582:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2668:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2686:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2691:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2682:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2682:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2634:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2634:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2717:166:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2754:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2784:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2791:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2780:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2780:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2774:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2774:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2758:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2844:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2862:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2867:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2858:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2858:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2810:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2810:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2810:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2893:165:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2929:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2959:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2966:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2955:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2955:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2949:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2949:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2933:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3019:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3037:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3042:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3033:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3033:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2985:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2985:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2985:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3068:169:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3108:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3138:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3145:4:2",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3134:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3134:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3128:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3128:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3112:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3198:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3216:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3221:4:2",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3212:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3212:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3164:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3164:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3164:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3247:169:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3287:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3317:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3324:4:2",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3313:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3313:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3307:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3307:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3291:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3377:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3395:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3400:4:2",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3391:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3391:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3343:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3343:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3343:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3426:171:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3468:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3498:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3505:4:2",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3494:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3494:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3488:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3488:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3472:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3558:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3576:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3581:4:2",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3572:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3572:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3524:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3524:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3524:63:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2484:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2491:3:2",
														"type": ""
													}
												],
												"src": "2397:1207:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3734:143:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3822:6:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3830:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3744:77:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3744:90:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3744:90:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3843:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3861:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3866:4:2",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3857:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3857:14:2"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "3843:10:2"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3707:6:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3715:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "3723:10:2",
														"type": ""
													}
												],
												"src": "3610:267:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3980:38:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3990:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4002:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4007:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3998:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3998:14:2"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "3990:4:2"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3967:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "3975:4:2",
														"type": ""
													}
												],
												"src": "3883:135:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4240:730:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4250:90:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4334:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4264:69:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4264:76:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4254:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4349:105:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4442:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4447:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4356:85:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4356:98:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4349:3:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4463:93:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4550:5:2"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4478:71:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4478:78:2"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4467:7:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4565:21:2",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4579:7:2"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4569:6:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4655:290:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4669:34:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4696:6:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4690:5:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4690:13:2"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "4673:13:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4716:114:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4811:13:2"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4826:3:2"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4723:87:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4723:107:2"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4716:3:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4843:92:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4928:6:2"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4853:74:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4853:82:2"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4843:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4617:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4620:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4614:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4614:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4628:18:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4630:14:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4639:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4642:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4635:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4635:9:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4630:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4599:14:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4601:10:2",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4610:1:2",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4605:1:2",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4595:350:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4954:10:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4961:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4954:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4219:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4226:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4235:3:2",
														"type": ""
													}
												],
												"src": "4082:888:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5184:566:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5194:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5210:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5215:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5206:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5206:14:2"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "5198:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5230:172:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5273:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5303:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5310:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5299:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5299:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5293:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5293:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5277:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5363:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5381:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5386:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5377:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5377:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5329:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5329:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5412:311:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5449:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5479:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5486:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5475:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5475:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5469:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5469:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5453:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5517:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5522:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5513:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5513:14:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "5533:4:2"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5539:3:2"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5529:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5529:14:2"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "5506:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5506:38:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5506:38:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5557:155:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5693:12:2"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5707:4:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5565:127:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5565:147:2"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "5557:4:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5733:11:2",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "5740:4:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5733:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_StakingSummary_$359_memory_ptr_to_t_struct$_StakingSummary_$359_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5163:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5170:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5179:3:2",
														"type": ""
													}
												],
												"src": "5048:702:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5916:237:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5926:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5938:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5949:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5934:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5934:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5926:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5973:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5984:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5969:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5969:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5992:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5998:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5988:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5988:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5962:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5962:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5962:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6018:128:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6132:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6141:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_StakingSummary_$359_memory_ptr_to_t_struct$_StakingSummary_$359_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6026:105:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6026:120:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6018:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_StakingSummary_$359_memory_ptr__to_t_struct$_StakingSummary_$359_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5888:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5900:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5911:4:2",
														"type": ""
													}
												],
												"src": "5756:397:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6187:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6204:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6207:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6197:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6197:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6197:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6301:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6304:4:2",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6294:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6294:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6294:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6325:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6328:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6318:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6318:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6318:15:2"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6159:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6441:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6458:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6463:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6451:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6451:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6451:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6479:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6498:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6503:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6494:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6494:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6479:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6413:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6418:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6429:11:2",
														"type": ""
													}
												],
												"src": "6345:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6626:128:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6648:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6656:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6644:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6644:14:2"
																	},
																	{
																		"hexValue": "5374616b61626c653a2054686973206164647265737320646f6573206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6660:34:2",
																		"type": "",
																		"value": "Stakable: This address does not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6637:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6637:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6637:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6716:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6724:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6712:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6712:15:2"
																	},
																	{
																		"hexValue": "6861766520616e79207374616b6573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6729:17:2",
																		"type": "",
																		"value": "have any stakes"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6705:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6705:42:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6705:42:2"
														}
													]
												},
												"name": "store_literal_in_memory_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6618:6:2",
														"type": ""
													}
												],
												"src": "6520:234:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6906:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6916:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6982:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6987:2:2",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6923:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6923:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6916:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7088:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337",
																	"nodeType": "YulIdentifier",
																	"src": "6999:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6999:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6999:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7101:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7112:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7117:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7108:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7108:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7101:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6894:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6902:3:2",
														"type": ""
													}
												],
												"src": "6760:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7303:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7313:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7325:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7336:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7321:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7321:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7313:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7360:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7371:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7356:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7356:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7379:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7385:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7375:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7375:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7349:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7349:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7349:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7405:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7539:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7413:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7413:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7405:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7283:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7298:4:2",
														"type": ""
													}
												],
												"src": "7132:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7585:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7602:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7605:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7595:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7595:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7595:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7699:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7702:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7692:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7692:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7692:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7723:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7726:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7716:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7716:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7716:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7557:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7787:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7797:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7820:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7802:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7802:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7797:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7831:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7854:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7836:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7836:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7831:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7994:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7996:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7996:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7996:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7915:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7922:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7990:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7918:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7918:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7912:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7912:81:2"
															},
															"nodeType": "YulIf",
															"src": "7909:107:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8026:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8037:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8040:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8033:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8033:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8026:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7774:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7777:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7783:3:2",
														"type": ""
													}
												],
												"src": "7743:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8102:300:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8112:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8135:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8117:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8117:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8112:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8146:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8169:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8151:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8151:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8146:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8344:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8346:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8346:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8346:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8256:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8249:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8249:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8242:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8242:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8264:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8271:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8339:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "8267:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8267:74:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8261:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8261:81:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8238:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8238:105:2"
															},
															"nodeType": "YulIf",
															"src": "8235:131:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8376:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8391:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8394:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8387:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8387:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8376:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8085:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8088:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8094:7:2",
														"type": ""
													}
												],
												"src": "8054:348:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8436:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8453:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8456:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8446:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8446:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8446:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8550:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8553:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8543:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8543:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8543:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8574:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8577:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8567:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8567:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8567:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8408:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8636:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8646:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8669:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8651:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8651:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8646:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8680:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8703:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8685:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8685:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8680:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8727:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8729:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8729:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8729:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8724:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8717:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8717:9:2"
															},
															"nodeType": "YulIf",
															"src": "8714:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8759:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8768:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8771:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8764:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8764:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8759:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8625:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8628:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8634:1:2",
														"type": ""
													}
												],
												"src": "8594:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8891:71:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8913:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8921:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8909:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8909:14:2"
																	},
																	{
																		"hexValue": "5374616b61626c653a204572726f722074696d657374616d702030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8925:29:2",
																		"type": "",
																		"value": "Stakable: Error timestamp 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8902:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8902:53:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8902:53:2"
														}
													]
												},
												"name": "store_literal_in_memory_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8883:6:2",
														"type": ""
													}
												],
												"src": "8785:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9114:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9124:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9190:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9195:2:2",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9131:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9131:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9124:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9296:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd",
																	"nodeType": "YulIdentifier",
																	"src": "9207:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9207:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9207:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9309:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9320:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9325:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9316:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9316:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9309:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9102:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9110:3:2",
														"type": ""
													}
												],
												"src": "8968:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9511:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9521:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9533:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9544:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9529:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9529:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9521:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9568:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9579:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9564:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9564:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9587:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9593:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9583:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9583:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9557:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9557:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9557:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9613:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9747:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9621:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9621:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9613:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9491:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9506:4:2",
														"type": ""
													}
												],
												"src": "9340:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9810:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9820:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9843:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9825:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9825:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9820:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9854:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9877:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9859:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9859:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9854:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9901:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9903:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9903:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9903:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9895:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9898:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9892:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9892:8:2"
															},
															"nodeType": "YulIf",
															"src": "9889:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9933:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9945:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9948:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9941:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9941:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9933:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9796:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9799:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9805:4:2",
														"type": ""
													}
												],
												"src": "9765:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10021:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10032:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10048:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10042:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10042:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10032:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10004:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10014:6:2",
														"type": ""
													}
												],
												"src": "9962:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10116:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10126:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10135:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10130:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10195:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10220:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10225:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10216:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10216:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10239:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10244:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10235:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10235:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10229:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10229:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10209:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10209:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10209:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10156:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10159:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10153:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10153:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10167:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10169:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10178:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10181:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10174:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10174:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10169:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10149:3:2",
																"statements": []
															},
															"src": "10145:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10292:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10342:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10347:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10338:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10338:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10356:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10331:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10331:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10331:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10273:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10276:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10270:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10270:13:2"
															},
															"nodeType": "YulIf",
															"src": "10267:101:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10098:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10103:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10108:6:2",
														"type": ""
													}
												],
												"src": "10067:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10428:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10438:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10456:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10463:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10452:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10452:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10472:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10468:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10468:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10448:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10448:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10438:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10411:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "10421:6:2",
														"type": ""
													}
												],
												"src": "10380:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10580:272:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10590:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10637:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10604:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10604:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10594:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10652:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10718:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10723:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10659:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10659:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10652:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10765:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10772:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10761:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10761:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10779:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10784:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10739:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10739:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10739:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10800:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10811:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10838:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "10816:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10816:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10807:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10807:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10800:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10561:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10568:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10576:3:2",
														"type": ""
													}
												],
												"src": "10488:364:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10976:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10986:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10998:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11009:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10994:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10994:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10986:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11033:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11044:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11029:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11029:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11052:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11058:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11048:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11048:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11022:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11022:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11022:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11078:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11150:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11159:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11086:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11086:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11078:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10948:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10960:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10971:4:2",
														"type": ""
													}
												],
												"src": "10858:313:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct Stakable.Stake -> struct Stakable.Stake\n    function abi_encode_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // since\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // claimable\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // rewardAPY\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // releaseTime\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Stakable.Stake[] -> struct Stakable.Stake[]\n    function abi_encode_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct Stakable.StakingSummary -> struct Stakable.StakingSummary\n    function abi_encode_t_struct$_StakingSummary_$359_memory_ptr_to_t_struct$_StakingSummary_$359_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // total_amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // stakes\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_StakingSummary_$359_memory_ptr__to_t_struct$_StakingSummary_$359_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_StakingSummary_$359_memory_ptr_to_t_struct$_StakingSummary_$359_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stakable: This address does not \")\n\n        mstore(add(memPtr, 32), \"have any stakes\")\n\n    }\n\n    function abi_encode_t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stakable: Error timestamp 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80633dc10ad414610046578063b09d4b4e14610064578063e73e14bf14610094575b600080fd5b61004e6100c4565b60405161005b919061064a565b60405180910390f35b61007e600480360381019061007991906106c8565b6100cd565b60405161008b919061087a565b60405180910390f35b6100ae60048036038101906100a991906106c8565b610239565b6040516100bb919061087a565b60405180910390f35b60008054905090565b6100d5610617565b60006040518060400160405280600081526020016001600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548154811061013c5761013b61089c565b5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b8282101561022757838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001906001019061016d565b50505050815250905080915050919050565b610241610617565b6000806040518060400160405280600081526020016001600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815481106102a9576102a861089c565b5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b8282101561039457838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481525050815260200190600101906102da565b505050508152509050600081602001515114156103e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dd9061094e565b60405180910390fd5b60005b8160200151518110156104b1576000610442836020015183815181106104125761041161089c565b5b6020026020010151846020015184815181106104315761043061089c565b5b6020026020010151602001516104c6565b9050808360200151838151811061045c5761045b61089c565b5b60200260200101516060018181525050826020015182815181106104835761048261089c565b5b6020026020010151602001518461049a919061099d565b9350506001816104aa919061099d565b90506103e9565b50818160000181815250508092505050919050565b600080836020015114156104dd576000905061051d565b6a52b7d2dcc80cd2e40000006104f68460400151610523565b84608001518461050691906109f3565b61051091906109f3565b61051a9190610a7c565b90505b92915050565b6000808211610567576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055e90610af9565b60405180910390fd5b6105ae69d3c21bcecceda100000083426105819190610b19565b61058b91906109f3565b6301e13380604051806060016040528060278152602001610bf8602791396105b5565b9050919050565b600080831182906105fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f39190610bd5565b60405180910390fd5b5082848161060d5761060c610a4d565b5b0490509392505050565b604051806040016040528060008152602001606081525090565b6000819050919050565b61064481610631565b82525050565b600060208201905061065f600083018461063b565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106958261066a565b9050919050565b6106a58161068a565b81146106b057600080fd5b50565b6000813590506106c28161069c565b92915050565b6000602082840312156106de576106dd610665565b5b60006106ec848285016106b3565b91505092915050565b6106fe81610631565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6107398161068a565b82525050565b60c0820160008201516107556000850182610730565b50602082015161076860208501826106f5565b50604082015161077b60408501826106f5565b50606082015161078e60608501826106f5565b5060808201516107a160808501826106f5565b5060a08201516107b460a08501826106f5565b50505050565b60006107c6838361073f565b60c08301905092915050565b6000602082019050919050565b60006107ea82610704565b6107f4818561070f565b93506107ff83610720565b8060005b8381101561083057815161081788826107ba565b9750610822836107d2565b925050600181019050610803565b5085935050505092915050565b600060408301600083015161085560008601826106f5565b506020830151848203602086015261086d82826107df565b9150508091505092915050565b60006020820190508181036000830152610894818461083d565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f5374616b61626c653a2054686973206164647265737320646f6573206e6f742060008201527f6861766520616e79207374616b65730000000000000000000000000000000000602082015250565b6000610938602f836108cb565b9150610943826108dc565b604082019050919050565b600060208201905081810360008301526109678161092b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109a882610631565b91506109b383610631565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109e8576109e761096e565b5b828201905092915050565b60006109fe82610631565b9150610a0983610631565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a4257610a4161096e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a8782610631565b9150610a9283610631565b925082610aa257610aa1610a4d565b5b828204905092915050565b7f5374616b61626c653a204572726f722074696d657374616d7020300000000000600082015250565b6000610ae3601b836108cb565b9150610aee82610aad565b602082019050919050565b60006020820190508181036000830152610b1281610ad6565b9050919050565b6000610b2482610631565b9150610b2f83610631565b925082821015610b4257610b4161096e565b5b828203905092915050565b600081519050919050565b60005b83811015610b76578082015181840152602081019050610b5b565b83811115610b85576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ba782610b4d565b610bb181856108cb565b9350610bc1818560208601610b58565b610bca81610b8b565b840191505092915050565b60006020820190508181036000830152610bef8184610b9c565b90509291505056fe5374616b61626c653a204572726f722063616e6e6f74206469766964652074696d657374616d70a2646970667358221220c120de9ce4b7a5af32243aeef2c80a3c46a27649fcc8c2b560e78e6dbd21bc7164736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3DC10AD4 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xB09D4B4E EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xE73E14BF EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x87A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x87A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD5 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x13C JUMPI PUSH2 0x13B PUSH2 0x89C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x227 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x16D JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x241 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2A9 JUMPI PUSH2 0x2A8 PUSH2 0x89C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x394 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2DA JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD MLOAD EQ ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0x94E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 PUSH2 0x442 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x412 JUMPI PUSH2 0x411 PUSH2 0x89C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x431 JUMPI PUSH2 0x430 PUSH2 0x89C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x4C6 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x45C JUMPI PUSH2 0x45B PUSH2 0x89C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x483 JUMPI PUSH2 0x482 PUSH2 0x89C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP5 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x1 DUP2 PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x51D JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x4F6 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x523 JUMP JUMPDEST DUP5 PUSH1 0x80 ADD MLOAD DUP5 PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x51A SWAP2 SWAP1 PUSH2 0xA7C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0xAF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5AE PUSH10 0xD3C21BCECCEDA1000000 DUP4 TIMESTAMP PUSH2 0x581 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x9F3 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF8 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x5B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x60D JUMPI PUSH2 0x60C PUSH2 0xA4D JUMP JUMPDEST JUMPDEST DIV SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x644 DUP2 PUSH2 0x631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x65F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x63B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x695 DUP3 PUSH2 0x66A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A5 DUP2 PUSH2 0x68A JUMP JUMPDEST DUP2 EQ PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6C2 DUP2 PUSH2 0x69C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DE JUMPI PUSH2 0x6DD PUSH2 0x665 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6EC DUP5 DUP3 DUP6 ADD PUSH2 0x6B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6FE DUP2 PUSH2 0x631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x739 DUP2 PUSH2 0x68A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x755 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x730 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x768 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x6F5 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x77B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x6F5 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x78E PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x6F5 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x7A1 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x6F5 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x7B4 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x6F5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C6 DUP4 DUP4 PUSH2 0x73F JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x7F4 DUP2 DUP6 PUSH2 0x70F JUMP JUMPDEST SWAP4 POP PUSH2 0x7FF DUP4 PUSH2 0x720 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x830 JUMPI DUP2 MLOAD PUSH2 0x817 DUP9 DUP3 PUSH2 0x7BA JUMP JUMPDEST SWAP8 POP PUSH2 0x822 DUP4 PUSH2 0x7D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x803 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x855 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x6F5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x86D DUP3 DUP3 PUSH2 0x7DF JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x894 DUP2 DUP5 PUSH2 0x83D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B61626C653A2054686973206164647265737320646F6573206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6861766520616E79207374616B65730000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x938 PUSH1 0x2F DUP4 PUSH2 0x8CB JUMP JUMPDEST SWAP2 POP PUSH2 0x943 DUP3 PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x967 DUP2 PUSH2 0x92B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9A8 DUP3 PUSH2 0x631 JUMP JUMPDEST SWAP2 POP PUSH2 0x9B3 DUP4 PUSH2 0x631 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x9E8 JUMPI PUSH2 0x9E7 PUSH2 0x96E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FE DUP3 PUSH2 0x631 JUMP JUMPDEST SWAP2 POP PUSH2 0xA09 DUP4 PUSH2 0x631 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA42 JUMPI PUSH2 0xA41 PUSH2 0x96E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA87 DUP3 PUSH2 0x631 JUMP JUMPDEST SWAP2 POP PUSH2 0xA92 DUP4 PUSH2 0x631 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xAA2 JUMPI PUSH2 0xAA1 PUSH2 0xA4D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B61626C653A204572726F722074696D657374616D7020300000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE3 PUSH1 0x1B DUP4 PUSH2 0x8CB JUMP JUMPDEST SWAP2 POP PUSH2 0xAEE DUP3 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB12 DUP2 PUSH2 0xAD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB24 DUP3 PUSH2 0x631 JUMP JUMPDEST SWAP2 POP PUSH2 0xB2F DUP4 PUSH2 0x631 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xB42 JUMPI PUSH2 0xB41 PUSH2 0x96E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB76 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB5B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA7 DUP3 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0xBB1 DUP2 DUP6 PUSH2 0x8CB JUMP JUMPDEST SWAP4 POP PUSH2 0xBC1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB58 JUMP JUMPDEST PUSH2 0xBCA DUP2 PUSH2 0xB8B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBEF DUP2 DUP5 PUSH2 0xB9C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID MSTORE8 PUSH21 0x616B61626C653A204572726F722063616E6E6F7420 PUSH5 0x6976696465 KECCAK256 PUSH21 0x696D657374616D70A2646970667358221220C120DE SWAP13 0xE4 0xB7 0xA5 0xAF ORIGIN 0x24 GASPRICE 0xEE CALLCODE 0xC8 EXP EXTCODECOPY CHAINID LOG2 PUSH23 0x49FCC8C2B560E78E6DBD21BC7164736F6C634300080B00 CALLER ",
							"sourceMap": "128:11013:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5030:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5909:289;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10257:881;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5030:91;5072:7;5098:15;;5091:22;;5030:91;:::o;5909:289::-;5994:21;;:::i;:::-;6033:29;6065:98;;;;;;;;6094:1;6065:98;;;;6110:12;6123:6;:13;6130:5;6123:13;;;;;;;;;;;;;;;;6110:27;;;;;;;;:::i;:::-;;;;;;;;;;;;:42;;6065:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6033:130;;6183:7;6176:14;;;5909:289;;;:::o;10257:881::-;10340:21;;:::i;:::-;10379:24;10416:29;10448:100;;;;;;;;10477:1;10448:100;;;;10493:12;10506:6;:15;10513:7;10506:15;;;;;;;;;;;;;;;;10493:29;;;;;;;;:::i;:::-;;;;;;;;;;;;:44;;10448:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10416:132;;10606:1;10581:7;:14;;;:21;:26;;10559:123;;;;;;;;;;;;:::i;:::-;;;;;;;;;10700:9;10695:359;10719:7;:14;;;:21;10715:1;:25;10695:359;;;10765:23;10791:114;10830:7;:14;;;10845:1;10830:17;;;;;;;;:::i;:::-;;;;;;;;10866:7;:14;;;10881:1;10866:17;;;;;;;;:::i;:::-;;;;;;;;:24;;;10791:20;:114::i;:::-;10765:140;;10950:15;10920:7;:14;;;10935:1;10920:17;;;;;;;;:::i;:::-;;;;;;;;:27;;:45;;;;;11018:7;:14;;;11033:1;11018:17;;;;;;;;:::i;:::-;;;;;;;;:24;;;10999:16;:43;;;;:::i;:::-;10980:62;;10750:304;10747:1;10742:6;;;;;:::i;:::-;;;10695:359;;;;11089:16;11066:7;:20;;:39;;;;;11123:7;11116:14;;;;10257:881;;;:::o;5517:384::-;5643:7;5697:1;5672:14;:21;;;:26;5668:67;;;5722:1;5715:8;;;;5668:67;5889:4;5839:46;5864:14;:20;;;5839:24;:46::i;:::-;5795:14;:24;;;5768:7;:51;;;;:::i;:::-;:117;;;;:::i;:::-;5767:126;;;;:::i;:::-;5747:146;;5517:384;;;;;:::o;5129:380::-;5229:7;5271:1;5262:6;:10;5254:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;5335:166;5395:4;5385:6;5367:15;:24;;;;:::i;:::-;5366:33;;;;:::i;:::-;5418:8;5335:166;;;;;;;;;;;;;;;;;:12;:166::i;:::-;5315:186;;5129:380;;;:::o;5660:230:0:-;5776:7;5831:1;5827;:5;5834:12;5819:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5872:1;5868;:5;;;;;:::i;:::-;;;5861:12;;5660:230;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:108::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1611:108;;:::o;1725:136::-;1814:6;1848:5;1842:12;1832:22;;1725:136;;;:::o;1867:196::-;1978:11;2012:6;2007:3;2000:19;2052:4;2047:3;2043:14;2028:29;;1867:196;;;;:::o;2069:154::-;2158:4;2181:3;2173:11;;2211:4;2206:3;2202:14;2194:22;;2069:154;;;:::o;2229:108::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2229:108;;:::o;2397:1207::-;2528:4;2523:3;2519:14;2615:4;2608:5;2604:16;2598:23;2634:63;2691:4;2686:3;2682:14;2668:12;2634:63;:::i;:::-;2543:164;2791:4;2784:5;2780:16;2774:23;2810:63;2867:4;2862:3;2858:14;2844:12;2810:63;:::i;:::-;2717:166;2966:4;2959:5;2955:16;2949:23;2985:63;3042:4;3037:3;3033:14;3019:12;2985:63;:::i;:::-;2893:165;3145:4;3138:5;3134:16;3128:23;3164:63;3221:4;3216:3;3212:14;3198:12;3164:63;:::i;:::-;3068:169;3324:4;3317:5;3313:16;3307:23;3343:63;3400:4;3395:3;3391:14;3377:12;3343:63;:::i;:::-;3247:169;3505:4;3498:5;3494:16;3488:23;3524:63;3581:4;3576:3;3572:14;3558:12;3524:63;:::i;:::-;3426:171;2497:1107;2397:1207;;:::o;3610:267::-;3723:10;3744:90;3830:3;3822:6;3744:90;:::i;:::-;3866:4;3861:3;3857:14;3843:28;;3610:267;;;;:::o;3883:135::-;3975:4;4007;4002:3;3998:14;3990:22;;3883:135;;;:::o;4082:888::-;4235:3;4264:76;4334:5;4264:76;:::i;:::-;4356:98;4447:6;4442:3;4356:98;:::i;:::-;4349:105;;4478:78;4550:5;4478:78;:::i;:::-;4579:7;4610:1;4595:350;4620:6;4617:1;4614:13;4595:350;;;4696:6;4690:13;4723:107;4826:3;4811:13;4723:107;:::i;:::-;4716:114;;4853:82;4928:6;4853:82;:::i;:::-;4843:92;;4655:290;4642:1;4639;4635:9;4630:14;;4595:350;;;4599:14;4961:3;4954:10;;4240:730;;;4082:888;;;;:::o;5048:702::-;5179:3;5215:4;5210:3;5206:14;5310:4;5303:5;5299:16;5293:23;5329:63;5386:4;5381:3;5377:14;5363:12;5329:63;:::i;:::-;5230:172;5486:4;5479:5;5475:16;5469:23;5539:3;5533:4;5529:14;5522:4;5517:3;5513:14;5506:38;5565:147;5707:4;5693:12;5565:147;:::i;:::-;5557:155;;5412:311;5740:4;5733:11;;5184:566;5048:702;;;;:::o;5756:397::-;5911:4;5949:2;5938:9;5934:18;5926:26;;5998:9;5992:4;5988:20;5984:1;5973:9;5969:17;5962:47;6026:120;6141:4;6132:6;6026:120;:::i;:::-;6018:128;;5756:397;;;;:::o;6159:180::-;6207:77;6204:1;6197:88;6304:4;6301:1;6294:15;6328:4;6325:1;6318:15;6345:169;6429:11;6463:6;6458:3;6451:19;6503:4;6498:3;6494:14;6479:29;;6345:169;;;;:::o;6520:234::-;6660:34;6656:1;6648:6;6644:14;6637:58;6729:17;6724:2;6716:6;6712:15;6705:42;6520:234;:::o;6760:366::-;6902:3;6923:67;6987:2;6982:3;6923:67;:::i;:::-;6916:74;;6999:93;7088:3;6999:93;:::i;:::-;7117:2;7112:3;7108:12;7101:19;;6760:366;;;:::o;7132:419::-;7298:4;7336:2;7325:9;7321:18;7313:26;;7385:9;7379:4;7375:20;7371:1;7360:9;7356:17;7349:47;7413:131;7539:4;7413:131;:::i;:::-;7405:139;;7132:419;;;:::o;7557:180::-;7605:77;7602:1;7595:88;7702:4;7699:1;7692:15;7726:4;7723:1;7716:15;7743:305;7783:3;7802:20;7820:1;7802:20;:::i;:::-;7797:25;;7836:20;7854:1;7836:20;:::i;:::-;7831:25;;7990:1;7922:66;7918:74;7915:1;7912:81;7909:107;;;7996:18;;:::i;:::-;7909:107;8040:1;8037;8033:9;8026:16;;7743:305;;;;:::o;8054:348::-;8094:7;8117:20;8135:1;8117:20;:::i;:::-;8112:25;;8151:20;8169:1;8151:20;:::i;:::-;8146:25;;8339:1;8271:66;8267:74;8264:1;8261:81;8256:1;8249:9;8242:17;8238:105;8235:131;;;8346:18;;:::i;:::-;8235:131;8394:1;8391;8387:9;8376:20;;8054:348;;;;:::o;8408:180::-;8456:77;8453:1;8446:88;8553:4;8550:1;8543:15;8577:4;8574:1;8567:15;8594:185;8634:1;8651:20;8669:1;8651:20;:::i;:::-;8646:25;;8685:20;8703:1;8685:20;:::i;:::-;8680:25;;8724:1;8714:35;;8729:18;;:::i;:::-;8714:35;8771:1;8768;8764:9;8759:14;;8594:185;;;;:::o;8785:177::-;8925:29;8921:1;8913:6;8909:14;8902:53;8785:177;:::o;8968:366::-;9110:3;9131:67;9195:2;9190:3;9131:67;:::i;:::-;9124:74;;9207:93;9296:3;9207:93;:::i;:::-;9325:2;9320:3;9316:12;9309:19;;8968:366;;;:::o;9340:419::-;9506:4;9544:2;9533:9;9529:18;9521:26;;9593:9;9587:4;9583:20;9579:1;9568:9;9564:17;9557:47;9621:131;9747:4;9621:131;:::i;:::-;9613:139;;9340:419;;;:::o;9765:191::-;9805:4;9825:20;9843:1;9825:20;:::i;:::-;9820:25;;9859:20;9877:1;9859:20;:::i;:::-;9854:25;;9898:1;9895;9892:8;9889:34;;;9903:18;;:::i;:::-;9889:34;9948:1;9945;9941:9;9933:17;;9765:191;;;;:::o;9962:99::-;10014:6;10048:5;10042:12;10032:22;;9962:99;;;:::o;10067:307::-;10135:1;10145:113;10159:6;10156:1;10153:13;10145:113;;;10244:1;10239:3;10235:11;10229:18;10225:1;10220:3;10216:11;10209:39;10181:2;10178:1;10174:10;10169:15;;10145:113;;;10276:6;10273:1;10270:13;10267:101;;;10356:1;10347:6;10342:3;10338:16;10331:27;10267:101;10116:258;10067:307;;;:::o;10380:102::-;10421:6;10472:2;10468:7;10463:2;10456:5;10452:14;10448:28;10438:38;;10380:102;;;:::o;10488:364::-;10576:3;10604:39;10637:5;10604:39;:::i;:::-;10659:71;10723:6;10718:3;10659:71;:::i;:::-;10652:78;;10739:52;10784:6;10779:3;10772:4;10765:5;10761:16;10739:52;:::i;:::-;10816:29;10838:6;10816:29;:::i;:::-;10811:3;10807:39;10800:46;;10580:272;10488:364;;;;:::o;10858:313::-;10971:4;11009:2;10998:9;10994:18;10986:26;;11058:9;11052:4;11048:20;11044:1;11033:9;11029:17;11022:47;11086:78;11159:4;11150:6;11086:78;:::i;:::-;11078:86;;10858:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "631200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"hasStake(address)": "infinite",
								"penaltyFee()": "2415",
								"stakeSummary(address)": "infinite"
							},
							"internal": {
								"_addStakeholder(address)": "infinite",
								"_changePenaltyFee(uint256)": "infinite",
								"_stake(uint256,uint256,uint256)": "infinite",
								"_withdrawAllStake(uint256)": "infinite",
								"_withdrawStake(uint256,uint256)": "infinite",
								"calculateStakeReward(struct Stakable.Stake memory,uint256)": "infinite",
								"calculateStakingDuration(uint256)": "infinite",
								"calculateStakingWithPenalty(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 128,
									"end": 11141,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 128,
									"end": 11141,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 11141,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 363,
									"end": 600,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 486,
									"end": 498,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 486,
									"end": 505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 486,
									"end": 505,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 486,
									"end": 505,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 486,
									"end": 505,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 486,
									"end": 505,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 486,
									"end": 505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 577,
									"end": 592,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 559,
									"end": 574,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 592,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 559,
									"end": 592,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 559,
									"end": 592,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 559,
									"end": 592,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 363,
									"end": 600,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 128,
									"end": 11141,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 128,
									"end": 11141,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 128,
									"end": 11141,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 128,
									"end": 11141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 128,
									"end": 11141,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 11141,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 128,
									"end": 11141,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 11141,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 11141,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 128,
									"end": 11141,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 11141,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c120de9ce4b7a5af32243aeef2c80a3c46a27649fcc8c2b560e78e6dbd21bc7164736f6c634300080b0033",
									".code": [
										{
											"begin": 128,
											"end": 11141,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "PUSH",
											"source": 1,
											"value": "3DC10AD4"
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "PUSH",
											"source": 1,
											"value": "B09D4B4E"
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "PUSH",
											"source": 1,
											"value": "E73E14BF"
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 11141,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5121,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5994,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5994,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5994,
											"end": 6015,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5994,
											"end": 6015,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5994,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6122,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6123,
											"end": 6129,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6130,
											"end": 6135,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6152,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6110,
											"end": 6152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6183,
											"end": 6190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6176,
											"end": 6190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6176,
											"end": 6190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6176,
											"end": 6190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 6198,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10340,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 10340,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10340,
											"end": 10361,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10340,
											"end": 10361,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 10340,
											"end": 10361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10379,
											"end": 10403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10416,
											"end": 10445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10477,
											"end": 10478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10505,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10506,
											"end": 10512,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10513,
											"end": 10520,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10537,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10493,
											"end": 10537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10416,
											"end": 10548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10416,
											"end": 10548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10606,
											"end": 10607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10581,
											"end": 10588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10581,
											"end": 10595,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10581,
											"end": 10595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10581,
											"end": 10595,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10581,
											"end": 10602,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10581,
											"end": 10607,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10581,
											"end": 10607,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 10559,
											"end": 10682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10695,
											"end": 11054,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 10695,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10719,
											"end": 10733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10733,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10715,
											"end": 10716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10715,
											"end": 10740,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 11054,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 10695,
											"end": 11054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10765,
											"end": 10788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10791,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 10830,
											"end": 10837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10830,
											"end": 10844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10830,
											"end": 10844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10830,
											"end": 10844,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10845,
											"end": 10846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 10873,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 10880,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10866,
											"end": 10880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 10880,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10882,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 10883,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 10890,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10866,
											"end": 10890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 10890,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 10791,
											"end": 10905,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10791,
											"end": 10905,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 10791,
											"end": 10905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10765,
											"end": 10905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10765,
											"end": 10905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10950,
											"end": 10965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10927,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10934,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10920,
											"end": 10934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10934,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10935,
											"end": 10936,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10947,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10920,
											"end": 10947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11032,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11033,
											"end": 11034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11035,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11042,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10999,
											"end": 11015,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10999,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 10999,
											"end": 11042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10999,
											"end": 11042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10999,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 10999,
											"end": 11042,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10999,
											"end": 11042,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 10999,
											"end": 11042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10980,
											"end": 11042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10980,
											"end": 11042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10747,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10742,
											"end": 10748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10742,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 10742,
											"end": 10748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10742,
											"end": 10748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10742,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 10742,
											"end": 10748,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10742,
											"end": 10748,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 10742,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10742,
											"end": 10748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10742,
											"end": 10748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 10695,
											"end": 11054,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 11054,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 10695,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 11054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11089,
											"end": 11105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11066,
											"end": 11073,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11066,
											"end": 11086,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11066,
											"end": 11086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11066,
											"end": 11105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11066,
											"end": 11105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11066,
											"end": 11105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11066,
											"end": 11105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11066,
											"end": 11105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11123,
											"end": 11130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11130,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11138,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5517,
											"end": 5901,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5517,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5697,
											"end": 5698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5686,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5672,
											"end": 5693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5693,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5698,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5668,
											"end": 5735,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5668,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5668,
											"end": 5735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5722,
											"end": 5723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5715,
											"end": 5723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5715,
											"end": 5723,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5668,
											"end": 5735,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5668,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5889,
											"end": 5893,
											"name": "PUSH",
											"source": 1,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 5839,
											"end": 5885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5864,
											"end": 5878,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5864,
											"end": 5884,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5864,
											"end": 5884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5864,
											"end": 5884,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5839,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5839,
											"end": 5885,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5839,
											"end": 5885,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5839,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5819,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5795,
											"end": 5819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5819,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5775,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5768,
											"end": 5819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5768,
											"end": 5819,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5768,
											"end": 5819,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5768,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5768,
											"end": 5885,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5768,
											"end": 5885,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5768,
											"end": 5885,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5768,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5767,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5767,
											"end": 5893,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5767,
											"end": 5893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5767,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5767,
											"end": 5893,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5767,
											"end": 5893,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5767,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 5893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 5893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5901,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5517,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5901,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5901,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5901,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5129,
											"end": 5509,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5129,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5271,
											"end": 5272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5262,
											"end": 5268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5262,
											"end": 5272,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5254,
											"end": 5304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5395,
											"end": 5399,
											"name": "PUSH",
											"source": 1,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 5385,
											"end": 5391,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5382,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5367,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5366,
											"end": 5399,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5366,
											"end": 5399,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5366,
											"end": 5399,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5366,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5418,
											"end": 5426,
											"name": "PUSH",
											"source": 1,
											"value": "1E13380"
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "PUSH",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "PUSH data",
											"source": 1,
											"value": "10B867070097D898AE15CD1BC384E389B4A7D91F05C0759C198C193C7FD91787"
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "PUSH",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5335,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5509,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5831,
											"end": 5832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5828,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5834,
											"end": 5846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5869,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "22"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1611,
											"end": 1719,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1611,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1713,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1719,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1725,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1725,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1842,
											"end": 1854,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1725,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1725,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1725,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1725,
											"end": 1861,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1867,
											"end": 2063,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1867,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2018,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2010,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2019,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2052,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2047,
											"end": 2050,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2057,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2057,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2063,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2063,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2063,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2063,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2063,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2069,
											"end": 2223,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2069,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2162,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2211,
											"end": 2215,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2206,
											"end": 2209,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2223,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2229,
											"end": 2337,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2229,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2304,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2294,
											"end": 2331,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2337,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2397,
											"end": 3604,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2397,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2532,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 2523,
											"end": 2526,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2613,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2620,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2621,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2634,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2689,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2680,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2634,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2634,
											"end": 2697,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2634,
											"end": 2697,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2634,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2707,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2795,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2784,
											"end": 2789,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2796,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2774,
											"end": 2797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2867,
											"end": 2871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2862,
											"end": 2865,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2858,
											"end": 2872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2844,
											"end": 2856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2810,
											"end": 2873,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2810,
											"end": 2873,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2810,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2883,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2959,
											"end": 2964,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2949,
											"end": 2972,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3042,
											"end": 3046,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3037,
											"end": 3040,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3047,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3031,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2985,
											"end": 3048,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3048,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2985,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3149,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3138,
											"end": 3143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3150,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3151,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3164,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3221,
											"end": 3225,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3216,
											"end": 3219,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3212,
											"end": 3226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3198,
											"end": 3210,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3164,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3164,
											"end": 3227,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3164,
											"end": 3227,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3164,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3324,
											"end": 3328,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3317,
											"end": 3322,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3313,
											"end": 3329,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3307,
											"end": 3330,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3343,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3400,
											"end": 3404,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3395,
											"end": 3398,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3405,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3377,
											"end": 3389,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3343,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3343,
											"end": 3406,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3343,
											"end": 3406,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3343,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3416,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3505,
											"end": 3509,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 3498,
											"end": 3503,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3494,
											"end": 3510,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3511,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3524,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3581,
											"end": 3585,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 3576,
											"end": 3579,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3572,
											"end": 3586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3570,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3524,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3524,
											"end": 3587,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3524,
											"end": 3587,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3524,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 3604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 3604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 3604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 3604,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3610,
											"end": 3877,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3610,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3830,
											"end": 3833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3822,
											"end": 3828,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3744,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3744,
											"end": 3834,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3744,
											"end": 3834,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3744,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 3861,
											"end": 3864,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 3871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 3871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 3871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3877,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3877,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3883,
											"end": 4018,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3883,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4002,
											"end": 4005,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3990,
											"end": 4012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3990,
											"end": 4012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 4018,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 4018,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 4018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 4018,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4082,
											"end": 4970,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4082,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4235,
											"end": 4238,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4334,
											"end": 4339,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4264,
											"end": 4340,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4264,
											"end": 4340,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4264,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4356,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4447,
											"end": 4453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4442,
											"end": 4445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4356,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4356,
											"end": 4454,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4356,
											"end": 4454,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4356,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4454,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4550,
											"end": 4555,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4478,
											"end": 4556,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4478,
											"end": 4556,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4478,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4579,
											"end": 4586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4611,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4595,
											"end": 4945,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4595,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4620,
											"end": 4626,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4617,
											"end": 4618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4614,
											"end": 4627,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4595,
											"end": 4945,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4595,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4595,
											"end": 4945,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4696,
											"end": 4702,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4723,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4826,
											"end": 4829,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4723,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4723,
											"end": 4830,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4723,
											"end": 4830,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4723,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4716,
											"end": 4830,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 4716,
											"end": 4830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4928,
											"end": 4934,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4853,
											"end": 4935,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4853,
											"end": 4935,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4853,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4843,
											"end": 4935,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4843,
											"end": 4935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4655,
											"end": 4945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4642,
											"end": 4643,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4639,
											"end": 4640,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4635,
											"end": 4644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4630,
											"end": 4644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4630,
											"end": 4644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4595,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4595,
											"end": 4945,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4595,
											"end": 4945,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4595,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4599,
											"end": 4613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 4964,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4954,
											"end": 4964,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4954,
											"end": 4964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4240,
											"end": 4970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4240,
											"end": 4970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4240,
											"end": 4970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4082,
											"end": 4970,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4082,
											"end": 4970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4082,
											"end": 4970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4082,
											"end": 4970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4082,
											"end": 4970,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5048,
											"end": 5750,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 5048,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5219,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5213,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5206,
											"end": 5220,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5310,
											"end": 5314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5308,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5315,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5293,
											"end": 5316,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5329,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5386,
											"end": 5390,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5381,
											"end": 5384,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5377,
											"end": 5391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5363,
											"end": 5375,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5329,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5329,
											"end": 5392,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5329,
											"end": 5392,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5329,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5230,
											"end": 5402,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5486,
											"end": 5490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5479,
											"end": 5484,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5469,
											"end": 5492,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5539,
											"end": 5542,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5533,
											"end": 5537,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5543,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5522,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5517,
											"end": 5520,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5513,
											"end": 5527,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5506,
											"end": 5544,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5565,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5707,
											"end": 5711,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5693,
											"end": 5705,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5565,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5565,
											"end": 5712,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5565,
											"end": 5712,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5565,
											"end": 5712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5557,
											"end": 5712,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5557,
											"end": 5712,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5412,
											"end": 5723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5733,
											"end": 5744,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5733,
											"end": 5744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5184,
											"end": 5750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5048,
											"end": 5750,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5048,
											"end": 5750,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5048,
											"end": 5750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5048,
											"end": 5750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5048,
											"end": 5750,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5756,
											"end": 6153,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 5756,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5911,
											"end": 5915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5949,
											"end": 5951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5938,
											"end": 5947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5934,
											"end": 5952,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5926,
											"end": 5952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5926,
											"end": 5952,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5998,
											"end": 6007,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 5996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6008,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5984,
											"end": 5985,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5973,
											"end": 5982,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 5986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5962,
											"end": 6009,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6026,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 6141,
											"end": 6145,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6132,
											"end": 6138,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6026,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6026,
											"end": 6146,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6026,
											"end": 6146,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 6026,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6018,
											"end": 6146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6018,
											"end": 6146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5756,
											"end": 6153,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5756,
											"end": 6153,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5756,
											"end": 6153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5756,
											"end": 6153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5756,
											"end": 6153,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6159,
											"end": 6339,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6159,
											"end": 6339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6207,
											"end": 6284,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6204,
											"end": 6205,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6285,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6301,
											"end": 6302,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6294,
											"end": 6309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6328,
											"end": 6332,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6325,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6318,
											"end": 6333,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6345,
											"end": 6514,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6345,
											"end": 6514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6429,
											"end": 6440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6469,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6461,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6451,
											"end": 6470,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6503,
											"end": 6507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6498,
											"end": 6501,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6494,
											"end": 6508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6479,
											"end": 6508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6479,
											"end": 6508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6345,
											"end": 6514,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6345,
											"end": 6514,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6345,
											"end": 6514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6345,
											"end": 6514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6345,
											"end": 6514,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6520,
											"end": 6754,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6520,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "PUSH",
											"source": 2,
											"value": "5374616B61626C653A2054686973206164647265737320646F6573206E6F7420"
										},
										{
											"begin": 6656,
											"end": 6657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6654,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6644,
											"end": 6658,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6637,
											"end": 6695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6746,
											"name": "PUSH",
											"source": 2,
											"value": "6861766520616E79207374616B65730000000000000000000000000000000000"
										},
										{
											"begin": 6724,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6716,
											"end": 6722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6712,
											"end": 6727,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6520,
											"end": 6754,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6520,
											"end": 6754,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6760,
											"end": 7126,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 6760,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6902,
											"end": 6905,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6923,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 6987,
											"end": 6989,
											"name": "PUSH",
											"source": 2,
											"value": "2F"
										},
										{
											"begin": 6982,
											"end": 6985,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6923,
											"end": 6990,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6923,
											"end": 6990,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 6923,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6916,
											"end": 6990,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6916,
											"end": 6990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6999,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 7088,
											"end": 7091,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6999,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6999,
											"end": 7092,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6999,
											"end": 7092,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 6999,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7119,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7112,
											"end": 7115,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7108,
											"end": 7120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7101,
											"end": 7120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7101,
											"end": 7120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6760,
											"end": 7126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6760,
											"end": 7126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6760,
											"end": 7126,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6760,
											"end": 7126,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7132,
											"end": 7551,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7132,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7302,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7336,
											"end": 7338,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7325,
											"end": 7334,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7313,
											"end": 7339,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7313,
											"end": 7339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7385,
											"end": 7394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7379,
											"end": 7383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7395,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7371,
											"end": 7372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7360,
											"end": 7369,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7356,
											"end": 7373,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7349,
											"end": 7396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7413,
											"end": 7544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 7539,
											"end": 7543,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7413,
											"end": 7544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 7413,
											"end": 7544,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7413,
											"end": 7544,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 7413,
											"end": 7544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7405,
											"end": 7544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7405,
											"end": 7544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7132,
											"end": 7551,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7132,
											"end": 7551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7132,
											"end": 7551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7132,
											"end": 7551,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7557,
											"end": 7737,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 7557,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7682,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7602,
											"end": 7603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7683,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7702,
											"end": 7706,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 7699,
											"end": 7700,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7692,
											"end": 7707,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7726,
											"end": 7730,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7723,
											"end": 7724,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7716,
											"end": 7731,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7743,
											"end": 8048,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 7743,
											"end": 8048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7783,
											"end": 7786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7802,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 7820,
											"end": 7821,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7802,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 7802,
											"end": 7822,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7802,
											"end": 7822,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 7802,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7797,
											"end": 7822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7797,
											"end": 7822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7836,
											"end": 7856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 7854,
											"end": 7855,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7836,
											"end": 7856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 7836,
											"end": 7856,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7836,
											"end": 7856,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 7836,
											"end": 7856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7831,
											"end": 7856,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7831,
											"end": 7856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 7991,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7922,
											"end": 7988,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7992,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7915,
											"end": 7916,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7912,
											"end": 7993,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8016,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 7909,
											"end": 8016,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7996,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 7996,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 7996,
											"end": 8014,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7996,
											"end": 8014,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 7996,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7909,
											"end": 8016,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 7909,
											"end": 8016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8040,
											"end": 8041,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8037,
											"end": 8038,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8033,
											"end": 8042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8026,
											"end": 8042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8026,
											"end": 8042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7743,
											"end": 8048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7743,
											"end": 8048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7743,
											"end": 8048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7743,
											"end": 8048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7743,
											"end": 8048,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8054,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 8054,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8094,
											"end": 8101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8117,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 8135,
											"end": 8136,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8117,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 8117,
											"end": 8137,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8117,
											"end": 8137,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 8117,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8112,
											"end": 8137,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8112,
											"end": 8137,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 8169,
											"end": 8170,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 8151,
											"end": 8171,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8151,
											"end": 8171,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 8151,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8146,
											"end": 8171,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8146,
											"end": 8171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8271,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8267,
											"end": 8341,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8264,
											"end": 8265,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8261,
											"end": 8342,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8256,
											"end": 8257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8249,
											"end": 8258,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8242,
											"end": 8259,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 8343,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8235,
											"end": 8366,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8235,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 8235,
											"end": 8366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8235,
											"end": 8366,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 8235,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8394,
											"end": 8395,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8392,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8387,
											"end": 8396,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8376,
											"end": 8396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8376,
											"end": 8396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8402,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8402,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8402,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8402,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8402,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8408,
											"end": 8588,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 8408,
											"end": 8588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8456,
											"end": 8533,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8453,
											"end": 8454,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8446,
											"end": 8534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8553,
											"end": 8557,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 8550,
											"end": 8551,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8543,
											"end": 8558,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8577,
											"end": 8581,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 8574,
											"end": 8575,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8567,
											"end": 8582,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8594,
											"end": 8779,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 8594,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8634,
											"end": 8635,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8651,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 8669,
											"end": 8670,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8651,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 8651,
											"end": 8671,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8651,
											"end": 8671,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 8651,
											"end": 8671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8646,
											"end": 8671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8646,
											"end": 8671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8685,
											"end": 8705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 8703,
											"end": 8704,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8685,
											"end": 8705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 8685,
											"end": 8705,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8685,
											"end": 8705,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 8685,
											"end": 8705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8680,
											"end": 8705,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8680,
											"end": 8705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8724,
											"end": 8725,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 8714,
											"end": 8749,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8729,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 8729,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 8729,
											"end": 8747,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8729,
											"end": 8747,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 8729,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8749,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 8714,
											"end": 8749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8771,
											"end": 8772,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8768,
											"end": 8769,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8764,
											"end": 8773,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8759,
											"end": 8773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8759,
											"end": 8773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8594,
											"end": 8779,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8594,
											"end": 8779,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8594,
											"end": 8779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8594,
											"end": 8779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8594,
											"end": 8779,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8785,
											"end": 8962,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 8785,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8925,
											"end": 8954,
											"name": "PUSH",
											"source": 2,
											"value": "5374616B61626C653A204572726F722074696D657374616D7020300000000000"
										},
										{
											"begin": 8921,
											"end": 8922,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8919,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8909,
											"end": 8923,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8902,
											"end": 8955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8785,
											"end": 8962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8785,
											"end": 8962,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8968,
											"end": 9334,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 8968,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9110,
											"end": 9113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9131,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 9195,
											"end": 9197,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 9190,
											"end": 9193,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9131,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 9131,
											"end": 9198,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9131,
											"end": 9198,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 9131,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9124,
											"end": 9198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9124,
											"end": 9198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9207,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 9296,
											"end": 9299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9207,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 9207,
											"end": 9300,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9207,
											"end": 9300,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 9207,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9325,
											"end": 9327,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9320,
											"end": 9323,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9316,
											"end": 9328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9309,
											"end": 9328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9309,
											"end": 9328,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8968,
											"end": 9334,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8968,
											"end": 9334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8968,
											"end": 9334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8968,
											"end": 9334,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9506,
											"end": 9510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9544,
											"end": 9546,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9533,
											"end": 9542,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9529,
											"end": 9547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9521,
											"end": 9547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9521,
											"end": 9547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9593,
											"end": 9602,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9587,
											"end": 9591,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9583,
											"end": 9603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9579,
											"end": 9580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9568,
											"end": 9577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9564,
											"end": 9581,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9557,
											"end": 9604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 9747,
											"end": 9751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9765,
											"end": 9956,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 9765,
											"end": 9956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9805,
											"end": 9809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9825,
											"end": 9845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 9843,
											"end": 9844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9825,
											"end": 9845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 9825,
											"end": 9845,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9825,
											"end": 9845,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 9825,
											"end": 9845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9820,
											"end": 9845,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9820,
											"end": 9845,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 9877,
											"end": 9878,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 9859,
											"end": 9879,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9859,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 9859,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9854,
											"end": 9879,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9854,
											"end": 9879,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9898,
											"end": 9899,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9895,
											"end": 9896,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9900,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9889,
											"end": 9923,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9889,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 9889,
											"end": 9923,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9903,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 9903,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 9903,
											"end": 9921,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9903,
											"end": 9921,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 9903,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9889,
											"end": 9923,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 9889,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9948,
											"end": 9949,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9945,
											"end": 9946,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9941,
											"end": 9950,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9933,
											"end": 9950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9933,
											"end": 9950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9765,
											"end": 9956,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9765,
											"end": 9956,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9765,
											"end": 9956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9765,
											"end": 9956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9765,
											"end": 9956,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9962,
											"end": 10061,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 9962,
											"end": 10061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10014,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10048,
											"end": 10053,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10042,
											"end": 10054,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9962,
											"end": 10061,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9962,
											"end": 10061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9962,
											"end": 10061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9962,
											"end": 10061,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10067,
											"end": 10374,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10067,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10135,
											"end": 10136,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10145,
											"end": 10258,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10145,
											"end": 10258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10165,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10156,
											"end": 10157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10166,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10145,
											"end": 10258,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10145,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 10145,
											"end": 10258,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10244,
											"end": 10245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10239,
											"end": 10242,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10235,
											"end": 10246,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10229,
											"end": 10247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10220,
											"end": 10223,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10209,
											"end": 10248,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10181,
											"end": 10183,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10174,
											"end": 10184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10169,
											"end": 10184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10169,
											"end": 10184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10145,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10145,
											"end": 10258,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10145,
											"end": 10258,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 10145,
											"end": 10258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10276,
											"end": 10282,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10273,
											"end": 10274,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10270,
											"end": 10283,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 10267,
											"end": 10368,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10267,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 10267,
											"end": 10368,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10356,
											"end": 10357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10347,
											"end": 10353,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10345,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10331,
											"end": 10358,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10267,
											"end": 10368,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 10267,
											"end": 10368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10116,
											"end": 10374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10067,
											"end": 10374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10067,
											"end": 10374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10067,
											"end": 10374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10067,
											"end": 10374,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10380,
											"end": 10482,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 10380,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10421,
											"end": 10427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10472,
											"end": 10474,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 10468,
											"end": 10475,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 10463,
											"end": 10465,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 10456,
											"end": 10461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10452,
											"end": 10466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10448,
											"end": 10476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10438,
											"end": 10476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10438,
											"end": 10476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10380,
											"end": 10482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10380,
											"end": 10482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10380,
											"end": 10482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10380,
											"end": 10482,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10488,
											"end": 10852,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 10488,
											"end": 10852,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10604,
											"end": 10643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10637,
											"end": 10642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10604,
											"end": 10643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 10604,
											"end": 10643,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10604,
											"end": 10643,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10604,
											"end": 10643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10659,
											"end": 10730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 10723,
											"end": 10729,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10718,
											"end": 10721,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10659,
											"end": 10730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 10659,
											"end": 10730,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10659,
											"end": 10730,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 10659,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10652,
											"end": 10730,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10652,
											"end": 10730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10739,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 10784,
											"end": 10790,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10779,
											"end": 10782,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10772,
											"end": 10776,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10765,
											"end": 10770,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10761,
											"end": 10777,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10739,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10739,
											"end": 10791,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10739,
											"end": 10791,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 10739,
											"end": 10791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10816,
											"end": 10845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 10838,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10816,
											"end": 10845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 10816,
											"end": 10845,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10816,
											"end": 10845,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 10816,
											"end": 10845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10811,
											"end": 10814,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10807,
											"end": 10846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10846,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10488,
											"end": 10852,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10488,
											"end": 10852,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10488,
											"end": 10852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10488,
											"end": 10852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10488,
											"end": 10852,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10858,
											"end": 11171,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 10858,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10971,
											"end": 10975,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11009,
											"end": 11011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10998,
											"end": 11007,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10994,
											"end": 11012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10986,
											"end": 11012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10986,
											"end": 11012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11058,
											"end": 11067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11048,
											"end": 11068,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11044,
											"end": 11045,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11033,
											"end": 11042,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11029,
											"end": 11046,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11022,
											"end": 11069,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11086,
											"end": 11164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 11159,
											"end": 11163,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11156,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11086,
											"end": 11164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 11086,
											"end": 11164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11086,
											"end": 11164,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 11086,
											"end": 11164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10858,
											"end": 11171,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10858,
											"end": 11171,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10858,
											"end": 11171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10858,
											"end": 11171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10858,
											"end": 11171,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									],
									".data": {
										"10B867070097D898AE15CD1BC384E389B4A7D91F05C0759C198C193C7FD91787": "5374616b61626c653a204572726f722063616e6e6f74206469766964652074696d657374616d70"
									}
								}
							}
						},
						"methodIdentifiers": {
							"hasStake(address)": "e73e14bf",
							"penaltyFee()": "3dc10ad4",
							"stakeSummary(address)": "b09d4b4e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakingPenalty_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PenaltyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"hasStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Stakable.Stake[]\",\"name\":\"stakes\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Stakable.StakingSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"stakeSummary\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Stakable.Stake[]\",\"name\":\"stakes\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Stakable.StakingSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Staked(address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Stakable.sol\":\"Stakable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/Stakable.sol\":{\"keccak256\":\"0x7558b6ffa48bbf4335f4f18d6563895007c12a6bc49aa6a66a610c17114a9fc2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1d72bf17300e148a29c7129e5664810aca7306cdef9fc535460df4b7c537a059\",\"dweb:/ipfs/QmRfZNW5ZnT49emNEQxTdn1viwxpSpFVxYaTTtM2nwiwFH\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"Staked(address,uint256,uint256,uint256,uint256)": {
								"notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "475:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "702:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "712:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "736:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "767:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "778:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "823:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "809:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:0"
									},
									"scope": 311,
									"src": "626:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1064:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1102:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1106:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1098:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1109:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1158:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1140:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:0"
									},
									"scope": 311,
									"src": "988:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1401:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1665:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1677:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1707:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1742:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1738:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1754:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1785:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:0"
									},
									"scope": 311,
									"src": "1325:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2043:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2077:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2089:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2120:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:0"
									},
									"scope": 311,
									"src": "1967:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2392:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2426:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2438:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2483:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2487:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2469:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:0"
									},
									"scope": 311,
									"src": "2316:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2808:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2818:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:0"
									},
									"scope": 311,
									"src": "2741:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3175:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3185:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:0"
									},
									"scope": 311,
									"src": "3108:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3518:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3528:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:0"
									},
									"scope": 311,
									"src": "3451:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3903:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3913:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3849:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:0"
									},
									"scope": 311,
									"src": "3836:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4452:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4462:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:0"
									},
									"scope": 311,
									"src": "4385:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5070:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5120:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5147:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:0"
									},
									"scope": 311,
									"src": "4945:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5785:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5834:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5861:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5701:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5720:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5776:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:0"
									},
									"scope": 311,
									"src": "5660:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6661:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6710:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6737:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:0"
									},
									"scope": 311,
									"src": "6536:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "467:6301:0",
							"usedErrors": []
						}
					],
					"src": "92:6677:0"
				},
				"id": 0
			},
			"contracts/Stakable.sol": {
				"ast": {
					"absolutePath": "contracts/Stakable.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						],
						"Stakable": [
							947
						]
					},
					"id": 948,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 948,
							"sourceUnit": 312,
							"src": "67:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Stakable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 947,
							"linearizedBaseContracts": [
								947
							],
							"name": "Stakable",
							"nameLocation": "137:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "153:162:1",
										"text": " @notice Constructor since this contract is not ment to be used without inheritance\n push once to stakeholders for it to work proplerly"
									},
									"id": 317,
									"mutability": "mutable",
									"name": "_stakingPenalty",
									"nameLocation": "339:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 947,
									"src": "323:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 316,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "323:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "400:200:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 322,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "486:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
															}
														},
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "486:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage_ptr_$returns$_t_struct$_Stakeholder_$352_storage_$bound_to$_t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Stakable.Stakeholder storage ref[] storage pointer) returns (struct Stakable.Stakeholder storage ref)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "486:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
														"typeString": "struct Stakable.Stakeholder storage ref"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "486:19:1"
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_stakingPenalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "559:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "stakingPenalty_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "577:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "559:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "559:33:1"
											}
										]
									},
									"id": 332,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "stakingPenalty_",
												"nameLocation": "383:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "375:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:25:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "400:0:1"
									},
									"scope": 947,
									"src": "363:237:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.Stake",
									"id": 345,
									"members": [
										{
											"constant": false,
											"id": 334,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "873:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 345,
											"src": "865:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 333,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "865:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 336,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "896:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 345,
											"src": "888:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 335,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "888:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 338,
											"mutability": "mutable",
											"name": "since",
											"nameLocation": "921:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 345,
											"src": "913:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 337,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "913:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 340,
											"mutability": "mutable",
											"name": "claimable",
											"nameLocation": "1045:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 345,
											"src": "1037:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 339,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1037:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 342,
											"mutability": "mutable",
											"name": "rewardAPY",
											"nameLocation": "1073:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 345,
											"src": "1065:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 341,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1065:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 344,
											"mutability": "mutable",
											"name": "releaseTime",
											"nameLocation": "1101:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 345,
											"src": "1093:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 343,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1093:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "848:5:1",
									"nodeType": "StructDefinition",
									"scope": 947,
									"src": "841:279:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.Stakeholder",
									"id": 352,
									"members": [
										{
											"constant": false,
											"id": 347,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "1245:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 352,
											"src": "1237:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 346,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1237:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 351,
											"mutability": "mutable",
											"name": "address_stakes",
											"nameLocation": "1268:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 352,
											"src": "1260:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage_ptr",
												"typeString": "struct Stakable.Stake[]"
											},
											"typeName": {
												"baseType": {
													"id": 349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 348,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 345,
														"src": "1260:5:1"
													},
													"referencedDeclaration": 345,
													"src": "1260:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$345_storage_ptr",
														"typeString": "struct Stakable.Stake"
													}
												},
												"id": 350,
												"nodeType": "ArrayTypeName",
												"src": "1260:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage_ptr",
													"typeString": "struct Stakable.Stake[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stakeholder",
									"nameLocation": "1214:11:1",
									"nodeType": "StructDefinition",
									"scope": 947,
									"src": "1207:83:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.StakingSummary",
									"id": 359,
									"members": [
										{
											"constant": false,
											"id": 354,
											"mutability": "mutable",
											"name": "total_amount",
											"nameLocation": "1474:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 359,
											"src": "1466:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 353,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1466:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 358,
											"mutability": "mutable",
											"name": "stakes",
											"nameLocation": "1505:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 359,
											"src": "1497:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage_ptr",
												"typeString": "struct Stakable.Stake[]"
											},
											"typeName": {
												"baseType": {
													"id": 356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 355,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 345,
														"src": "1497:5:1"
													},
													"referencedDeclaration": 345,
													"src": "1497:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$345_storage_ptr",
														"typeString": "struct Stakable.Stake"
													}
												},
												"id": 357,
												"nodeType": "ArrayTypeName",
												"src": "1497:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage_ptr",
													"typeString": "struct Stakable.Stake[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingSummary",
									"nameLocation": "1440:14:1",
									"nodeType": "StructDefinition",
									"scope": 947,
									"src": "1433:86:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1527:232:1",
										"text": " @notice\n   This is a array where we store all Stakes that are performed on the Contract\n   The stakes for each address are stored at a certain index, the index can be found using the stakes mapping"
									},
									"id": 364,
									"mutability": "mutable",
									"name": "stakeholders",
									"nameLocation": "1788:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 947,
									"src": "1765:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
										"typeString": "struct Stakable.Stakeholder[]"
									},
									"typeName": {
										"baseType": {
											"id": 362,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 361,
												"name": "Stakeholder",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 352,
												"src": "1765:11:1"
											},
											"referencedDeclaration": 352,
											"src": "1765:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stakeholder_$352_storage_ptr",
												"typeString": "struct Stakable.Stakeholder"
											}
										},
										"id": 363,
										"nodeType": "ArrayTypeName",
										"src": "1765:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage_ptr",
											"typeString": "struct Stakable.Stakeholder[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "1807:114:1",
										"text": " @notice\n stakes is used to keep track of the INDEX for the stakers in the stakes array"
									},
									"id": 369,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "1964:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 947,
									"src": "1927:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 368,
										"keyType": {
											"id": 366,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1935:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1927:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 367,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1946:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1979:126:1",
										"text": " @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
									},
									"id": 382,
									"name": "Staked",
									"nameLocation": "2117:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2150:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2134:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2134:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2173:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2165:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2198:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2190:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2222:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2214:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"indexed": false,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "2250:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2242:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2123:145:1"
									},
									"src": "2111:158:1"
								},
								{
									"anonymous": false,
									"id": 386,
									"name": "PenaltyChanged",
									"nameLocation": "2283:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2306:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "2298:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:16:1"
									},
									"src": "2277:37:1"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "2501:446:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 394,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "2593:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2593:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage_ptr_$returns$_t_struct$_Stakeholder_$352_storage_$bound_to$_t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Stakable.Stakeholder storage ref[] storage pointer) returns (struct Stakable.Stakeholder storage ref)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2593:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
														"typeString": "struct Stakable.Stakeholder storage ref"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "2593:19:1"
											},
											{
												"assignments": [
													400
												],
												"declarations": [
													{
														"constant": false,
														"id": 400,
														"mutability": "mutable",
														"name": "userIndex",
														"nameLocation": "2702:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "2694:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 399,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2694:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 405,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 401,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "2714:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2714:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2736:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2714:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2694:43:1"
											},
											{
												"expression": {
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 406,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "2796:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																	"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																}
															},
															"id": 408,
															"indexExpression": {
																"id": 407,
																"name": "userIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "2809:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2796:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																"typeString": "struct Stakable.Stakeholder storage ref"
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "user",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 347,
														"src": "2796:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 410,
														"name": "staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "2827:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2796:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "2796:37:1"
											},
											{
												"expression": {
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 413,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "2886:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 415,
														"indexExpression": {
															"id": 414,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "2893:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2886:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 416,
														"name": "userIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "2903:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2886:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "2886:26:1"
											},
											{
												"expression": {
													"id": 419,
													"name": "userIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 400,
													"src": "2930:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 393,
												"id": 420,
												"nodeType": "Return",
												"src": "2923:16:1"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "2322:105:1",
										"text": " @notice _addStakeholder takes care of adding a stakeholder to the stakeholders array"
									},
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addStakeholder",
									"nameLocation": "2442:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "2466:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2458:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2457:16:1"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2492:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2491:9:1"
									},
									"scope": 947,
									"src": "2433:514:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "3284:1511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 433,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "3358:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3368:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3358:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b61626c653a2043616e6e6f74207374616b65206e6f7468696e67",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3371:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3813df9748c4436a7a2fd166053afb48801152fc793cbb0c0c94a59c88ffd3e0",
																"typeString": "literal_string \"Stakable: Cannot stake nothing\""
															},
															"value": "Stakable: Cannot stake nothing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3813df9748c4436a7a2fd166053afb48801152fc793cbb0c0c94a59c88ffd3e0",
																"typeString": "literal_string \"Stakable: Cannot stake nothing\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3350:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3350:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "3350:54:1"
											},
											{
												"assignments": [
													440
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "3587:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 494,
														"src": "3579:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 439,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3579:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"baseExpression": {
														"id": 441,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "3595:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 444,
													"indexExpression": {
														"expression": {
															"id": 442,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3602:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3602:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3595:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3579:34:1"
											},
											{
												"assignments": [
													447
												],
												"declarations": [
													{
														"constant": false,
														"id": 447,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "3720:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 494,
														"src": "3712:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 446,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3712:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 450,
												"initialValue": {
													"expression": {
														"id": 448,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "3732:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "3732:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3712:35:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 451,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3844:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3853:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3844:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 462,
												"nodeType": "IfStatement",
												"src": "3840:335:1",
												"trueBody": {
													"id": 461,
													"nodeType": "Block",
													"src": "3856:319:1",
													"statements": [
														{
															"expression": {
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 454,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "4128:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 456,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4152:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4152:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 455,
																		"name": "_addStakeholder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "4136:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4136:27:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4128:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 460,
															"nodeType": "ExpressionStatement",
															"src": "4128:35:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 469,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4384:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4384:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 471,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "4413:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 472,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "4439:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4467:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"id": 474,
																	"name": "_rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "4487:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 475,
																				"name": "_stakePeriod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 427,
																				"src": "4518:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 476,
																				"name": "timestamp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "4533:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4518:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 478,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4517:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 468,
																"name": "Stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "4360:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Stake_$345_storage_ptr_$",
																	"typeString": "type(struct Stakable.Stake storage pointer)"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4360:198:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 463,
																	"name": "stakeholders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "4306:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																		"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																	}
																},
																"id": 465,
																"indexExpression": {
																	"id": 464,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "4319:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4306:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																	"typeString": "struct Stakable.Stakeholder storage ref"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "address_stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 351,
															"src": "4306:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																"typeString": "struct Stakable.Stake storage ref[] storage ref"
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4306:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$345_storage_$dyn_storage_ptr_$_t_struct$_Stake_$345_storage_$returns$__$bound_to$_t_array$_t_struct$_Stake_$345_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Stakable.Stake storage ref[] storage pointer,struct Stakable.Stake storage ref)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:263:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "4306:263:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 483,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4659:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4659:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "4684:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 486,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "4706:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 487,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "4726:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 488,
																		"name": "_stakePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 427,
																		"src": "4751:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 489,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "4766:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4751:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 491,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4750:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 482,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "4638:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4638:149:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "EmitStatement",
												"src": "4633:154:1"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "2955:204:1",
										"text": " @notice\n _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n StakeID"
									},
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stake",
									"nameLocation": "3174:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3199:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3191:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "3225:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3217:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3217:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "3256:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3248:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3248:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3180:94:1"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3284:0:1"
									},
									"scope": 947,
									"src": "3165:1630:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "4856:166:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 501,
																"name": "amount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "4875:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3330",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4886:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"src": "4875:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b61626c653a2050656e616c7479206665652063616e6e6f742065786365656420352070657263656e742e",
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4890:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_180bea940bb46e16124337966781522c26ac96d86aecd31891d0fc05cc3401e9",
																"typeString": "literal_string \"Stakable: Penalty fee cannot exceed 5 percent.\""
															},
															"value": "Stakable: Penalty fee cannot exceed 5 percent."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_180bea940bb46e16124337966781522c26ac96d86aecd31891d0fc05cc3401e9",
																"typeString": "literal_string \"Stakable: Penalty fee cannot exceed 5 percent.\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4867:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4867:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "4867:72:1"
											},
											{
												"expression": {
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 507,
														"name": "_stakingPenalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "4950:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 508,
														"name": "amount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "4968:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4950:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "4950:25:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 512,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "5006:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 511,
														"name": "PenaltyChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "4991:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4991:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "EmitStatement",
												"src": "4986:28:1"
											}
										]
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changePenaltyFee",
									"nameLocation": "4812:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "4838:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4830:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4829:17:1"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4856:0:1"
									},
									"scope": 947,
									"src": "4803:219:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "5080:41:1",
										"statements": [
											{
												"expression": {
													"id": 521,
													"name": "_stakingPenalty",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "5098:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 520,
												"id": 522,
												"nodeType": "Return",
												"src": "5091:22:1"
											}
										]
									},
									"functionSelector": "3dc10ad4",
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "penaltyFee",
									"nameLocation": "5039:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5049:2:1"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "5072:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5072:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5071:9:1"
									},
									"scope": 947,
									"src": "5030:91:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "5243:266:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "since_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "5262:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5271:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5262:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b61626c653a204572726f722074696d657374616d702030",
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5274:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd",
																"typeString": "literal_string \"Stakable: Error timestamp 0\""
															},
															"value": "Stakable: Error timestamp 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eae138733ca93c0fbd122a38ff85e06b9b628584b782b941f578ba8b2c9830dd",
																"typeString": "literal_string \"Stakable: Error timestamp 0\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5254:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5254:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "5254:50:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 540,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "5367:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "5367:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 542,
																			"name": "since_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "5385:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5367:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 544,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5366:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653234",
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5395:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																},
																"value": "1e24"
															},
															"src": "5366:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "333635",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5418:8:1",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															"value": "365"
														},
														{
															"hexValue": "5374616b61626c653a204572726f722063616e6e6f74206469766964652074696d657374616d70",
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5445:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10b867070097d898ae15cd1bc384e389b4a7d91f05c0759c198c193c7fd91787",
																"typeString": "literal_string \"Stakable: Error cannot divide timestamp\""
															},
															"value": "Stakable: Error cannot divide timestamp"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															{
																"typeIdentifier": "t_stringliteral_10b867070097d898ae15cd1bc384e389b4a7d91f05c0759c198c193c7fd91787",
																"typeString": "literal_string \"Stakable: Error cannot divide timestamp\""
															}
														],
														"expression": {
															"id": 538,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "5335:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 285,
														"src": "5335:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5335:166:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 530,
												"id": 550,
												"nodeType": "Return",
												"src": "5315:186:1"
											}
										]
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingDuration",
									"nameLocation": "5138:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "since_",
												"nameLocation": "5171:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5163:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5163:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5162:16:1"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5229:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5229:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5228:9:1"
									},
									"scope": 947,
									"src": "5129:380:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "5657:244:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 562,
															"name": "_current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "5672:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 563,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 336,
														"src": "5672:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5697:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5672:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 569,
												"nodeType": "IfStatement",
												"src": "5668:67:1",
												"trueBody": {
													"id": 568,
													"nodeType": "Block",
													"src": "5700:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5722:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 561,
															"id": 567,
															"nodeType": "Return",
															"src": "5715:8:1"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 570,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "5768:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 571,
																			"name": "_current_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "5795:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 572,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardAPY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 342,
																		"src": "5795:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5768:51:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 575,
																				"name": "_current_stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 555,
																				"src": "5864:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																					"typeString": "struct Stakable.Stake memory"
																				}
																			},
																			"id": 576,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "since",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 338,
																			"src": "5864:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 574,
																		"name": "calculateStakingDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 552,
																		"src": "5839:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5839:46:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5768:117:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 579,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5767:119:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653236",
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5889:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000000"
														},
														"value": "1e26"
													},
													"src": "5767:126:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 561,
												"id": 582,
												"nodeType": "Return",
												"src": "5747:146:1"
											}
										]
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakeReward",
									"nameLocation": "5526:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "_current_stake",
												"nameLocation": "5560:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "5547:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
													"typeString": "struct Stakable.Stake"
												},
												"typeName": {
													"id": 554,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 553,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 345,
														"src": "5547:5:1"
													},
													"referencedDeclaration": 345,
													"src": "5547:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$345_storage_ptr",
														"typeString": "struct Stakable.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5584:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "5576:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5576:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5546:46:1"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "5643:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5642:9:1"
									},
									"scope": 947,
									"src": "5517:384:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "6022:176:1",
										"statements": [
											{
												"assignments": [
													594
												],
												"declarations": [
													{
														"constant": false,
														"id": 594,
														"mutability": "mutable",
														"name": "summary",
														"nameLocation": "6055:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "6033:29:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
															"typeString": "struct Stakable.StakingSummary"
														},
														"typeName": {
															"id": 593,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 592,
																"name": "StakingSummary",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 359,
																"src": "6033:14:1"
															},
															"referencedDeclaration": 359,
															"src": "6033:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$359_storage_ptr",
																"typeString": "struct Stakable.StakingSummary"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 604,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6094:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 597,
																	"name": "stakeholders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "6110:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																		"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																	}
																},
																"id": 601,
																"indexExpression": {
																	"baseExpression": {
																		"id": 598,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "6123:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 600,
																	"indexExpression": {
																		"id": 599,
																		"name": "user_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "6130:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6123:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6110:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																	"typeString": "struct Stakable.Stakeholder storage ref"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "address_stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 351,
															"src": "6110:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																"typeString": "struct Stakable.Stake storage ref[] storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																"typeString": "struct Stakable.Stake storage ref[] storage ref"
															}
														],
														"id": 595,
														"name": "StakingSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "6065:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakingSummary_$359_storage_ptr_$",
															"typeString": "type(struct Stakable.StakingSummary storage pointer)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6065:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6033:130:1"
											},
											{
												"expression": {
													"id": 605,
													"name": "summary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 594,
													"src": "6183:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"functionReturnParameters": 591,
												"id": 606,
												"nodeType": "Return",
												"src": "6176:14:1"
											}
										]
									},
									"functionSelector": "b09d4b4e",
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeSummary",
									"nameLocation": "5918:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "user_",
												"nameLocation": "5939:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "5931:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5930:15:1"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "5994:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
													"typeString": "struct Stakable.StakingSummary"
												},
												"typeName": {
													"id": 589,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 588,
														"name": "StakingSummary",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 359,
														"src": "5994:14:1"
													},
													"referencedDeclaration": 359,
													"src": "5994:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$359_storage_ptr",
														"typeString": "struct Stakable.StakingSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5993:23:1"
									},
									"scope": 947,
									"src": "5909:289:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "6348:392:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "6363:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6373:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6363:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 627,
												"nodeType": "IfStatement",
												"src": "6359:57:1",
												"trueBody": {
													"id": 626,
													"nodeType": "Block",
													"src": "6376:40:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6399:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6402:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 624,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6398:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 618,
															"id": 625,
															"nodeType": "Return",
															"src": "6391:13:1"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 630,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "6481:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 633,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 610,
																			"src": "6519:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 636,
																					"name": "_stakingPenalty",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 317,
																					"src": "6540:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"hexValue": "31303030",
																					"id": 637,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6557:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					}
																				],
																				"expression": {
																					"id": 634,
																					"name": "SafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "6527:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																						"typeString": "type(library SafeMath)"
																					}
																				},
																				"id": 635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 220,
																				"src": "6527:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6527:35:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 631,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "6506:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 205,
																		"src": "6506:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6506:57:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 628,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "6450:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "6450:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6450:128:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 643,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "6624:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 646,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 612,
																			"src": "6662:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 649,
																					"name": "_stakingPenalty",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 317,
																					"src": "6683:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"hexValue": "31303030",
																					"id": 650,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6700:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					}
																				],
																				"expression": {
																					"id": 647,
																					"name": "SafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "6670:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																						"typeString": "type(library SafeMath)"
																					}
																				},
																				"id": 648,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 220,
																				"src": "6670:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6670:35:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 644,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "6649:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 205,
																		"src": "6649:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6649:57:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 641,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "6593:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "6593:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6593:128:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 654,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6435:297:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 618,
												"id": 655,
												"nodeType": "Return",
												"src": "6428:304:1"
											}
										]
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingWithPenalty",
									"nameLocation": "6215:27:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6251:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6243:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6243:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "6267:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6259:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6259:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6242:32:1"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6325:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6325:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6334:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6334:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6324:18:1"
									},
									"scope": 947,
									"src": "6206:534:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "7207:1816:1",
										"statements": [
											{
												"assignments": [
													670
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "user_index",
														"nameLocation": "7300:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 784,
														"src": "7292:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 669,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7292:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 675,
												"initialValue": {
													"baseExpression": {
														"id": 671,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "7313:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 674,
													"indexExpression": {
														"expression": {
															"id": 672,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7320:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7320:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7313:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7292:39:1"
											},
											{
												"assignments": [
													678
												],
												"declarations": [
													{
														"constant": false,
														"id": 678,
														"mutability": "mutable",
														"name": "current_stake",
														"nameLocation": "7355:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 784,
														"src": "7342:26:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
															"typeString": "struct Stakable.Stake"
														},
														"typeName": {
															"id": 677,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 676,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 345,
																"src": "7342:5:1"
															},
															"referencedDeclaration": 345,
															"src": "7342:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_storage_ptr",
																"typeString": "struct Stakable.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 685,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 679,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "7371:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																	"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																}
															},
															"id": 681,
															"indexExpression": {
																"id": 680,
																"name": "user_index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "7384:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7371:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																"typeString": "struct Stakable.Stakeholder storage ref"
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "address_stakes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 351,
														"src": "7371:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
															"typeString": "struct Stakable.Stake storage ref[] storage ref"
														}
													},
													"id": 684,
													"indexExpression": {
														"id": 683,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "7425:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7371:70:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$345_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7342:99:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 687,
																	"name": "current_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "7644:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																		"typeString": "struct Stakable.Stake memory"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 336,
																"src": "7644:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 689,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "7668:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7644:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b61626c653a2043616e6e6f74207769746864726177206d6f7265207468616e20796f752068617665207374616b6564",
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7689:53:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba87cd7e1180e1e202533737ef16f3dd080bebdde501c7b5915b283cf633ca4a",
																"typeString": "literal_string \"Stakable: Cannot withdraw more than you have staked\""
															},
															"value": "Stakable: Cannot withdraw more than you have staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba87cd7e1180e1e202533737ef16f3dd080bebdde501c7b5915b283cf633ca4a",
																"typeString": "literal_string \"Stakable: Cannot withdraw more than you have staked\""
															}
														],
														"id": 686,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7622:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:131:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "7622:131:1"
											},
											{
												"assignments": [
													695
												],
												"declarations": [
													{
														"constant": false,
														"id": 695,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "7850:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 784,
														"src": "7842:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7842:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 700,
												"initialValue": {
													"arguments": [
														{
															"id": 697,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "7880:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														{
															"id": 698,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "7895:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 696,
														"name": "calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "7859:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$345_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (struct Stakable.Stake memory,uint256) view returns (uint256)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7842:60:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 701,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "8037:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 702,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 344,
														"src": "8037:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 703,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8065:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8065:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8037:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": " @notice This is penalty given for early withdrawal before the designated time",
												"id": 712,
												"nodeType": "IfStatement",
												"src": "8033:126:1",
												"trueBody": {
													"id": 711,
													"nodeType": "Block",
													"src": "8082:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 707,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "8132:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 708,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "8140:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 706,
																	"name": "calculateStakingWithPenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "8104:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8104:43:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 668,
															"id": 710,
															"nodeType": "Return",
															"src": "8097:50:1"
														}
													]
												}
											},
											{
												"assignments": [
													714
												],
												"declarations": [
													{
														"constant": false,
														"id": 714,
														"mutability": "mutable",
														"name": "stakeDuration",
														"nameLocation": "8179:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 784,
														"src": "8171:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 713,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 715,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "8195:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 344,
														"src": "8195:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 717,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "8223:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "since",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "8223:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8195:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:71:1"
											},
											{
												"expression": {
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 721,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "8306:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 336,
														"src": "8306:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 724,
																"name": "current_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "8329:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																	"typeString": "struct Stakable.Stake memory"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 336,
															"src": "8329:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 726,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "8352:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8329:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8306:52:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "8306:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 730,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "8447:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 336,
														"src": "8447:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8471:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8447:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 778,
													"nodeType": "Block",
													"src": "8560:420:1",
													"statements": [
														{
															"expression": {
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 743,
																					"name": "stakeholders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 364,
																					"src": "8575:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																						"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																					}
																				},
																				"id": 745,
																				"indexExpression": {
																					"id": 744,
																					"name": "user_index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 670,
																					"src": "8588:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8575:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																					"typeString": "struct Stakable.Stakeholder storage ref"
																				}
																			},
																			"id": 746,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "address_stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 351,
																			"src": "8575:57:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																				"typeString": "struct Stakable.Stake storage ref[] storage ref"
																			}
																		},
																		"id": 748,
																		"indexExpression": {
																			"id": 747,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "8633:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8575:64:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$345_storage",
																			"typeString": "struct Stakable.Stake storage ref"
																		}
																	},
																	"id": 749,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 336,
																	"src": "8575:89:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 750,
																		"name": "current_stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "8667:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		}
																	},
																	"id": 751,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 336,
																	"src": "8667:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8575:112:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 753,
															"nodeType": "ExpressionStatement",
															"src": "8575:112:1"
														},
														{
															"expression": {
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 754,
																					"name": "stakeholders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 364,
																					"src": "8739:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																						"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																					}
																				},
																				"id": 756,
																				"indexExpression": {
																					"id": 755,
																					"name": "user_index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 670,
																					"src": "8752:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8739:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																					"typeString": "struct Stakable.Stakeholder storage ref"
																				}
																			},
																			"id": 757,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "address_stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 351,
																			"src": "8739:39:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																				"typeString": "struct Stakable.Stake storage ref[] storage ref"
																			}
																		},
																		"id": 759,
																		"indexExpression": {
																			"id": 758,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "8779:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8739:46:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$345_storage",
																			"typeString": "struct Stakable.Stake storage ref"
																		}
																	},
																	"id": 760,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "since",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 338,
																	"src": "8739:52:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 761,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "8794:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "8794:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8739:88:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 764,
															"nodeType": "ExpressionStatement",
															"src": "8739:88:1"
														},
														{
															"expression": {
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 765,
																					"name": "stakeholders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 364,
																					"src": "8842:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																						"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																					}
																				},
																				"id": 767,
																				"indexExpression": {
																					"id": 766,
																					"name": "user_index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 670,
																					"src": "8855:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8842:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																					"typeString": "struct Stakable.Stakeholder storage ref"
																				}
																			},
																			"id": 768,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "address_stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 351,
																			"src": "8842:39:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																				"typeString": "struct Stakable.Stake storage ref[] storage ref"
																			}
																		},
																		"id": 770,
																		"indexExpression": {
																			"id": 769,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "8882:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8842:46:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$345_storage",
																			"typeString": "struct Stakable.Stake storage ref"
																		}
																	},
																	"id": 771,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "releaseTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 344,
																	"src": "8842:58:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 772,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "8920:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "8920:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 774,
																		"name": "stakeDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 714,
																		"src": "8955:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8920:48:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8842:126:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 777,
															"nodeType": "ExpressionStatement",
															"src": "8842:126:1"
														}
													]
												},
												"id": 779,
												"nodeType": "IfStatement",
												"src": "8443:537:1",
												"trueBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "8474:80:1",
													"statements": [
														{
															"expression": {
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "8489:53:1",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 734,
																				"name": "stakeholders",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 364,
																				"src": "8496:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																					"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																				}
																			},
																			"id": 736,
																			"indexExpression": {
																				"id": 735,
																				"name": "user_index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 670,
																				"src": "8509:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8496:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																				"typeString": "struct Stakable.Stakeholder storage ref"
																			}
																		},
																		"id": 737,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "address_stakes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 351,
																		"src": "8496:39:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																			"typeString": "struct Stakable.Stake storage ref[] storage ref"
																		}
																	},
																	"id": 739,
																	"indexExpression": {
																		"id": 738,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "8536:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8496:46:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$345_storage",
																		"typeString": "struct Stakable.Stake storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 741,
															"nodeType": "ExpressionStatement",
															"src": "8489:53:1"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 780,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "9000:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 781,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "9008:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 782,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8999:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 668,
												"id": 783,
												"nodeType": "Return",
												"src": "8992:23:1"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "6748:339:1",
										"text": " @notice\n withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n Notice index of the stake is the users stake counter, starting at 0 for the first stake\n Will return the amount to MINT onto the acount\n Will also calculateStakeReward and reset timer"
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawStake",
									"nameLocation": "7102:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7125:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "7117:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7117:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7141:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "7133:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7133:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7116:31:1"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "7184:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7184:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "7193:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7193:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7183:18:1"
									},
									"scope": 947,
									"src": "7093:1930:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "9132:1117:1",
										"statements": [
											{
												"assignments": [
													795
												],
												"declarations": [
													{
														"constant": false,
														"id": 795,
														"mutability": "mutable",
														"name": "user_index",
														"nameLocation": "9225:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "9217:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 794,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9217:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 800,
												"initialValue": {
													"baseExpression": {
														"id": 796,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "9238:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 799,
													"indexExpression": {
														"expression": {
															"id": 797,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9245:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "9245:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9238:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9217:39:1"
											},
											{
												"assignments": [
													803
												],
												"declarations": [
													{
														"constant": false,
														"id": 803,
														"mutability": "mutable",
														"name": "current_stake",
														"nameLocation": "9280:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "9267:26:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
															"typeString": "struct Stakable.Stake"
														},
														"typeName": {
															"id": 802,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 801,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 345,
																"src": "9267:5:1"
															},
															"referencedDeclaration": 345,
															"src": "9267:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_storage_ptr",
																"typeString": "struct Stakable.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 810,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 804,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "9296:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																	"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																}
															},
															"id": 806,
															"indexExpression": {
																"id": 805,
																"name": "user_index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "9309:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9296:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																"typeString": "struct Stakable.Stakeholder storage ref"
															}
														},
														"id": 807,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "address_stakes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 351,
														"src": "9296:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
															"typeString": "struct Stakable.Stake storage ref[] storage ref"
														}
													},
													"id": 809,
													"indexExpression": {
														"id": 808,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "9350:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9296:70:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$345_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9267:99:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 812,
																	"name": "current_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "9569:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																		"typeString": "struct Stakable.Stake memory"
																	}
																},
																"id": 813,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 336,
																"src": "9569:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9592:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9569:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b61626c653a2043616e6e6f742077697468647261772c20796f7520646f6e2774206861766520616e79207374616b6520696e207468697320496e646578",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9608:67:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae102850c2f1703c6769eb581fd09838202498e38bcb1417cbb4b7ff28347733",
																"typeString": "literal_string \"Stakable: Cannot withdraw, you don't have any stake in this Index\""
															},
															"value": "Stakable: Cannot withdraw, you don't have any stake in this Index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae102850c2f1703c6769eb581fd09838202498e38bcb1417cbb4b7ff28347733",
																"typeString": "literal_string \"Stakable: Cannot withdraw, you don't have any stake in this Index\""
															}
														],
														"id": 811,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9547:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9547:139:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "9547:139:1"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "9783:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "9775:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9775:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 823,
												"initialValue": {
													"expression": {
														"id": 821,
														"name": "current_stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "9792:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
															"typeString": "struct Stakable.Stake memory"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 336,
													"src": "9792:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9775:37:1"
											},
											{
												"assignments": [
													825
												],
												"declarations": [
													{
														"constant": false,
														"id": 825,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "9831:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "9823:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 824,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9823:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 830,
												"initialValue": {
													"arguments": [
														{
															"id": 827,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "9861:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														{
															"id": 828,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "9876:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 826,
														"name": "calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9840:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$345_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (struct Stakable.Stake memory,uint256) view returns (uint256)"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9840:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9823:60:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 831,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "10018:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 344,
														"src": "10018:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 833,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "10046:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "10046:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10018:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": " @notice This is penalty given for early withdrawal before the designated time",
												"id": 842,
												"nodeType": "IfStatement",
												"src": "10014:126:1",
												"trueBody": {
													"id": 841,
													"nodeType": "Block",
													"src": "10063:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 837,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "10113:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 838,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 825,
																		"src": "10121:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 836,
																	"name": "calculateStakingWithPenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "10085:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:43:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 793,
															"id": 840,
															"nodeType": "Return",
															"src": "10078:50:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10152:53:1",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 843,
																	"name": "stakeholders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "10159:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																		"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																	}
																},
																"id": 845,
																"indexExpression": {
																	"id": 844,
																	"name": "user_index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "10172:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10159:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																	"typeString": "struct Stakable.Stakeholder storage ref"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "address_stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 351,
															"src": "10159:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																"typeString": "struct Stakable.Stake storage ref[] storage ref"
															}
														},
														"id": 848,
														"indexExpression": {
															"id": 847,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "10199:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10159:46:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$345_storage",
															"typeString": "struct Stakable.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "10152:53:1"
											},
											{
												"expression": {
													"components": [
														{
															"id": 851,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10226:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 852,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "10234:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 853,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10225:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 793,
												"id": 854,
												"nodeType": "Return",
												"src": "10218:23:1"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawAllStake",
									"nameLocation": "9040:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9066:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "9058:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9058:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9057:15:1"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "9109:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9109:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "9118:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9118:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9108:18:1"
									},
									"scope": 947,
									"src": "9031:1218:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "10368:770:1",
										"statements": [
											{
												"assignments": [
													865
												],
												"declarations": [
													{
														"constant": false,
														"id": 865,
														"mutability": "mutable",
														"name": "totalStakeAmount",
														"nameLocation": "10387:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 945,
														"src": "10379:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 864,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10379:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 866,
												"nodeType": "VariableDeclarationStatement",
												"src": "10379:24:1"
											},
											{
												"assignments": [
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "summary",
														"nameLocation": "10438:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 945,
														"src": "10416:29:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
															"typeString": "struct Stakable.StakingSummary"
														},
														"typeName": {
															"id": 868,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 867,
																"name": "StakingSummary",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 359,
																"src": "10416:14:1"
															},
															"referencedDeclaration": 359,
															"src": "10416:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$359_storage_ptr",
																"typeString": "struct Stakable.StakingSummary"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 879,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10477:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 872,
																	"name": "stakeholders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "10493:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stakeholder_$352_storage_$dyn_storage",
																		"typeString": "struct Stakable.Stakeholder storage ref[] storage ref"
																	}
																},
																"id": 876,
																"indexExpression": {
																	"baseExpression": {
																		"id": 873,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "10506:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 875,
																	"indexExpression": {
																		"id": 874,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "10513:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10506:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10493:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$352_storage",
																	"typeString": "struct Stakable.Stakeholder storage ref"
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "address_stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 351,
															"src": "10493:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																"typeString": "struct Stakable.Stake storage ref[] storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																"typeString": "struct Stakable.Stake storage ref[] storage ref"
															}
														],
														"id": 870,
														"name": "StakingSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "10448:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakingSummary_$359_storage_ptr_$",
															"typeString": "type(struct Stakable.StakingSummary storage pointer)"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10448:100:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10416:132:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 881,
																		"name": "summary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 869,
																		"src": "10581:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
																			"typeString": "struct Stakable.StakingSummary memory"
																		}
																	},
																	"id": 882,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 358,
																	"src": "10581:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct Stakable.Stake memory[] memory"
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10581:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10606:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10581:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b61626c653a2054686973206164647265737320646f6573206e6f74206861766520616e79207374616b6573",
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10622:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337",
																"typeString": "literal_string \"Stakable: This address does not have any stakes\""
															},
															"value": "Stakable: This address does not have any stakes"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455cb42bafa94547bd684738447987d7bf5acfcf63aa915627e25c94ff409337",
																"typeString": "literal_string \"Stakable: This address does not have any stakes\""
															}
														],
														"id": 880,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10559:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10559:123:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "10559:123:1"
											},
											{
												"body": {
													"id": 935,
													"nodeType": "Block",
													"src": "10750:304:1",
													"statements": [
														{
															"assignments": [
																903
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 903,
																	"mutability": "mutable",
																	"name": "availableReward",
																	"nameLocation": "10773:15:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 935,
																	"src": "10765:23:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 902,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10765:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 915,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"expression": {
																				"id": 905,
																				"name": "summary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 869,
																				"src": "10830:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
																					"typeString": "struct Stakable.StakingSummary memory"
																				}
																			},
																			"id": 906,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 358,
																			"src": "10830:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct Stakable.Stake memory[] memory"
																			}
																		},
																		"id": 908,
																		"indexExpression": {
																			"id": 907,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 890,
																			"src": "10845:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10830:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 909,
																					"name": "summary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "10866:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
																						"typeString": "struct Stakable.StakingSummary memory"
																					}
																				},
																				"id": 910,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 358,
																				"src": "10866:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct Stakable.Stake memory[] memory"
																				}
																			},
																			"id": 912,
																			"indexExpression": {
																				"id": 911,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 890,
																				"src": "10881:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10866:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 913,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 336,
																		"src": "10866:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 904,
																	"name": "calculateStakeReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "10791:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$345_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (struct Stakable.Stake memory,uint256) view returns (uint256)"
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10791:114:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10765:140:1"
														},
														{
															"expression": {
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 916,
																				"name": "summary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 869,
																				"src": "10920:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
																					"typeString": "struct Stakable.StakingSummary memory"
																				}
																			},
																			"id": 919,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 358,
																			"src": "10920:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct Stakable.Stake memory[] memory"
																			}
																		},
																		"id": 920,
																		"indexExpression": {
																			"id": 918,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 890,
																			"src": "10935:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10920:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		}
																	},
																	"id": 921,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimable",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 340,
																	"src": "10920:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 922,
																	"name": "availableReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "10950:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10920:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 924,
															"nodeType": "ExpressionStatement",
															"src": "10920:45:1"
														},
														{
															"expression": {
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 925,
																	"name": "totalStakeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "10980:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 926,
																		"name": "totalStakeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "10999:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 927,
																					"name": "summary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "11018:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
																						"typeString": "struct Stakable.StakingSummary memory"
																					}
																				},
																				"id": 928,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 358,
																				"src": "11018:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct Stakable.Stake memory[] memory"
																				}
																			},
																			"id": 930,
																			"indexExpression": {
																				"id": 929,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 890,
																				"src": "11033:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11018:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 931,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 336,
																		"src": "11018:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10999:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10980:62:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 934,
															"nodeType": "ExpressionStatement",
															"src": "10980:62:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 893,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "10715:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 894,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "10719:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 358,
															"src": "10719:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Stakable.Stake memory[] memory"
															}
														},
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10719:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10715:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 936,
												"initializationExpression": {
													"assignments": [
														890
													],
													"declarations": [
														{
															"constant": false,
															"id": 890,
															"mutability": "mutable",
															"name": "s",
															"nameLocation": "10708:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 936,
															"src": "10700:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 889,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10700:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 892,
													"initialValue": {
														"hexValue": "30",
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10712:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10700:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 898,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "10742:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10747:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "10742:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 901,
													"nodeType": "ExpressionStatement",
													"src": "10742:6:1"
												},
												"nodeType": "ForStatement",
												"src": "10695:359:1"
											},
											{
												"expression": {
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 937,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "11066:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
																"typeString": "struct Stakable.StakingSummary memory"
															}
														},
														"id": 939,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 354,
														"src": "11066:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 940,
														"name": "totalStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "11089:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11066:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "11066:39:1"
											},
											{
												"expression": {
													"id": 943,
													"name": "summary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 869,
													"src": "11123:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"functionReturnParameters": 863,
												"id": 944,
												"nodeType": "Return",
												"src": "11116:14:1"
											}
										]
									},
									"functionSelector": "e73e14bf",
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasStake",
									"nameLocation": "10266:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "10283:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "10275:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10275:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10274:17:1"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "10340:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingSummary_$359_memory_ptr",
													"typeString": "struct Stakable.StakingSummary"
												},
												"typeName": {
													"id": 861,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 860,
														"name": "StakingSummary",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 359,
														"src": "10340:14:1"
													},
													"referencedDeclaration": 359,
													"src": "10340:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$359_storage_ptr",
														"typeString": "struct Stakable.StakingSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10339:23:1"
									},
									"scope": 947,
									"src": "10257:881:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 948,
							"src": "128:11013:1",
							"usedErrors": []
						}
					],
					"src": "40:11103:1"
				},
				"id": 1
			}
		}
	}
}